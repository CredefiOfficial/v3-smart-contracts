{
	"id": "701d95fb0557a12bf9258d95c68f11d0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ModuleX.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"./interface/IModuleX.sol\";\r\n\r\ncontract ModuleX is IModuleX, Ownable \r\n{\r\n    using SafeERC20 for IERC20;\r\n\r\n    struct StakeDetails\r\n    {\r\n        address owner;\r\n        uint96 maturity;\r\n        uint stake_amount;\r\n        uint reward_amount;\r\n    }\r\n\r\n    bool public stopped = false; \r\n    uint96 constant public MATURITY = 180 days;\r\n    uint public total_staked = 0;\r\n    uint private DIFFICULTY; // Initial DIFFICULTY\r\n    uint public DIFFICULTY_INTERVAL;\r\n    IERC20 immutable public CREDI;\r\n    IERC20 immutable public xCREDI;\r\n    \r\n    mapping (uint => StakeDetails) private stakes;\r\n    uint private stakes_count = 1;\r\n    uint public pending_payments = 0;\r\n\r\n    event RewardAdded(uint amount);\r\n    event RewardWithdrawn(address indexed to, uint amount);\r\n    event Staked(address indexed user, uint stake_id, uint96 maturity, uint stake_amount, uint rewards_amount);\r\n    event CREDIWithdrawn(uint stake_id, uint amount);\r\n    event RewardPaid(uint stake_id);\r\n    event Stopped();\r\n\r\n    modifier validate_stake(uint stake_id) \r\n    {\r\n        require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _credi_addr, address _xcredi_addr, uint _DIFFICULTY, uint _DIFFICULTY_INTERVAL) Ownable(_msgSender())\r\n    { \r\n        CREDI = IERC20(_credi_addr);\r\n        xCREDI = IERC20(_xcredi_addr);\r\n        DIFFICULTY_INTERVAL = _DIFFICULTY_INTERVAL;\r\n        DIFFICULTY = _DIFFICULTY;\r\n    }\r\n    \r\n    function getCREDIAddress() external view returns(address)\r\n    {\r\n        return address(CREDI);\r\n    }\r\n\r\n    function getxCREDIAddress() external view returns(address)\r\n    {\r\n        return address(xCREDI);\r\n    }\r\n\r\n    function getStakesCount() external view returns(uint)\r\n    {\r\n        return stakes_count - 1;\r\n    }\r\n\r\n    function getStake(uint stake_id) external validate_stake(stake_id) view \r\n        returns (\r\n        address owner,\r\n        uint maturity,\r\n        uint stake_amount,\r\n        uint reward_amount)\r\n    {\r\n        return (\r\n            stakes[stake_id].owner,\r\n            stakes[stake_id].maturity,\r\n            stakes[stake_id].stake_amount,\r\n            stakes[stake_id].reward_amount);\r\n    }\r\n\r\n    function time_now() private view returns(uint96)\r\n    {\r\n        return uint96(block.timestamp);\r\n    }\r\n\r\n    function calculateReward(uint stake_amount) public view returns(uint)\r\n    { \r\n        uint SCALE_FACTOR = 1e18;\r\n        uint curr_total = total_staked + stake_amount;\r\n        uint low_d = total_staked/DIFFICULTY_INTERVAL;\r\n        uint high_d = curr_total/DIFFICULTY_INTERVAL;\r\n        if(low_d == high_d)\r\n        {\r\n            return stake_amount/(low_d + DIFFICULTY);\r\n        }\r\n        else \r\n        {\r\n            uint low_r = SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked)/(low_d + DIFFICULTY);\r\n            uint high_r = SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL)/(high_d + DIFFICULTY);\r\n            uint middle_r = 0;\r\n            for(uint i=low_d + 1; i < high_d; i++)\r\n            {\r\n                middle_r += SCALE_FACTOR*DIFFICULTY_INTERVAL/(i + DIFFICULTY);\r\n            }\r\n            return (low_r + middle_r + high_r)/SCALE_FACTOR;\r\n        }\r\n    }\r\n\r\n    function getDifficulty() external view returns(uint)\r\n    {\r\n        return total_staked/DIFFICULTY_INTERVAL + DIFFICULTY;\r\n    }\r\n\r\n    function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)\r\n    {\r\n        require(!stopped, \"ModuleX:STOPPED!\");\r\n        require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\");\r\n        require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\");\r\n        CREDI.safeTransferFrom(_msgSender(), address(this), stake_amount); \r\n        uint96 maturity = time_now() + lock_period;\r\n        uint reward_amount = calculateReward(stake_amount);\r\n        uint stake_id = stakes_count;\r\n        stakes[stake_id] = StakeDetails({\r\n            owner: _msgSender(),\r\n            maturity: maturity,\r\n            stake_amount: stake_amount,\r\n            reward_amount: reward_amount\r\n        });\r\n        \r\n        total_staked += stake_amount; \r\n        pending_payments += reward_amount;\r\n        emit Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount);\r\n        stakes_count++;\r\n        return(stake_id, reward_amount);\r\n    }\r\n\r\n    function claim(uint stake_id) external validate_stake(stake_id) returns(uint)\r\n    {\r\n        StakeDetails storage details = stakes[stake_id];\r\n        require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\");\r\n        require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\"); \r\n        require(details.reward_amount > 0, \"ModuleX:Nothing to claim\");\r\n        uint reward_amount = details.reward_amount;\r\n        xCREDI.safeTransfer(_msgSender(), reward_amount);     \r\n        pending_payments -= reward_amount;\r\n        details.reward_amount = 0; \r\n        emit RewardPaid(stake_id); \r\n        return reward_amount;\r\n    }\r\n\r\n    function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)\r\n    {\r\n        require (amount > 0, \"ModuleX:amount must be greater than zero!\");\r\n        StakeDetails storage details = stakes[stake_id];\r\n        require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\"); \r\n        require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\"); \r\n        CREDI.safeTransfer(_msgSender(), details.stake_amount);\r\n        details.stake_amount -= amount;\r\n        emit CREDIWithdrawn(stake_id, amount);\r\n    }\r\n\r\n    function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner\r\n    {\r\n        uint total_amount = 0;\r\n        for(uint i = 0; i < stake_ids.length; i++)\r\n        {\r\n            require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\");\r\n            StakeDetails storage details = stakes[stake_ids[i]];\r\n            require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\");\r\n            total_amount += details.stake_amount;\r\n            details.stake_amount = 0;          \r\n            emit CREDIWithdrawn(stake_ids[i], details.stake_amount);\r\n        }\r\n        require(total_amount > 0, \"ModuleX:Total amount is 0!\"); \r\n        CREDI.safeTransfer(_msgSender(), total_amount);\r\n    }\r\n\r\n    function addRewards(uint amount) external \r\n    {\r\n        require (amount > 0, \"ModuleX:amount must be greater than zero!\");\r\n        xCREDI.safeTransferFrom(_msgSender(), address(this), amount);\r\n        emit RewardAdded(amount);\r\n    }\r\n\r\n    function withdrawRewards(address to, uint amount) external onlyOwner\r\n    {\r\n        require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\");\r\n        xCREDI.safeTransfer(to, amount);\r\n        emit RewardWithdrawn(to, amount);\r\n    }\r\n\r\n    function setDifficulty(uint _DIFFICULTY, uint _DIFFICULTY_INTERVAL, uint _total_staked) external onlyOwner\r\n    {\r\n        DIFFICULTY = _DIFFICULTY;\r\n        DIFFICULTY_INTERVAL = _DIFFICULTY_INTERVAL;\r\n        total_staked = _total_staked;\r\n    }\r\n\r\n    function stop() external onlyOwner\r\n    {\r\n        stopped = true;\r\n        emit Stopped();\r\n    }\r\n\r\n}\r\n"
			},
			"contracts/interface/IModuleX.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IModuleX\r\n{\r\n    function getCREDIAddress() external view returns(address);\r\n\r\n    function getxCREDIAddress() external view returns(address);\r\n\r\n    function getStakesCount() external view returns(uint);\r\n    \r\n    function getDifficulty() external view returns(uint);\r\n    \r\n    function calculateReward(uint stake_amount) external returns(uint);\r\n\r\n    function stake(uint96 lock_period, uint amount) external returns(uint stake_id, uint xCREDI_reward);\r\n\r\n    function claim(uint stake_id) external returns(uint xCREDI_reward);\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212200b58bec289dadd2518682e54b37f79fec356d42187eb15a8af6bd712cf3855ae64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212200b58bec289dadd2518682e54b37f79fec356d42187eb15a8af6bd712cf3855ae64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND PC 0xBE 0xC2 DUP10 0xDA 0xDD 0x25 XOR PUSH9 0x2E54B37F79FEC356D4 0x21 DUP8 0xEB ISZERO 0xA8 0xAF PUSH12 0xD712CF3855AE64736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212200b58bec289dadd2518682e54b37f79fec356d42187eb15a8af6bd712cf3855ae64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND PC 0xBE 0xC2 DUP10 0xDA 0xDD 0x25 XOR PUSH9 0x2E54B37F79FEC356D4 0x21 DUP8 0xEB ISZERO 0xA8 0xAF PUSH12 0xD712CF3855AE64736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b58bec289dadd2518682e54b37f79fec356d42187eb15a8af6bd712cf3855ae64736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ModuleX.sol",
								"contracts/interface/IModuleX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ModuleX.sol": {
				"ModuleX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_credi_addr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_xcredi_addr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_DIFFICULTY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_DIFFICULTY_INTERVAL",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CREDIWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "maturity",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewards_amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Stopped",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CREDI",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DIFFICULTY_INTERVAL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MATURITY",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "stake_ids",
									"type": "uint256[]"
								}
							],
							"name": "batchWithdrawCREDI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDifficulty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "getStake",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "maturity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward_amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakesCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getxCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pending_payments",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_DIFFICULTY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_DIFFICULTY_INTERVAL",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_total_staked",
									"type": "uint256"
								}
							],
							"name": "setDifficulty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "lock_period",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopped",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "total_staked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawCREDI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xCREDI",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ModuleX.sol\":278:7469  contract ModuleX is IModuleX, Ownable ... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/ModuleX.sol\":530:535  false */\n  0x00\n    /* \"contracts/ModuleX.sol\":508:535  bool public stopped = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  dup2\n  sstore\n  0x01\n    /* \"contracts/ModuleX.sol\":592:620  uint public total_staked = 0 */\n  dup2\n  dup2\n  sstore\n    /* \"contracts/ModuleX.sol\":848:877  uint private stakes_count = 1 */\n  0x05\n  sstore\n    /* \"contracts/ModuleX.sol\":884:916  uint public pending_payments = 0 */\n  0x06\n  sstore\n    /* \"contracts/ModuleX.sol\":1414:1716  constructor(address _credi_addr, address _xcredi_addr, uint _DIFFICULTY, uint _DIFFICULTY_INTERVAL) Ownable(_msgSender())... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":861:912   */\n  mstore\n    /* \"#utility.yul\":834:852   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/ModuleX.sol\":1553:1580  CREDI = IERC20(_credi_addr) */\n  swap4\n  dup5\n  and\n  0x80\n  mstore\n    /* \"contracts/ModuleX.sol\":1591:1620  xCREDI = IERC20(_xcredi_addr) */\n  swap2\n  swap1\n  swap3\n  and\n  0xa0\n  mstore\n    /* \"contracts/ModuleX.sol\":1631:1650  DIFFICULTY_INTERVAL */\n  0x03\n    /* \"contracts/ModuleX.sol\":1631:1673  DIFFICULTY_INTERVAL = _DIFFICULTY_INTERVAL */\n  sstore\n    /* \"contracts/ModuleX.sol\":1684:1694  DIFFICULTY */\n  0x02\n    /* \"contracts/ModuleX.sol\":1684:1708  DIFFICULTY = _DIFFICULTY */\n  sstore\n    /* \"contracts/ModuleX.sol\":278:7469  contract ModuleX is IModuleX, Ownable ... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_18:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_21:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:710   */\ntag_3:\n    /* \"#utility.yul\":293:299   */\n  0x00\n    /* \"#utility.yul\":301:307   */\n  0x00\n    /* \"#utility.yul\":309:315   */\n  0x00\n    /* \"#utility.yul\":317:323   */\n  0x00\n    /* \"#utility.yul\":370:373   */\n  0x80\n    /* \"#utility.yul\":358:367   */\n  dup6\n    /* \"#utility.yul\":349:356   */\n  dup8\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:374   */\n  slt\n    /* \"#utility.yul\":338:391   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":387:388   */\n  0x00\n    /* \"#utility.yul\":384:385   */\n  0x00\n    /* \"#utility.yul\":377:389   */\n  revert\n    /* \"#utility.yul\":338:391   */\ntag_23:\n    /* \"#utility.yul\":410:450   */\n  tag_24\n    /* \"#utility.yul\":440:449   */\n  dup6\n    /* \"#utility.yul\":410:450   */\n  tag_18\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":400:450   */\n  swap4\n  pop\n    /* \"#utility.yul\":469:518   */\n  tag_25\n    /* \"#utility.yul\":514:516   */\n  0x20\n    /* \"#utility.yul\":503:512   */\n  dup7\n    /* \"#utility.yul\":499:517   */\n  add\n    /* \"#utility.yul\":469:518   */\n  tag_18\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":580:582   */\n  0x40\n    /* \"#utility.yul\":565:583   */\n  dup7\n  add\n    /* \"#utility.yul\":559:584   */\n  mload\n    /* \"#utility.yul\":674:676   */\n  0x60\n    /* \"#utility.yul\":659:677   */\n  swap1\n  swap7\n  add\n    /* \"#utility.yul\":653:678   */\n  mload\n    /* \"#utility.yul\":196:710   */\n  swap5\n  swap8\n    /* \"#utility.yul\":459:518   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":196:710   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":715:918   */\ntag_19:\n    /* \"contracts/ModuleX.sol\":278:7469  contract ModuleX is IModuleX, Ownable ... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n  0x00\n  assignImmutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ModuleX.sol\":278:7469  contract ModuleX is IModuleX, Ownable ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb109beec\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xce325bf8\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xd6ef7af0\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xd6ef7af0\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd93c04a0\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      dup1\n      0xce325bf8\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd2d7231f\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd46149a2\n      eq\n      tag_23\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      dup1\n      0xbc854352\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xbc854352\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xbeceed39\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc9ea62c1\n      eq\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_30:\n      dup1\n      0xb109beec\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb5fa91fe\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb6baffe3\n      eq\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_27:\n      dup1\n      0x7c2fdeb5\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x8f4729b7\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x8f4729b7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xac00500f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xaf7568dd\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_32:\n      dup1\n      0x7c2fdeb5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8e12c0cd\n      eq\n      tag_11\n      jumpi\n      revert(0x00, 0x00)\n    tag_31:\n      dup1\n      0x6db08f25\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x6db08f25\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x75f12b21\n      eq\n      tag_8\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      dup1\n      0x07da68f5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x109cf399\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/ModuleX.sol\":7366:7464  function stop() external onlyOwner... */\n    tag_3:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/ModuleX.sol\":679:710  uint public DIFFICULTY_INTERVAL */\n    tag_4:\n      tag_36\n      sload(0x03)\n      dup2\n      jump\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/ModuleX.sol\":679:710  uint public DIFFICULTY_INTERVAL */\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX.sol\":4616:5285  function claim(uint stake_id) external validate_stake(stake_id) returns(uint)... */\n    tag_5:\n      tag_36\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":717:746  IERC20 immutable public CREDI */\n    tag_6:\n      tag_45\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n      dup2\n      jump\n    tag_45:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":605:660   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":587:661   */\n      dup2\n      mstore\n        /* \"#utility.yul\":575:577   */\n      0x20\n        /* \"#utility.yul\":560:578   */\n      add\n        /* \"contracts/ModuleX.sol\":717:746  IERC20 immutable public CREDI */\n      tag_38\n        /* \"#utility.yul\":427:667   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_34\n      tag_50\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":508:535  bool public stopped = false */\n    tag_8:\n      sload(0x00)\n      tag_51\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_51:\n      mload(0x40)\n        /* \"#utility.yul\":837:851   */\n      swap1\n      iszero\n        /* \"#utility.yul\":830:852   */\n      iszero\n        /* \"#utility.yul\":812:853   */\n      dup2\n      mstore\n        /* \"#utility.yul\":800:802   */\n      0x20\n        /* \"#utility.yul\":785:803   */\n      add\n        /* \"contracts/ModuleX.sol\":508:535  bool public stopped = false */\n      tag_38\n        /* \"#utility.yul\":672:859   */\n      jump\n        /* \"contracts/ModuleX.sol\":1839:1944  function getxCREDIAddress() external view returns(address)... */\n    tag_9:\n        /* \"contracts/ModuleX.sol\":1929:1935  xCREDI */\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n        /* \"contracts/ModuleX.sol\":1839:1944  function getxCREDIAddress() external view returns(address)... */\n      jump(tag_45)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_45)\n        /* \"contracts/ModuleX.sol\":543:585  uint96 constant public MATURITY = 180 days */\n    tag_11:\n      tag_62\n        /* \"contracts/ModuleX.sol\":577:585  180 days */\n      0xed4e00\n        /* \"contracts/ModuleX.sol\":543:585  uint96 constant public MATURITY = 180 days */\n      dup2\n      jump\n    tag_62:\n      mload(0x40)\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":1257:1296   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1239:1297   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1227:1229   */\n      0x20\n        /* \"#utility.yul\":1212:1230   */\n      add\n        /* \"contracts/ModuleX.sol\":543:585  uint96 constant public MATURITY = 180 days */\n      tag_38\n        /* \"#utility.yul\":1095:1303   */\n      jump\n        /* \"contracts/ModuleX.sol\":884:916  uint public pending_payments = 0 */\n    tag_12:\n      tag_36\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/ModuleX.sol\":5293:5849  function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)... */\n    tag_13:\n      tag_34\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":592:620  uint public total_staked = 0 */\n    tag_14:\n      tag_36\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/ModuleX.sol\":753:783  IERC20 immutable public xCREDI */\n    tag_15:\n      tag_45\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n      dup2\n      jump\n        /* \"contracts/ModuleX.sol\":1952:2053  function getStakesCount() external view returns(uint)... */\n    tag_16:\n      tag_36\n      tag_80\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":3483:3612  function getDifficulty() external view returns(uint)... */\n    tag_17:\n      tag_36\n      tag_83\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":5857:6569  function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner... */\n    tag_18:\n      tag_34\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":6577:6815  function addRewards(uint amount) external ... */\n    tag_19:\n      tag_34\n      tag_90\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":7111:7358  function setDifficulty(uint _DIFFICULTY, uint _DIFFICULTY_INTERVAL, uint _total_staked) external onlyOwner... */\n    tag_20:\n      tag_34\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":2061:2456  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n    tag_21:\n      tag_96\n      tag_97\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2994:3049   */\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":2976:3050   */\n      dup6\n      mstore\n        /* \"#utility.yul\":3081:3083   */\n      0x20\n        /* \"#utility.yul\":3066:3084   */\n      dup6\n      add\n        /* \"#utility.yul\":3059:3093   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":3109:3127   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":3102:3136   */\n      mstore\n        /* \"#utility.yul\":3167:3169   */\n      0x60\n        /* \"#utility.yul\":3152:3170   */\n      dup3\n      add\n        /* \"#utility.yul\":3145:3179   */\n      mstore\n        /* \"#utility.yul\":2963:2966   */\n      0x80\n        /* \"#utility.yul\":2948:2967   */\n      add\n        /* \"contracts/ModuleX.sol\":2061:2456  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n      tag_38\n        /* \"#utility.yul\":2745:3185   */\n      jump\n        /* \"contracts/ModuleX.sol\":2575:3475  function calculateReward(uint stake_amount) public view returns(uint)... */\n    tag_22:\n      tag_36\n      tag_102\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":1728:1831  function getCREDIAddress() external view returns(address)... */\n    tag_23:\n        /* \"contracts/ModuleX.sol\":1817:1822  CREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n        /* \"contracts/ModuleX.sol\":1728:1831  function getCREDIAddress() external view returns(address)... */\n      jump(tag_45)\n        /* \"contracts/ModuleX.sol\":6823:7103  function withdrawRewards(address to, uint amount) external onlyOwner... */\n    tag_24:\n      tag_34\n      tag_109\n      calldatasize\n      0x04\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":3620:4608  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n    tag_25:\n      tag_112\n      tag_113\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_113:\n      tag_115\n      jump\t// in\n    tag_112:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4287:4312   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":4343:4345   */\n      0x20\n        /* \"#utility.yul\":4328:4346   */\n      dup4\n      add\n        /* \"#utility.yul\":4321:4355   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4260:4278   */\n      add\n        /* \"contracts/ModuleX.sol\":3620:4608  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n      tag_38\n        /* \"#utility.yul\":4113:4361   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_34\n      tag_119\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":7366:7464  function stop() external onlyOwner... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/ModuleX.sol\":7417:7424  stopped */\n      0x00\n        /* \"contracts/ModuleX.sol\":7417:7431  stopped = true */\n      dup1\n      sload\n      0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff\n      and\n      shl(0xa0, 0x01)\n      or\n      dup2\n      sstore\n        /* \"contracts/ModuleX.sol\":7447:7456  Stopped() */\n      mload(0x40)\n      0x7acc84e34091ae817647a4c49116f5cc07f319078ba80f8f5fde37ea7e25cbd6\n      swap2\n        /* \"contracts/ModuleX.sol\":7417:7424  stopped */\n      swap1\n        /* \"contracts/ModuleX.sol\":7447:7456  Stopped() */\n      log1\n        /* \"contracts/ModuleX.sol\":7366:7464  function stop() external onlyOwner... */\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":4616:5285  function claim(uint stake_id) external validate_stake(stake_id) returns(uint)... */\n    tag_43:\n        /* \"contracts/ModuleX.sol\":4688:4692  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":4670:4678  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1328:1329  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":1317:1325  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1317:1329  stake_id > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":1317:1356  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_127\n      jumpi\n      pop\n        /* \"contracts/ModuleX.sol\":1344:1356  stakes_count */\n      sload(0x05)\n        /* \"contracts/ModuleX.sol\":1333:1341  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1333:1356  stake_id < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":1317:1356  stake_id > 0 && stake_id < stakes_count */\n    tag_127:\n        /* \"contracts/ModuleX.sol\":1309:1386  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4759:4761   */\n      0x20\n        /* \"contracts/ModuleX.sol\":1309:1386  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4741:4762   */\n      mstore\n        /* \"#utility.yul\":4798:4800   */\n      0x19\n        /* \"#utility.yul\":4778:4796   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4771:4801   */\n      mstore\n        /* \"#utility.yul\":4837:4864   */\n      0x4d6f64756c65583a496e76616c6964205374616b652049442100000000000000\n        /* \"#utility.yul\":4817:4835   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4810:4865   */\n      mstore\n        /* \"#utility.yul\":4882:4900   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":1309:1386  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"contracts/ModuleX.sol\":4710:4738  StakeDetails storage details */\n      0x00\n        /* \"contracts/ModuleX.sol\":4741:4757  stakes[stake_id] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":4741:4747  stakes */\n      0x04\n        /* \"contracts/ModuleX.sol\":4741:4757  stakes[stake_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ModuleX.sol\":4776:4789  details.owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":4776:4805  details.owner == _msgSender() */\n      eq\n        /* \"contracts/ModuleX.sol\":4768:4841  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5113:5115   */\n      0x20\n        /* \"contracts/ModuleX.sol\":4768:4841  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5095:5116   */\n      mstore\n        /* \"#utility.yul\":5152:5154   */\n      0x1f\n        /* \"#utility.yul\":5132:5150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5125:5155   */\n      mstore\n        /* \"#utility.yul\":5191:5224   */\n      0x4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e657200\n        /* \"#utility.yul\":5171:5189   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5164:5225   */\n      mstore\n        /* \"#utility.yul\":5242:5260   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":4768:4841  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n      tag_129\n        /* \"#utility.yul\":4911:5266   */\n      jump\n        /* \"contracts/ModuleX.sol\":4768:4841  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n    tag_134:\n        /* \"contracts/ModuleX.sol\":4874:4890  details.maturity */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/ModuleX.sol\":2543:2558  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":4860:4890  time_now() >= details.maturity */\n      and\n      lt\n      iszero\n        /* \"contracts/ModuleX.sol\":4852:4937  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5473:5475   */\n      0x20\n        /* \"contracts/ModuleX.sol\":4852:4937  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5455:5476   */\n      mstore\n        /* \"#utility.yul\":5512:5514   */\n      0x2a\n        /* \"#utility.yul\":5492:5510   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5485:5515   */\n      mstore\n        /* \"#utility.yul\":5551:5585   */\n      0x4d6f64756c65583a4561726c79205769746864726177616c206973206e6f7420\n        /* \"#utility.yul\":5531:5549   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5524:5586   */\n      mstore\n        /* \"#utility.yul\":5622:5634   */\n      0x7065726d69747465642100000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5602:5620   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5595:5635   */\n      mstore\n        /* \"#utility.yul\":5652:5671   */\n      0x84\n      add\n        /* \"contracts/ModuleX.sol\":4852:4937  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n      tag_129\n        /* \"#utility.yul\":5271:5677   */\n      jump\n        /* \"contracts/ModuleX.sol\":4852:4937  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n    tag_139:\n        /* \"contracts/ModuleX.sol\":4981:4982  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":4957:4964  details */\n      dup2\n        /* \"contracts/ModuleX.sol\":4957:4978  details.reward_amount */\n      0x02\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":4957:4982  details.reward_amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":4949:5011  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5884:5886   */\n      0x20\n        /* \"contracts/ModuleX.sol\":4949:5011  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5866:5887   */\n      mstore\n        /* \"#utility.yul\":5923:5925   */\n      0x18\n        /* \"#utility.yul\":5903:5921   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5896:5926   */\n      mstore\n        /* \"#utility.yul\":5962:5988   */\n      0x4d6f64756c65583a4e6f7468696e6720746f20636c61696d0000000000000000\n        /* \"#utility.yul\":5942:5960   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5935:5989   */\n      mstore\n        /* \"#utility.yul\":6006:6024   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":4949:5011  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n      tag_129\n        /* \"#utility.yul\":5682:6030   */\n      jump\n        /* \"contracts/ModuleX.sol\":4949:5011  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n    tag_142:\n        /* \"contracts/ModuleX.sol\":5043:5064  details.reward_amount */\n      0x02\n      dup2\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":5075:5123  xCREDI.safeTransfer(_msgSender(), reward_amount) */\n      tag_145\n        /* \"contracts/ModuleX.sol\":5075:5081  xCREDI */\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":5075:5094  xCREDI.safeTransfer */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":5043:5064  details.reward_amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":5075:5094  xCREDI.safeTransfer */\n      tag_147\n        /* \"contracts/ModuleX.sol\":5075:5123  xCREDI.safeTransfer(_msgSender(), reward_amount) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/ModuleX.sol\":5159:5172  reward_amount */\n      dup1\n        /* \"contracts/ModuleX.sol\":5139:5155  pending_payments */\n      0x06\n      0x00\n        /* \"contracts/ModuleX.sol\":5139:5172  pending_payments -= reward_amount */\n      dup3\n      dup3\n      sload\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":5207:5208  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":5183:5204  details.reward_amount */\n      0x02\n      dup4\n      add\n        /* \"contracts/ModuleX.sol\":5183:5208  details.reward_amount = 0 */\n      sstore\n        /* \"contracts/ModuleX.sol\":5225:5245  RewardPaid(stake_id) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":5225:5245  RewardPaid(stake_id) */\n      0x67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc19\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/ModuleX.sol\":5225:5245  RewardPaid(stake_id) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX.sol\":5264:5277  reward_amount */\n      swap5\n        /* \"contracts/ModuleX.sol\":4616:5285  function claim(uint stake_id) external validate_stake(stake_id) returns(uint)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":5293:5849  function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_159:\n        /* \"contracts/ModuleX.sol\":5378:5386  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1328:1329  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":1317:1325  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1317:1329  stake_id > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":1317:1356  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_161\n      jumpi\n      pop\n        /* \"contracts/ModuleX.sol\":1344:1356  stakes_count */\n      sload(0x05)\n        /* \"contracts/ModuleX.sol\":1333:1341  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1333:1356  stake_id < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":1317:1356  stake_id > 0 && stake_id < stakes_count */\n    tag_161:\n        /* \"contracts/ModuleX.sol\":1309:1386  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4759:4761   */\n      0x20\n        /* \"contracts/ModuleX.sol\":1309:1386  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4741:4762   */\n      mstore\n        /* \"#utility.yul\":4798:4800   */\n      0x19\n        /* \"#utility.yul\":4778:4796   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4771:4801   */\n      mstore\n        /* \"#utility.yul\":4837:4864   */\n      0x4d6f64756c65583a496e76616c6964205374616b652049442100000000000000\n        /* \"#utility.yul\":4817:4835   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4810:4865   */\n      mstore\n        /* \"#utility.yul\":4882:4900   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":1309:1386  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_129\n        /* \"#utility.yul\":4557:4906   */\n      jump\n        /* \"contracts/ModuleX.sol\":1309:1386  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n    tag_162:\n        /* \"contracts/ModuleX.sol\":5422:5423  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":5413:5419  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":5413:5423  amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":5404:5469  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6559:6561   */\n      0x20\n        /* \"contracts/ModuleX.sol\":5404:5469  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6541:6562   */\n      mstore\n        /* \"#utility.yul\":6598:6600   */\n      0x29\n        /* \"#utility.yul\":6578:6596   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6571:6601   */\n      mstore\n        /* \"#utility.yul\":6637:6671   */\n      0x4d6f64756c65583a616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":6617:6635   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6610:6672   */\n      mstore\n      shl(0xb8, 0x68616e207a65726f21)\n        /* \"#utility.yul\":6688:6706   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6681:6720   */\n      mstore\n        /* \"#utility.yul\":6737:6756   */\n      0x84\n      add\n        /* \"contracts/ModuleX.sol\":5404:5469  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_129\n        /* \"#utility.yul\":6357:6762   */\n      jump\n        /* \"contracts/ModuleX.sol\":5404:5469  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n    tag_165:\n        /* \"contracts/ModuleX.sol\":5480:5508  StakeDetails storage details */\n      0x00\n        /* \"contracts/ModuleX.sol\":5511:5527  stakes[stake_id] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":5511:5517  stakes */\n      0x04\n        /* \"contracts/ModuleX.sol\":5511:5527  stakes[stake_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ModuleX.sol\":5560:5576  details.maturity */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/ModuleX.sol\":2543:2558  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":5546:5576  time_now() <= details.maturity */\n      and\n      gt\n      iszero\n        /* \"contracts/ModuleX.sol\":5538:5602  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6969:6971   */\n      0x20\n        /* \"contracts/ModuleX.sol\":5538:5602  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6951:6972   */\n      mstore\n        /* \"#utility.yul\":7008:7010   */\n      0x15\n        /* \"#utility.yul\":6988:7006   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6981:7011   */\n      mstore\n        /* \"#utility.yul\":7047:7070   */\n      0x4d6f64756c65583a4275726e7420746f6b656e73210000000000000000000000\n        /* \"#utility.yul\":7027:7045   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7020:7071   */\n      mstore\n        /* \"#utility.yul\":7088:7106   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":5538:5602  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_129\n        /* \"#utility.yul\":6767:7112   */\n      jump\n        /* \"contracts/ModuleX.sol\":5538:5602  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n    tag_169:\n        /* \"contracts/ModuleX.sol\":5632:5639  details */\n      dup1\n        /* \"contracts/ModuleX.sol\":5632:5652  details.stake_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":5622:5628  amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":5622:5652  amount <= details.stake_amount */\n      gt\n      iszero\n        /* \"contracts/ModuleX.sol\":5614:5686  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7319:7321   */\n      0x20\n        /* \"contracts/ModuleX.sol\":5614:5686  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7301:7322   */\n      mstore\n        /* \"#utility.yul\":7358:7360   */\n      0x1d\n        /* \"#utility.yul\":7338:7356   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7331:7361   */\n      mstore\n        /* \"#utility.yul\":7397:7428   */\n      0x4d6f64756c65583a496e73756666696369656e742062616c616e636521000000\n        /* \"#utility.yul\":7377:7395   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7370:7429   */\n      mstore\n        /* \"#utility.yul\":7446:7464   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":5614:5686  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n      tag_129\n        /* \"#utility.yul\":7117:7470   */\n      jump\n        /* \"contracts/ModuleX.sol\":5614:5686  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n    tag_172:\n        /* \"contracts/ModuleX.sol\":5698:5752  CREDI.safeTransfer(_msgSender(), details.stake_amount) */\n      tag_175\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":5731:5751  details.stake_amount */\n      0x01\n      dup4\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":5698:5703  CREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n        /* \"contracts/ModuleX.sol\":5698:5716  CREDI.safeTransfer */\n      and\n      swap2\n        /* \"contracts/ModuleX.sol\":5698:5752  CREDI.safeTransfer(_msgSender(), details.stake_amount) */\n      swap1\n        /* \"contracts/ModuleX.sol\":5698:5716  CREDI.safeTransfer */\n      tag_147\n        /* \"contracts/ModuleX.sol\":5698:5752  CREDI.safeTransfer(_msgSender(), details.stake_amount) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/ModuleX.sol\":5787:5793  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":5763:5770  details */\n      dup2\n        /* \"contracts/ModuleX.sol\":5763:5783  details.stake_amount */\n      0x01\n      add\n      0x00\n        /* \"contracts/ModuleX.sol\":5763:5793  details.stake_amount -= amount */\n      dup3\n      dup3\n      sload\n      tag_177\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_177:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":5809:5841  CREDIWithdrawn(stake_id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4287:4312   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":4343:4345   */\n      0x20\n        /* \"#utility.yul\":4328:4346   */\n      dup2\n      add\n        /* \"#utility.yul\":4321:4355   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/ModuleX.sol\":5809:5841  CREDIWithdrawn(stake_id, amount) */\n      0x03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c\n      swap2\n        /* \"#utility.yul\":4260:4278   */\n      add\n        /* \"contracts/ModuleX.sol\":5809:5841  CREDIWithdrawn(stake_id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX.sol\":5393:5849  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"contracts/ModuleX.sol\":5293:5849  function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":1952:2053  function getStakesCount() external view returns(uint)... */\n    tag_80:\n        /* \"contracts/ModuleX.sol\":2000:2004  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":2044:2045  1 */\n      0x01\n        /* \"contracts/ModuleX.sol\":2029:2041  stakes_count */\n      sload(0x05)\n        /* \"contracts/ModuleX.sol\":2029:2045  stakes_count - 1 */\n      tag_180\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_180:\n        /* \"contracts/ModuleX.sol\":2022:2045  return stakes_count - 1 */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":1952:2053  function getStakesCount() external view returns(uint)... */\n      swap1\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":3483:3612  function getDifficulty() external view returns(uint)... */\n    tag_83:\n        /* \"contracts/ModuleX.sol\":3530:3534  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":3594:3604  DIFFICULTY */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":3572:3591  DIFFICULTY_INTERVAL */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":3559:3571  total_staked */\n      sload(0x01)\n        /* \"contracts/ModuleX.sol\":3559:3591  total_staked/DIFFICULTY_INTERVAL */\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"contracts/ModuleX.sol\":3559:3604  total_staked/DIFFICULTY_INTERVAL + DIFFICULTY */\n      tag_180\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":5857:6569  function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_187:\n        /* \"contracts/ModuleX.sol\":5947:5964  uint total_amount */\n      0x00\n      dup1\n        /* \"contracts/ModuleX.sol\":5979:6438  for(uint i = 0; i < stake_ids.length; i++)... */\n    tag_189:\n        /* \"contracts/ModuleX.sol\":5995:6015  i < stake_ids.length */\n      dup3\n      dup2\n      lt\n        /* \"contracts/ModuleX.sol\":5979:6438  for(uint i = 0; i < stake_ids.length; i++)... */\n      iszero\n      tag_190\n      jumpi\n        /* \"contracts/ModuleX.sol\":6069:6081  stakes_count */\n      sload(0x05)\n        /* \"contracts/ModuleX.sol\":6054:6063  stake_ids */\n      dup5\n      dup5\n        /* \"contracts/ModuleX.sol\":6064:6065  i */\n      dup4\n        /* \"contracts/ModuleX.sol\":6054:6066  stake_ids[i] */\n      dup2\n      dup2\n      lt\n      tag_193\n      jumpi\n      tag_193\n      tag_194\n      jump\t// in\n    tag_193:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ModuleX.sol\":6054:6081  stake_ids[i] < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":6046:6111  require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4759:4761   */\n      0x20\n        /* \"contracts/ModuleX.sol\":6046:6111  require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4741:4762   */\n      mstore\n        /* \"#utility.yul\":4798:4800   */\n      0x19\n        /* \"#utility.yul\":4778:4796   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4771:4801   */\n      mstore\n        /* \"#utility.yul\":4837:4864   */\n      0x4d6f64756c65583a496e76616c6964205374616b652049442100000000000000\n        /* \"#utility.yul\":4817:4835   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4810:4865   */\n      mstore\n        /* \"#utility.yul\":4882:4900   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":6046:6111  require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_129\n        /* \"#utility.yul\":4557:4906   */\n      jump\n        /* \"contracts/ModuleX.sol\":6046:6111  require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n    tag_195:\n        /* \"contracts/ModuleX.sol\":6126:6154  StakeDetails storage details */\n      0x00\n        /* \"contracts/ModuleX.sol\":6157:6163  stakes */\n      0x04\n        /* \"contracts/ModuleX.sol\":6157:6177  stakes[stake_ids[i]] */\n      0x00\n        /* \"contracts/ModuleX.sol\":6164:6173  stake_ids */\n      dup7\n      dup7\n        /* \"contracts/ModuleX.sol\":6174:6175  i */\n      dup6\n        /* \"contracts/ModuleX.sol\":6164:6176  stake_ids[i] */\n      dup2\n      dup2\n      lt\n      tag_198\n      jumpi\n      tag_198\n      tag_194\n      jump\t// in\n    tag_198:\n      0x20\n      swap1\n      dup2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"contracts/ModuleX.sol\":6157:6177  stakes[stake_ids[i]] */\n      dup4\n      mstore\n      pop\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/ModuleX.sol\":6214:6230  details.maturity */\n      dup1\n      sload\n        /* \"contracts/ModuleX.sol\":6157:6177  stakes[stake_ids[i]] */\n      swap1\n      swap2\n      pop\n      shl(0xa0, 0x01)\n        /* \"contracts/ModuleX.sol\":6214:6230  details.maturity */\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/ModuleX.sol\":2543:2558  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":6200:6230  time_now() <= details.maturity */\n      and\n      gt\n      iszero\n        /* \"contracts/ModuleX.sol\":6192:6256  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6969:6971   */\n      0x20\n        /* \"contracts/ModuleX.sol\":6192:6256  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6951:6972   */\n      mstore\n        /* \"#utility.yul\":7008:7010   */\n      0x15\n        /* \"#utility.yul\":6988:7006   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6981:7011   */\n      mstore\n        /* \"#utility.yul\":7047:7070   */\n      0x4d6f64756c65583a4275726e7420746f6b656e73210000000000000000000000\n        /* \"#utility.yul\":7027:7045   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7020:7071   */\n      mstore\n        /* \"#utility.yul\":7088:7106   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":6192:6256  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_129\n        /* \"#utility.yul\":6767:7112   */\n      jump\n        /* \"contracts/ModuleX.sol\":6192:6256  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n    tag_200:\n        /* \"contracts/ModuleX.sol\":6287:6307  details.stake_amount */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":6271:6307  total_amount += details.stake_amount */\n      tag_202\n      swap1\n      dup5\n      tag_185\n      jump\t// in\n    tag_202:\n        /* \"contracts/ModuleX.sol\":6345:6346  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":6322:6342  details.stake_amount */\n      0x01\n      dup4\n      add\n        /* \"contracts/ModuleX.sol\":6322:6346  details.stake_amount = 0 */\n      sstore\n        /* \"contracts/ModuleX.sol\":6271:6307  total_amount += details.stake_amount */\n      swap3\n      pop\n        /* \"contracts/ModuleX.sol\":6376:6426  CREDIWithdrawn(stake_ids[i], details.stake_amount) */\n      0x03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c\n        /* \"contracts/ModuleX.sol\":6391:6400  stake_ids */\n      dup6\n      dup6\n        /* \"contracts/ModuleX.sol\":6401:6402  i */\n      dup5\n        /* \"contracts/ModuleX.sol\":6391:6403  stake_ids[i] */\n      dup2\n      dup2\n      lt\n      tag_204\n      jumpi\n      tag_204\n      tag_194\n      jump\t// in\n    tag_204:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ModuleX.sol\":6405:6412  details */\n      dup3\n        /* \"contracts/ModuleX.sol\":6405:6425  details.stake_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":6376:6426  CREDIWithdrawn(stake_ids[i], details.stake_amount) */\n      mload(0x40)\n      tag_205\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":4287:4312   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":4343:4345   */\n      0x20\n        /* \"#utility.yul\":4328:4346   */\n      dup3\n      add\n        /* \"#utility.yul\":4321:4355   */\n      mstore\n        /* \"#utility.yul\":4275:4277   */\n      0x40\n        /* \"#utility.yul\":4260:4278   */\n      add\n      swap1\n        /* \"#utility.yul\":4113:4361   */\n      jump\n        /* \"contracts/ModuleX.sol\":6376:6426  CREDIWithdrawn(stake_ids[i], details.stake_amount) */\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n        /* \"contracts/ModuleX.sol\":6017:6020  i++ */\n      0x01\n      add\n        /* \"contracts/ModuleX.sol\":5979:6438  for(uint i = 0; i < stake_ids.length; i++)... */\n      jump(tag_189)\n    tag_190:\n      pop\n        /* \"contracts/ModuleX.sol\":6471:6472  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":6456:6468  total_amount */\n      dup2\n        /* \"contracts/ModuleX.sol\":6456:6472  total_amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":6448:6503  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8275:8277   */\n      0x20\n        /* \"contracts/ModuleX.sol\":6448:6503  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8257:8278   */\n      mstore\n        /* \"#utility.yul\":8314:8316   */\n      0x1a\n        /* \"#utility.yul\":8294:8312   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8287:8317   */\n      mstore\n        /* \"#utility.yul\":8353:8381   */\n      0x4d6f64756c65583a546f74616c20616d6f756e74206973203021000000000000\n        /* \"#utility.yul\":8333:8351   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8326:8382   */\n      mstore\n        /* \"#utility.yul\":8399:8417   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":6448:6503  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n      tag_129\n        /* \"#utility.yul\":8073:8423   */\n      jump\n        /* \"contracts/ModuleX.sol\":6448:6503  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n    tag_206:\n        /* \"contracts/ModuleX.sol\":6515:6561  CREDI.safeTransfer(_msgSender(), total_amount) */\n      tag_209\n        /* \"contracts/ModuleX.sol\":6515:6520  CREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":6515:6533  CREDI.safeTransfer */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":6548:6560  total_amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":6515:6533  CREDI.safeTransfer */\n      tag_147\n        /* \"contracts/ModuleX.sol\":6515:6561  CREDI.safeTransfer(_msgSender(), total_amount) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/ModuleX.sol\":5936:6569  {... */\n      pop\n        /* \"contracts/ModuleX.sol\":5857:6569  function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":6577:6815  function addRewards(uint amount) external ... */\n    tag_91:\n        /* \"contracts/ModuleX.sol\":6654:6655  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":6645:6651  amount */\n      dup2\n        /* \"contracts/ModuleX.sol\":6645:6655  amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":6636:6701  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6559:6561   */\n      0x20\n        /* \"contracts/ModuleX.sol\":6636:6701  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6541:6562   */\n      mstore\n        /* \"#utility.yul\":6598:6600   */\n      0x29\n        /* \"#utility.yul\":6578:6596   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6571:6601   */\n      mstore\n        /* \"#utility.yul\":6637:6671   */\n      0x4d6f64756c65583a616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":6617:6635   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6610:6672   */\n      mstore\n      shl(0xb8, 0x68616e207a65726f21)\n        /* \"#utility.yul\":6688:6706   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6681:6720   */\n      mstore\n        /* \"#utility.yul\":6737:6756   */\n      0x84\n      add\n        /* \"contracts/ModuleX.sol\":6636:6701  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_129\n        /* \"#utility.yul\":6357:6762   */\n      jump\n        /* \"contracts/ModuleX.sol\":6636:6701  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n    tag_212:\n        /* \"contracts/ModuleX.sol\":6712:6772  xCREDI.safeTransferFrom(_msgSender(), address(this), amount) */\n      tag_214\n        /* \"contracts/ModuleX.sol\":6712:6718  xCREDI */\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":6712:6735  xCREDI.safeTransferFrom */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":6758:6762  this */\n      address\n        /* \"contracts/ModuleX.sol\":6765:6771  amount */\n      dup5\n        /* \"contracts/ModuleX.sol\":6712:6735  xCREDI.safeTransferFrom */\n      tag_216\n        /* \"contracts/ModuleX.sol\":6712:6772  xCREDI.safeTransferFrom(_msgSender(), address(this), amount) */\n      jump\t// in\n    tag_214:\n        /* \"contracts/ModuleX.sol\":6788:6807  RewardAdded(amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":6788:6807  RewardAdded(amount) */\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/ModuleX.sol\":6788:6807  RewardAdded(amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX.sol\":6577:6815  function addRewards(uint amount) external ... */\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":7111:7358  function setDifficulty(uint _DIFFICULTY, uint _DIFFICULTY_INTERVAL, uint _total_staked) external onlyOwner... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_219:\n        /* \"contracts/ModuleX.sol\":7234:7244  DIFFICULTY */\n      0x02\n        /* \"contracts/ModuleX.sol\":7234:7258  DIFFICULTY = _DIFFICULTY */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ModuleX.sol\":7269:7288  DIFFICULTY_INTERVAL */\n      0x03\n        /* \"contracts/ModuleX.sol\":7269:7311  DIFFICULTY_INTERVAL = _DIFFICULTY_INTERVAL */\n      sstore\n        /* \"contracts/ModuleX.sol\":7322:7334  total_staked */\n      0x01\n        /* \"contracts/ModuleX.sol\":7322:7350  total_staked = _total_staked */\n      sstore\n        /* \"contracts/ModuleX.sol\":7111:7358  function setDifficulty(uint _DIFFICULTY, uint _DIFFICULTY_INTERVAL, uint _total_staked) external onlyOwner... */\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":2061:2456  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n    tag_98:\n        /* \"contracts/ModuleX.sol\":2162:2175  address owner */\n      0x00\n        /* \"contracts/ModuleX.sol\":2186:2199  uint maturity */\n      0x00\n        /* \"contracts/ModuleX.sol\":2210:2227  uint stake_amount */\n      0x00\n        /* \"contracts/ModuleX.sol\":2238:2256  uint reward_amount */\n      0x00\n        /* \"contracts/ModuleX.sol\":2118:2126  stake_id */\n      dup5\n        /* \"contracts/ModuleX.sol\":1328:1329  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":1317:1325  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1317:1329  stake_id > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":1317:1356  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_222\n      jumpi\n      pop\n        /* \"contracts/ModuleX.sol\":1344:1356  stakes_count */\n      sload(0x05)\n        /* \"contracts/ModuleX.sol\":1333:1341  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1333:1356  stake_id < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":1317:1356  stake_id > 0 && stake_id < stakes_count */\n    tag_222:\n        /* \"contracts/ModuleX.sol\":1309:1386  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4759:4761   */\n      0x20\n        /* \"contracts/ModuleX.sol\":1309:1386  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4741:4762   */\n      mstore\n        /* \"#utility.yul\":4798:4800   */\n      0x19\n        /* \"#utility.yul\":4778:4796   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4771:4801   */\n      mstore\n        /* \"#utility.yul\":4837:4864   */\n      0x4d6f64756c65583a496e76616c6964205374616b652049442100000000000000\n        /* \"#utility.yul\":4817:4835   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4810:4865   */\n      mstore\n        /* \"#utility.yul\":4882:4900   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":1309:1386  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_129\n        /* \"#utility.yul\":4557:4906   */\n      jump\n        /* \"contracts/ModuleX.sol\":1309:1386  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n    tag_223:\n      pop\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":2296:2312  stakes[stake_id] */\n      0x00\n      swap3\n      dup4\n      mstore\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":2296:2302  stakes */\n      0x04\n        /* \"contracts/ModuleX.sol\":2296:2312  stakes[stake_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ModuleX.sol\":2296:2318  stakes[stake_id].owner */\n      dup1\n      sload\n      0x01\n        /* \"contracts/ModuleX.sol\":2373:2402  stakes[stake_id].stake_amount */\n      dup3\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":2417:2447  stakes[stake_id].reward_amount */\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":2296:2318  stakes[stake_id].owner */\n      dup3\n      and\n      swap4\n      shl(0xa0, 0x01)\n        /* \"contracts/ModuleX.sol\":2333:2358  stakes[stake_id].maturity */\n      swap1\n      swap3\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap3\n        /* \"contracts/ModuleX.sol\":2373:2402  stakes[stake_id].stake_amount */\n      swap2\n        /* \"contracts/ModuleX.sol\":2061:2456  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":2575:3475  function calculateReward(uint stake_amount) public view returns(uint)... */\n    tag_103:\n        /* \"contracts/ModuleX.sol\":2639:2643  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":2662:2679  uint SCALE_FACTOR */\n      0x00\n        /* \"contracts/ModuleX.sol\":2682:2686  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ModuleX.sol\":2662:2686  uint SCALE_FACTOR = 1e18 */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2697:2712  uint curr_total */\n      0x00\n        /* \"contracts/ModuleX.sol\":2730:2742  stake_amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":2715:2727  total_staked */\n      sload(0x01)\n        /* \"contracts/ModuleX.sol\":2715:2742  total_staked + stake_amount */\n      tag_227\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_227:\n        /* \"contracts/ModuleX.sol\":2697:2742  uint curr_total = total_staked + stake_amount */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2753:2763  uint low_d */\n      0x00\n        /* \"contracts/ModuleX.sol\":2779:2798  DIFFICULTY_INTERVAL */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":2766:2778  total_staked */\n      sload(0x01)\n        /* \"contracts/ModuleX.sol\":2766:2798  total_staked/DIFFICULTY_INTERVAL */\n      tag_228\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_228:\n        /* \"contracts/ModuleX.sol\":2753:2798  uint low_d = total_staked/DIFFICULTY_INTERVAL */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2809:2820  uint high_d */\n      0x00\n        /* \"contracts/ModuleX.sol\":2834:2853  DIFFICULTY_INTERVAL */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":2823:2833  curr_total */\n      dup4\n        /* \"contracts/ModuleX.sol\":2823:2853  curr_total/DIFFICULTY_INTERVAL */\n      tag_229\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_229:\n        /* \"contracts/ModuleX.sol\":2809:2853  uint high_d = curr_total/DIFFICULTY_INTERVAL */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2876:2882  high_d */\n      dup1\n        /* \"contracts/ModuleX.sol\":2867:2872  low_d */\n      dup3\n        /* \"contracts/ModuleX.sol\":2867:2882  low_d == high_d */\n      sub\n        /* \"contracts/ModuleX.sol\":2864:3468  if(low_d == high_d)... */\n      tag_230\n      jumpi\n        /* \"contracts/ModuleX.sol\":2937:2947  DIFFICULTY */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":2929:2947  low_d + DIFFICULTY */\n      tag_231\n      swap1\n        /* \"contracts/ModuleX.sol\":2929:2934  low_d */\n      dup4\n        /* \"contracts/ModuleX.sol\":2929:2947  low_d + DIFFICULTY */\n      tag_185\n      jump\t// in\n    tag_231:\n        /* \"contracts/ModuleX.sol\":2915:2948  stake_amount/(low_d + DIFFICULTY) */\n      tag_232\n      swap1\n        /* \"contracts/ModuleX.sol\":2915:2927  stake_amount */\n      dup8\n        /* \"contracts/ModuleX.sol\":2915:2948  stake_amount/(low_d + DIFFICULTY) */\n      tag_183\n      jump\t// in\n    tag_232:\n        /* \"contracts/ModuleX.sol\":2908:2948  return stake_amount/(low_d + DIFFICULTY) */\n      swap7\n        /* \"contracts/ModuleX.sol\":2575:3475  function calculateReward(uint stake_amount) public view returns(uint)... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":2864:3468  if(low_d == high_d)... */\n    tag_230:\n        /* \"contracts/ModuleX.sol\":3000:3010  uint low_r */\n      0x00\n        /* \"contracts/ModuleX.sol\":3084:3094  DIFFICULTY */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":3076:3081  low_d */\n      dup4\n        /* \"contracts/ModuleX.sol\":3076:3094  low_d + DIFFICULTY */\n      tag_234\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_234:\n        /* \"contracts/ModuleX.sol\":3061:3073  total_staked */\n      sload(0x01)\n        /* \"contracts/ModuleX.sol\":3039:3058  DIFFICULTY_INTERVAL */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":3028:3033  low_d */\n      dup6\n        /* \"contracts/ModuleX.sol\":3036:3037  1 */\n      0x01\n        /* \"contracts/ModuleX.sol\":3028:3037  low_d + 1 */\n      tag_235\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_235:\n        /* \"contracts/ModuleX.sol\":3027:3058  (low_d + 1)*DIFFICULTY_INTERVAL */\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"contracts/ModuleX.sol\":3027:3073  (low_d + 1)*DIFFICULTY_INTERVAL - total_staked */\n      tag_238\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_238:\n        /* \"contracts/ModuleX.sol\":3013:3074  SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked) */\n      tag_239\n      swap1\n        /* \"contracts/ModuleX.sol\":3013:3025  SCALE_FACTOR */\n      dup8\n        /* \"contracts/ModuleX.sol\":3013:3074  SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked) */\n      tag_237\n      jump\t// in\n    tag_239:\n        /* \"contracts/ModuleX.sol\":3013:3095  SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked)/(low_d + DIFFICULTY) */\n      tag_240\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_240:\n        /* \"contracts/ModuleX.sol\":3000:3095  uint low_r = SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked)/(low_d + DIFFICULTY) */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3110:3121  uint high_r */\n      0x00\n        /* \"contracts/ModuleX.sol\":3189:3199  DIFFICULTY */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":3180:3186  high_d */\n      dup4\n        /* \"contracts/ModuleX.sol\":3180:3199  high_d + DIFFICULTY */\n      tag_241\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_241:\n        /* \"contracts/ModuleX.sol\":3158:3177  DIFFICULTY_INTERVAL */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":3151:3177  high_d*DIFFICULTY_INTERVAL */\n      tag_242\n      swap1\n        /* \"contracts/ModuleX.sol\":3151:3157  high_d */\n      dup6\n        /* \"contracts/ModuleX.sol\":3151:3177  high_d*DIFFICULTY_INTERVAL */\n      tag_237\n      jump\t// in\n    tag_242:\n        /* \"contracts/ModuleX.sol\":3138:3177  curr_total - high_d*DIFFICULTY_INTERVAL */\n      tag_243\n      swap1\n        /* \"contracts/ModuleX.sol\":3138:3148  curr_total */\n      dup8\n        /* \"contracts/ModuleX.sol\":3138:3177  curr_total - high_d*DIFFICULTY_INTERVAL */\n      tag_149\n      jump\t// in\n    tag_243:\n        /* \"contracts/ModuleX.sol\":3124:3178  SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL) */\n      tag_244\n      swap1\n        /* \"contracts/ModuleX.sol\":3124:3136  SCALE_FACTOR */\n      dup9\n        /* \"contracts/ModuleX.sol\":3124:3178  SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL) */\n      tag_237\n      jump\t// in\n    tag_244:\n        /* \"contracts/ModuleX.sol\":3124:3200  SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL)/(high_d + DIFFICULTY) */\n      tag_245\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_245:\n        /* \"contracts/ModuleX.sol\":3110:3200  uint high_r = SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL)/(high_d + DIFFICULTY) */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3215:3228  uint middle_r */\n      0x00\n      dup1\n        /* \"contracts/ModuleX.sol\":3258:3267  low_d + 1 */\n      tag_249\n        /* \"contracts/ModuleX.sol\":3258:3263  low_d */\n      dup7\n        /* \"contracts/ModuleX.sol\":3266:3267  1 */\n      0x01\n        /* \"contracts/ModuleX.sol\":3258:3267  low_d + 1 */\n      tag_185\n      jump\t// in\n    tag_249:\n        /* \"contracts/ModuleX.sol\":3251:3267  uint i=low_d + 1 */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3247:3395  for(uint i=low_d + 1; i < high_d; i++)... */\n    tag_246:\n        /* \"contracts/ModuleX.sol\":3273:3279  high_d */\n      dup5\n        /* \"contracts/ModuleX.sol\":3269:3270  i */\n      dup2\n        /* \"contracts/ModuleX.sol\":3269:3279  i < high_d */\n      lt\n        /* \"contracts/ModuleX.sol\":3247:3395  for(uint i=low_d + 1; i < high_d; i++)... */\n      iszero\n      tag_247\n      jumpi\n        /* \"contracts/ModuleX.sol\":3368:3378  DIFFICULTY */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":3364:3378  i + DIFFICULTY */\n      tag_250\n      swap1\n        /* \"contracts/ModuleX.sol\":3364:3365  i */\n      dup3\n        /* \"contracts/ModuleX.sol\":3364:3378  i + DIFFICULTY */\n      tag_185\n      jump\t// in\n    tag_250:\n        /* \"contracts/ModuleX.sol\":3343:3362  DIFFICULTY_INTERVAL */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":3330:3362  SCALE_FACTOR*DIFFICULTY_INTERVAL */\n      tag_251\n      swap1\n        /* \"contracts/ModuleX.sol\":3330:3342  SCALE_FACTOR */\n      dup11\n        /* \"contracts/ModuleX.sol\":3330:3362  SCALE_FACTOR*DIFFICULTY_INTERVAL */\n      tag_237\n      jump\t// in\n    tag_251:\n        /* \"contracts/ModuleX.sol\":3330:3379  SCALE_FACTOR*DIFFICULTY_INTERVAL/(i + DIFFICULTY) */\n      tag_252\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_252:\n        /* \"contracts/ModuleX.sol\":3318:3379  middle_r += SCALE_FACTOR*DIFFICULTY_INTERVAL/(i + DIFFICULTY) */\n      tag_253\n      swap1\n      dup4\n      tag_185\n      jump\t// in\n    tag_253:\n      swap2\n      pop\n        /* \"contracts/ModuleX.sol\":3281:3284  i++ */\n      0x01\n      add\n        /* \"contracts/ModuleX.sol\":3247:3395  for(uint i=low_d + 1; i < high_d; i++)... */\n      jump(tag_246)\n    tag_247:\n      pop\n        /* \"contracts/ModuleX.sol\":3444:3456  SCALE_FACTOR */\n      dup7\n        /* \"contracts/ModuleX.sol\":3436:3442  high_r */\n      dup3\n        /* \"contracts/ModuleX.sol\":3417:3433  low_r + middle_r */\n      tag_254\n        /* \"contracts/ModuleX.sol\":3425:3433  middle_r */\n      dup4\n        /* \"contracts/ModuleX.sol\":3417:3422  low_r */\n      dup7\n        /* \"contracts/ModuleX.sol\":3417:3433  low_r + middle_r */\n      tag_185\n      jump\t// in\n    tag_254:\n        /* \"contracts/ModuleX.sol\":3417:3442  low_r + middle_r + high_r */\n      tag_255\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_255:\n        /* \"contracts/ModuleX.sol\":3416:3456  (low_r + middle_r + high_r)/SCALE_FACTOR */\n      tag_256\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_256:\n        /* \"contracts/ModuleX.sol\":3409:3456  return (low_r + middle_r + high_r)/SCALE_FACTOR */\n      swap10\n        /* \"contracts/ModuleX.sol\":2575:3475  function calculateReward(uint stake_amount) public view returns(uint)... */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":6823:7103  function withdrawRewards(address to, uint amount) external onlyOwner... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_259:\n        /* \"contracts/ModuleX.sol\":6960:6976  pending_payments */\n      sload(0x06)\n        /* \"contracts/ModuleX.sol\":6951:6976  amount + pending_payments */\n      tag_261\n      swap1\n        /* \"contracts/ModuleX.sol\":6951:6957  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":6951:6976  amount + pending_payments */\n      tag_185\n      jump\t// in\n    tag_261:\n        /* \"contracts/ModuleX.sol\":6916:6947  xCREDI.balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":6941:6945  this */\n      address\n        /* \"contracts/ModuleX.sol\":6916:6947  xCREDI.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:661   */\n      mstore\n        /* \"contracts/ModuleX.sol\":6916:6922  xCREDI */\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":6916:6932  xCREDI.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"contracts/ModuleX.sol\":6916:6947  xCREDI.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_264\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_264:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_265\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"contracts/ModuleX.sol\":6916:6976  xCREDI.balanceOf(address(this)) >= amount + pending_payments */\n      lt\n      iszero\n        /* \"contracts/ModuleX.sol\":6908:7010  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7319:7321   */\n      0x20\n        /* \"contracts/ModuleX.sol\":6908:7010  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7301:7322   */\n      mstore\n        /* \"#utility.yul\":7358:7360   */\n      0x1d\n        /* \"#utility.yul\":7338:7356   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7331:7361   */\n      mstore\n        /* \"#utility.yul\":7397:7428   */\n      0x4d6f64756c65583a496e73756666696369656e742062616c616e636521000000\n        /* \"#utility.yul\":7377:7395   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7370:7429   */\n      mstore\n        /* \"#utility.yul\":7446:7464   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":6908:7010  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n      tag_129\n        /* \"#utility.yul\":7117:7470   */\n      jump\n        /* \"contracts/ModuleX.sol\":6908:7010  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n    tag_267:\n        /* \"contracts/ModuleX.sol\":7021:7052  xCREDI.safeTransfer(to, amount) */\n      tag_269\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":7021:7027  xCREDI */\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n        /* \"contracts/ModuleX.sol\":7021:7040  xCREDI.safeTransfer */\n      and\n        /* \"contracts/ModuleX.sol\":7041:7043  to */\n      dup4\n        /* \"contracts/ModuleX.sol\":7045:7051  amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":7021:7040  xCREDI.safeTransfer */\n      tag_147\n        /* \"contracts/ModuleX.sol\":7021:7052  xCREDI.safeTransfer(to, amount) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/ModuleX.sol\":7084:7086  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":7068:7095  RewardWithdrawn(to, amount) */\n      and\n      0x1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337\n        /* \"contracts/ModuleX.sol\":7088:7094  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":7068:7095  RewardWithdrawn(to, amount) */\n      mload(0x40)\n      tag_270\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/ModuleX.sol\":7068:7095  RewardWithdrawn(to, amount) */\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ModuleX.sol\":6823:7103  function withdrawRewards(address to, uint amount) external onlyOwner... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":3620:4608  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n    tag_115:\n        /* \"contracts/ModuleX.sol\":3691:3695  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":3728:3735  stopped */\n      dup1\n      sload\n        /* \"contracts/ModuleX.sol\":3691:3695  uint */\n      dup2\n      swap1\n      shl(0xa0, 0x01)\n        /* \"contracts/ModuleX.sol\":3728:3735  stopped */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ModuleX.sol\":3727:3735  !stopped */\n      iszero\n        /* \"contracts/ModuleX.sol\":3719:3756  require(!stopped, \"ModuleX:STOPPED!\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8992:8994   */\n      0x20\n        /* \"contracts/ModuleX.sol\":3719:3756  require(!stopped, \"ModuleX:STOPPED!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8974:8995   */\n      mstore\n        /* \"#utility.yul\":9031:9033   */\n      0x10\n        /* \"#utility.yul\":9011:9029   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9004:9034   */\n      mstore\n        /* \"#utility.yul\":9070:9088   */\n      0x4d6f64756c65583a53544f505045442100000000000000000000000000000000\n        /* \"#utility.yul\":9050:9068   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9043:9089   */\n      mstore\n        /* \"#utility.yul\":9106:9124   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":3719:3756  require(!stopped, \"ModuleX:STOPPED!\") */\n      tag_129\n        /* \"#utility.yul\":8790:9130   */\n      jump\n        /* \"contracts/ModuleX.sol\":3719:3756  require(!stopped, \"ModuleX:STOPPED!\") */\n    tag_272:\n        /* \"contracts/ModuleX.sol\":3790:3791  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":3775:3787  stake_amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":3775:3791  stake_amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":3767:3840  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9337:9339   */\n      0x20\n        /* \"contracts/ModuleX.sol\":3767:3840  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9319:9340   */\n      mstore\n        /* \"#utility.yul\":9376:9378   */\n      0x2c\n        /* \"#utility.yul\":9356:9374   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9349:9379   */\n      mstore\n        /* \"#utility.yul\":9415:9449   */\n      0x4d6f64756c65583a5374616b6520616d6f756e74206d75737420626520677265\n        /* \"#utility.yul\":9395:9413   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9388:9450   */\n      mstore\n        /* \"#utility.yul\":9486:9500   */\n      0x61746572207468616e2030210000000000000000000000000000000000000000\n        /* \"#utility.yul\":9466:9484   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9459:9501   */\n      mstore\n        /* \"#utility.yul\":9518:9537   */\n      0x84\n      add\n        /* \"contracts/ModuleX.sol\":3767:3840  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n      tag_129\n        /* \"#utility.yul\":9135:9543   */\n      jump\n        /* \"contracts/ModuleX.sol\":3767:3840  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n    tag_275:\n        /* \"contracts/ModuleX.sol\":577:585  180 days */\n      0xed4e00\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":3859:3882  lock_period >= MATURITY */\n      dup6\n      and\n      lt\n      iszero\n        /* \"contracts/ModuleX.sol\":3851:3918  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9750:9752   */\n      0x20\n        /* \"contracts/ModuleX.sol\":3851:3918  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9732:9753   */\n      mstore\n        /* \"#utility.yul\":9789:9791   */\n      0x1f\n        /* \"#utility.yul\":9769:9787   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9762:9792   */\n      mstore\n        /* \"#utility.yul\":9828:9861   */\n      0x4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f642100\n        /* \"#utility.yul\":9808:9826   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9801:9862   */\n      mstore\n        /* \"#utility.yul\":9879:9897   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":3851:3918  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n      tag_129\n        /* \"#utility.yul\":9548:9903   */\n      jump\n        /* \"contracts/ModuleX.sol\":3851:3918  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n    tag_278:\n        /* \"contracts/ModuleX.sol\":3929:3994  CREDI.safeTransferFrom(_msgSender(), address(this), stake_amount) */\n      tag_281\n        /* \"contracts/ModuleX.sol\":3929:3934  CREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":3929:3951  CREDI.safeTransferFrom */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":3974:3978  this */\n      address\n        /* \"contracts/ModuleX.sol\":3981:3993  stake_amount */\n      dup7\n        /* \"contracts/ModuleX.sol\":3929:3951  CREDI.safeTransferFrom */\n      tag_216\n        /* \"contracts/ModuleX.sol\":3929:3994  CREDI.safeTransferFrom(_msgSender(), address(this), stake_amount) */\n      jump\t// in\n    tag_281:\n        /* \"contracts/ModuleX.sol\":4006:4021  uint96 maturity */\n      0x00\n        /* \"contracts/ModuleX.sol\":4024:4048  time_now() + lock_period */\n      tag_284\n        /* \"contracts/ModuleX.sol\":4037:4048  lock_period */\n      dup6\n        /* \"contracts/ModuleX.sol\":2543:2558  block.timestamp */\n      timestamp\n        /* \"contracts/ModuleX.sol\":4024:4048  time_now() + lock_period */\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"contracts/ModuleX.sol\":4006:4048  uint96 maturity = time_now() + lock_period */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":4059:4077  uint reward_amount */\n      0x00\n        /* \"contracts/ModuleX.sol\":4080:4109  calculateReward(stake_amount) */\n      tag_286\n        /* \"contracts/ModuleX.sol\":4096:4108  stake_amount */\n      dup6\n        /* \"contracts/ModuleX.sol\":4080:4095  calculateReward */\n      tag_103\n        /* \"contracts/ModuleX.sol\":4080:4109  calculateReward(stake_amount) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/ModuleX.sol\":4059:4109  uint reward_amount = calculateReward(stake_amount) */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":4120:4133  uint stake_id */\n      0x00\n        /* \"contracts/ModuleX.sol\":4136:4148  stakes_count */\n      sload(0x05)\n        /* \"contracts/ModuleX.sol\":4120:4148  uint stake_id = stakes_count */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":4178:4354  StakeDetails({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/ModuleX.sol\":4213:4225  _msgSender() */\n      tag_287\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/ModuleX.sol\":4213:4225  _msgSender() */\n    tag_287:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":4178:4354  StakeDetails({... */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      dup1\n      dup8\n      and\n      0x20\n      dup1\n      dup6\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0x60\n      swap5\n      dup6\n      add\n      dup9\n      swap1\n      mstore\n      0x00\n        /* \"contracts/ModuleX.sol\":4159:4175  stakes[stake_id] */\n      dup8\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":4159:4165  stakes */\n      0x04\n        /* \"contracts/ModuleX.sol\":4159:4175  stakes[stake_id] */\n      dup4\n      mstore\n      dup2\n      dup2\n      keccak256\n        /* \"contracts/ModuleX.sol\":4159:4354  stakes[stake_id] = StakeDetails({... */\n      dup8\n      mload\n      swap4\n      dup9\n      add\n      mload\n      swap1\n      swap5\n      and\n      shl(0xa0, 0x01)\n      mul\n      swap3\n      swap1\n      swap5\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup3\n      sstore\n      dup5\n      add\n      mload\n      0x01\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      swap4\n      swap1\n      swap3\n      add\n      mload\n      0x02\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ModuleX.sol\":4375:4403  total_staked += stake_amount */\n      dup2\n      sload\n        /* \"contracts/ModuleX.sol\":4287:4299  stake_amount */\n      dup9\n      swap3\n        /* \"contracts/ModuleX.sol\":4159:4354  stakes[stake_id] = StakeDetails({... */\n      swap2\n      swap1\n        /* \"contracts/ModuleX.sol\":4375:4403  total_staked += stake_amount */\n      tag_288\n      swap1\n        /* \"contracts/ModuleX.sol\":4287:4299  stake_amount */\n      dup5\n      swap1\n        /* \"contracts/ModuleX.sol\":4375:4403  total_staked += stake_amount */\n      tag_185\n      jump\t// in\n    tag_288:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ModuleX.sol\":4435:4448  reward_amount */\n      dup2\n        /* \"contracts/ModuleX.sol\":4415:4431  pending_payments */\n      0x06\n      0x00\n        /* \"contracts/ModuleX.sol\":4415:4448  pending_payments += reward_amount */\n      dup3\n      dup3\n      sload\n      tag_289\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_289:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":4464:4533  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10357:10382   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":10418:10457   */\n      dup6\n      and\n        /* \"#utility.yul\":10413:10415   */\n      0x20\n        /* \"#utility.yul\":10398:10416   */\n      dup3\n      add\n        /* \"#utility.yul\":10391:10458   */\n      mstore\n        /* \"#utility.yul\":10474:10492   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10467:10501   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":10532:10534   */\n      0x60\n        /* \"#utility.yul\":10517:10535   */\n      dup2\n      add\n        /* \"#utility.yul\":10510:10544   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/ModuleX.sol\":4464:4533  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap2\n        /* \"contracts/ModuleX.sol\":4464:4533  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      0x24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":10344:10347   */\n      0x80\n        /* \"contracts/ModuleX.sol\":4464:4533  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      add\n      swap1\n      log2\n        /* \"contracts/ModuleX.sol\":4544:4556  stakes_count */\n      0x05\n        /* \"contracts/ModuleX.sol\":4544:4558  stakes_count++ */\n      dup1\n      sload\n      swap1\n        /* \"contracts/ModuleX.sol\":4544:4556  stakes_count */\n      0x00\n        /* \"contracts/ModuleX.sol\":4544:4558  stakes_count++ */\n      tag_293\n      dup4\n      tag_294\n      jump\t// in\n    tag_293:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/ModuleX.sol\":4576:4584  stake_id */\n      swap1\n      swap8\n        /* \"contracts/ModuleX.sol\":4586:4599  reward_amount */\n      swap2\n      swap7\n      pop\n        /* \"contracts/ModuleX.sol\":3620:4608  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n      swap1\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_296\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_296:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:661   */\n      mstore\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_129\n        /* \"#utility.yul\":427:667   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_300\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:661   */\n      mstore\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_129\n        /* \"#utility.yul\":427:667   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10887:10942   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":10869:10943   */\n      mstore\n        /* \"#utility.yul\":10959:10977   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10952:10986   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_209\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":10842:10860   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n    tag_311:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_313\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11217:11272   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":11199:11273   */\n      mstore\n        /* \"#utility.yul\":11309:11364   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":11289:11307   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":11282:11365   */\n      mstore\n        /* \"#utility.yul\":11381:11399   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11374:11408   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_316\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":11172:11190   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_311\n        /* \"#utility.yul\":10997:11414   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_320:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_322)\n    tag_321:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":605:660   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:661   */\n      mstore\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      tag_129\n        /* \"#utility.yul\":427:667   */\n      jump\n        /* \"#utility.yul\":196:422   */\n    tag_42:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      0x00\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_330:\n      pop\n        /* \"#utility.yul\":369:392   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:422   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1308:1654   */\n    tag_71:\n        /* \"#utility.yul\":1376:1382   */\n      0x00\n        /* \"#utility.yul\":1384:1390   */\n      0x00\n        /* \"#utility.yul\":1437:1439   */\n      0x40\n        /* \"#utility.yul\":1425:1434   */\n      dup4\n        /* \"#utility.yul\":1416:1423   */\n      dup6\n        /* \"#utility.yul\":1412:1435   */\n      sub\n        /* \"#utility.yul\":1408:1440   */\n      slt\n        /* \"#utility.yul\":1405:1457   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":1453:1454   */\n      0x00\n        /* \"#utility.yul\":1450:1451   */\n      0x00\n        /* \"#utility.yul\":1443:1455   */\n      revert\n        /* \"#utility.yul\":1405:1457   */\n    tag_336:\n      pop\n      pop\n        /* \"#utility.yul\":1498:1521   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1618:1620   */\n      0x20\n        /* \"#utility.yul\":1603:1621   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1590:1622   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1308:1654   */\n      jump\t// out\n        /* \"#utility.yul\":1659:2269   */\n    tag_87:\n        /* \"#utility.yul\":1745:1751   */\n      0x00\n        /* \"#utility.yul\":1753:1759   */\n      0x00\n        /* \"#utility.yul\":1806:1808   */\n      0x20\n        /* \"#utility.yul\":1794:1803   */\n      dup4\n        /* \"#utility.yul\":1785:1792   */\n      dup6\n        /* \"#utility.yul\":1781:1804   */\n      sub\n        /* \"#utility.yul\":1777:1809   */\n      slt\n        /* \"#utility.yul\":1774:1826   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":1822:1823   */\n      0x00\n        /* \"#utility.yul\":1819:1820   */\n      0x00\n        /* \"#utility.yul\":1812:1824   */\n      revert\n        /* \"#utility.yul\":1774:1826   */\n    tag_338:\n        /* \"#utility.yul\":1862:1871   */\n      dup3\n        /* \"#utility.yul\":1849:1872   */\n      calldataload\n        /* \"#utility.yul\":1895:1913   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1887:1893   */\n      dup2\n        /* \"#utility.yul\":1884:1914   */\n      gt\n        /* \"#utility.yul\":1881:1931   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":1927:1928   */\n      0x00\n        /* \"#utility.yul\":1924:1925   */\n      0x00\n        /* \"#utility.yul\":1917:1929   */\n      revert\n        /* \"#utility.yul\":1881:1931   */\n    tag_339:\n        /* \"#utility.yul\":1950:1972   */\n      dup4\n      add\n        /* \"#utility.yul\":2003:2007   */\n      0x1f\n        /* \"#utility.yul\":1995:2008   */\n      dup2\n      add\n        /* \"#utility.yul\":1991:2018   */\n      dup6\n      sgt\n        /* \"#utility.yul\":1981:2036   */\n      tag_340\n      jumpi\n        /* \"#utility.yul\":2032:2033   */\n      0x00\n        /* \"#utility.yul\":2029:2030   */\n      0x00\n        /* \"#utility.yul\":2022:2034   */\n      revert\n        /* \"#utility.yul\":1981:2036   */\n    tag_340:\n        /* \"#utility.yul\":2072:2074   */\n      dup1\n        /* \"#utility.yul\":2059:2075   */\n      calldataload\n        /* \"#utility.yul\":2098:2116   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2090:2096   */\n      dup2\n        /* \"#utility.yul\":2087:2117   */\n      gt\n        /* \"#utility.yul\":2084:2134   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":2130:2131   */\n      0x00\n        /* \"#utility.yul\":2127:2128   */\n      0x00\n        /* \"#utility.yul\":2120:2132   */\n      revert\n        /* \"#utility.yul\":2084:2134   */\n    tag_341:\n        /* \"#utility.yul\":2183:2190   */\n      dup6\n        /* \"#utility.yul\":2178:2180   */\n      0x20\n        /* \"#utility.yul\":2168:2174   */\n      dup3\n        /* \"#utility.yul\":2165:2166   */\n      0x05\n        /* \"#utility.yul\":2161:2175   */\n      shl\n        /* \"#utility.yul\":2157:2159   */\n      dup5\n        /* \"#utility.yul\":2153:2176   */\n      add\n        /* \"#utility.yul\":2149:2181   */\n      add\n        /* \"#utility.yul\":2146:2191   */\n      gt\n        /* \"#utility.yul\":2143:2208   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":2204:2205   */\n      0x00\n        /* \"#utility.yul\":2201:2202   */\n      0x00\n        /* \"#utility.yul\":2194:2206   */\n      revert\n        /* \"#utility.yul\":2143:2208   */\n    tag_342:\n        /* \"#utility.yul\":2235:2237   */\n      0x20\n        /* \"#utility.yul\":2227:2238   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":2257:2263   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":1659:2269   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2274:2740   */\n    tag_94:\n        /* \"#utility.yul\":2351:2357   */\n      0x00\n        /* \"#utility.yul\":2359:2365   */\n      0x00\n        /* \"#utility.yul\":2367:2373   */\n      0x00\n        /* \"#utility.yul\":2420:2422   */\n      0x60\n        /* \"#utility.yul\":2408:2417   */\n      dup5\n        /* \"#utility.yul\":2399:2406   */\n      dup7\n        /* \"#utility.yul\":2395:2418   */\n      sub\n        /* \"#utility.yul\":2391:2423   */\n      slt\n        /* \"#utility.yul\":2388:2440   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":2436:2437   */\n      0x00\n        /* \"#utility.yul\":2433:2434   */\n      0x00\n        /* \"#utility.yul\":2426:2438   */\n      revert\n        /* \"#utility.yul\":2388:2440   */\n    tag_344:\n      pop\n      pop\n        /* \"#utility.yul\":2481:2504   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":2601:2603   */\n      0x20\n        /* \"#utility.yul\":2586:2604   */\n      dup4\n      add\n        /* \"#utility.yul\":2573:2605   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":2704:2706   */\n      0x40\n        /* \"#utility.yul\":2689:2707   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2676:2708   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2274:2740   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3190:3386   */\n    tag_325:\n        /* \"#utility.yul\":3258:3278   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3307:3361   */\n      dup2\n      and\n        /* \"#utility.yul\":3297:3362   */\n      dup2\n      eq\n        /* \"#utility.yul\":3287:3380   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":3376:3377   */\n      0x00\n        /* \"#utility.yul\":3373:3374   */\n      0x00\n        /* \"#utility.yul\":3366:3378   */\n      revert\n        /* \"#utility.yul\":3287:3380   */\n    tag_347:\n        /* \"#utility.yul\":3190:3386   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3391:3691   */\n    tag_110:\n        /* \"#utility.yul\":3459:3465   */\n      0x00\n        /* \"#utility.yul\":3467:3473   */\n      0x00\n        /* \"#utility.yul\":3520:3522   */\n      0x40\n        /* \"#utility.yul\":3508:3517   */\n      dup4\n        /* \"#utility.yul\":3499:3506   */\n      dup6\n        /* \"#utility.yul\":3495:3518   */\n      sub\n        /* \"#utility.yul\":3491:3523   */\n      slt\n        /* \"#utility.yul\":3488:3540   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":3536:3537   */\n      0x00\n        /* \"#utility.yul\":3533:3534   */\n      0x00\n        /* \"#utility.yul\":3526:3538   */\n      revert\n        /* \"#utility.yul\":3488:3540   */\n    tag_349:\n        /* \"#utility.yul\":3559:3588   */\n      tag_350\n        /* \"#utility.yul\":3578:3587   */\n      dup4\n        /* \"#utility.yul\":3559:3588   */\n      tag_325\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3549:3588   */\n      swap5\n        /* \"#utility.yul\":3657:3659   */\n      0x20\n        /* \"#utility.yul\":3642:3660   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3629:3661   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3391:3691   */\n      jump\t// out\n        /* \"#utility.yul\":3696:4108   */\n    tag_114:\n        /* \"#utility.yul\":3763:3769   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      0x00\n        /* \"#utility.yul\":3824:3826   */\n      0x40\n        /* \"#utility.yul\":3812:3821   */\n      dup4\n        /* \"#utility.yul\":3803:3810   */\n      dup6\n        /* \"#utility.yul\":3799:3822   */\n      sub\n        /* \"#utility.yul\":3795:3827   */\n      slt\n        /* \"#utility.yul\":3792:3844   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":3840:3841   */\n      0x00\n        /* \"#utility.yul\":3837:3838   */\n      0x00\n        /* \"#utility.yul\":3830:3842   */\n      revert\n        /* \"#utility.yul\":3792:3844   */\n    tag_352:\n        /* \"#utility.yul\":3879:3888   */\n      dup3\n        /* \"#utility.yul\":3866:3889   */\n      calldataload\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":3922:3927   */\n      dup2\n        /* \"#utility.yul\":3918:3956   */\n      and\n        /* \"#utility.yul\":3911:3916   */\n      dup2\n        /* \"#utility.yul\":3908:3957   */\n      eq\n        /* \"#utility.yul\":3898:3975   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":3971:3972   */\n      0x00\n        /* \"#utility.yul\":3968:3969   */\n      0x00\n        /* \"#utility.yul\":3961:3973   */\n      revert\n        /* \"#utility.yul\":4366:4552   */\n    tag_120:\n        /* \"#utility.yul\":4425:4431   */\n      0x00\n        /* \"#utility.yul\":4478:4480   */\n      0x20\n        /* \"#utility.yul\":4466:4475   */\n      dup3\n        /* \"#utility.yul\":4457:4464   */\n      dup5\n        /* \"#utility.yul\":4453:4476   */\n      sub\n        /* \"#utility.yul\":4449:4481   */\n      slt\n        /* \"#utility.yul\":4446:4498   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":4494:4495   */\n      0x00\n        /* \"#utility.yul\":4491:4492   */\n      0x00\n        /* \"#utility.yul\":4484:4496   */\n      revert\n        /* \"#utility.yul\":4446:4498   */\n    tag_356:\n        /* \"#utility.yul\":4517:4546   */\n      tag_357\n        /* \"#utility.yul\":4536:4545   */\n      dup3\n        /* \"#utility.yul\":4517:4546   */\n      tag_325\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4507:4546   */\n      swap4\n        /* \"#utility.yul\":4366:4552   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6035:6219   */\n    tag_326:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":6084:6085   */\n      0x00\n        /* \"#utility.yul\":6077:6165   */\n      mstore\n        /* \"#utility.yul\":6184:6188   */\n      0x11\n        /* \"#utility.yul\":6181:6182   */\n      0x04\n        /* \"#utility.yul\":6174:6189   */\n      mstore\n        /* \"#utility.yul\":6208:6212   */\n      0x24\n        /* \"#utility.yul\":6205:6206   */\n      0x00\n        /* \"#utility.yul\":6198:6213   */\n      revert\n        /* \"#utility.yul\":6224:6352   */\n    tag_149:\n        /* \"#utility.yul\":6291:6300   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6312:6323   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6309:6346   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":6326:6344   */\n      tag_365\n      tag_326\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":6224:6352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7475:7749   */\n    tag_183:\n        /* \"#utility.yul\":7515:7516   */\n      0x00\n        /* \"#utility.yul\":7541:7542   */\n      dup3\n        /* \"#utility.yul\":7531:7720   */\n      tag_370\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7573:7574   */\n      0x00\n        /* \"#utility.yul\":7566:7654   */\n      mstore\n        /* \"#utility.yul\":7677:7681   */\n      0x12\n        /* \"#utility.yul\":7674:7675   */\n      0x04\n        /* \"#utility.yul\":7667:7682   */\n      mstore\n        /* \"#utility.yul\":7705:7709   */\n      0x24\n        /* \"#utility.yul\":7702:7703   */\n      0x00\n        /* \"#utility.yul\":7695:7710   */\n      revert\n        /* \"#utility.yul\":7531:7720   */\n    tag_370:\n      pop\n        /* \"#utility.yul\":7734:7743   */\n      div\n      swap1\n        /* \"#utility.yul\":7475:7749   */\n      jump\t// out\n        /* \"#utility.yul\":7754:7879   */\n    tag_185:\n        /* \"#utility.yul\":7819:7828   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7840:7850   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7837:7873   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":7853:7871   */\n      tag_365\n      tag_326\n      jump\t// in\n        /* \"#utility.yul\":7884:8068   */\n    tag_194:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7933:7934   */\n      0x00\n        /* \"#utility.yul\":7926:8014   */\n      mstore\n        /* \"#utility.yul\":8033:8037   */\n      0x32\n        /* \"#utility.yul\":8030:8031   */\n      0x04\n        /* \"#utility.yul\":8023:8038   */\n      mstore\n        /* \"#utility.yul\":8057:8061   */\n      0x24\n        /* \"#utility.yul\":8054:8055   */\n      0x00\n        /* \"#utility.yul\":8047:8062   */\n      revert\n        /* \"#utility.yul\":8428:8596   */\n    tag_237:\n        /* \"#utility.yul\":8501:8510   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":8532:8541   */\n      dup2\n      iszero\n        /* \"#utility.yul\":8549:8564   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":8543:8565   */\n      dup5\n      eq\n        /* \"#utility.yul\":8529:8566   */\n      or\n        /* \"#utility.yul\":8519:8590   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":8570:8588   */\n      tag_365\n      tag_326\n      jump\t// in\n        /* \"#utility.yul\":8601:8785   */\n    tag_266:\n        /* \"#utility.yul\":8671:8677   */\n      0x00\n        /* \"#utility.yul\":8724:8726   */\n      0x20\n        /* \"#utility.yul\":8712:8721   */\n      dup3\n        /* \"#utility.yul\":8703:8710   */\n      dup5\n        /* \"#utility.yul\":8699:8722   */\n      sub\n        /* \"#utility.yul\":8695:8727   */\n      slt\n        /* \"#utility.yul\":8692:8744   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":8740:8741   */\n      0x00\n        /* \"#utility.yul\":8737:8738   */\n      0x00\n        /* \"#utility.yul\":8730:8742   */\n      revert\n        /* \"#utility.yul\":8692:8744   */\n    tag_380:\n      pop\n        /* \"#utility.yul\":8763:8779   */\n      mload\n      swap2\n        /* \"#utility.yul\":8601:8785   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9908:10123   */\n    tag_285:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":9976:10010   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":10012:10046   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":9972:10047   */\n      add\n      swap1\n        /* \"#utility.yul\":10059:10094   */\n      dup2\n      gt\n        /* \"#utility.yul\":10056:10117   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":10097:10115   */\n      tag_365\n      tag_326\n      jump\t// in\n        /* \"#utility.yul\":10555:10690   */\n    tag_294:\n        /* \"#utility.yul\":10594:10597   */\n      0x00\n        /* \"#utility.yul\":10615:10632   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10612:10655   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":10635:10653   */\n      tag_390\n      tag_326\n      jump\t// in\n    tag_390:\n      pop\n        /* \"#utility.yul\":10682:10683   */\n      0x01\n        /* \"#utility.yul\":10671:10684   */\n      add\n      swap1\n        /* \"#utility.yul\":10555:10690   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a86d218e0601a27a13e9ac69315a81a71f07dd0a08f8464db62e06291793ff9e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 148,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:920:10",
										"nodeType": "YulBlock",
										"src": "0:920:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:10",
													"nodeType": "YulBlock",
													"src": "74:117:10",
													"statements": [
														{
															"nativeSrc": "84:22:10",
															"nodeType": "YulAssignment",
															"src": "84:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:10"
																},
																"nativeSrc": "93:13:10",
																"nodeType": "YulFunctionCall",
																"src": "93:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:10",
																"nodeType": "YulBlock",
																"src": "169:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:10",
																					"nodeType": "YulLiteral",
																					"src": "178:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:10",
																					"nodeType": "YulLiteral",
																					"src": "181:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:10"
																			},
																			"nativeSrc": "171:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:10"
																		},
																		"nativeSrc": "171:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:10",
																										"nodeType": "YulLiteral",
																										"src": "154:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:10",
																										"nodeType": "YulLiteral",
																										"src": "159:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:10"
																								},
																								"nativeSrc": "150:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:10",
																								"nodeType": "YulLiteral",
																								"src": "163:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:10"
																						},
																						"nativeSrc": "146:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:10"
																				},
																				"nativeSrc": "135:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:10"
																		},
																		"nativeSrc": "125:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:10"
																},
																"nativeSrc": "118:50:10",
																"nodeType": "YulFunctionCall",
																"src": "118:50:10"
															},
															"nativeSrc": "115:70:10",
															"nodeType": "YulIf",
															"src": "115:70:10"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:10",
														"nodeType": "YulTypedName",
														"src": "53:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:10",
														"nodeType": "YulTypedName",
														"src": "64:5:10",
														"type": ""
													}
												],
												"src": "14:177:10"
											},
											{
												"body": {
													"nativeSrc": "328:382:10",
													"nodeType": "YulBlock",
													"src": "328:382:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "375:16:10",
																"nodeType": "YulBlock",
																"src": "375:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "384:1:10",
																					"nodeType": "YulLiteral",
																					"src": "384:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "387:1:10",
																					"nodeType": "YulLiteral",
																					"src": "387:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "377:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:10"
																			},
																			"nativeSrc": "377:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "377:12:10"
																		},
																		"nativeSrc": "377:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "377:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "349:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "358:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "345:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:10"
																		},
																		"nativeSrc": "345:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "370:3:10",
																		"nodeType": "YulLiteral",
																		"src": "370:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "341:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:10"
																},
																"nativeSrc": "341:33:10",
																"nodeType": "YulFunctionCall",
																"src": "341:33:10"
															},
															"nativeSrc": "338:53:10",
															"nodeType": "YulIf",
															"src": "338:53:10"
														},
														{
															"nativeSrc": "400:50:10",
															"nodeType": "YulAssignment",
															"src": "400:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "440:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "440:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "410:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "410:29:10"
																},
																"nativeSrc": "410:40:10",
																"nodeType": "YulFunctionCall",
																"src": "410:40:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "400:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:10"
																}
															]
														},
														{
															"nativeSrc": "459:59:10",
															"nodeType": "YulAssignment",
															"src": "459:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "503:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "503:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "514:2:10",
																				"nodeType": "YulLiteral",
																				"src": "514:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "499:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:10"
																		},
																		"nativeSrc": "499:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "499:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "469:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "469:29:10"
																},
																"nativeSrc": "469:49:10",
																"nodeType": "YulFunctionCall",
																"src": "469:49:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "459:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "459:6:10"
																}
															]
														},
														{
															"nativeSrc": "527:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "527:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "540:1:10",
																"nodeType": "YulLiteral",
																"src": "540:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "531:5:10",
																	"nodeType": "YulTypedName",
																	"src": "531:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "550:34:10",
															"nodeType": "YulAssignment",
															"src": "550:34:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "569:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "569:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "580:2:10",
																				"nodeType": "YulLiteral",
																				"src": "580:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "565:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "565:3:10"
																		},
																		"nativeSrc": "565:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "565:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "559:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "559:5:10"
																},
																"nativeSrc": "559:25:10",
																"nodeType": "YulFunctionCall",
																"src": "559:25:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "550:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "550:5:10"
																}
															]
														},
														{
															"nativeSrc": "593:15:10",
															"nodeType": "YulAssignment",
															"src": "593:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "603:5:10",
																"nodeType": "YulIdentifier",
																"src": "603:5:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "593:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "593:6:10"
																}
															]
														},
														{
															"nativeSrc": "617:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "617:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "632:1:10",
																"nodeType": "YulLiteral",
																"src": "632:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "621:7:10",
																	"nodeType": "YulTypedName",
																	"src": "621:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "642:36:10",
															"nodeType": "YulAssignment",
															"src": "642:36:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "663:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "663:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "674:2:10",
																				"nodeType": "YulLiteral",
																				"src": "674:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "659:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "659:3:10"
																		},
																		"nativeSrc": "659:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "659:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:10"
																},
																"nativeSrc": "653:25:10",
																"nodeType": "YulFunctionCall",
																"src": "653:25:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "642:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:10"
																}
															]
														},
														{
															"nativeSrc": "687:17:10",
															"nodeType": "YulAssignment",
															"src": "687:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "697:7:10",
																"nodeType": "YulIdentifier",
																"src": "697:7:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "687:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "687:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory",
												"nativeSrc": "196:514:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "270:9:10",
														"nodeType": "YulTypedName",
														"src": "270:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "281:7:10",
														"nodeType": "YulTypedName",
														"src": "281:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "293:6:10",
														"nodeType": "YulTypedName",
														"src": "293:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "301:6:10",
														"nodeType": "YulTypedName",
														"src": "301:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "309:6:10",
														"nodeType": "YulTypedName",
														"src": "309:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "317:6:10",
														"nodeType": "YulTypedName",
														"src": "317:6:10",
														"type": ""
													}
												],
												"src": "196:514:10"
											},
											{
												"body": {
													"nativeSrc": "816:102:10",
													"nodeType": "YulBlock",
													"src": "816:102:10",
													"statements": [
														{
															"nativeSrc": "826:26:10",
															"nodeType": "YulAssignment",
															"src": "826:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "838:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "838:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "849:2:10",
																		"nodeType": "YulLiteral",
																		"src": "849:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "834:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "834:3:10"
																},
																"nativeSrc": "834:18:10",
																"nodeType": "YulFunctionCall",
																"src": "834:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "826:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "826:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "868:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "868:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "883:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "883:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "899:3:10",
																								"nodeType": "YulLiteral",
																								"src": "899:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "904:1:10",
																								"nodeType": "YulLiteral",
																								"src": "904:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "895:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "895:3:10"
																						},
																						"nativeSrc": "895:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "895:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "908:1:10",
																						"nodeType": "YulLiteral",
																						"src": "908:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "891:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "891:3:10"
																				},
																				"nativeSrc": "891:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "891:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "879:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "879:3:10"
																		},
																		"nativeSrc": "879:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "879:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "861:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:10"
																},
																"nativeSrc": "861:51:10",
																"nodeType": "YulFunctionCall",
																"src": "861:51:10"
															},
															"nativeSrc": "861:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "861:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "715:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "785:9:10",
														"nodeType": "YulTypedName",
														"src": "785:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "796:6:10",
														"nodeType": "YulTypedName",
														"src": "796:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "807:4:10",
														"nodeType": "YulTypedName",
														"src": "807:4:10",
														"type": ""
													}
												],
												"src": "715:203:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let value := 0\n        value := mload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040525f805460ff60a01b191681556001818155600555600655348015610026575f5ffd5b5060405161185a38038061185a833981016040819052610045916100fe565b338061006a57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61007381610094565b506001600160a01b039384166080529190921660a05260035560025561013e565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100f9575f5ffd5b919050565b5f5f5f5f60808587031215610111575f5ffd5b61011a856100e3565b9350610128602086016100e3565b6040860151606090960151949790965092505050565b60805160a0516116bc61019e5f395f8181610238015281816102b8015281816105fb01528181610b6d01528181610e3c0152610f0801525f81816101d1015281816103750152818161083801528181610ad301526110a801526116bc5ff3fe608060405234801561000f575f5ffd5b506004361061018f575f3560e01c8063b109beec116100dd578063ce325bf811610088578063d6ef7af011610063578063d6ef7af014610399578063d93c04a0146103ac578063f2fde38b146103d4575f5ffd5b8063ce325bf814610323578063d2d7231f14610360578063d46149a214610373575f5ffd5b8063bc854352116100b8578063bc854352146102ea578063beceed39146102fd578063c9ea62c114610310575f5ffd5b8063b109beec146102b3578063b5fa91fe146102da578063b6baffe3146102e2575f5ffd5b80637c2fdeb51161013d5780638f4729b7116101185780638f4729b71461028e578063ac00500f14610297578063af7568dd146102aa575f5ffd5b80637c2fdeb5146102365780638da5cb5b1461025c5780638e12c0cd1461026c575f5ffd5b80636db08f251161016d5780636db08f25146101cc578063715018a61461020b57806375f12b2114610213575f5ffd5b806307da68f514610193578063109cf3991461019d578063379607f5146101b9575b5f5ffd5b61019b6103e7565b005b6101a660035481565b6040519081526020015b60405180910390f35b6101a66101c7366004611453565b610445565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101b0565b61019b610681565b5f5461022690600160a01b900460ff1681565b60405190151581526020016101b0565b7f00000000000000000000000000000000000000000000000000000000000000006101f3565b5f546001600160a01b03166101f3565b61027662ed4e0081565b6040516001600160601b0390911681526020016101b0565b6101a660065481565b61019b6102a536600461146a565b610694565b6101a660015481565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6101a66108b6565b6101a66108cb565b61019b6102f836600461148a565b6108e9565b61019b61030b366004611453565b610b07565b61019b61031e3660046114fb565b610bd3565b610336610331366004611453565b610be9565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101b0565b6101a661036e366004611453565b610c89565b7f00000000000000000000000000000000000000000000000000000000000000006101f3565b61019b6103a736600461153f565b610df9565b6103bf6103ba366004611567565b610f76565b604080519283526020830191909152016101b0565b61019b6103e236600461158e565b611219565b6103ef61126f565b5f80547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1781556040517f7acc84e34091ae817647a4c49116f5cc07f319078ba80f8f5fde37ea7e25cbd69190a1565b5f815f81118015610457575060055481105b6104a85760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b65204944210000000000000060448201526064015b60405180910390fd5b5f83815260046020526040902080546001600160a01b0316331461050e5760405162461bcd60e51b815260206004820152601f60248201527f4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e657200604482015260640161049f565b8054600160a01b90046001600160601b0316426001600160601b0316101561059e5760405162461bcd60e51b815260206004820152602a60248201527f4d6f64756c65583a4561726c79205769746864726177616c206973206e6f742060448201527f7065726d69747465642100000000000000000000000000000000000000000000606482015260840161049f565b5f8160020154116105f15760405162461bcd60e51b815260206004820152601860248201527f4d6f64756c65583a4e6f7468696e6720746f20636c61696d0000000000000000604482015260640161049f565b600281015461062a7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633836112b4565b8060065f82825461063b91906115c2565b90915550505f60028301556040518581527f67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc199060200160405180910390a1949350505050565b61068961126f565b6106925f611328565b565b61069c61126f565b815f811180156106ad575060055481105b6106f95760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b652049442100000000000000604482015260640161049f565b5f821161075a5760405162461bcd60e51b815260206004820152602960248201527f4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207460448201526868616e207a65726f2160b81b606482015260840161049f565b5f8381526004602052604090208054600160a01b90046001600160601b0316426001600160601b031611156107d15760405162461bcd60e51b815260206004820152601560248201527f4d6f64756c65583a4275726e7420746f6b656e73210000000000000000000000604482015260640161049f565b80600101548311156108255760405162461bcd60e51b815260206004820152601d60248201527f4d6f64756c65583a496e73756666696369656e742062616c616e636521000000604482015260640161049f565b61085f3360018301546001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691906112b4565b82816001015f82825461087291906115c2565b909155505060408051858152602081018590527f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c910160405180910390a150505050565b5f60016005546108c691906115c2565b905090565b5f6002546003546001546108df91906115db565b6108c691906115fa565b6108f161126f565b5f805b82811015610a7e576005548484838181106109115761091161160d565b90506020020135106109655760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b652049442100000000000000604482015260640161049f565b5f60045f86868581811061097b5761097b61160d565b602090810292909201358352508101919091526040015f208054909150600160a01b90046001600160601b0316426001600160601b03161115610a005760405162461bcd60e51b815260206004820152601560248201527f4d6f64756c65583a4275726e7420746f6b656e73210000000000000000000000604482015260640161049f565b6001810154610a0f90846115fa565b5f600183015592507f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c858584818110610a4a57610a4a61160d565b905060200201358260010154604051610a6d929190918252602082015260400190565b60405180910390a1506001016108f4565b505f8111610ace5760405162461bcd60e51b815260206004820152601a60248201527f4d6f64756c65583a546f74616c20616d6f756e74206973203021000000000000604482015260640161049f565b610b027f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633836112b4565b505050565b5f8111610b685760405162461bcd60e51b815260206004820152602960248201527f4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207460448201526868616e207a65726f2160b81b606482015260840161049f565b610b9d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633308461138f565b6040518181527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a150565b610bdb61126f565b600292909255600355600155565b5f5f5f5f845f81118015610bfe575060055481105b610c4a5760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b652049442100000000000000604482015260640161049f565b5050505f9283525050600460205260409020805460018201546002909201546001600160a01b03821693600160a01b9092046001600160601b03169291565b5f5f670de0b6b3a764000090505f83600154610ca591906115fa565b90505f600354600154610cb891906115db565b90505f60035483610cc991906115db565b9050808203610cf357600254610cdf90836115fa565b610ce990876115db565b9695505050505050565b5f60025483610d0291906115fa565b600154600354856001610d1591906115fa565b610d1f9190611621565b610d2991906115c2565b610d339087611621565b610d3d91906115db565b90505f60025483610d4e91906115fa565b600354610d5b9085611621565b610d6590876115c2565b610d6f9088611621565b610d7991906115db565b90505f80610d888660016115fa565b90505b84811015610dcb57600254610da090826115fa565b600354610dad908a611621565b610db791906115db565b610dc190836115fa565b9150600101610d8b565b508682610dd883866115fa565b610de291906115fa565b610dec91906115db565b9998505050505050505050565b610e0161126f565b600654610e0e90826115fa565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610e89573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ead9190611638565b1015610efb5760405162461bcd60e51b815260206004820152601d60248201527f4d6f64756c65583a496e73756666696369656e742062616c616e636521000000604482015260640161049f565b610f2f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836112b4565b816001600160a01b03167f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e133782604051610f6a91815260200190565b60405180910390a25050565b5f80548190600160a01b900460ff1615610fd25760405162461bcd60e51b815260206004820152601060248201527f4d6f64756c65583a53544f505045442100000000000000000000000000000000604482015260640161049f565b5f83116110475760405162461bcd60e51b815260206004820152602c60248201527f4d6f64756c65583a5374616b6520616d6f756e74206d7573742062652067726560448201527f61746572207468616e2030210000000000000000000000000000000000000000606482015260840161049f565b62ed4e006001600160601b03851610156110a35760405162461bcd60e51b815260206004820152601f60248201527f4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f642100604482015260640161049f565b6110d87f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633308661138f565b5f6110e3854261164f565b90505f6110ef85610c89565b90505f600554905060405180608001604052806111093390565b6001600160a01b0390811682526001600160601b0380871660208085019190915260408085018c905260609485018890525f87815260048352818120875193880151909416600160a01b029290941691909117825584015160018083019190915593909201516002909201919091558154889291906111899084906115fa565b925050819055508160065f8282546111a191906115fa565b9091555050604080518281526001600160601b038516602082015280820188905260608101849052905133917f24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146919081900360800190a260058054905f6112078361166e565b90915550909791965090945050505050565b61122161126f565b6001600160a01b038116611263576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f600482015260240161049f565b61126c81611328565b50565b5f546001600160a01b03163314610692576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161049f565b6040516001600160a01b03838116602483015260448201839052610b0291859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113ce565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0384811660248301528381166044830152606482018390526113c89186918216906323b872dd906084016112e1565b50505050565b5f5f60205f8451602086015f885af1806113ed576040513d5f823e3d81fd5b50505f513d91508115611404578060011415611411565b6001600160a01b0384163b155b156113c8576040517f5274afe70000000000000000000000000000000000000000000000000000000081526001600160a01b038516600482015260240161049f565b5f60208284031215611463575f5ffd5b5035919050565b5f5f6040838503121561147b575f5ffd5b50508035926020909101359150565b5f5f6020838503121561149b575f5ffd5b823567ffffffffffffffff8111156114b1575f5ffd5b8301601f810185136114c1575f5ffd5b803567ffffffffffffffff8111156114d7575f5ffd5b8560208260051b84010111156114eb575f5ffd5b6020919091019590945092505050565b5f5f5f6060848603121561150d575f5ffd5b505081359360208301359350604090920135919050565b80356001600160a01b038116811461153a575f5ffd5b919050565b5f5f60408385031215611550575f5ffd5b61155983611524565b946020939093013593505050565b5f5f60408385031215611578575f5ffd5b82356001600160601b0381168114611559575f5ffd5b5f6020828403121561159e575f5ffd5b6115a782611524565b9392505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156115d5576115d56115ae565b92915050565b5f826115f557634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156115d5576115d56115ae565b634e487b7160e01b5f52603260045260245ffd5b80820281158282048414176115d5576115d56115ae565b5f60208284031215611648575f5ffd5b5051919050565b6001600160601b0381811683821601908111156115d5576115d56115ae565b5f6001820161167f5761167f6115ae565b506001019056fea2646970667358221220a86d218e0601a27a13e9ac69315a81a71f07dd0a08f8464db62e06291793ff9e64736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 DUP2 SSTORE PUSH1 0x5 SSTORE PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x26 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x185A CODESIZE SUB DUP1 PUSH2 0x185A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x45 SWAP2 PUSH2 0xFE JUMP JUMPDEST CALLER DUP1 PUSH2 0x6A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x73 DUP2 PUSH2 0x94 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x80 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0xA0 MSTORE PUSH1 0x3 SSTORE PUSH1 0x2 SSTORE PUSH2 0x13E JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x111 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11A DUP6 PUSH2 0xE3 JUMP JUMPDEST SWAP4 POP PUSH2 0x128 PUSH1 0x20 DUP7 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x16BC PUSH2 0x19E PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x238 ADD MSTORE DUP2 DUP2 PUSH2 0x2B8 ADD MSTORE DUP2 DUP2 PUSH2 0x5FB ADD MSTORE DUP2 DUP2 PUSH2 0xB6D ADD MSTORE DUP2 DUP2 PUSH2 0xE3C ADD MSTORE PUSH2 0xF08 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1D1 ADD MSTORE DUP2 DUP2 PUSH2 0x375 ADD MSTORE DUP2 DUP2 PUSH2 0x838 ADD MSTORE DUP2 DUP2 PUSH2 0xAD3 ADD MSTORE PUSH2 0x10A8 ADD MSTORE PUSH2 0x16BC PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB109BEEC GT PUSH2 0xDD JUMPI DUP1 PUSH4 0xCE325BF8 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xD6EF7AF0 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD6EF7AF0 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xD93C04A0 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xCE325BF8 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xD2D7231F EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xD46149A2 EQ PUSH2 0x373 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xBC854352 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xBC854352 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xBECEED39 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xC9EA62C1 EQ PUSH2 0x310 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xB109BEEC EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xB5FA91FE EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0xB6BAFFE3 EQ PUSH2 0x2E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7C2FDEB5 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x8F4729B7 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x8F4729B7 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xAC00500F EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xAF7568DD EQ PUSH2 0x2AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7C2FDEB5 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x8E12C0CD EQ PUSH2 0x26C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6DB08F25 GT PUSH2 0x16D JUMPI DUP1 PUSH4 0x6DB08F25 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x75F12B21 EQ PUSH2 0x213 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7DA68F5 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x109CF399 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x1B9 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x19B PUSH2 0x3E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH2 0x1F3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B0 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x681 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x226 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B0 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1F3 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x276 PUSH3 0xED4E00 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B0 JUMP JUMPDEST PUSH2 0x1A6 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH2 0x1A6 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x19B PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x148A JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x336 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1B0 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1B0 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x158E JUMP JUMPDEST PUSH2 0x1219 JUMP JUMPDEST PUSH2 0x3EF PUSH2 0x126F JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7ACC84E34091AE817647A4C49116F5CC07F319078BA80F8F5FDE37EA7E25CBD6 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x457 JUMPI POP PUSH1 0x5 SLOAD DUP2 LT JUMPDEST PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x50E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A43616C6C6572206973206E6F7420746865206F776E657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4561726C79205769746864726177616C206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7065726D69747465642100000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4E6F7468696E6720746F20636C61696D0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x62A PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x12B4 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x67BB155FCABB99400C32B640DC7704C8F18AAE4C817704C7267C5A8CD26DFC19 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x689 PUSH2 0x126F JUMP JUMPDEST PUSH2 0x692 PUSH0 PUSH2 0x1328 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x69C PUSH2 0x126F JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x6AD JUMPI POP PUSH1 0x5 SLOAD DUP2 LT JUMPDEST PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x68616E207A65726F21 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4275726E7420746F6B656E73210000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP4 GT ISZERO PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0x85F CALLER PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x872 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH2 0x8DF SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x8F1 PUSH2 0x126F JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA7E JUMPI PUSH1 0x5 SLOAD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x911 JUMPI PUSH2 0x911 PUSH2 0x160D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x97B JUMPI PUSH2 0x97B PUSH2 0x160D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0xA00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4275726E7420746F6B656E73210000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xA0F SWAP1 DUP5 PUSH2 0x15FA JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP4 ADD SSTORE SWAP3 POP PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA4A JUMPI PUSH2 0xA4A PUSH2 0x160D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xA6D SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 ADD PUSH2 0x8F4 JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A546F74616C20616D6F756E74206973203021000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0xB02 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x12B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x68616E207A65726F21 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0xB9D PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x138F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xBDB PUSH2 0x126F JUMP JUMPDEST PUSH1 0x2 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x3 SSTORE PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP5 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xBFE JUMPI POP PUSH1 0x5 SLOAD DUP2 LT JUMPDEST PUSH2 0xC4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST POP POP POP PUSH0 SWAP3 DUP4 MSTORE POP POP PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP4 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 SWAP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 DUP4 PUSH1 0x1 SLOAD PUSH2 0xCA5 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD DUP4 PUSH2 0xCC9 SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST SWAP1 POP DUP1 DUP3 SUB PUSH2 0xCF3 JUMPI PUSH1 0x2 SLOAD PUSH2 0xCDF SWAP1 DUP4 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0xCE9 SWAP1 DUP8 PUSH2 0x15DB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD DUP4 PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD DUP6 PUSH1 0x1 PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0xD29 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0xD33 SWAP1 DUP8 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD DUP4 PUSH2 0xD4E SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xD5B SWAP1 DUP6 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0xD65 SWAP1 DUP8 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0xD6F SWAP1 DUP9 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0xD79 SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0xD88 DUP7 PUSH1 0x1 PUSH2 0x15FA JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x2 SLOAD PUSH2 0xDA0 SWAP1 DUP3 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xDAD SWAP1 DUP11 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0xDB7 SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH2 0xDC1 SWAP1 DUP4 PUSH2 0x15FA JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0xD8B JUMP JUMPDEST POP DUP7 DUP3 PUSH2 0xDD8 DUP4 DUP7 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0xDE2 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0xDEC SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE01 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xE0E SWAP1 DUP3 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE89 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEAD SWAP2 SWAP1 PUSH2 0x1638 JUMP JUMPDEST LT ISZERO PUSH2 0xEFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0xF2F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0x12B4 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF6A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A53544F505045442100000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x1047 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A5374616B6520616D6F756E74206D75737420626520677265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61746572207468616E2030210000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH3 0xED4E00 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND LT ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A557365206C6F6E676572206C6F636B5F706572696F642100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0x10D8 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x138F JUMP JUMPDEST PUSH0 PUSH2 0x10E3 DUP6 TIMESTAMP PUSH2 0x164F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x10EF DUP6 PUSH2 0xC89 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1109 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP8 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 SWAP5 DUP6 ADD DUP9 SWAP1 MSTORE PUSH0 DUP8 DUP2 MSTORE PUSH1 0x4 DUP4 MSTORE DUP2 DUP2 KECCAK256 DUP8 MLOAD SWAP4 DUP9 ADD MLOAD SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL SWAP3 SWAP1 SWAP5 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE DUP5 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP4 SWAP1 SWAP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP2 SLOAD DUP9 SWAP3 SWAP2 SWAP1 PUSH2 0x1189 SWAP1 DUP5 SWAP1 PUSH2 0x15FA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11A1 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x24FE2D25C10EB2C67B5AC1E3EDBCADC94191E154ED388AD667A9480C44F47146 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH1 0x5 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x1207 DUP4 PUSH2 0x166E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP8 SWAP2 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1221 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0x126C DUP2 PUSH2 0x1328 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xB02 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x13CE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x13C8 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x12E1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x13ED JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x1404 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x13C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1463 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x147B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x14C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x14EB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x150D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x153A JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1550 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1559 DUP4 PUSH2 0x1524 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1578 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1559 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15A7 DUP3 PUSH2 0x1524 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x15D5 JUMPI PUSH2 0x15D5 PUSH2 0x15AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x15F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x15D5 JUMPI PUSH2 0x15D5 PUSH2 0x15AE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x15D5 JUMPI PUSH2 0x15D5 PUSH2 0x15AE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1648 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x15D5 JUMPI PUSH2 0x15D5 PUSH2 0x15AE JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x167F JUMPI PUSH2 0x167F PUSH2 0x15AE JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 PUSH14 0x218E0601A27A13E9AC69315A81A7 0x1F SMOD 0xDD EXP ADDMOD EXTCALL CHAINID 0x4D 0xB6 0x2E MOD 0x29 OR SWAP4 SELFDESTRUCT SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "278:7191:8:-:0;;;530:5;508:27;;-1:-1:-1;;;;508:27:8;;;;592:28;;;848:29;;884:32;;1414:302;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:6;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;861:51:10;834:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;1553:27:8;;::::1;;::::0;1591:29;;;::::1;;::::0;1631:19:::1;:42:::0;1684:10:::1;:24:::0;278:7191;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:10:-;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:514::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;580:2;565:18;;559:25;674:2;659:18;;;653:25;196:514;;459:59;;-1:-1:-1;196:514:10;-1:-1:-1;;;196:514:10:o;715:203::-;278:7191:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CREDI_860": {
									"entryPoint": null,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DIFFICULTY_INTERVAL_857": {
									"entryPoint": null,
									"id": 857,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MATURITY_850": {
									"entryPoint": null,
									"id": 850,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_737": {
									"entryPoint": 5070,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4719,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 4904,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRewards_1518": {
									"entryPoint": 2823,
									"id": 1518,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@batchWithdrawCREDI_1489": {
									"entryPoint": 2281,
									"id": 1489,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculateReward_1156": {
									"entryPoint": 3209,
									"id": 1156,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claim_1338": {
									"entryPoint": 1093,
									"id": 1338,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCREDIAddress_972": {
									"entryPoint": null,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDifficulty_1168": {
									"entryPoint": 2251,
									"id": 1168,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStake_1028": {
									"entryPoint": 3049,
									"id": 1028,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@getStakesCount_993": {
									"entryPoint": 2230,
									"id": 993,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getxCREDIAddress_983": {
									"entryPoint": null,
									"id": 983,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pending_payments_874": {
									"entryPoint": null,
									"id": 874,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1665,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_387": {
									"entryPoint": 5007,
									"id": 387,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_360": {
									"entryPoint": 4788,
									"id": 360,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setDifficulty_1579": {
									"entryPoint": 3027,
									"id": 1579,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_1265": {
									"entryPoint": 3958,
									"id": 1265,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@stop_1592": {
									"entryPoint": 999,
									"id": 1592,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopped_847": {
									"entryPoint": null,
									"id": 847,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@time_now_1040": {
									"entryPoint": null,
									"id": 1040,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@total_staked_853": {
									"entryPoint": null,
									"id": 853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4633,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawCREDI_1402": {
									"entryPoint": 1684,
									"id": 1402,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawRewards_1555": {
									"entryPoint": 3577,
									"id": 1555,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@xCREDI_863": {
									"entryPoint": null,
									"id": 863,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 5258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 5371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint96t_uint256": {
									"entryPoint": 5479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ae6e0d54110718e95446f0f4e86565c7e5f169a2d3f15682ce13c35e6dce1a0a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint96": {
									"entryPoint": 5711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5645,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11416:10",
										"nodeType": "YulBlock",
										"src": "0:11416:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:10",
													"nodeType": "YulBlock",
													"src": "115:76:10",
													"statements": [
														{
															"nativeSrc": "125:26:10",
															"nodeType": "YulAssignment",
															"src": "125:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:10",
																		"nodeType": "YulLiteral",
																		"src": "148:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:10"
																},
																"nativeSrc": "133:18:10",
																"nodeType": "YulFunctionCall",
																"src": "133:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:10"
																},
																"nativeSrc": "160:25:10",
																"nodeType": "YulFunctionCall",
																"src": "160:25:10"
															},
															"nativeSrc": "160:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:10",
														"nodeType": "YulTypedName",
														"src": "84:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:10",
														"nodeType": "YulTypedName",
														"src": "95:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:10",
														"nodeType": "YulTypedName",
														"src": "106:4:10",
														"type": ""
													}
												],
												"src": "14:177:10"
											},
											{
												"body": {
													"nativeSrc": "266:156:10",
													"nodeType": "YulBlock",
													"src": "266:156:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "312:16:10",
																"nodeType": "YulBlock",
																"src": "312:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "321:1:10",
																					"nodeType": "YulLiteral",
																					"src": "321:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "324:1:10",
																					"nodeType": "YulLiteral",
																					"src": "324:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "314:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:10"
																			},
																			"nativeSrc": "314:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:10"
																		},
																		"nativeSrc": "314:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "287:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "296:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "283:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:10"
																		},
																		"nativeSrc": "283:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "308:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "279:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:10"
																},
																"nativeSrc": "279:32:10",
																"nodeType": "YulFunctionCall",
																"src": "279:32:10"
															},
															"nativeSrc": "276:52:10",
															"nodeType": "YulIf",
															"src": "276:52:10"
														},
														{
															"nativeSrc": "337:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "337:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "350:1:10",
																"nodeType": "YulLiteral",
																"src": "350:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "341:5:10",
																	"nodeType": "YulTypedName",
																	"src": "341:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "360:32:10",
															"nodeType": "YulAssignment",
															"src": "360:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "382:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "382:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "369:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "369:12:10"
																},
																"nativeSrc": "369:23:10",
																"nodeType": "YulFunctionCall",
																"src": "369:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "360:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:10"
																}
															]
														},
														{
															"nativeSrc": "401:15:10",
															"nodeType": "YulAssignment",
															"src": "401:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "411:5:10",
																"nodeType": "YulIdentifier",
																"src": "411:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "401:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "401:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "196:226:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "232:9:10",
														"nodeType": "YulTypedName",
														"src": "232:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "243:7:10",
														"nodeType": "YulTypedName",
														"src": "243:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "255:6:10",
														"nodeType": "YulTypedName",
														"src": "255:6:10",
														"type": ""
													}
												],
												"src": "196:226:10"
											},
											{
												"body": {
													"nativeSrc": "542:125:10",
													"nodeType": "YulBlock",
													"src": "542:125:10",
													"statements": [
														{
															"nativeSrc": "552:26:10",
															"nodeType": "YulAssignment",
															"src": "552:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "564:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "564:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "575:2:10",
																		"nodeType": "YulLiteral",
																		"src": "575:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "560:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "560:3:10"
																},
																"nativeSrc": "560:18:10",
																"nodeType": "YulFunctionCall",
																"src": "560:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "552:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "552:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "594:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "594:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "609:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "609:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "617:42:10",
																				"nodeType": "YulLiteral",
																				"src": "617:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "605:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "605:3:10"
																		},
																		"nativeSrc": "605:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "605:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "587:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:10"
																},
																"nativeSrc": "587:74:10",
																"nodeType": "YulFunctionCall",
																"src": "587:74:10"
															},
															"nativeSrc": "587:74:10",
															"nodeType": "YulExpressionStatement",
															"src": "587:74:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed",
												"nativeSrc": "427:240:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "511:9:10",
														"nodeType": "YulTypedName",
														"src": "511:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "522:6:10",
														"nodeType": "YulTypedName",
														"src": "522:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "533:4:10",
														"nodeType": "YulTypedName",
														"src": "533:4:10",
														"type": ""
													}
												],
												"src": "427:240:10"
											},
											{
												"body": {
													"nativeSrc": "767:92:10",
													"nodeType": "YulBlock",
													"src": "767:92:10",
													"statements": [
														{
															"nativeSrc": "777:26:10",
															"nodeType": "YulAssignment",
															"src": "777:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "789:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "789:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "800:2:10",
																		"nodeType": "YulLiteral",
																		"src": "800:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "785:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:10"
																},
																"nativeSrc": "785:18:10",
																"nodeType": "YulFunctionCall",
																"src": "785:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "777:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "777:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "819:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "819:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "844:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "844:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "837:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "837:6:10"
																				},
																				"nativeSrc": "837:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "837:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "830:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "830:6:10"
																		},
																		"nativeSrc": "830:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "830:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "812:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "812:6:10"
																},
																"nativeSrc": "812:41:10",
																"nodeType": "YulFunctionCall",
																"src": "812:41:10"
															},
															"nativeSrc": "812:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "812:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "672:187:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "736:9:10",
														"nodeType": "YulTypedName",
														"src": "736:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "747:6:10",
														"nodeType": "YulTypedName",
														"src": "747:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "758:4:10",
														"nodeType": "YulTypedName",
														"src": "758:4:10",
														"type": ""
													}
												],
												"src": "672:187:10"
											},
											{
												"body": {
													"nativeSrc": "965:125:10",
													"nodeType": "YulBlock",
													"src": "965:125:10",
													"statements": [
														{
															"nativeSrc": "975:26:10",
															"nodeType": "YulAssignment",
															"src": "975:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "987:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "987:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:10",
																		"nodeType": "YulLiteral",
																		"src": "998:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "983:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "983:3:10"
																},
																"nativeSrc": "983:18:10",
																"nodeType": "YulFunctionCall",
																"src": "983:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "975:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "975:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1017:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1017:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1032:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1032:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1040:42:10",
																				"nodeType": "YulLiteral",
																				"src": "1040:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1028:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1028:3:10"
																		},
																		"nativeSrc": "1028:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1028:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1010:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1010:6:10"
																},
																"nativeSrc": "1010:74:10",
																"nodeType": "YulFunctionCall",
																"src": "1010:74:10"
															},
															"nativeSrc": "1010:74:10",
															"nodeType": "YulExpressionStatement",
															"src": "1010:74:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "864:226:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "934:9:10",
														"nodeType": "YulTypedName",
														"src": "934:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "945:6:10",
														"nodeType": "YulTypedName",
														"src": "945:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "956:4:10",
														"nodeType": "YulTypedName",
														"src": "956:4:10",
														"type": ""
													}
												],
												"src": "864:226:10"
											},
											{
												"body": {
													"nativeSrc": "1194:109:10",
													"nodeType": "YulBlock",
													"src": "1194:109:10",
													"statements": [
														{
															"nativeSrc": "1204:26:10",
															"nodeType": "YulAssignment",
															"src": "1204:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1216:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1216:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1227:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1227:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1212:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1212:3:10"
																},
																"nativeSrc": "1212:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1212:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1204:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1204:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1246:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1246:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1261:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1261:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1269:26:10",
																				"nodeType": "YulLiteral",
																				"src": "1269:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1257:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1257:3:10"
																		},
																		"nativeSrc": "1257:39:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1257:39:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1239:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:10"
																},
																"nativeSrc": "1239:58:10",
																"nodeType": "YulFunctionCall",
																"src": "1239:58:10"
															},
															"nativeSrc": "1239:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "1239:58:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
												"nativeSrc": "1095:208:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1163:9:10",
														"nodeType": "YulTypedName",
														"src": "1163:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1174:6:10",
														"nodeType": "YulTypedName",
														"src": "1174:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1185:4:10",
														"nodeType": "YulTypedName",
														"src": "1185:4:10",
														"type": ""
													}
												],
												"src": "1095:208:10"
											},
											{
												"body": {
													"nativeSrc": "1395:259:10",
													"nodeType": "YulBlock",
													"src": "1395:259:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1441:16:10",
																"nodeType": "YulBlock",
																"src": "1441:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1450:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1450:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1443:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1443:6:10"
																			},
																			"nativeSrc": "1443:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1443:12:10"
																		},
																		"nativeSrc": "1443:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1443:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1416:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1416:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1425:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1412:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1412:3:10"
																		},
																		"nativeSrc": "1412:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1412:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1437:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1437:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1408:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1408:3:10"
																},
																"nativeSrc": "1408:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1408:32:10"
															},
															"nativeSrc": "1405:52:10",
															"nodeType": "YulIf",
															"src": "1405:52:10"
														},
														{
															"nativeSrc": "1466:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1466:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1479:1:10",
																"nodeType": "YulLiteral",
																"src": "1479:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1470:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1470:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1489:32:10",
															"nodeType": "YulAssignment",
															"src": "1489:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1511:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1511:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1498:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1498:12:10"
																},
																"nativeSrc": "1498:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1498:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1489:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1489:5:10"
																}
															]
														},
														{
															"nativeSrc": "1530:15:10",
															"nodeType": "YulAssignment",
															"src": "1530:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1540:5:10",
																"nodeType": "YulIdentifier",
																"src": "1540:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1530:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1530:6:10"
																}
															]
														},
														{
															"nativeSrc": "1554:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1554:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1569:1:10",
																"nodeType": "YulLiteral",
																"src": "1569:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1558:7:10",
																	"nodeType": "YulTypedName",
																	"src": "1558:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1579:43:10",
															"nodeType": "YulAssignment",
															"src": "1579:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1607:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1607:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1618:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1618:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1603:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1603:3:10"
																		},
																		"nativeSrc": "1603:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1603:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1590:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1590:12:10"
																},
																"nativeSrc": "1590:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1590:32:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1579:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1579:7:10"
																}
															]
														},
														{
															"nativeSrc": "1631:17:10",
															"nodeType": "YulAssignment",
															"src": "1631:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "1641:7:10",
																"nodeType": "YulIdentifier",
																"src": "1641:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1631:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1631:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1308:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1353:9:10",
														"nodeType": "YulTypedName",
														"src": "1353:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1364:7:10",
														"nodeType": "YulTypedName",
														"src": "1364:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1376:6:10",
														"nodeType": "YulTypedName",
														"src": "1376:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1384:6:10",
														"nodeType": "YulTypedName",
														"src": "1384:6:10",
														"type": ""
													}
												],
												"src": "1308:346:10"
											},
											{
												"body": {
													"nativeSrc": "1764:505:10",
													"nodeType": "YulBlock",
													"src": "1764:505:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1810:16:10",
																"nodeType": "YulBlock",
																"src": "1810:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1819:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1819:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1822:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1822:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1812:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1812:6:10"
																			},
																			"nativeSrc": "1812:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1812:12:10"
																		},
																		"nativeSrc": "1812:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1812:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1785:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1785:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1794:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1794:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1781:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1781:3:10"
																		},
																		"nativeSrc": "1781:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1781:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1806:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1806:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1777:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1777:3:10"
																},
																"nativeSrc": "1777:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1777:32:10"
															},
															"nativeSrc": "1774:52:10",
															"nodeType": "YulIf",
															"src": "1774:52:10"
														},
														{
															"nativeSrc": "1835:37:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1835:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1862:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1862:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1849:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1849:12:10"
																},
																"nativeSrc": "1849:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1849:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1839:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1839:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1915:16:10",
																"nodeType": "YulBlock",
																"src": "1915:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1924:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1924:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1927:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1927:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1917:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1917:6:10"
																			},
																			"nativeSrc": "1917:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1917:12:10"
																		},
																		"nativeSrc": "1917:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1917:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1887:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1895:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1895:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1884:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1884:2:10"
																},
																"nativeSrc": "1884:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1884:30:10"
															},
															"nativeSrc": "1881:50:10",
															"nodeType": "YulIf",
															"src": "1881:50:10"
														},
														{
															"nativeSrc": "1940:32:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1940:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1954:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1954:9:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1965:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1965:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1950:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1950:3:10"
																},
																"nativeSrc": "1950:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1950:22:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1944:2:10",
																	"nodeType": "YulTypedName",
																	"src": "1944:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2020:16:10",
																"nodeType": "YulBlock",
																"src": "2020:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2029:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2029:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2032:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2032:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2022:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2022:6:10"
																			},
																			"nativeSrc": "2022:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2022:12:10"
																		},
																		"nativeSrc": "2022:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2022:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1999:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "1999:2:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2003:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2003:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1995:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1995:3:10"
																				},
																				"nativeSrc": "1995:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1995:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2010:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2010:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1991:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1991:3:10"
																		},
																		"nativeSrc": "1991:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1991:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1984:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1984:6:10"
																},
																"nativeSrc": "1984:35:10",
																"nodeType": "YulFunctionCall",
																"src": "1984:35:10"
															},
															"nativeSrc": "1981:55:10",
															"nodeType": "YulIf",
															"src": "1981:55:10"
														},
														{
															"nativeSrc": "2045:30:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2045:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2072:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "2072:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2059:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2059:12:10"
																},
																"nativeSrc": "2059:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2059:16:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2049:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2049:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2118:16:10",
																"nodeType": "YulBlock",
																"src": "2118:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2127:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2127:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2130:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2130:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2120:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2120:6:10"
																			},
																			"nativeSrc": "2120:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2120:12:10"
																		},
																		"nativeSrc": "2120:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2120:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2090:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2090:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2098:18:10",
																		"nodeType": "YulLiteral",
																		"src": "2098:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2087:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2087:2:10"
																},
																"nativeSrc": "2087:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2087:30:10"
															},
															"nativeSrc": "2084:50:10",
															"nodeType": "YulIf",
															"src": "2084:50:10"
														},
														{
															"body": {
																"nativeSrc": "2192:16:10",
																"nodeType": "YulBlock",
																"src": "2192:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2201:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2201:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2204:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2204:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2194:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2194:6:10"
																			},
																			"nativeSrc": "2194:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2194:12:10"
																		},
																		"nativeSrc": "2194:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2194:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2157:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "2157:2:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2165:1:10",
																								"nodeType": "YulLiteral",
																								"src": "2165:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "2168:6:10",
																								"nodeType": "YulIdentifier",
																								"src": "2168:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2161:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2161:3:10"
																						},
																						"nativeSrc": "2161:14:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2161:14:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2153:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2153:3:10"
																				},
																				"nativeSrc": "2153:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2153:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2178:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2178:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2149:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2149:3:10"
																		},
																		"nativeSrc": "2149:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2149:32:10"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2183:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "2183:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2146:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2146:2:10"
																},
																"nativeSrc": "2146:45:10",
																"nodeType": "YulFunctionCall",
																"src": "2146:45:10"
															},
															"nativeSrc": "2143:65:10",
															"nodeType": "YulIf",
															"src": "2143:65:10"
														},
														{
															"nativeSrc": "2217:21:10",
															"nodeType": "YulAssignment",
															"src": "2217:21:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2231:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "2231:2:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2235:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2235:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2227:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2227:3:10"
																},
																"nativeSrc": "2227:11:10",
																"nodeType": "YulFunctionCall",
																"src": "2227:11:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2217:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2217:6:10"
																}
															]
														},
														{
															"nativeSrc": "2247:16:10",
															"nodeType": "YulAssignment",
															"src": "2247:16:10",
															"value": {
																"name": "length",
																"nativeSrc": "2257:6:10",
																"nodeType": "YulIdentifier",
																"src": "2257:6:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2247:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "1659:610:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1722:9:10",
														"nodeType": "YulTypedName",
														"src": "1722:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1733:7:10",
														"nodeType": "YulTypedName",
														"src": "1733:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1745:6:10",
														"nodeType": "YulTypedName",
														"src": "1745:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1753:6:10",
														"nodeType": "YulTypedName",
														"src": "1753:6:10",
														"type": ""
													}
												],
												"src": "1659:610:10"
											},
											{
												"body": {
													"nativeSrc": "2378:362:10",
													"nodeType": "YulBlock",
													"src": "2378:362:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2424:16:10",
																"nodeType": "YulBlock",
																"src": "2424:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2433:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2433:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2436:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2436:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2426:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2426:6:10"
																			},
																			"nativeSrc": "2426:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2426:12:10"
																		},
																		"nativeSrc": "2426:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2426:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2399:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2399:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2408:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2408:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2395:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2395:3:10"
																		},
																		"nativeSrc": "2395:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2395:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2420:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2420:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2391:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2391:3:10"
																},
																"nativeSrc": "2391:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2391:32:10"
															},
															"nativeSrc": "2388:52:10",
															"nodeType": "YulIf",
															"src": "2388:52:10"
														},
														{
															"nativeSrc": "2449:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2449:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2462:1:10",
																"nodeType": "YulLiteral",
																"src": "2462:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2453:5:10",
																	"nodeType": "YulTypedName",
																	"src": "2453:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2472:32:10",
															"nodeType": "YulAssignment",
															"src": "2472:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2494:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2494:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2481:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2481:12:10"
																},
																"nativeSrc": "2481:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2481:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2472:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2472:5:10"
																}
															]
														},
														{
															"nativeSrc": "2513:15:10",
															"nodeType": "YulAssignment",
															"src": "2513:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "2523:5:10",
																"nodeType": "YulIdentifier",
																"src": "2523:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2513:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2513:6:10"
																}
															]
														},
														{
															"nativeSrc": "2537:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2537:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2552:1:10",
																"nodeType": "YulLiteral",
																"src": "2552:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2541:7:10",
																	"nodeType": "YulTypedName",
																	"src": "2541:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2562:43:10",
															"nodeType": "YulAssignment",
															"src": "2562:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2590:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2590:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2601:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2601:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2586:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2586:3:10"
																		},
																		"nativeSrc": "2586:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2586:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2573:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2573:12:10"
																},
																"nativeSrc": "2573:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2573:32:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "2562:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2562:7:10"
																}
															]
														},
														{
															"nativeSrc": "2614:17:10",
															"nodeType": "YulAssignment",
															"src": "2614:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "2624:7:10",
																"nodeType": "YulIdentifier",
																"src": "2624:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2614:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2614:6:10"
																}
															]
														},
														{
															"nativeSrc": "2640:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2640:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2655:1:10",
																"nodeType": "YulLiteral",
																"src": "2655:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2644:7:10",
																	"nodeType": "YulTypedName",
																	"src": "2644:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2665:43:10",
															"nodeType": "YulAssignment",
															"src": "2665:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2693:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2693:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2704:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2704:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2689:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2689:3:10"
																		},
																		"nativeSrc": "2689:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2689:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2676:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2676:12:10"
																},
																"nativeSrc": "2676:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2676:32:10"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "2665:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2665:7:10"
																}
															]
														},
														{
															"nativeSrc": "2717:17:10",
															"nodeType": "YulAssignment",
															"src": "2717:17:10",
															"value": {
																"name": "value_2",
																"nativeSrc": "2727:7:10",
																"nodeType": "YulIdentifier",
																"src": "2727:7:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2717:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2717:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "2274:466:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2328:9:10",
														"nodeType": "YulTypedName",
														"src": "2328:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2339:7:10",
														"nodeType": "YulTypedName",
														"src": "2339:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2351:6:10",
														"nodeType": "YulTypedName",
														"src": "2351:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2359:6:10",
														"nodeType": "YulTypedName",
														"src": "2359:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2367:6:10",
														"nodeType": "YulTypedName",
														"src": "2367:6:10",
														"type": ""
													}
												],
												"src": "2274:466:10"
											},
											{
												"body": {
													"nativeSrc": "2930:255:10",
													"nodeType": "YulBlock",
													"src": "2930:255:10",
													"statements": [
														{
															"nativeSrc": "2940:27:10",
															"nodeType": "YulAssignment",
															"src": "2940:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2952:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2952:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2963:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2963:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2948:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2948:3:10"
																},
																"nativeSrc": "2948:19:10",
																"nodeType": "YulFunctionCall",
																"src": "2948:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2940:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2940:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2983:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2983:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2998:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2998:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3006:42:10",
																				"nodeType": "YulLiteral",
																				"src": "3006:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2994:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2994:3:10"
																		},
																		"nativeSrc": "2994:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2994:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2976:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2976:6:10"
																},
																"nativeSrc": "2976:74:10",
																"nodeType": "YulFunctionCall",
																"src": "2976:74:10"
															},
															"nativeSrc": "2976:74:10",
															"nodeType": "YulExpressionStatement",
															"src": "2976:74:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3070:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3070:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3081:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3081:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3066:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3066:3:10"
																		},
																		"nativeSrc": "3066:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3066:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3086:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3086:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3059:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3059:6:10"
																},
																"nativeSrc": "3059:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3059:34:10"
															},
															"nativeSrc": "3059:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3059:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3113:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3113:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3124:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3124:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3109:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3109:3:10"
																		},
																		"nativeSrc": "3109:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3109:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3129:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3129:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3102:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3102:6:10"
																},
																"nativeSrc": "3102:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3102:34:10"
															},
															"nativeSrc": "3102:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3102:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3156:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3156:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3167:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3167:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3152:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3152:3:10"
																		},
																		"nativeSrc": "3152:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3152:18:10"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3172:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3172:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3145:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3145:6:10"
																},
																"nativeSrc": "3145:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3145:34:10"
															},
															"nativeSrc": "3145:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3145:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2745:440:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2875:9:10",
														"nodeType": "YulTypedName",
														"src": "2875:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2886:6:10",
														"nodeType": "YulTypedName",
														"src": "2886:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2894:6:10",
														"nodeType": "YulTypedName",
														"src": "2894:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2902:6:10",
														"nodeType": "YulTypedName",
														"src": "2902:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2910:6:10",
														"nodeType": "YulTypedName",
														"src": "2910:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2921:4:10",
														"nodeType": "YulTypedName",
														"src": "2921:4:10",
														"type": ""
													}
												],
												"src": "2745:440:10"
											},
											{
												"body": {
													"nativeSrc": "3239:147:10",
													"nodeType": "YulBlock",
													"src": "3239:147:10",
													"statements": [
														{
															"nativeSrc": "3249:29:10",
															"nodeType": "YulAssignment",
															"src": "3249:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3271:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3271:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3258:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3258:12:10"
																},
																"nativeSrc": "3258:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3258:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3249:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3249:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3364:16:10",
																"nodeType": "YulBlock",
																"src": "3364:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3373:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3373:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3376:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3376:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3366:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3366:6:10"
																			},
																			"nativeSrc": "3366:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3366:12:10"
																		},
																		"nativeSrc": "3366:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3366:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3300:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3300:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3311:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3311:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3318:42:10",
																						"nodeType": "YulLiteral",
																						"src": "3318:42:10",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3307:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3307:3:10"
																				},
																				"nativeSrc": "3307:54:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3307:54:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3297:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3297:2:10"
																		},
																		"nativeSrc": "3297:65:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3297:65:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3290:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:10"
																},
																"nativeSrc": "3290:73:10",
																"nodeType": "YulFunctionCall",
																"src": "3290:73:10"
															},
															"nativeSrc": "3287:93:10",
															"nodeType": "YulIf",
															"src": "3287:93:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "3190:196:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3218:6:10",
														"nodeType": "YulTypedName",
														"src": "3218:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3229:5:10",
														"nodeType": "YulTypedName",
														"src": "3229:5:10",
														"type": ""
													}
												],
												"src": "3190:196:10"
											},
											{
												"body": {
													"nativeSrc": "3478:213:10",
													"nodeType": "YulBlock",
													"src": "3478:213:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3524:16:10",
																"nodeType": "YulBlock",
																"src": "3524:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3533:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3533:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3536:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3536:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3526:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3526:6:10"
																			},
																			"nativeSrc": "3526:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3526:12:10"
																		},
																		"nativeSrc": "3526:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3526:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3499:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3499:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3508:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3508:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3495:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3495:3:10"
																		},
																		"nativeSrc": "3495:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3495:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3520:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3520:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3491:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3491:3:10"
																},
																"nativeSrc": "3491:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3491:32:10"
															},
															"nativeSrc": "3488:52:10",
															"nodeType": "YulIf",
															"src": "3488:52:10"
														},
														{
															"nativeSrc": "3549:39:10",
															"nodeType": "YulAssignment",
															"src": "3549:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3578:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3578:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3559:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3559:18:10"
																},
																"nativeSrc": "3559:29:10",
																"nodeType": "YulFunctionCall",
																"src": "3559:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3549:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3549:6:10"
																}
															]
														},
														{
															"nativeSrc": "3597:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3597:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3610:1:10",
																"nodeType": "YulLiteral",
																"src": "3610:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3601:5:10",
																	"nodeType": "YulTypedName",
																	"src": "3601:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3620:41:10",
															"nodeType": "YulAssignment",
															"src": "3620:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3646:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3646:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3657:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3657:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3642:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:10"
																		},
																		"nativeSrc": "3642:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3642:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3629:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3629:12:10"
																},
																"nativeSrc": "3629:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3629:32:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3620:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3620:5:10"
																}
															]
														},
														{
															"nativeSrc": "3670:15:10",
															"nodeType": "YulAssignment",
															"src": "3670:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "3680:5:10",
																"nodeType": "YulIdentifier",
																"src": "3680:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3670:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3391:300:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3436:9:10",
														"nodeType": "YulTypedName",
														"src": "3436:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3447:7:10",
														"nodeType": "YulTypedName",
														"src": "3447:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3459:6:10",
														"nodeType": "YulTypedName",
														"src": "3459:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3467:6:10",
														"nodeType": "YulTypedName",
														"src": "3467:6:10",
														"type": ""
													}
												],
												"src": "3391:300:10"
											},
											{
												"body": {
													"nativeSrc": "3782:326:10",
													"nodeType": "YulBlock",
													"src": "3782:326:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3828:16:10",
																"nodeType": "YulBlock",
																"src": "3828:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3837:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3837:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3840:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3840:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3830:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3830:6:10"
																			},
																			"nativeSrc": "3830:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3830:12:10"
																		},
																		"nativeSrc": "3830:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3830:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3803:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3803:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3812:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3812:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3799:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3799:3:10"
																		},
																		"nativeSrc": "3799:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3799:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3824:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3824:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3795:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3795:3:10"
																},
																"nativeSrc": "3795:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3795:32:10"
															},
															"nativeSrc": "3792:52:10",
															"nodeType": "YulIf",
															"src": "3792:52:10"
														},
														{
															"nativeSrc": "3853:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3853:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3879:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3879:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3866:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3866:12:10"
																},
																"nativeSrc": "3866:23:10",
																"nodeType": "YulFunctionCall",
																"src": "3866:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3857:5:10",
																	"nodeType": "YulTypedName",
																	"src": "3857:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3959:16:10",
																"nodeType": "YulBlock",
																"src": "3959:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3968:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3968:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3971:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3971:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3961:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3961:6:10"
																			},
																			"nativeSrc": "3961:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3961:12:10"
																		},
																		"nativeSrc": "3961:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3961:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3911:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3911:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3922:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3922:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3929:26:10",
																						"nodeType": "YulLiteral",
																						"src": "3929:26:10",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3918:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3918:3:10"
																				},
																				"nativeSrc": "3918:38:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3918:38:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3908:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3908:2:10"
																		},
																		"nativeSrc": "3908:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3908:49:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3901:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3901:6:10"
																},
																"nativeSrc": "3901:57:10",
																"nodeType": "YulFunctionCall",
																"src": "3901:57:10"
															},
															"nativeSrc": "3898:77:10",
															"nodeType": "YulIf",
															"src": "3898:77:10"
														},
														{
															"nativeSrc": "3984:15:10",
															"nodeType": "YulAssignment",
															"src": "3984:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "3994:5:10",
																"nodeType": "YulIdentifier",
																"src": "3994:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3984:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3984:6:10"
																}
															]
														},
														{
															"nativeSrc": "4008:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4008:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4023:1:10",
																"nodeType": "YulLiteral",
																"src": "4023:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4012:7:10",
																	"nodeType": "YulTypedName",
																	"src": "4012:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4033:43:10",
															"nodeType": "YulAssignment",
															"src": "4033:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4061:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4061:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4072:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4072:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4057:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4057:3:10"
																		},
																		"nativeSrc": "4057:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4057:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4044:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4044:12:10"
																},
																"nativeSrc": "4044:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4044:32:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "4033:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4033:7:10"
																}
															]
														},
														{
															"nativeSrc": "4085:17:10",
															"nodeType": "YulAssignment",
															"src": "4085:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "4095:7:10",
																"nodeType": "YulIdentifier",
																"src": "4095:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4085:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4085:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_uint256",
												"nativeSrc": "3696:412:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3740:9:10",
														"nodeType": "YulTypedName",
														"src": "3740:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3751:7:10",
														"nodeType": "YulTypedName",
														"src": "3751:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3763:6:10",
														"nodeType": "YulTypedName",
														"src": "3763:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3771:6:10",
														"nodeType": "YulTypedName",
														"src": "3771:6:10",
														"type": ""
													}
												],
												"src": "3696:412:10"
											},
											{
												"body": {
													"nativeSrc": "4242:119:10",
													"nodeType": "YulBlock",
													"src": "4242:119:10",
													"statements": [
														{
															"nativeSrc": "4252:26:10",
															"nodeType": "YulAssignment",
															"src": "4252:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4264:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4264:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4275:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4275:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4260:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4260:3:10"
																},
																"nativeSrc": "4260:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4260:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4252:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4252:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4294:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4294:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4305:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4305:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4287:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4287:6:10"
																},
																"nativeSrc": "4287:25:10",
																"nodeType": "YulFunctionCall",
																"src": "4287:25:10"
															},
															"nativeSrc": "4287:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "4287:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4332:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4332:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4343:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4343:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4328:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4328:3:10"
																		},
																		"nativeSrc": "4328:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4328:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4348:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4348:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4321:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4321:6:10"
																},
																"nativeSrc": "4321:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4321:34:10"
															},
															"nativeSrc": "4321:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "4321:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4113:248:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4203:9:10",
														"nodeType": "YulTypedName",
														"src": "4203:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4214:6:10",
														"nodeType": "YulTypedName",
														"src": "4214:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4222:6:10",
														"nodeType": "YulTypedName",
														"src": "4222:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4233:4:10",
														"nodeType": "YulTypedName",
														"src": "4233:4:10",
														"type": ""
													}
												],
												"src": "4113:248:10"
											},
											{
												"body": {
													"nativeSrc": "4436:116:10",
													"nodeType": "YulBlock",
													"src": "4436:116:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4482:16:10",
																"nodeType": "YulBlock",
																"src": "4482:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4491:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4491:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4494:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4494:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4484:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4484:6:10"
																			},
																			"nativeSrc": "4484:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4484:12:10"
																		},
																		"nativeSrc": "4484:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4457:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4457:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4466:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4466:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4453:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4453:3:10"
																		},
																		"nativeSrc": "4453:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4453:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4478:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4478:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4449:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4449:3:10"
																},
																"nativeSrc": "4449:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4449:32:10"
															},
															"nativeSrc": "4446:52:10",
															"nodeType": "YulIf",
															"src": "4446:52:10"
														},
														{
															"nativeSrc": "4507:39:10",
															"nodeType": "YulAssignment",
															"src": "4507:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4536:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4536:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4517:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "4517:18:10"
																},
																"nativeSrc": "4517:29:10",
																"nodeType": "YulFunctionCall",
																"src": "4517:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4507:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4507:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4366:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4402:9:10",
														"nodeType": "YulTypedName",
														"src": "4402:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4413:7:10",
														"nodeType": "YulTypedName",
														"src": "4413:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4425:6:10",
														"nodeType": "YulTypedName",
														"src": "4425:6:10",
														"type": ""
													}
												],
												"src": "4366:186:10"
											},
											{
												"body": {
													"nativeSrc": "4731:175:10",
													"nodeType": "YulBlock",
													"src": "4731:175:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4748:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4748:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4759:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4759:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4741:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4741:6:10"
																},
																"nativeSrc": "4741:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4741:21:10"
															},
															"nativeSrc": "4741:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4741:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4782:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4782:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4793:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4793:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4778:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4778:3:10"
																		},
																		"nativeSrc": "4778:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4778:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4798:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4798:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4771:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4771:6:10"
																},
																"nativeSrc": "4771:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4771:30:10"
															},
															"nativeSrc": "4771:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4771:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4821:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4821:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4832:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4832:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4817:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4817:3:10"
																		},
																		"nativeSrc": "4817:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4817:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a496e76616c6964205374616b6520494421",
																		"kind": "string",
																		"nativeSrc": "4837:27:10",
																		"nodeType": "YulLiteral",
																		"src": "4837:27:10",
																		"type": "",
																		"value": "ModuleX:Invalid Stake ID!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4810:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4810:6:10"
																},
																"nativeSrc": "4810:55:10",
																"nodeType": "YulFunctionCall",
																"src": "4810:55:10"
															},
															"nativeSrc": "4810:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "4810:55:10"
														},
														{
															"nativeSrc": "4874:26:10",
															"nodeType": "YulAssignment",
															"src": "4874:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4886:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4886:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4897:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4897:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4882:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4882:3:10"
																},
																"nativeSrc": "4882:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4882:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4874:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4874:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4557:349:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4708:9:10",
														"nodeType": "YulTypedName",
														"src": "4708:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:10",
														"nodeType": "YulTypedName",
														"src": "4722:4:10",
														"type": ""
													}
												],
												"src": "4557:349:10"
											},
											{
												"body": {
													"nativeSrc": "5085:181:10",
													"nodeType": "YulBlock",
													"src": "5085:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5102:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5102:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5113:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5113:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5095:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5095:6:10"
																},
																"nativeSrc": "5095:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5095:21:10"
															},
															"nativeSrc": "5095:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "5095:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5136:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5136:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5147:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5147:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5132:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5132:3:10"
																		},
																		"nativeSrc": "5132:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5132:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5152:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5152:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5125:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:10"
																},
																"nativeSrc": "5125:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5125:30:10"
															},
															"nativeSrc": "5125:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "5125:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5175:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5175:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5186:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5186:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5171:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5171:3:10"
																		},
																		"nativeSrc": "5171:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5171:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "5191:33:10",
																		"nodeType": "YulLiteral",
																		"src": "5191:33:10",
																		"type": "",
																		"value": "ModuleX:Caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5164:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5164:6:10"
																},
																"nativeSrc": "5164:61:10",
																"nodeType": "YulFunctionCall",
																"src": "5164:61:10"
															},
															"nativeSrc": "5164:61:10",
															"nodeType": "YulExpressionStatement",
															"src": "5164:61:10"
														},
														{
															"nativeSrc": "5234:26:10",
															"nodeType": "YulAssignment",
															"src": "5234:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5246:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5246:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5257:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5257:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5242:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5242:3:10"
																},
																"nativeSrc": "5242:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5242:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5234:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5234:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4911:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5062:9:10",
														"nodeType": "YulTypedName",
														"src": "5062:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5076:4:10",
														"nodeType": "YulTypedName",
														"src": "5076:4:10",
														"type": ""
													}
												],
												"src": "4911:355:10"
											},
											{
												"body": {
													"nativeSrc": "5445:232:10",
													"nodeType": "YulBlock",
													"src": "5445:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5462:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5462:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5473:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5473:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5455:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5455:6:10"
																},
																"nativeSrc": "5455:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5455:21:10"
															},
															"nativeSrc": "5455:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "5455:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5496:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5507:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5507:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5492:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:10"
																		},
																		"nativeSrc": "5492:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5492:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5512:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5512:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5485:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:10"
																},
																"nativeSrc": "5485:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5485:30:10"
															},
															"nativeSrc": "5485:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "5485:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5535:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5535:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5546:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5546:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5531:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5531:3:10"
																		},
																		"nativeSrc": "5531:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5531:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a4561726c79205769746864726177616c206973206e6f7420",
																		"kind": "string",
																		"nativeSrc": "5551:34:10",
																		"nodeType": "YulLiteral",
																		"src": "5551:34:10",
																		"type": "",
																		"value": "ModuleX:Early Withdrawal is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5524:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5524:6:10"
																},
																"nativeSrc": "5524:62:10",
																"nodeType": "YulFunctionCall",
																"src": "5524:62:10"
															},
															"nativeSrc": "5524:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "5524:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5606:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5606:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5617:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5617:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5602:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5602:3:10"
																		},
																		"nativeSrc": "5602:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5602:18:10"
																	},
																	{
																		"hexValue": "7065726d697474656421",
																		"kind": "string",
																		"nativeSrc": "5622:12:10",
																		"nodeType": "YulLiteral",
																		"src": "5622:12:10",
																		"type": "",
																		"value": "permitted!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5595:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5595:6:10"
																},
																"nativeSrc": "5595:40:10",
																"nodeType": "YulFunctionCall",
																"src": "5595:40:10"
															},
															"nativeSrc": "5595:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "5595:40:10"
														},
														{
															"nativeSrc": "5644:27:10",
															"nodeType": "YulAssignment",
															"src": "5644:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5656:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5656:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5667:3:10",
																		"nodeType": "YulLiteral",
																		"src": "5667:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5652:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5652:3:10"
																},
																"nativeSrc": "5652:19:10",
																"nodeType": "YulFunctionCall",
																"src": "5652:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5644:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5644:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5271:406:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5422:9:10",
														"nodeType": "YulTypedName",
														"src": "5422:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5436:4:10",
														"nodeType": "YulTypedName",
														"src": "5436:4:10",
														"type": ""
													}
												],
												"src": "5271:406:10"
											},
											{
												"body": {
													"nativeSrc": "5856:174:10",
													"nodeType": "YulBlock",
													"src": "5856:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5873:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5873:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5884:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5884:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5866:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5866:6:10"
																},
																"nativeSrc": "5866:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5866:21:10"
															},
															"nativeSrc": "5866:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "5866:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5907:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5907:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5918:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5918:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5903:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5903:3:10"
																		},
																		"nativeSrc": "5903:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5903:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5923:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5923:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5896:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5896:6:10"
																},
																"nativeSrc": "5896:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5896:30:10"
															},
															"nativeSrc": "5896:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "5896:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5946:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5946:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5957:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5957:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5942:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5942:3:10"
																		},
																		"nativeSrc": "5942:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5942:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "5962:26:10",
																		"nodeType": "YulLiteral",
																		"src": "5962:26:10",
																		"type": "",
																		"value": "ModuleX:Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5935:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5935:6:10"
																},
																"nativeSrc": "5935:54:10",
																"nodeType": "YulFunctionCall",
																"src": "5935:54:10"
															},
															"nativeSrc": "5935:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "5935:54:10"
														},
														{
															"nativeSrc": "5998:26:10",
															"nodeType": "YulAssignment",
															"src": "5998:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6010:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6010:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6021:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6021:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6006:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6006:3:10"
																},
																"nativeSrc": "6006:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6006:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5998:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5998:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5682:348:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5833:9:10",
														"nodeType": "YulTypedName",
														"src": "5833:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5847:4:10",
														"nodeType": "YulTypedName",
														"src": "5847:4:10",
														"type": ""
													}
												],
												"src": "5682:348:10"
											},
											{
												"body": {
													"nativeSrc": "6067:152:10",
													"nodeType": "YulBlock",
													"src": "6067:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6084:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6084:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6087:77:10",
																		"nodeType": "YulLiteral",
																		"src": "6087:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6077:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6077:6:10"
																},
																"nativeSrc": "6077:88:10",
																"nodeType": "YulFunctionCall",
																"src": "6077:88:10"
															},
															"nativeSrc": "6077:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "6077:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6181:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6181:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6184:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6184:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6174:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:10"
																},
																"nativeSrc": "6174:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6174:15:10"
															},
															"nativeSrc": "6174:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6174:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6205:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6205:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6208:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6208:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6198:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6198:6:10"
																},
																"nativeSrc": "6198:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6198:15:10"
															},
															"nativeSrc": "6198:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6198:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6035:184:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6035:184:10"
											},
											{
												"body": {
													"nativeSrc": "6273:79:10",
													"nodeType": "YulBlock",
													"src": "6273:79:10",
													"statements": [
														{
															"nativeSrc": "6283:17:10",
															"nodeType": "YulAssignment",
															"src": "6283:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6295:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6295:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6298:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6298:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6291:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6291:3:10"
																},
																"nativeSrc": "6291:9:10",
																"nodeType": "YulFunctionCall",
																"src": "6291:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6283:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6283:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6324:22:10",
																"nodeType": "YulBlock",
																"src": "6324:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6326:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6326:16:10"
																			},
																			"nativeSrc": "6326:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6326:18:10"
																		},
																		"nativeSrc": "6326:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6326:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6315:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6315:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6321:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6321:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6312:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6312:2:10"
																},
																"nativeSrc": "6312:11:10",
																"nodeType": "YulFunctionCall",
																"src": "6312:11:10"
															},
															"nativeSrc": "6309:37:10",
															"nodeType": "YulIf",
															"src": "6309:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6224:128:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6255:1:10",
														"nodeType": "YulTypedName",
														"src": "6255:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6258:1:10",
														"nodeType": "YulTypedName",
														"src": "6258:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6264:4:10",
														"nodeType": "YulTypedName",
														"src": "6264:4:10",
														"type": ""
													}
												],
												"src": "6224:128:10"
											},
											{
												"body": {
													"nativeSrc": "6531:231:10",
													"nodeType": "YulBlock",
													"src": "6531:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6548:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6548:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6559:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6559:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6541:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6541:6:10"
																},
																"nativeSrc": "6541:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6541:21:10"
															},
															"nativeSrc": "6541:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6541:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6582:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6582:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6593:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6593:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6578:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6578:3:10"
																		},
																		"nativeSrc": "6578:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6578:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6598:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6598:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6571:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6571:6:10"
																},
																"nativeSrc": "6571:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6571:30:10"
															},
															"nativeSrc": "6571:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6571:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6621:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6621:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6632:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6632:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6617:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6617:3:10"
																		},
																		"nativeSrc": "6617:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6617:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a616d6f756e74206d75737420626520677265617465722074",
																		"kind": "string",
																		"nativeSrc": "6637:34:10",
																		"nodeType": "YulLiteral",
																		"src": "6637:34:10",
																		"type": "",
																		"value": "ModuleX:amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6610:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6610:6:10"
																},
																"nativeSrc": "6610:62:10",
																"nodeType": "YulFunctionCall",
																"src": "6610:62:10"
															},
															"nativeSrc": "6610:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "6610:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6692:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6692:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6703:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6703:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6688:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6688:3:10"
																		},
																		"nativeSrc": "6688:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6688:18:10"
																	},
																	{
																		"hexValue": "68616e207a65726f21",
																		"kind": "string",
																		"nativeSrc": "6708:11:10",
																		"nodeType": "YulLiteral",
																		"src": "6708:11:10",
																		"type": "",
																		"value": "han zero!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6681:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6681:6:10"
																},
																"nativeSrc": "6681:39:10",
																"nodeType": "YulFunctionCall",
																"src": "6681:39:10"
															},
															"nativeSrc": "6681:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "6681:39:10"
														},
														{
															"nativeSrc": "6729:27:10",
															"nodeType": "YulAssignment",
															"src": "6729:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6741:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6741:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6752:3:10",
																		"nodeType": "YulLiteral",
																		"src": "6752:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6737:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6737:3:10"
																},
																"nativeSrc": "6737:19:10",
																"nodeType": "YulFunctionCall",
																"src": "6737:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6729:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6729:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6357:405:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6508:9:10",
														"nodeType": "YulTypedName",
														"src": "6508:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6522:4:10",
														"nodeType": "YulTypedName",
														"src": "6522:4:10",
														"type": ""
													}
												],
												"src": "6357:405:10"
											},
											{
												"body": {
													"nativeSrc": "6941:171:10",
													"nodeType": "YulBlock",
													"src": "6941:171:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6958:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6958:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6969:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6969:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6951:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6951:6:10"
																},
																"nativeSrc": "6951:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6951:21:10"
															},
															"nativeSrc": "6951:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6951:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6992:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6992:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7003:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7003:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6988:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6988:3:10"
																		},
																		"nativeSrc": "6988:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6988:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7008:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7008:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6981:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6981:6:10"
																},
																"nativeSrc": "6981:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6981:30:10"
															},
															"nativeSrc": "6981:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6981:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7031:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7031:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7042:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7042:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7027:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7027:3:10"
																		},
																		"nativeSrc": "7027:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7027:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a4275726e7420746f6b656e7321",
																		"kind": "string",
																		"nativeSrc": "7047:23:10",
																		"nodeType": "YulLiteral",
																		"src": "7047:23:10",
																		"type": "",
																		"value": "ModuleX:Burnt tokens!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7020:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7020:6:10"
																},
																"nativeSrc": "7020:51:10",
																"nodeType": "YulFunctionCall",
																"src": "7020:51:10"
															},
															"nativeSrc": "7020:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "7020:51:10"
														},
														{
															"nativeSrc": "7080:26:10",
															"nodeType": "YulAssignment",
															"src": "7080:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7092:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7092:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7103:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7103:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7088:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7088:3:10"
																},
																"nativeSrc": "7088:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7088:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7080:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7080:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6767:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6918:9:10",
														"nodeType": "YulTypedName",
														"src": "6918:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6932:4:10",
														"nodeType": "YulTypedName",
														"src": "6932:4:10",
														"type": ""
													}
												],
												"src": "6767:345:10"
											},
											{
												"body": {
													"nativeSrc": "7291:179:10",
													"nodeType": "YulBlock",
													"src": "7291:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7308:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7308:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7319:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7319:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7301:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7301:6:10"
																},
																"nativeSrc": "7301:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7301:21:10"
															},
															"nativeSrc": "7301:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7301:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7342:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7342:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7353:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7353:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7338:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7338:3:10"
																		},
																		"nativeSrc": "7338:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7338:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7358:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7358:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7331:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7331:6:10"
																},
																"nativeSrc": "7331:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7331:30:10"
															},
															"nativeSrc": "7331:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7331:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7381:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7381:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7392:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7392:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7377:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:10"
																		},
																		"nativeSrc": "7377:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7377:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a496e73756666696369656e742062616c616e636521",
																		"kind": "string",
																		"nativeSrc": "7397:31:10",
																		"nodeType": "YulLiteral",
																		"src": "7397:31:10",
																		"type": "",
																		"value": "ModuleX:Insufficient balance!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7370:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7370:6:10"
																},
																"nativeSrc": "7370:59:10",
																"nodeType": "YulFunctionCall",
																"src": "7370:59:10"
															},
															"nativeSrc": "7370:59:10",
															"nodeType": "YulExpressionStatement",
															"src": "7370:59:10"
														},
														{
															"nativeSrc": "7438:26:10",
															"nodeType": "YulAssignment",
															"src": "7438:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7450:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7450:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7461:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7461:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7446:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7446:3:10"
																},
																"nativeSrc": "7446:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7446:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7438:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7438:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7117:353:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7268:9:10",
														"nodeType": "YulTypedName",
														"src": "7268:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7282:4:10",
														"nodeType": "YulTypedName",
														"src": "7282:4:10",
														"type": ""
													}
												],
												"src": "7117:353:10"
											},
											{
												"body": {
													"nativeSrc": "7521:228:10",
													"nodeType": "YulBlock",
													"src": "7521:228:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7552:168:10",
																"nodeType": "YulBlock",
																"src": "7552:168:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7573:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7573:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7576:77:10",
																					"nodeType": "YulLiteral",
																					"src": "7576:77:10",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7566:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7566:6:10"
																			},
																			"nativeSrc": "7566:88:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7566:88:10"
																		},
																		"nativeSrc": "7566:88:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7566:88:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7674:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7674:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7677:4:10",
																					"nodeType": "YulLiteral",
																					"src": "7677:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7667:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7667:6:10"
																			},
																			"nativeSrc": "7667:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7667:15:10"
																		},
																		"nativeSrc": "7667:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7667:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7702:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7702:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7705:4:10",
																					"nodeType": "YulLiteral",
																					"src": "7705:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7695:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7695:6:10"
																			},
																			"nativeSrc": "7695:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7695:15:10"
																		},
																		"nativeSrc": "7695:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7695:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7541:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7541:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7534:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7534:6:10"
																},
																"nativeSrc": "7534:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7534:9:10"
															},
															"nativeSrc": "7531:189:10",
															"nodeType": "YulIf",
															"src": "7531:189:10"
														},
														{
															"nativeSrc": "7729:14:10",
															"nodeType": "YulAssignment",
															"src": "7729:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7738:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7738:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7741:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7741:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7734:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7734:3:10"
																},
																"nativeSrc": "7734:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7734:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7729:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7729:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7475:274:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7506:1:10",
														"nodeType": "YulTypedName",
														"src": "7506:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7509:1:10",
														"nodeType": "YulTypedName",
														"src": "7509:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7515:1:10",
														"nodeType": "YulTypedName",
														"src": "7515:1:10",
														"type": ""
													}
												],
												"src": "7475:274:10"
											},
											{
												"body": {
													"nativeSrc": "7802:77:10",
													"nodeType": "YulBlock",
													"src": "7802:77:10",
													"statements": [
														{
															"nativeSrc": "7812:16:10",
															"nodeType": "YulAssignment",
															"src": "7812:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7823:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7823:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7826:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7826:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7819:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7819:3:10"
																},
																"nativeSrc": "7819:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7819:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7812:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7812:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7851:22:10",
																"nodeType": "YulBlock",
																"src": "7851:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7853:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7853:16:10"
																			},
																			"nativeSrc": "7853:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7853:18:10"
																		},
																		"nativeSrc": "7853:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7853:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7843:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7843:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7846:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7846:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7840:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7840:2:10"
																},
																"nativeSrc": "7840:10:10",
																"nodeType": "YulFunctionCall",
																"src": "7840:10:10"
															},
															"nativeSrc": "7837:36:10",
															"nodeType": "YulIf",
															"src": "7837:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7754:125:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7785:1:10",
														"nodeType": "YulTypedName",
														"src": "7785:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7788:1:10",
														"nodeType": "YulTypedName",
														"src": "7788:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7794:3:10",
														"nodeType": "YulTypedName",
														"src": "7794:3:10",
														"type": ""
													}
												],
												"src": "7754:125:10"
											},
											{
												"body": {
													"nativeSrc": "7916:152:10",
													"nodeType": "YulBlock",
													"src": "7916:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7933:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7933:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7936:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7936:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7926:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7926:6:10"
																},
																"nativeSrc": "7926:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7926:88:10"
															},
															"nativeSrc": "7926:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7926:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8030:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8030:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8033:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8033:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8023:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8023:6:10"
																},
																"nativeSrc": "8023:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8023:15:10"
															},
															"nativeSrc": "8023:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8023:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8054:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8054:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8057:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8057:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8047:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8047:6:10"
																},
																"nativeSrc": "8047:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8047:15:10"
															},
															"nativeSrc": "8047:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8047:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7884:184:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7884:184:10"
											},
											{
												"body": {
													"nativeSrc": "8247:176:10",
													"nodeType": "YulBlock",
													"src": "8247:176:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8264:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8264:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8275:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8275:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8257:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8257:6:10"
																},
																"nativeSrc": "8257:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8257:21:10"
															},
															"nativeSrc": "8257:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8257:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8298:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8298:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8309:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8309:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8294:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8294:3:10"
																		},
																		"nativeSrc": "8294:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8294:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8314:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8314:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8287:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8287:6:10"
																},
																"nativeSrc": "8287:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8287:30:10"
															},
															"nativeSrc": "8287:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8287:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8337:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8337:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8348:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8348:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8333:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8333:3:10"
																		},
																		"nativeSrc": "8333:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8333:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a546f74616c20616d6f756e74206973203021",
																		"kind": "string",
																		"nativeSrc": "8353:28:10",
																		"nodeType": "YulLiteral",
																		"src": "8353:28:10",
																		"type": "",
																		"value": "ModuleX:Total amount is 0!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8326:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8326:6:10"
																},
																"nativeSrc": "8326:56:10",
																"nodeType": "YulFunctionCall",
																"src": "8326:56:10"
															},
															"nativeSrc": "8326:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "8326:56:10"
														},
														{
															"nativeSrc": "8391:26:10",
															"nodeType": "YulAssignment",
															"src": "8391:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8403:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8403:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8414:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8414:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8399:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8399:3:10"
																},
																"nativeSrc": "8399:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8399:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8391:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8391:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8073:350:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8224:9:10",
														"nodeType": "YulTypedName",
														"src": "8224:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8238:4:10",
														"nodeType": "YulTypedName",
														"src": "8238:4:10",
														"type": ""
													}
												],
												"src": "8073:350:10"
											},
											{
												"body": {
													"nativeSrc": "8480:116:10",
													"nodeType": "YulBlock",
													"src": "8480:116:10",
													"statements": [
														{
															"nativeSrc": "8490:20:10",
															"nodeType": "YulAssignment",
															"src": "8490:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8505:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8505:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8508:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8508:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8501:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8501:3:10"
																},
																"nativeSrc": "8501:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8501:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8490:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8490:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8568:22:10",
																"nodeType": "YulBlock",
																"src": "8568:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8570:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8570:16:10"
																			},
																			"nativeSrc": "8570:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8570:18:10"
																		},
																		"nativeSrc": "8570:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8570:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8539:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8539:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8532:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8532:6:10"
																				},
																				"nativeSrc": "8532:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8532:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8546:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8546:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8553:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "8553:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8562:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "8562:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8549:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8549:3:10"
																						},
																						"nativeSrc": "8549:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8549:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8543:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "8543:2:10"
																				},
																				"nativeSrc": "8543:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8543:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8529:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8529:2:10"
																		},
																		"nativeSrc": "8529:37:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8529:37:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8522:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8522:6:10"
																},
																"nativeSrc": "8522:45:10",
																"nodeType": "YulFunctionCall",
																"src": "8522:45:10"
															},
															"nativeSrc": "8519:71:10",
															"nodeType": "YulIf",
															"src": "8519:71:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8428:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8459:1:10",
														"nodeType": "YulTypedName",
														"src": "8459:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8462:1:10",
														"nodeType": "YulTypedName",
														"src": "8462:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8468:7:10",
														"nodeType": "YulTypedName",
														"src": "8468:7:10",
														"type": ""
													}
												],
												"src": "8428:168:10"
											},
											{
												"body": {
													"nativeSrc": "8682:103:10",
													"nodeType": "YulBlock",
													"src": "8682:103:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8728:16:10",
																"nodeType": "YulBlock",
																"src": "8728:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8737:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8737:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8740:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8740:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8730:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8730:6:10"
																			},
																			"nativeSrc": "8730:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8730:12:10"
																		},
																		"nativeSrc": "8730:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8730:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8703:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8703:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8712:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8712:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8699:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8699:3:10"
																		},
																		"nativeSrc": "8699:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8699:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8724:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8724:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8695:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8695:3:10"
																},
																"nativeSrc": "8695:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8695:32:10"
															},
															"nativeSrc": "8692:52:10",
															"nodeType": "YulIf",
															"src": "8692:52:10"
														},
														{
															"nativeSrc": "8753:26:10",
															"nodeType": "YulAssignment",
															"src": "8753:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8769:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8769:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8763:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8763:5:10"
																},
																"nativeSrc": "8763:16:10",
																"nodeType": "YulFunctionCall",
																"src": "8763:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8753:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8753:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8601:184:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8648:9:10",
														"nodeType": "YulTypedName",
														"src": "8648:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8659:7:10",
														"nodeType": "YulTypedName",
														"src": "8659:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8671:6:10",
														"nodeType": "YulTypedName",
														"src": "8671:6:10",
														"type": ""
													}
												],
												"src": "8601:184:10"
											},
											{
												"body": {
													"nativeSrc": "8964:166:10",
													"nodeType": "YulBlock",
													"src": "8964:166:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8981:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8981:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8992:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8992:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8974:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8974:6:10"
																},
																"nativeSrc": "8974:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8974:21:10"
															},
															"nativeSrc": "8974:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8974:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9015:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9015:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9026:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9026:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9011:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9011:3:10"
																		},
																		"nativeSrc": "9011:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9011:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9031:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9031:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9004:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9004:6:10"
																},
																"nativeSrc": "9004:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9004:30:10"
															},
															"nativeSrc": "9004:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9004:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9054:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9054:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9065:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9065:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9050:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9050:3:10"
																		},
																		"nativeSrc": "9050:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9050:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a53544f5050454421",
																		"kind": "string",
																		"nativeSrc": "9070:18:10",
																		"nodeType": "YulLiteral",
																		"src": "9070:18:10",
																		"type": "",
																		"value": "ModuleX:STOPPED!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9043:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9043:6:10"
																},
																"nativeSrc": "9043:46:10",
																"nodeType": "YulFunctionCall",
																"src": "9043:46:10"
															},
															"nativeSrc": "9043:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "9043:46:10"
														},
														{
															"nativeSrc": "9098:26:10",
															"nodeType": "YulAssignment",
															"src": "9098:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9110:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9110:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9121:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9121:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9106:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9106:3:10"
																},
																"nativeSrc": "9106:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9106:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9098:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9098:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ae6e0d54110718e95446f0f4e86565c7e5f169a2d3f15682ce13c35e6dce1a0a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8790:340:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8941:9:10",
														"nodeType": "YulTypedName",
														"src": "8941:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8955:4:10",
														"nodeType": "YulTypedName",
														"src": "8955:4:10",
														"type": ""
													}
												],
												"src": "8790:340:10"
											},
											{
												"body": {
													"nativeSrc": "9309:234:10",
													"nodeType": "YulBlock",
													"src": "9309:234:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9326:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9326:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9337:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9337:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9319:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9319:6:10"
																},
																"nativeSrc": "9319:21:10",
																"nodeType": "YulFunctionCall",
																"src": "9319:21:10"
															},
															"nativeSrc": "9319:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "9319:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9360:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9360:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9371:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9371:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9356:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9356:3:10"
																		},
																		"nativeSrc": "9356:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9356:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9376:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9376:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9349:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9349:6:10"
																},
																"nativeSrc": "9349:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9349:30:10"
															},
															"nativeSrc": "9349:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9349:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9399:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9399:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9410:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9410:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9395:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9395:3:10"
																		},
																		"nativeSrc": "9395:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9395:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a5374616b6520616d6f756e74206d75737420626520677265",
																		"kind": "string",
																		"nativeSrc": "9415:34:10",
																		"nodeType": "YulLiteral",
																		"src": "9415:34:10",
																		"type": "",
																		"value": "ModuleX:Stake amount must be gre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9388:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9388:6:10"
																},
																"nativeSrc": "9388:62:10",
																"nodeType": "YulFunctionCall",
																"src": "9388:62:10"
															},
															"nativeSrc": "9388:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "9388:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9470:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9470:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9481:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9481:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9466:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9466:3:10"
																		},
																		"nativeSrc": "9466:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9466:18:10"
																	},
																	{
																		"hexValue": "61746572207468616e203021",
																		"kind": "string",
																		"nativeSrc": "9486:14:10",
																		"nodeType": "YulLiteral",
																		"src": "9486:14:10",
																		"type": "",
																		"value": "ater than 0!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9459:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9459:6:10"
																},
																"nativeSrc": "9459:42:10",
																"nodeType": "YulFunctionCall",
																"src": "9459:42:10"
															},
															"nativeSrc": "9459:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "9459:42:10"
														},
														{
															"nativeSrc": "9510:27:10",
															"nodeType": "YulAssignment",
															"src": "9510:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9522:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9522:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9533:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9533:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9518:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9518:3:10"
																},
																"nativeSrc": "9518:19:10",
																"nodeType": "YulFunctionCall",
																"src": "9518:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9510:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9510:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9135:408:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9286:9:10",
														"nodeType": "YulTypedName",
														"src": "9286:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9300:4:10",
														"nodeType": "YulTypedName",
														"src": "9300:4:10",
														"type": ""
													}
												],
												"src": "9135:408:10"
											},
											{
												"body": {
													"nativeSrc": "9722:181:10",
													"nodeType": "YulBlock",
													"src": "9722:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9739:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9739:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9750:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9750:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9732:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9732:6:10"
																},
																"nativeSrc": "9732:21:10",
																"nodeType": "YulFunctionCall",
																"src": "9732:21:10"
															},
															"nativeSrc": "9732:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "9732:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9773:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9773:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9784:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9784:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9769:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9769:3:10"
																		},
																		"nativeSrc": "9769:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9769:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9789:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9789:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9762:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9762:6:10"
																},
																"nativeSrc": "9762:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9762:30:10"
															},
															"nativeSrc": "9762:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9762:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9812:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9812:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9823:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9823:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9808:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9808:3:10"
																		},
																		"nativeSrc": "9808:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9808:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f6421",
																		"kind": "string",
																		"nativeSrc": "9828:33:10",
																		"nodeType": "YulLiteral",
																		"src": "9828:33:10",
																		"type": "",
																		"value": "ModuleX:Use longer lock_period!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9801:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9801:6:10"
																},
																"nativeSrc": "9801:61:10",
																"nodeType": "YulFunctionCall",
																"src": "9801:61:10"
															},
															"nativeSrc": "9801:61:10",
															"nodeType": "YulExpressionStatement",
															"src": "9801:61:10"
														},
														{
															"nativeSrc": "9871:26:10",
															"nodeType": "YulAssignment",
															"src": "9871:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9883:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9883:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9894:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9894:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9879:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9879:3:10"
																},
																"nativeSrc": "9879:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9879:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9871:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9871:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9548:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9699:9:10",
														"nodeType": "YulTypedName",
														"src": "9699:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9713:4:10",
														"nodeType": "YulTypedName",
														"src": "9713:4:10",
														"type": ""
													}
												],
												"src": "9548:355:10"
											},
											{
												"body": {
													"nativeSrc": "9955:168:10",
													"nodeType": "YulBlock",
													"src": "9955:168:10",
													"statements": [
														{
															"nativeSrc": "9965:82:10",
															"nodeType": "YulAssignment",
															"src": "9965:82:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "9980:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "9980:1:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9983:26:10",
																				"nodeType": "YulLiteral",
																				"src": "9983:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9976:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9976:3:10"
																		},
																		"nativeSrc": "9976:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9976:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "10016:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "10016:1:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10019:26:10",
																				"nodeType": "YulLiteral",
																				"src": "10019:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10012:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10012:3:10"
																		},
																		"nativeSrc": "10012:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10012:34:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9972:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9972:3:10"
																},
																"nativeSrc": "9972:75:10",
																"nodeType": "YulFunctionCall",
																"src": "9972:75:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9965:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9965:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10095:22:10",
																"nodeType": "YulBlock",
																"src": "10095:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10097:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10097:16:10"
																			},
																			"nativeSrc": "10097:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10097:18:10"
																		},
																		"nativeSrc": "10097:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10097:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "10062:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10062:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10067:26:10",
																		"nodeType": "YulLiteral",
																		"src": "10067:26:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10059:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10059:2:10"
																},
																"nativeSrc": "10059:35:10",
																"nodeType": "YulFunctionCall",
																"src": "10059:35:10"
															},
															"nativeSrc": "10056:61:10",
															"nodeType": "YulIf",
															"src": "10056:61:10"
														}
													]
												},
												"name": "checked_add_t_uint96",
												"nativeSrc": "9908:215:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9938:1:10",
														"nodeType": "YulTypedName",
														"src": "9938:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9941:1:10",
														"nodeType": "YulTypedName",
														"src": "9941:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9947:3:10",
														"nodeType": "YulTypedName",
														"src": "9947:3:10",
														"type": ""
													}
												],
												"src": "9908:215:10"
											},
											{
												"body": {
													"nativeSrc": "10311:239:10",
													"nodeType": "YulBlock",
													"src": "10311:239:10",
													"statements": [
														{
															"nativeSrc": "10321:27:10",
															"nodeType": "YulAssignment",
															"src": "10321:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10333:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10333:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10344:3:10",
																		"nodeType": "YulLiteral",
																		"src": "10344:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10329:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10329:3:10"
																},
																"nativeSrc": "10329:19:10",
																"nodeType": "YulFunctionCall",
																"src": "10329:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10321:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10321:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10364:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10364:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "10375:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10375:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10357:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10357:6:10"
																},
																"nativeSrc": "10357:25:10",
																"nodeType": "YulFunctionCall",
																"src": "10357:25:10"
															},
															"nativeSrc": "10357:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "10357:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10402:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10402:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10413:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10413:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10398:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10398:3:10"
																		},
																		"nativeSrc": "10398:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10398:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10422:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10422:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10430:26:10",
																				"nodeType": "YulLiteral",
																				"src": "10430:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10418:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10418:3:10"
																		},
																		"nativeSrc": "10418:39:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10418:39:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10391:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10391:6:10"
																},
																"nativeSrc": "10391:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10391:67:10"
															},
															"nativeSrc": "10391:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "10391:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10478:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10478:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10489:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10489:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10474:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10474:3:10"
																		},
																		"nativeSrc": "10474:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10474:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10494:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10494:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10467:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10467:6:10"
																},
																"nativeSrc": "10467:34:10",
																"nodeType": "YulFunctionCall",
																"src": "10467:34:10"
															},
															"nativeSrc": "10467:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "10467:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10521:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10521:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10532:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10532:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10517:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10517:3:10"
																		},
																		"nativeSrc": "10517:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10517:18:10"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "10537:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10537:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10510:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10510:6:10"
																},
																"nativeSrc": "10510:34:10",
																"nodeType": "YulFunctionCall",
																"src": "10510:34:10"
															},
															"nativeSrc": "10510:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "10510:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10128:422:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10256:9:10",
														"nodeType": "YulTypedName",
														"src": "10256:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10267:6:10",
														"nodeType": "YulTypedName",
														"src": "10267:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10275:6:10",
														"nodeType": "YulTypedName",
														"src": "10275:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10283:6:10",
														"nodeType": "YulTypedName",
														"src": "10283:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10291:6:10",
														"nodeType": "YulTypedName",
														"src": "10291:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10302:4:10",
														"nodeType": "YulTypedName",
														"src": "10302:4:10",
														"type": ""
													}
												],
												"src": "10128:422:10"
											},
											{
												"body": {
													"nativeSrc": "10602:88:10",
													"nodeType": "YulBlock",
													"src": "10602:88:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10633:22:10",
																"nodeType": "YulBlock",
																"src": "10633:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10635:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10635:16:10"
																			},
																			"nativeSrc": "10635:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10635:18:10"
																		},
																		"nativeSrc": "10635:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10635:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10618:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10618:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10629:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10629:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10625:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10625:3:10"
																		},
																		"nativeSrc": "10625:6:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10625:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10615:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10615:2:10"
																},
																"nativeSrc": "10615:17:10",
																"nodeType": "YulFunctionCall",
																"src": "10615:17:10"
															},
															"nativeSrc": "10612:43:10",
															"nodeType": "YulIf",
															"src": "10612:43:10"
														},
														{
															"nativeSrc": "10664:20:10",
															"nodeType": "YulAssignment",
															"src": "10664:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10675:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10675:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10682:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10682:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10671:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10671:3:10"
																},
																"nativeSrc": "10671:13:10",
																"nodeType": "YulFunctionCall",
																"src": "10671:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10664:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10664:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "10555:135:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10584:5:10",
														"nodeType": "YulTypedName",
														"src": "10584:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10594:3:10",
														"nodeType": "YulTypedName",
														"src": "10594:3:10",
														"type": ""
													}
												],
												"src": "10555:135:10"
											},
											{
												"body": {
													"nativeSrc": "10824:168:10",
													"nodeType": "YulBlock",
													"src": "10824:168:10",
													"statements": [
														{
															"nativeSrc": "10834:26:10",
															"nodeType": "YulAssignment",
															"src": "10834:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10846:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10846:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10857:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10857:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10842:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10842:3:10"
																},
																"nativeSrc": "10842:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10842:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10834:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10834:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10876:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10876:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10891:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10891:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10899:42:10",
																				"nodeType": "YulLiteral",
																				"src": "10899:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10887:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10887:3:10"
																		},
																		"nativeSrc": "10887:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10887:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10869:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10869:6:10"
																},
																"nativeSrc": "10869:74:10",
																"nodeType": "YulFunctionCall",
																"src": "10869:74:10"
															},
															"nativeSrc": "10869:74:10",
															"nodeType": "YulExpressionStatement",
															"src": "10869:74:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10963:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10963:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10974:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10974:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10959:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10959:3:10"
																		},
																		"nativeSrc": "10959:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10959:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10979:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10979:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10952:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10952:6:10"
																},
																"nativeSrc": "10952:34:10",
																"nodeType": "YulFunctionCall",
																"src": "10952:34:10"
															},
															"nativeSrc": "10952:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "10952:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10695:297:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10785:9:10",
														"nodeType": "YulTypedName",
														"src": "10785:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10796:6:10",
														"nodeType": "YulTypedName",
														"src": "10796:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10804:6:10",
														"nodeType": "YulTypedName",
														"src": "10804:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10815:4:10",
														"nodeType": "YulTypedName",
														"src": "10815:4:10",
														"type": ""
													}
												],
												"src": "10695:297:10"
											},
											{
												"body": {
													"nativeSrc": "11154:260:10",
													"nodeType": "YulBlock",
													"src": "11154:260:10",
													"statements": [
														{
															"nativeSrc": "11164:26:10",
															"nodeType": "YulAssignment",
															"src": "11164:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11176:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11176:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11187:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11187:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11172:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11172:3:10"
																},
																"nativeSrc": "11172:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11172:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11164:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11164:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11206:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11206:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11221:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11221:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11229:42:10",
																				"nodeType": "YulLiteral",
																				"src": "11229:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11217:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11217:3:10"
																		},
																		"nativeSrc": "11217:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11217:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11199:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11199:6:10"
																},
																"nativeSrc": "11199:74:10",
																"nodeType": "YulFunctionCall",
																"src": "11199:74:10"
															},
															"nativeSrc": "11199:74:10",
															"nodeType": "YulExpressionStatement",
															"src": "11199:74:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11293:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11293:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11304:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11304:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11289:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11289:3:10"
																		},
																		"nativeSrc": "11289:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11289:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11313:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11313:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11321:42:10",
																				"nodeType": "YulLiteral",
																				"src": "11321:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11309:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11309:3:10"
																		},
																		"nativeSrc": "11309:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11309:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11282:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11282:6:10"
																},
																"nativeSrc": "11282:83:10",
																"nodeType": "YulFunctionCall",
																"src": "11282:83:10"
															},
															"nativeSrc": "11282:83:10",
															"nodeType": "YulExpressionStatement",
															"src": "11282:83:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11385:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11385:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11396:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11396:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11381:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11381:3:10"
																		},
																		"nativeSrc": "11381:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11381:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11401:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11401:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11374:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11374:6:10"
																},
																"nativeSrc": "11374:34:10",
																"nodeType": "YulFunctionCall",
																"src": "11374:34:10"
															},
															"nativeSrc": "11374:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "11374:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10997:417:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11107:9:10",
														"nodeType": "YulTypedName",
														"src": "11107:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11118:6:10",
														"nodeType": "YulTypedName",
														"src": "11118:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11126:6:10",
														"nodeType": "YulTypedName",
														"src": "11126:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11134:6:10",
														"nodeType": "YulTypedName",
														"src": "11134:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11145:4:10",
														"nodeType": "YulTypedName",
														"src": "11145:4:10",
														"type": ""
													}
												],
												"src": "10997:417:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint96t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ModuleX:Invalid Stake ID!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ModuleX:Caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ModuleX:Early Withdrawal is not \")\n        mstore(add(headStart, 96), \"permitted!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ModuleX:Nothing to claim\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ModuleX:amount must be greater t\")\n        mstore(add(headStart, 96), \"han zero!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ModuleX:Burnt tokens!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ModuleX:Insufficient balance!\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"ModuleX:Total amount is 0!\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_ae6e0d54110718e95446f0f4e86565c7e5f169a2d3f15682ce13c35e6dce1a0a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"ModuleX:STOPPED!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ModuleX:Stake amount must be gre\")\n        mstore(add(headStart, 96), \"ater than 0!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ModuleX:Use longer lock_period!\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint96(x, y) -> sum\n    {\n        sum := add(and(x, 0xffffffffffffffffffffffff), and(y, 0xffffffffffffffffffffffff))\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"860": [
									{
										"length": 32,
										"start": 465
									},
									{
										"length": 32,
										"start": 885
									},
									{
										"length": 32,
										"start": 2104
									},
									{
										"length": 32,
										"start": 2771
									},
									{
										"length": 32,
										"start": 4264
									}
								],
								"863": [
									{
										"length": 32,
										"start": 568
									},
									{
										"length": 32,
										"start": 696
									},
									{
										"length": 32,
										"start": 1531
									},
									{
										"length": 32,
										"start": 2925
									},
									{
										"length": 32,
										"start": 3644
									},
									{
										"length": 32,
										"start": 3848
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061018f575f3560e01c8063b109beec116100dd578063ce325bf811610088578063d6ef7af011610063578063d6ef7af014610399578063d93c04a0146103ac578063f2fde38b146103d4575f5ffd5b8063ce325bf814610323578063d2d7231f14610360578063d46149a214610373575f5ffd5b8063bc854352116100b8578063bc854352146102ea578063beceed39146102fd578063c9ea62c114610310575f5ffd5b8063b109beec146102b3578063b5fa91fe146102da578063b6baffe3146102e2575f5ffd5b80637c2fdeb51161013d5780638f4729b7116101185780638f4729b71461028e578063ac00500f14610297578063af7568dd146102aa575f5ffd5b80637c2fdeb5146102365780638da5cb5b1461025c5780638e12c0cd1461026c575f5ffd5b80636db08f251161016d5780636db08f25146101cc578063715018a61461020b57806375f12b2114610213575f5ffd5b806307da68f514610193578063109cf3991461019d578063379607f5146101b9575b5f5ffd5b61019b6103e7565b005b6101a660035481565b6040519081526020015b60405180910390f35b6101a66101c7366004611453565b610445565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101b0565b61019b610681565b5f5461022690600160a01b900460ff1681565b60405190151581526020016101b0565b7f00000000000000000000000000000000000000000000000000000000000000006101f3565b5f546001600160a01b03166101f3565b61027662ed4e0081565b6040516001600160601b0390911681526020016101b0565b6101a660065481565b61019b6102a536600461146a565b610694565b6101a660015481565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6101a66108b6565b6101a66108cb565b61019b6102f836600461148a565b6108e9565b61019b61030b366004611453565b610b07565b61019b61031e3660046114fb565b610bd3565b610336610331366004611453565b610be9565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101b0565b6101a661036e366004611453565b610c89565b7f00000000000000000000000000000000000000000000000000000000000000006101f3565b61019b6103a736600461153f565b610df9565b6103bf6103ba366004611567565b610f76565b604080519283526020830191909152016101b0565b61019b6103e236600461158e565b611219565b6103ef61126f565b5f80547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1781556040517f7acc84e34091ae817647a4c49116f5cc07f319078ba80f8f5fde37ea7e25cbd69190a1565b5f815f81118015610457575060055481105b6104a85760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b65204944210000000000000060448201526064015b60405180910390fd5b5f83815260046020526040902080546001600160a01b0316331461050e5760405162461bcd60e51b815260206004820152601f60248201527f4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e657200604482015260640161049f565b8054600160a01b90046001600160601b0316426001600160601b0316101561059e5760405162461bcd60e51b815260206004820152602a60248201527f4d6f64756c65583a4561726c79205769746864726177616c206973206e6f742060448201527f7065726d69747465642100000000000000000000000000000000000000000000606482015260840161049f565b5f8160020154116105f15760405162461bcd60e51b815260206004820152601860248201527f4d6f64756c65583a4e6f7468696e6720746f20636c61696d0000000000000000604482015260640161049f565b600281015461062a7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633836112b4565b8060065f82825461063b91906115c2565b90915550505f60028301556040518581527f67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc199060200160405180910390a1949350505050565b61068961126f565b6106925f611328565b565b61069c61126f565b815f811180156106ad575060055481105b6106f95760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b652049442100000000000000604482015260640161049f565b5f821161075a5760405162461bcd60e51b815260206004820152602960248201527f4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207460448201526868616e207a65726f2160b81b606482015260840161049f565b5f8381526004602052604090208054600160a01b90046001600160601b0316426001600160601b031611156107d15760405162461bcd60e51b815260206004820152601560248201527f4d6f64756c65583a4275726e7420746f6b656e73210000000000000000000000604482015260640161049f565b80600101548311156108255760405162461bcd60e51b815260206004820152601d60248201527f4d6f64756c65583a496e73756666696369656e742062616c616e636521000000604482015260640161049f565b61085f3360018301546001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691906112b4565b82816001015f82825461087291906115c2565b909155505060408051858152602081018590527f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c910160405180910390a150505050565b5f60016005546108c691906115c2565b905090565b5f6002546003546001546108df91906115db565b6108c691906115fa565b6108f161126f565b5f805b82811015610a7e576005548484838181106109115761091161160d565b90506020020135106109655760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b652049442100000000000000604482015260640161049f565b5f60045f86868581811061097b5761097b61160d565b602090810292909201358352508101919091526040015f208054909150600160a01b90046001600160601b0316426001600160601b03161115610a005760405162461bcd60e51b815260206004820152601560248201527f4d6f64756c65583a4275726e7420746f6b656e73210000000000000000000000604482015260640161049f565b6001810154610a0f90846115fa565b5f600183015592507f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c858584818110610a4a57610a4a61160d565b905060200201358260010154604051610a6d929190918252602082015260400190565b60405180910390a1506001016108f4565b505f8111610ace5760405162461bcd60e51b815260206004820152601a60248201527f4d6f64756c65583a546f74616c20616d6f756e74206973203021000000000000604482015260640161049f565b610b027f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633836112b4565b505050565b5f8111610b685760405162461bcd60e51b815260206004820152602960248201527f4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207460448201526868616e207a65726f2160b81b606482015260840161049f565b610b9d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633308461138f565b6040518181527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a150565b610bdb61126f565b600292909255600355600155565b5f5f5f5f845f81118015610bfe575060055481105b610c4a5760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b652049442100000000000000604482015260640161049f565b5050505f9283525050600460205260409020805460018201546002909201546001600160a01b03821693600160a01b9092046001600160601b03169291565b5f5f670de0b6b3a764000090505f83600154610ca591906115fa565b90505f600354600154610cb891906115db565b90505f60035483610cc991906115db565b9050808203610cf357600254610cdf90836115fa565b610ce990876115db565b9695505050505050565b5f60025483610d0291906115fa565b600154600354856001610d1591906115fa565b610d1f9190611621565b610d2991906115c2565b610d339087611621565b610d3d91906115db565b90505f60025483610d4e91906115fa565b600354610d5b9085611621565b610d6590876115c2565b610d6f9088611621565b610d7991906115db565b90505f80610d888660016115fa565b90505b84811015610dcb57600254610da090826115fa565b600354610dad908a611621565b610db791906115db565b610dc190836115fa565b9150600101610d8b565b508682610dd883866115fa565b610de291906115fa565b610dec91906115db565b9998505050505050505050565b610e0161126f565b600654610e0e90826115fa565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610e89573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ead9190611638565b1015610efb5760405162461bcd60e51b815260206004820152601d60248201527f4d6f64756c65583a496e73756666696369656e742062616c616e636521000000604482015260640161049f565b610f2f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836112b4565b816001600160a01b03167f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e133782604051610f6a91815260200190565b60405180910390a25050565b5f80548190600160a01b900460ff1615610fd25760405162461bcd60e51b815260206004820152601060248201527f4d6f64756c65583a53544f505045442100000000000000000000000000000000604482015260640161049f565b5f83116110475760405162461bcd60e51b815260206004820152602c60248201527f4d6f64756c65583a5374616b6520616d6f756e74206d7573742062652067726560448201527f61746572207468616e2030210000000000000000000000000000000000000000606482015260840161049f565b62ed4e006001600160601b03851610156110a35760405162461bcd60e51b815260206004820152601f60248201527f4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f642100604482015260640161049f565b6110d87f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633308661138f565b5f6110e3854261164f565b90505f6110ef85610c89565b90505f600554905060405180608001604052806111093390565b6001600160a01b0390811682526001600160601b0380871660208085019190915260408085018c905260609485018890525f87815260048352818120875193880151909416600160a01b029290941691909117825584015160018083019190915593909201516002909201919091558154889291906111899084906115fa565b925050819055508160065f8282546111a191906115fa565b9091555050604080518281526001600160601b038516602082015280820188905260608101849052905133917f24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146919081900360800190a260058054905f6112078361166e565b90915550909791965090945050505050565b61122161126f565b6001600160a01b038116611263576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f600482015260240161049f565b61126c81611328565b50565b5f546001600160a01b03163314610692576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161049f565b6040516001600160a01b03838116602483015260448201839052610b0291859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113ce565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0384811660248301528381166044830152606482018390526113c89186918216906323b872dd906084016112e1565b50505050565b5f5f60205f8451602086015f885af1806113ed576040513d5f823e3d81fd5b50505f513d91508115611404578060011415611411565b6001600160a01b0384163b155b156113c8576040517f5274afe70000000000000000000000000000000000000000000000000000000081526001600160a01b038516600482015260240161049f565b5f60208284031215611463575f5ffd5b5035919050565b5f5f6040838503121561147b575f5ffd5b50508035926020909101359150565b5f5f6020838503121561149b575f5ffd5b823567ffffffffffffffff8111156114b1575f5ffd5b8301601f810185136114c1575f5ffd5b803567ffffffffffffffff8111156114d7575f5ffd5b8560208260051b84010111156114eb575f5ffd5b6020919091019590945092505050565b5f5f5f6060848603121561150d575f5ffd5b505081359360208301359350604090920135919050565b80356001600160a01b038116811461153a575f5ffd5b919050565b5f5f60408385031215611550575f5ffd5b61155983611524565b946020939093013593505050565b5f5f60408385031215611578575f5ffd5b82356001600160601b0381168114611559575f5ffd5b5f6020828403121561159e575f5ffd5b6115a782611524565b9392505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156115d5576115d56115ae565b92915050565b5f826115f557634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156115d5576115d56115ae565b634e487b7160e01b5f52603260045260245ffd5b80820281158282048414176115d5576115d56115ae565b5f60208284031215611648575f5ffd5b5051919050565b6001600160601b0381811683821601908111156115d5576115d56115ae565b5f6001820161167f5761167f6115ae565b506001019056fea2646970667358221220a86d218e0601a27a13e9ac69315a81a71f07dd0a08f8464db62e06291793ff9e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB109BEEC GT PUSH2 0xDD JUMPI DUP1 PUSH4 0xCE325BF8 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xD6EF7AF0 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD6EF7AF0 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xD93C04A0 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xCE325BF8 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xD2D7231F EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xD46149A2 EQ PUSH2 0x373 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xBC854352 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xBC854352 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xBECEED39 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xC9EA62C1 EQ PUSH2 0x310 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xB109BEEC EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xB5FA91FE EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0xB6BAFFE3 EQ PUSH2 0x2E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7C2FDEB5 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x8F4729B7 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x8F4729B7 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xAC00500F EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xAF7568DD EQ PUSH2 0x2AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7C2FDEB5 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x8E12C0CD EQ PUSH2 0x26C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6DB08F25 GT PUSH2 0x16D JUMPI DUP1 PUSH4 0x6DB08F25 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x75F12B21 EQ PUSH2 0x213 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7DA68F5 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x109CF399 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x1B9 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x19B PUSH2 0x3E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH2 0x1F3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B0 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x681 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x226 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B0 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1F3 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x276 PUSH3 0xED4E00 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B0 JUMP JUMPDEST PUSH2 0x1A6 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH2 0x1A6 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x19B PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x148A JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x336 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1B0 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1B0 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x158E JUMP JUMPDEST PUSH2 0x1219 JUMP JUMPDEST PUSH2 0x3EF PUSH2 0x126F JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7ACC84E34091AE817647A4C49116F5CC07F319078BA80F8F5FDE37EA7E25CBD6 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x457 JUMPI POP PUSH1 0x5 SLOAD DUP2 LT JUMPDEST PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x50E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A43616C6C6572206973206E6F7420746865206F776E657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4561726C79205769746864726177616C206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7065726D69747465642100000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4E6F7468696E6720746F20636C61696D0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x62A PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x12B4 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x67BB155FCABB99400C32B640DC7704C8F18AAE4C817704C7267C5A8CD26DFC19 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x689 PUSH2 0x126F JUMP JUMPDEST PUSH2 0x692 PUSH0 PUSH2 0x1328 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x69C PUSH2 0x126F JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x6AD JUMPI POP PUSH1 0x5 SLOAD DUP2 LT JUMPDEST PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x68616E207A65726F21 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4275726E7420746F6B656E73210000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP4 GT ISZERO PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0x85F CALLER PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x872 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH2 0x8DF SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x8F1 PUSH2 0x126F JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA7E JUMPI PUSH1 0x5 SLOAD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x911 JUMPI PUSH2 0x911 PUSH2 0x160D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x97B JUMPI PUSH2 0x97B PUSH2 0x160D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0xA00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4275726E7420746F6B656E73210000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xA0F SWAP1 DUP5 PUSH2 0x15FA JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP4 ADD SSTORE SWAP3 POP PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA4A JUMPI PUSH2 0xA4A PUSH2 0x160D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xA6D SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 ADD PUSH2 0x8F4 JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A546F74616C20616D6F756E74206973203021000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0xB02 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x12B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x68616E207A65726F21 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0xB9D PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x138F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xBDB PUSH2 0x126F JUMP JUMPDEST PUSH1 0x2 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x3 SSTORE PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP5 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xBFE JUMPI POP PUSH1 0x5 SLOAD DUP2 LT JUMPDEST PUSH2 0xC4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST POP POP POP PUSH0 SWAP3 DUP4 MSTORE POP POP PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP4 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 SWAP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 DUP4 PUSH1 0x1 SLOAD PUSH2 0xCA5 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD DUP4 PUSH2 0xCC9 SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST SWAP1 POP DUP1 DUP3 SUB PUSH2 0xCF3 JUMPI PUSH1 0x2 SLOAD PUSH2 0xCDF SWAP1 DUP4 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0xCE9 SWAP1 DUP8 PUSH2 0x15DB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD DUP4 PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD DUP6 PUSH1 0x1 PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0xD29 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0xD33 SWAP1 DUP8 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD DUP4 PUSH2 0xD4E SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xD5B SWAP1 DUP6 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0xD65 SWAP1 DUP8 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0xD6F SWAP1 DUP9 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0xD79 SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0xD88 DUP7 PUSH1 0x1 PUSH2 0x15FA JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x2 SLOAD PUSH2 0xDA0 SWAP1 DUP3 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xDAD SWAP1 DUP11 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0xDB7 SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH2 0xDC1 SWAP1 DUP4 PUSH2 0x15FA JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0xD8B JUMP JUMPDEST POP DUP7 DUP3 PUSH2 0xDD8 DUP4 DUP7 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0xDE2 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0xDEC SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE01 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xE0E SWAP1 DUP3 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE89 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEAD SWAP2 SWAP1 PUSH2 0x1638 JUMP JUMPDEST LT ISZERO PUSH2 0xEFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0xF2F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0x12B4 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF6A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A53544F505045442100000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x1047 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A5374616B6520616D6F756E74206D75737420626520677265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61746572207468616E2030210000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH3 0xED4E00 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND LT ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A557365206C6F6E676572206C6F636B5F706572696F642100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0x10D8 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x138F JUMP JUMPDEST PUSH0 PUSH2 0x10E3 DUP6 TIMESTAMP PUSH2 0x164F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x10EF DUP6 PUSH2 0xC89 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1109 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP8 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 SWAP5 DUP6 ADD DUP9 SWAP1 MSTORE PUSH0 DUP8 DUP2 MSTORE PUSH1 0x4 DUP4 MSTORE DUP2 DUP2 KECCAK256 DUP8 MLOAD SWAP4 DUP9 ADD MLOAD SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL SWAP3 SWAP1 SWAP5 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE DUP5 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP4 SWAP1 SWAP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP2 SLOAD DUP9 SWAP3 SWAP2 SWAP1 PUSH2 0x1189 SWAP1 DUP5 SWAP1 PUSH2 0x15FA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11A1 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x24FE2D25C10EB2C67B5AC1E3EDBCADC94191E154ED388AD667A9480C44F47146 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH1 0x5 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x1207 DUP4 PUSH2 0x166E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP8 SWAP2 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1221 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0x126C DUP2 PUSH2 0x1328 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xB02 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x13CE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x13C8 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x12E1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x13ED JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x1404 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x13C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1463 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x147B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x14C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x14EB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x150D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x153A JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1550 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1559 DUP4 PUSH2 0x1524 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1578 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1559 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15A7 DUP3 PUSH2 0x1524 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x15D5 JUMPI PUSH2 0x15D5 PUSH2 0x15AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x15F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x15D5 JUMPI PUSH2 0x15D5 PUSH2 0x15AE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x15D5 JUMPI PUSH2 0x15D5 PUSH2 0x15AE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1648 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x15D5 JUMPI PUSH2 0x15D5 PUSH2 0x15AE JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x167F JUMPI PUSH2 0x167F PUSH2 0x15AE JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 PUSH14 0x218E0601A27A13E9AC69315A81A7 0x1F SMOD 0xDD EXP ADDMOD EXTCALL CHAINID 0x4D 0xB6 0x2E MOD 0x29 OR SWAP4 SELFDESTRUCT SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "278:7191:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7366:98;;;:::i;:::-;;679:31;;;;;;;;;160:25:10;;;148:2;133:18;679:31:8;;;;;;;;4616:669;;;;;;:::i;:::-;;:::i;717:29::-;;;;;;;;-1:-1:-1;;;;;605:55:10;;;587:74;;575:2;560:18;717:29:8;427:240:10;2293:101:0;;;:::i;508:27:8:-;;;;;-1:-1:-1;;;508:27:8;;;;;;;;;837:14:10;;830:22;812:41;;800:2;785:18;508:27:8;672:187:10;1839:105:8;1929:6;1839:105;;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;543:42:8;;577:8;543:42;;;;;-1:-1:-1;;;;;1257:39:10;;;1239:58;;1227:2;1212:18;543:42:8;1095:208:10;884:32:8;;;;;;5293:556;;;;;;:::i;:::-;;:::i;592:28::-;;;;;;753:30;;;;;1952:101;;;:::i;3483:129::-;;;:::i;5857:712::-;;;;;;:::i;:::-;;:::i;6577:238::-;;;;;;:::i;:::-;;:::i;7111:247::-;;;;;;:::i;:::-;;:::i;2061:395::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2994:55:10;;;2976:74;;3081:2;3066:18;;3059:34;;;;3109:18;;;3102:34;3167:2;3152:18;;3145:34;2963:3;2948:19;2061:395:8;2745:440:10;2575:900:8;;;;;;:::i;:::-;;:::i;1728:103::-;1817:5;1728:103;;6823:280;;;;;;:::i;:::-;;:::i;3620:988::-;;;;;;:::i;:::-;;:::i;:::-;;;;4287:25:10;;;4343:2;4328:18;;4321:34;;;;4260:18;3620:988:8;4113:248:10;2543:215:0;;;;;;:::i;:::-;;:::i;7366:98:8:-;1531:13:0;:11;:13::i;:::-;7417:7:8::1;:14:::0;;;::::1;-1:-1:-1::0;;;7417:14:8::1;::::0;;7447:9:::1;::::0;::::1;::::0;7417:7;7447:9:::1;7366:98::o:0;4616:669::-;4688:4;4670:8;1328:1;1317:8;:12;:39;;;;;1344:12;;1333:8;:23;1317:39;1309:77;;;;-1:-1:-1;;;1309:77:8;;4759:2:10;1309:77:8;;;4741:21:10;4798:2;4778:18;;;4771:30;4837:27;4817:18;;;4810:55;4882:18;;1309:77:8;;;;;;;;;4710:28:::1;4741:16:::0;;;:6:::1;:16;::::0;;;;4776:13;;-1:-1:-1;;;;;4776:13:8::1;735:10:6::0;4776:29:8::1;4768:73;;;::::0;-1:-1:-1;;;4768:73:8;;5113:2:10;4768:73:8::1;::::0;::::1;5095:21:10::0;5152:2;5132:18;;;5125:30;5191:33;5171:18;;;5164:61;5242:18;;4768:73:8::1;4911:355:10::0;4768:73:8::1;4874:16:::0;;-1:-1:-1;;;4874:16:8;::::1;-1:-1:-1::0;;;;;4874:16:8::1;2543:15:::0;-1:-1:-1;;;;;4860:30:8::1;;;4852:85;;;::::0;-1:-1:-1;;;4852:85:8;;5473:2:10;4852:85:8::1;::::0;::::1;5455:21:10::0;5512:2;5492:18;;;5485:30;5551:34;5531:18;;;5524:62;5622:12;5602:18;;;5595:40;5652:19;;4852:85:8::1;5271:406:10::0;4852:85:8::1;4981:1;4957:7;:21;;;:25;4949:62;;;::::0;-1:-1:-1;;;4949:62:8;;5884:2:10;4949:62:8::1;::::0;::::1;5866:21:10::0;5923:2;5903:18;;;5896:30;5962:26;5942:18;;;5935:54;6006:18;;4949:62:8::1;5682:348:10::0;4949:62:8::1;5043:21;::::0;::::1;::::0;5075:48:::1;:6;-1:-1:-1::0;;;;;5075:19:8::1;735:10:6::0;5043:21:8;5075:19:::1;:48::i;:::-;5159:13;5139:16;;:33;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5207:1:8::1;5183:21;::::0;::::1;:25:::0;5225:20:::1;::::0;160:25:10;;;5225:20:8::1;::::0;148:2:10;133:18;5225:20:8::1;;;;;;;5264:13:::0;4616:669;-1:-1:-1;;;;4616:669:8:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5293:556:8:-;1531:13:0;:11;:13::i;:::-;5378:8:8::1;1328:1;1317:8;:12;:39;;;;;1344:12;;1333:8;:23;1317:39;1309:77;;;::::0;-1:-1:-1;;;1309:77:8;;4759:2:10;1309:77:8::1;::::0;::::1;4741:21:10::0;4798:2;4778:18;;;4771:30;4837:27;4817:18;;;4810:55;4882:18;;1309:77:8::1;4557:349:10::0;1309:77:8::1;5422:1:::2;5413:6;:10;5404:65;;;::::0;-1:-1:-1;;;5404:65:8;;6559:2:10;5404:65:8::2;::::0;::::2;6541:21:10::0;6598:2;6578:18;;;6571:30;6637:34;6617:18;;;6610:62;-1:-1:-1;;;6688:18:10;;;6681:39;6737:19;;5404:65:8::2;6357:405:10::0;5404:65:8::2;5480:28;5511:16:::0;;;:6:::2;:16;::::0;;;;5560;;-1:-1:-1;;;5560:16:8;::::2;-1:-1:-1::0;;;;;5560:16:8::2;2543:15:::0;-1:-1:-1;;;;;5546:30:8::2;;;5538:64;;;::::0;-1:-1:-1;;;5538:64:8;;6969:2:10;5538:64:8::2;::::0;::::2;6951:21:10::0;7008:2;6988:18;;;6981:30;7047:23;7027:18;;;7020:51;7088:18;;5538:64:8::2;6767:345:10::0;5538:64:8::2;5632:7;:20;;;5622:6;:30;;5614:72;;;::::0;-1:-1:-1;;;5614:72:8;;7319:2:10;5614:72:8::2;::::0;::::2;7301:21:10::0;7358:2;7338:18;;;7331:30;7397:31;7377:18;;;7370:59;7446:18;;5614:72:8::2;7117:353:10::0;5614:72:8::2;5698:54;735:10:6::0;5731:20:8::2;::::0;::::2;::::0;-1:-1:-1;;;;;5698:5:8::2;:18;::::0;:54;:18:::2;:54::i;:::-;5787:6;5763:7;:20;;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5809:32:8::2;::::0;;4287:25:10;;;4343:2;4328:18;;4321:34;;;5809:32:8::2;::::0;4260:18:10;5809:32:8::2;;;;;;;5393:456;1554:1:0::1;5293:556:8::0;;:::o;1952:101::-;2000:4;2044:1;2029:12;;:16;;;;:::i;:::-;2022:23;;1952:101;:::o;3483:129::-;3530:4;3594:10;;3572:19;;3559:12;;:32;;;;:::i;:::-;:45;;;;:::i;5857:712::-;1531:13:0;:11;:13::i;:::-;5947:17:8::1;::::0;5979:459:::1;5995:20:::0;;::::1;5979:459;;;6069:12;;6054:9;;6064:1;6054:12;;;;;;;:::i;:::-;;;;;;;:27;6046:65;;;::::0;-1:-1:-1;;;6046:65:8;;4759:2:10;6046:65:8::1;::::0;::::1;4741:21:10::0;4798:2;4778:18;;;4771:30;4837:27;4817:18;;;4810:55;4882:18;;6046:65:8::1;4557:349:10::0;6046:65:8::1;6126:28;6157:6;:20;6164:9;;6174:1;6164:12;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;6157:20:::0;;-1:-1:-1;6157:20:8;::::1;::::0;;;;;;-1:-1:-1;6157:20:8;6214:16;;6157:20;;-1:-1:-1;;;;6214:16:8;::::1;-1:-1:-1::0;;;;;6214:16:8::1;2543:15:::0;-1:-1:-1;;;;;6200:30:8::1;;;6192:64;;;::::0;-1:-1:-1;;;6192:64:8;;6969:2:10;6192:64:8::1;::::0;::::1;6951:21:10::0;7008:2;6988:18;;;6981:30;7047:23;7027:18;;;7020:51;7088:18;;6192:64:8::1;6767:345:10::0;6192:64:8::1;6287:20;::::0;::::1;::::0;6271:36:::1;::::0;;::::1;:::i;:::-;6345:1;6322:20;::::0;::::1;:24:::0;6271:36;-1:-1:-1;6376:50:8::1;6391:9:::0;;6401:1;6391:12;;::::1;;;;;:::i;:::-;;;;;;;6405:7;:20;;;6376:50;;;;;;4287:25:10::0;;;4343:2;4328:18;;4321:34;4275:2;4260:18;;4113:248;6376:50:8::1;;;;;;;;-1:-1:-1::0;6017:3:8::1;;5979:459;;;;6471:1;6456:12;:16;6448:55;;;::::0;-1:-1:-1;;;6448:55:8;;8275:2:10;6448:55:8::1;::::0;::::1;8257:21:10::0;8314:2;8294:18;;;8287:30;8353:28;8333:18;;;8326:56;8399:18;;6448:55:8::1;8073:350:10::0;6448:55:8::1;6515:46;:5;-1:-1:-1::0;;;;;6515:18:8::1;735:10:6::0;6548:12:8;6515:18:::1;:46::i;:::-;5936:633;5857:712:::0;;:::o;6577:238::-;6654:1;6645:6;:10;6636:65;;;;-1:-1:-1;;;6636:65:8;;6559:2:10;6636:65:8;;;6541:21:10;6598:2;6578:18;;;6571:30;6637:34;6617:18;;;6610:62;-1:-1:-1;;;6688:18:10;;;6681:39;6737:19;;6636:65:8;6357:405:10;6636:65:8;6712:60;:6;-1:-1:-1;;;;;6712:23:8;735:10:6;6758:4:8;6765:6;6712:23;:60::i;:::-;6788:19;;160:25:10;;;6788:19:8;;148:2:10;133:18;6788:19:8;;;;;;;6577:238;:::o;7111:247::-;1531:13:0;:11;:13::i;:::-;7234:10:8::1;:24:::0;;;;7269:19:::1;:42:::0;7322:12:::1;:28:::0;7111:247::o;2061:395::-;2162:13;2186;2210:17;2238:18;2118:8;1328:1;1317:8;:12;:39;;;;;1344:12;;1333:8;:23;1317:39;1309:77;;;;-1:-1:-1;;;1309:77:8;;4759:2:10;1309:77:8;;;4741:21:10;4798:2;4778:18;;;4771:30;4837:27;4817:18;;;4810:55;4882:18;;1309:77:8;4557:349:10;1309:77:8;-1:-1:-1;;;2296:16:8::1;::::0;;;-1:-1:-1;;2296:6:8::1;:16;::::0;;;;:22;;;2373:29;::::1;::::0;2417:30:::1;::::0;;::::1;::::0;-1:-1:-1;;;;;2296:22:8;::::1;::::0;-1:-1:-1;;;2333:25:8;;::::1;-1:-1:-1::0;;;;;2333:25:8::1;::::0;2373:29;2061:395::o;2575:900::-;2639:4;2662:17;2682:4;2662:24;;2697:15;2730:12;2715;;:27;;;;:::i;:::-;2697:45;;2753:10;2779:19;;2766:12;;:32;;;;:::i;:::-;2753:45;;2809:11;2834:19;;2823:10;:30;;;;:::i;:::-;2809:44;;2876:6;2867:5;:15;2864:604;;2937:10;;2929:18;;:5;:18;:::i;:::-;2915:33;;:12;:33;:::i;:::-;2908:40;2575:900;-1:-1:-1;;;;;;2575:900:8:o;2864:604::-;3000:10;3084;;3076:5;:18;;;;:::i;:::-;3061:12;;3039:19;;3028:5;3036:1;3028:9;;;;:::i;:::-;3027:31;;;;:::i;:::-;:46;;;;:::i;:::-;3013:61;;:12;:61;:::i;:::-;:82;;;;:::i;:::-;3000:95;;3110:11;3189:10;;3180:6;:19;;;;:::i;:::-;3158;;3151:26;;:6;:26;:::i;:::-;3138:39;;:10;:39;:::i;:::-;3124:54;;:12;:54;:::i;:::-;:76;;;;:::i;:::-;3110:90;-1:-1:-1;3215:13:8;;3258:9;:5;3266:1;3258:9;:::i;:::-;3251:16;;3247:148;3273:6;3269:1;:10;3247:148;;;3368:10;;3364:14;;:1;:14;:::i;:::-;3343:19;;3330:32;;:12;:32;:::i;:::-;:49;;;;:::i;:::-;3318:61;;;;:::i;:::-;;-1:-1:-1;3281:3:8;;3247:148;;;-1:-1:-1;3444:12:8;3436:6;3417:16;3425:8;3417:5;:16;:::i;:::-;:25;;;;:::i;:::-;3416:40;;;;:::i;:::-;3409:47;2575:900;-1:-1:-1;;;;;;;;;2575:900:8:o;6823:280::-;1531:13:0;:11;:13::i;:::-;6960:16:8::1;::::0;6951:25:::1;::::0;:6;:25:::1;:::i;:::-;6916:31;::::0;;;;6941:4:::1;6916:31;::::0;::::1;587:74:10::0;6916:6:8::1;-1:-1:-1::0;;;;;6916:16:8::1;::::0;::::1;::::0;560:18:10;;6916:31:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;6908:102;;;::::0;-1:-1:-1;;;6908:102:8;;7319:2:10;6908:102:8::1;::::0;::::1;7301:21:10::0;7358:2;7338:18;;;7331:30;7397:31;7377:18;;;7370:59;7446:18;;6908:102:8::1;7117:353:10::0;6908:102:8::1;7021:31;-1:-1:-1::0;;;;;7021:6:8::1;:19;7041:2:::0;7045:6;7021:19:::1;:31::i;:::-;7084:2;-1:-1:-1::0;;;;;7068:27:8::1;;7088:6;7068:27;;;;160:25:10::0;;148:2;133:18;;14:177;7068:27:8::1;;;;;;;;6823:280:::0;;:::o;3620:988::-;3691:4;3728:7;;3691:4;;-1:-1:-1;;;3728:7:8;;;;3727:8;3719:37;;;;-1:-1:-1;;;3719:37:8;;8992:2:10;3719:37:8;;;8974:21:10;9031:2;9011:18;;;9004:30;9070:18;9050;;;9043:46;9106:18;;3719:37:8;8790:340:10;3719:37:8;3790:1;3775:12;:16;3767:73;;;;-1:-1:-1;;;3767:73:8;;9337:2:10;3767:73:8;;;9319:21:10;9376:2;9356:18;;;9349:30;9415:34;9395:18;;;9388:62;9486:14;9466:18;;;9459:42;9518:19;;3767:73:8;9135:408:10;3767:73:8;577:8;-1:-1:-1;;;;;3859:23:8;;;;3851:67;;;;-1:-1:-1;;;3851:67:8;;9750:2:10;3851:67:8;;;9732:21:10;9789:2;9769:18;;;9762:30;9828:33;9808:18;;;9801:61;9879:18;;3851:67:8;9548:355:10;3851:67:8;3929:65;:5;-1:-1:-1;;;;;3929:22:8;735:10:6;3974:4:8;3981:12;3929:22;:65::i;:::-;4006:15;4024:24;4037:11;2543:15;4024:24;:::i;:::-;4006:42;;4059:18;4080:29;4096:12;4080:15;:29::i;:::-;4059:50;;4120:13;4136:12;;4120:28;;4178:176;;;;;;;;4213:12;735:10:6;;656:96;4213:12:8;-1:-1:-1;;;;;4178:176:8;;;;;-1:-1:-1;;;;;4178:176:8;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4159:16:8;;;:6;:16;;;;;:195;;;;;;;;;-1:-1:-1;;;4159:195:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4375:28;;4287:12;;4159:195;-1:-1:-1;4375:28:8;;4287:12;;4375:28;:::i;:::-;;;;;;;;4435:13;4415:16;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;4464:69:8;;;10357:25:10;;;-1:-1:-1;;;;;10418:39:10;;10413:2;10398:18;;10391:67;10474:18;;;10467:34;;;10532:2;10517:18;;10510:34;;;4464:69:8;;735:10:6;;4464:69:8;;;;;;10344:3:10;4464:69:8;;;4544:12;:14;;;:12;:14;;;:::i;:::-;;;;-1:-1:-1;4576:8:8;;4586:13;;-1:-1:-1;3620:988:8;;-1:-1:-1;;;;;3620:988:8:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;::::1;::::0;;2700:1:::1;2672:31;::::0;::::1;587:74:10::0;560:18;;2672:31:0::1;427:240:10::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;;;;735:10:6;1901:40:0;;;587:74:10;560:18;;1901:40:0;427:240:10;1219:160:5;1328:43;;-1:-1:-1;;;;;10887:55:10;;;1328:43:5;;;10869:74:10;10959:18;;;10952:34;;;1301:71:5;;1321:5;;1343:14;;;;;10842:18:10;;1328:43:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;2912:187:0:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;;;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1618:188:5:-;1745:53;;-1:-1:-1;;;;;11217:55:10;;;1745:53:5;;;11199:74:10;11309:55;;;11289:18;;;11282:83;11381:18;;;11374:34;;;1718:81:5;;1738:5;;1760:18;;;;;11172::10;;1745:53:5;10997:417:10;1718:81:5;1618:188;;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:5;8910:8;8866:16;;-1:-1:-1;8942:15:5;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:5;;;:31;8942:68;8938:146;;;9033:40;;;;;-1:-1:-1;;;;;605:55:10;;9033:40:5;;;587:74:10;560:18;;9033:40:5;427:240:10;196:226;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;369:23:10;;196:226;-1:-1:-1;196:226:10:o;1308:346::-;1376:6;1384;1437:2;1425:9;1416:7;1412:23;1408:32;1405:52;;;1453:1;1450;1443:12;1405:52;-1:-1:-1;;1498:23:10;;;1618:2;1603:18;;;1590:32;;-1:-1:-1;1308:346:10:o;1659:610::-;1745:6;1753;1806:2;1794:9;1785:7;1781:23;1777:32;1774:52;;;1822:1;1819;1812:12;1774:52;1862:9;1849:23;1895:18;1887:6;1884:30;1881:50;;;1927:1;1924;1917:12;1881:50;1950:22;;2003:4;1995:13;;1991:27;-1:-1:-1;1981:55:10;;2032:1;2029;2022:12;1981:55;2072:2;2059:16;2098:18;2090:6;2087:30;2084:50;;;2130:1;2127;2120:12;2084:50;2183:7;2178:2;2168:6;2165:1;2161:14;2157:2;2153:23;2149:32;2146:45;2143:65;;;2204:1;2201;2194:12;2143:65;2235:2;2227:11;;;;;2257:6;;-1:-1:-1;1659:610:10;-1:-1:-1;;;1659:610:10:o;2274:466::-;2351:6;2359;2367;2420:2;2408:9;2399:7;2395:23;2391:32;2388:52;;;2436:1;2433;2426:12;2388:52;-1:-1:-1;;2481:23:10;;;2601:2;2586:18;;2573:32;;-1:-1:-1;2704:2:10;2689:18;;;2676:32;;2274:466;-1:-1:-1;2274:466:10:o;3190:196::-;3258:20;;-1:-1:-1;;;;;3307:54:10;;3297:65;;3287:93;;3376:1;3373;3366:12;3287:93;3190:196;;;:::o;3391:300::-;3459:6;3467;3520:2;3508:9;3499:7;3495:23;3491:32;3488:52;;;3536:1;3533;3526:12;3488:52;3559:29;3578:9;3559:29;:::i;:::-;3549:39;3657:2;3642:18;;;;3629:32;;-1:-1:-1;;;3391:300:10:o;3696:412::-;3763:6;3771;3824:2;3812:9;3803:7;3799:23;3795:32;3792:52;;;3840:1;3837;3830:12;3792:52;3879:9;3866:23;-1:-1:-1;;;;;3922:5:10;3918:38;3911:5;3908:49;3898:77;;3971:1;3968;3961:12;4366:186;4425:6;4478:2;4466:9;4457:7;4453:23;4449:32;4446:52;;;4494:1;4491;4484:12;4446:52;4517:29;4536:9;4517:29;:::i;:::-;4507:39;4366:186;-1:-1:-1;;;4366:186:10:o;6035:184::-;-1:-1:-1;;;6084:1:10;6077:88;6184:4;6181:1;6174:15;6208:4;6205:1;6198:15;6224:128;6291:9;;;6312:11;;;6309:37;;;6326:18;;:::i;:::-;6224:128;;;;:::o;7475:274::-;7515:1;7541;7531:189;;-1:-1:-1;;;7573:1:10;7566:88;7677:4;7674:1;7667:15;7705:4;7702:1;7695:15;7531:189;-1:-1:-1;7734:9:10;;7475:274::o;7754:125::-;7819:9;;;7840:10;;;7837:36;;;7853:18;;:::i;7884:184::-;-1:-1:-1;;;7933:1:10;7926:88;8033:4;8030:1;8023:15;8057:4;8054:1;8047:15;8428:168;8501:9;;;8532;;8549:15;;;8543:22;;8529:37;8519:71;;8570:18;;:::i;8601:184::-;8671:6;8724:2;8712:9;8703:7;8699:23;8695:32;8692:52;;;8740:1;8737;8730:12;8692:52;-1:-1:-1;8763:16:10;;8601:184;-1:-1:-1;8601:184:10:o;9908:215::-;-1:-1:-1;;;;;9976:34:10;;;10012;;;9972:75;;10059:35;;10056:61;;;10097:18;;:::i;10555:135::-;10594:3;10615:17;;;10612:43;;10635:18;;:::i;:::-;-1:-1:-1;10682:1:10;10671:13;;10555:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1164000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CREDI()": "infinite",
								"DIFFICULTY_INTERVAL()": "2352",
								"MATURITY()": "305",
								"addRewards(uint256)": "infinite",
								"batchWithdrawCREDI(uint256[])": "infinite",
								"calculateReward(uint256)": "infinite",
								"claim(uint256)": "infinite",
								"getCREDIAddress()": "infinite",
								"getDifficulty()": "6732",
								"getStake(uint256)": "9033",
								"getStakesCount()": "2448",
								"getxCREDIAddress()": "infinite",
								"owner()": "2397",
								"pending_payments()": "2328",
								"renounceOwnership()": "infinite",
								"setDifficulty(uint256,uint256,uint256)": "68833",
								"stake(uint96,uint256)": "infinite",
								"stop()": "27344",
								"stopped()": "2415",
								"total_staked()": "2372",
								"transferOwnership(address)": "28402",
								"withdrawCREDI(uint256,uint256)": "infinite",
								"withdrawRewards(address,uint256)": "infinite",
								"xCREDI()": "infinite"
							},
							"internal": {
								"time_now()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 278,
									"end": 7469,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 530,
									"end": 535,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 508,
									"end": 535,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 508,
									"end": 535,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 508,
									"end": 535,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 508,
									"end": 535,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 508,
									"end": 535,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 508,
									"end": 535,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 592,
									"end": 620,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 592,
									"end": 620,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 592,
									"end": 620,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 848,
									"end": 877,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 848,
									"end": 877,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 884,
									"end": 916,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 884,
									"end": 916,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1414,
									"end": 1716,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1414,
									"end": 1716,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 735,
									"end": 745,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 861,
									"end": 912,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 834,
									"end": 852,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 834,
									"end": 852,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1553,
									"end": 1580,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1580,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1580,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1553,
									"end": 1580,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1591,
									"end": 1620,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1591,
									"end": 1620,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 1650,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1631,
									"end": 1673,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1694,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1684,
									"end": 1708,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 710,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 710,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 293,
									"end": 299,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 315,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 323,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 341,
									"end": 374,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 338,
									"end": 391,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 338,
									"end": 391,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 387,
									"end": 388,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 385,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 389,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 338,
									"end": 391,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 440,
									"end": 449,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 410,
									"end": 450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 410,
									"end": 450,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 400,
									"end": 450,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 503,
									"end": 512,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 499,
									"end": 517,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 469,
									"end": 518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 469,
									"end": 518,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 469,
									"end": 518,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 580,
									"end": 582,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 565,
									"end": 583,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 565,
									"end": 583,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 559,
									"end": 584,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 674,
									"end": 676,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 659,
									"end": 677,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 659,
									"end": 677,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 653,
									"end": 678,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 715,
									"end": 918,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 715,
									"end": 918,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "863"
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "860"
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7469,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a86d218e0601a27a13e9ac69315a81a71f07dd0a08f8464db62e06291793ff9e64736f6c634300081e0033",
									".code": [
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "B109BEEC"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "CE325BF8"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "D6EF7AF0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "D6EF7AF0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "D93C04A0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "CE325BF8"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "D2D7231F"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "D46149A2"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "BC854352"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "BC854352"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "BECEED39"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "C9EA62C1"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "B109BEEC"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "B5FA91FE"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "B6BAFFE3"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "7C2FDEB5"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "8F4729B7"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "8F4729B7"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "AC00500F"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "AF7568DD"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "7C2FDEB5"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "8E12C0CD"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "6DB08F25"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "6DB08F25"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "75F12B21"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "7DA68F5"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "109CF399"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "379607F5"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7469,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7464,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7366,
											"end": 7464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 7366,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 7366,
											"end": 7464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7464,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 7366,
											"end": 7464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7464,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 679,
											"end": 710,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 679,
											"end": 710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 679,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 679,
											"end": 710,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 679,
											"end": 710,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 679,
											"end": 710,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 679,
											"end": 710,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 679,
											"end": 710,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 679,
											"end": 710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 679,
											"end": 710,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 710,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 679,
											"end": 710,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 679,
											"end": 710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 679,
											"end": 710,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 710,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 679,
											"end": 710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 679,
											"end": 710,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 679,
											"end": 710,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 679,
											"end": 710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 679,
											"end": 710,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 5285,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4616,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 4616,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 4616,
											"end": 5285,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 5285,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4616,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4616,
											"end": 5285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 5285,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 4616,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 4616,
											"end": 5285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 717,
											"end": 746,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 717,
											"end": 746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 717,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 717,
											"end": 746,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": 717,
											"end": 746,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 717,
											"end": 746,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 717,
											"end": 746,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 717,
											"end": 746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 717,
											"end": 746,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 746,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 605,
											"end": 660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 605,
											"end": 660,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 605,
											"end": 660,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 587,
											"end": 661,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 587,
											"end": 661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 575,
											"end": 577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 717,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 427,
											"end": 667,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 508,
											"end": 535,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 837,
											"end": 851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 837,
											"end": 851,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 830,
											"end": 852,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 812,
											"end": 853,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 812,
											"end": 853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 800,
											"end": 802,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 803,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 672,
											"end": 859,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1944,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1839,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": 1839,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1839,
											"end": 1944,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 543,
											"end": 585,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 543,
											"end": 585,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 543,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 577,
											"end": 585,
											"name": "PUSH",
											"source": 8,
											"value": "ED4E00"
										},
										{
											"begin": 543,
											"end": 585,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 543,
											"end": 585,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 543,
											"end": 585,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 543,
											"end": 585,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 543,
											"end": 585,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 585,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1257,
											"end": 1296,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1257,
											"end": 1296,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1257,
											"end": 1296,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1297,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1297,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1230,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 543,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1095,
											"end": 1303,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 884,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 884,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 884,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 884,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 884,
											"end": 916,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 884,
											"end": 916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 884,
											"end": 916,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5849,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 5293,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 5293,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 5293,
											"end": 5849,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5849,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5293,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 5293,
											"end": 5849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5849,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 5293,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 5293,
											"end": 5849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 592,
											"end": 620,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 592,
											"end": 620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 592,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 592,
											"end": 620,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 620,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 592,
											"end": 620,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 592,
											"end": 620,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 753,
											"end": 783,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 753,
											"end": 783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 753,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 753,
											"end": 783,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": 753,
											"end": 783,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 753,
											"end": 783,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1952,
											"end": 2053,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1952,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1952,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1952,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1952,
											"end": 2053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3483,
											"end": 3612,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3483,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3483,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3483,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 3483,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 6569,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 5857,
											"end": 6569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 6569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 5857,
											"end": 6569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 5857,
											"end": 6569,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 6569,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5857,
											"end": 6569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 5857,
											"end": 6569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 6569,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 5857,
											"end": 6569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 6569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 5857,
											"end": 6569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6577,
											"end": 6815,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 6577,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6577,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 6577,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 6577,
											"end": 6815,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6577,
											"end": 6815,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6577,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 6577,
											"end": 6815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6577,
											"end": 6815,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 6577,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6577,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 6577,
											"end": 6815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7358,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7111,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 7111,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 7111,
											"end": 7358,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7358,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7111,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 7111,
											"end": 7358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7358,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 7111,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 7111,
											"end": 7358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2061,
											"end": 2456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2061,
											"end": 2456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2994,
											"end": 3049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2994,
											"end": 3049,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2994,
											"end": 3049,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2976,
											"end": 3050,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2976,
											"end": 3050,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3083,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3084,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3084,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3059,
											"end": 3093,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3059,
											"end": 3093,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3059,
											"end": 3093,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3059,
											"end": 3093,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3127,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3136,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3167,
											"end": 3169,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3152,
											"end": 3170,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3152,
											"end": 3170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3179,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 2966,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2948,
											"end": 2967,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2745,
											"end": 3185,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 3475,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2575,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2575,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2575,
											"end": 3475,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 3475,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2575,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2575,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 3475,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2575,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2575,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1728,
											"end": 1831,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1728,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1817,
											"end": 1822,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": 1728,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1728,
											"end": 1831,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 7103,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6823,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 6823,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 6823,
											"end": 7103,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 7103,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6823,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 6823,
											"end": 7103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 7103,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 6823,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 6823,
											"end": 7103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 3620,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 3620,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4287,
											"end": 4312,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4287,
											"end": 4312,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4287,
											"end": 4312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4345,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4346,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4355,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4355,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4355,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 4113,
											"end": 4361,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7366,
											"end": 7464,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 7366,
											"end": 7464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7417,
											"end": 7424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7417,
											"end": 7431,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7417,
											"end": 7431,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7417,
											"end": 7431,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7417,
											"end": 7431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7417,
											"end": 7431,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7417,
											"end": 7431,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7417,
											"end": 7431,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7447,
											"end": 7456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7447,
											"end": 7456,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7447,
											"end": 7456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7ACC84E34091AE817647A4C49116F5CC07F319078BA80F8F5FDE37EA7E25CBD6"
										},
										{
											"begin": 7447,
											"end": 7456,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7417,
											"end": 7424,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7447,
											"end": 7456,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 5285,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 4616,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4678,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1325,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1356,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1356,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1317,
											"end": 1356,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1341,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1356,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1317,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4762,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4800,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4864,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E76616C6964205374616B652049442100000000000000"
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4810,
											"end": 4865,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4900,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4882,
											"end": 4900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4710,
											"end": 4738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4757,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4757,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4757,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4741,
											"end": 4757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4741,
											"end": 4757,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4757,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4757,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4757,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 4789,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 4805,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4768,
											"end": 4841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 4768,
											"end": 4841,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4768,
											"end": 4841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4768,
											"end": 4841,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4768,
											"end": 4841,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4768,
											"end": 4841,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5113,
											"end": 5115,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4768,
											"end": 4841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4768,
											"end": 4841,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4768,
											"end": 4841,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5095,
											"end": 5116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5155,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5191,
											"end": 5224,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A43616C6C6572206973206E6F7420746865206F776E657200"
										},
										{
											"begin": 5171,
											"end": 5189,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5171,
											"end": 5189,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5171,
											"end": 5189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5164,
											"end": 5225,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 5260,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5242,
											"end": 5260,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4768,
											"end": 4841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4911,
											"end": 5266,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4768,
											"end": 4841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 4768,
											"end": 4841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4874,
											"end": 4890,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4874,
											"end": 4890,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4874,
											"end": 4890,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4874,
											"end": 4890,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4874,
											"end": 4890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2558,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4860,
											"end": 4890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4890,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4890,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4852,
											"end": 4937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 4852,
											"end": 4937,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4852,
											"end": 4937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4852,
											"end": 4937,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4852,
											"end": 4937,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4852,
											"end": 4937,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5475,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4852,
											"end": 4937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4852,
											"end": 4937,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4852,
											"end": 4937,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5455,
											"end": 5476,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 5514,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5515,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5551,
											"end": 5585,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A4561726C79205769746864726177616C206973206E6F7420"
										},
										{
											"begin": 5531,
											"end": 5549,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5531,
											"end": 5549,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5531,
											"end": 5549,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5524,
											"end": 5586,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5622,
											"end": 5634,
											"name": "PUSH",
											"source": 10,
											"value": "7065726D69747465642100000000000000000000000000000000000000000000"
										},
										{
											"begin": 5602,
											"end": 5620,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5602,
											"end": 5620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5602,
											"end": 5620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5595,
											"end": 5635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4852,
											"end": 4937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 5271,
											"end": 5677,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4852,
											"end": 4937,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 4852,
											"end": 4937,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 4982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 4964,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4957,
											"end": 4978,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4978,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4982,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 4949,
											"end": 5011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4949,
											"end": 5011,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4949,
											"end": 5011,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 5011,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5884,
											"end": 5886,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4949,
											"end": 5011,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 5011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5866,
											"end": 5887,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 5925,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 5903,
											"end": 5921,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5903,
											"end": 5921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5921,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5988,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A4E6F7468696E6720746F20636C61696D0000000000000000"
										},
										{
											"begin": 5942,
											"end": 5960,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5942,
											"end": 5960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5942,
											"end": 5960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 5989,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4949,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 5682,
											"end": 6030,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4949,
											"end": 5011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 4949,
											"end": 5011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5043,
											"end": 5064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5064,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 5075,
											"end": 5081,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5075,
											"end": 5094,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5043,
											"end": 5064,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 5075,
											"end": 5123,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5123,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 5075,
											"end": 5123,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5172,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5139,
											"end": 5155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5139,
											"end": 5155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5172,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5139,
											"end": 5172,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5139,
											"end": 5172,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5139,
											"end": 5172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 5139,
											"end": 5172,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5139,
											"end": 5172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5139,
											"end": 5172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 5139,
											"end": 5172,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5139,
											"end": 5172,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 5139,
											"end": 5172,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5139,
											"end": 5172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5139,
											"end": 5172,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5139,
											"end": 5172,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5207,
											"end": 5208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5183,
											"end": 5204,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5183,
											"end": 5204,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5183,
											"end": 5208,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5225,
											"end": 5245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5225,
											"end": 5245,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67BB155FCABB99400C32B640DC7704C8F18AAE4C817704C7267C5A8CD26DFC19"
										},
										{
											"begin": 5225,
											"end": 5245,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5225,
											"end": 5245,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5225,
											"end": 5245,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5225,
											"end": 5245,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5225,
											"end": 5245,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5225,
											"end": 5245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5225,
											"end": 5245,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5264,
											"end": 5277,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 5285,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4616,
											"end": 5285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5293,
											"end": 5849,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 5293,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5386,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1325,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1329,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1356,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1317,
											"end": 1356,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1344,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1341,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1356,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1317,
											"end": 1356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1309,
											"end": 1386,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4762,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4800,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4864,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E76616C6964205374616B652049442100000000000000"
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4810,
											"end": 4865,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4900,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4882,
											"end": 4900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4557,
											"end": 4906,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1386,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1309,
											"end": 1386,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5422,
											"end": 5423,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5419,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5423,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5404,
											"end": 5469,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 5404,
											"end": 5469,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5404,
											"end": 5469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5404,
											"end": 5469,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5404,
											"end": 5469,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5404,
											"end": 5469,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6559,
											"end": 6561,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5404,
											"end": 5469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5404,
											"end": 5469,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5404,
											"end": 5469,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6600,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6571,
											"end": 6601,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6637,
											"end": 6671,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 6672,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68616E207A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6720,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6737,
											"end": 6756,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6737,
											"end": 6756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5404,
											"end": 5469,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 6357,
											"end": 6762,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5404,
											"end": 5469,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 5404,
											"end": 5469,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5511,
											"end": 5527,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5527,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5517,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5511,
											"end": 5527,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5511,
											"end": 5527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5527,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5511,
											"end": 5527,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5527,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5560,
											"end": 5576,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5560,
											"end": 5576,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2558,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5546,
											"end": 5576,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5576,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5576,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5538,
											"end": 5602,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 5538,
											"end": 5602,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5538,
											"end": 5602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5538,
											"end": 5602,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5538,
											"end": 5602,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5538,
											"end": 5602,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 6971,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5538,
											"end": 5602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5538,
											"end": 5602,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5538,
											"end": 5602,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6951,
											"end": 6972,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7010,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6981,
											"end": 7011,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7047,
											"end": 7070,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A4275726E7420746F6B656E73210000000000000000000000"
										},
										{
											"begin": 7027,
											"end": 7045,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7027,
											"end": 7045,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7027,
											"end": 7045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7071,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5538,
											"end": 5602,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 6767,
											"end": 7112,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5538,
											"end": 5602,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 5538,
											"end": 5602,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5639,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5632,
											"end": 5652,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5652,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5628,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5652,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5652,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5614,
											"end": 5686,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 5614,
											"end": 5686,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5614,
											"end": 5686,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5614,
											"end": 5686,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5614,
											"end": 5686,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5614,
											"end": 5686,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7319,
											"end": 7321,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5614,
											"end": 5686,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5614,
											"end": 5686,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5614,
											"end": 5686,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7301,
											"end": 7322,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7360,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7331,
											"end": 7361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7397,
											"end": 7428,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E73756666696369656E742062616C616E636521000000"
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7370,
											"end": 7429,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7464,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7446,
											"end": 7464,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5686,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 7117,
											"end": 7470,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5686,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 5614,
											"end": 5686,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5698,
											"end": 5752,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5751,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5731,
											"end": 5751,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5731,
											"end": 5751,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5731,
											"end": 5751,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5698,
											"end": 5703,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": 5698,
											"end": 5716,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5698,
											"end": 5716,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5698,
											"end": 5752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5698,
											"end": 5716,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 5698,
											"end": 5752,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5698,
											"end": 5752,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 5698,
											"end": 5752,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5787,
											"end": 5793,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5770,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5783,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5763,
											"end": 5783,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5783,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5793,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5793,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5793,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5793,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 5763,
											"end": 5793,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5793,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5793,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 5763,
											"end": 5793,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5793,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 5763,
											"end": 5793,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5793,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5793,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5793,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5809,
											"end": 5841,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5809,
											"end": 5841,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5841,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4287,
											"end": 4312,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4287,
											"end": 4312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4287,
											"end": 4312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4345,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4355,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4355,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5809,
											"end": 5841,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C"
										},
										{
											"begin": 5809,
											"end": 5841,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5809,
											"end": 5841,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5809,
											"end": 5841,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5841,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5841,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5841,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5841,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5841,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5849,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5293,
											"end": 5849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1952,
											"end": 2053,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1952,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2004,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2045,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2029,
											"end": 2041,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2029,
											"end": 2041,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2029,
											"end": 2045,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2045,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2029,
											"end": 2045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2045,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2029,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2022,
											"end": 2045,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2022,
											"end": 2045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1952,
											"end": 2053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1952,
											"end": 2053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3483,
											"end": 3612,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 3483,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3530,
											"end": 3534,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3604,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3594,
											"end": 3604,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3572,
											"end": 3591,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3572,
											"end": 3591,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3571,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3559,
											"end": 3571,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 3559,
											"end": 3591,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 3559,
											"end": 3591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3591,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 3559,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3559,
											"end": 3604,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3604,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3559,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 6569,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 5857,
											"end": 6569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5979,
											"end": 6438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 5979,
											"end": 6438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5995,
											"end": 6015,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5995,
											"end": 6015,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5995,
											"end": 6015,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5979,
											"end": 6438,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5979,
											"end": 6438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 5979,
											"end": 6438,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 6069,
											"end": 6081,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6063,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6063,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6065,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6066,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6066,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6066,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 6054,
											"end": 6066,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 6054,
											"end": 6066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6054,
											"end": 6066,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6066,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 6054,
											"end": 6066,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6066,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6066,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6054,
											"end": 6066,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6066,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6066,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6081,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 6046,
											"end": 6111,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6046,
											"end": 6111,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6046,
											"end": 6111,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6046,
											"end": 6111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6046,
											"end": 6111,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6111,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4762,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4800,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4864,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E76616C6964205374616B652049442100000000000000"
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4810,
											"end": 4865,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4900,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4882,
											"end": 4900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4557,
											"end": 4906,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6111,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 6046,
											"end": 6111,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6126,
											"end": 6154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6157,
											"end": 6177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6173,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6173,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6174,
											"end": 6175,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6176,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 6164,
											"end": 6176,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 6164,
											"end": 6176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6164,
											"end": 6176,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 6164,
											"end": 6176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6176,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6176,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6157,
											"end": 6177,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6157,
											"end": 6177,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6157,
											"end": 6177,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6157,
											"end": 6177,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6157,
											"end": 6177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6157,
											"end": 6177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6157,
											"end": 6177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6157,
											"end": 6177,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6157,
											"end": 6177,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6157,
											"end": 6177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6177,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6214,
											"end": 6230,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6214,
											"end": 6230,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6157,
											"end": 6177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6157,
											"end": 6177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6214,
											"end": 6230,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6214,
											"end": 6230,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6214,
											"end": 6230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2558,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6200,
											"end": 6230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6230,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6230,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6192,
											"end": 6256,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6192,
											"end": 6256,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6192,
											"end": 6256,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6256,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 6971,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6192,
											"end": 6256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6192,
											"end": 6256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6256,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6951,
											"end": 6972,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7010,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6981,
											"end": 7011,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7047,
											"end": 7070,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A4275726E7420746F6B656E73210000000000000000000000"
										},
										{
											"begin": 7027,
											"end": 7045,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7027,
											"end": 7045,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7027,
											"end": 7045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7071,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6192,
											"end": 6256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 6767,
											"end": 7112,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6192,
											"end": 6256,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6192,
											"end": 6256,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6287,
											"end": 6307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6287,
											"end": 6307,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6287,
											"end": 6307,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6287,
											"end": 6307,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 6271,
											"end": 6307,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6307,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 6271,
											"end": 6307,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6307,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 6271,
											"end": 6307,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6322,
											"end": 6342,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6322,
											"end": 6342,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6322,
											"end": 6346,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6307,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C"
										},
										{
											"begin": 6391,
											"end": 6400,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6391,
											"end": 6400,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6401,
											"end": 6402,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6391,
											"end": 6403,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6391,
											"end": 6403,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6391,
											"end": 6403,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6391,
											"end": 6403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 6391,
											"end": 6403,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6391,
											"end": 6403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 6391,
											"end": 6403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6391,
											"end": 6403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6391,
											"end": 6403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 6391,
											"end": 6403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6391,
											"end": 6403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6391,
											"end": 6403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6391,
											"end": 6403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6391,
											"end": 6403,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6391,
											"end": 6403,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6391,
											"end": 6403,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4287,
											"end": 4312,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4287,
											"end": 4312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4287,
											"end": 4312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4345,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4355,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4275,
											"end": 4277,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4113,
											"end": 4361,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6376,
											"end": 6426,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6017,
											"end": 6020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6017,
											"end": 6020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5979,
											"end": 6438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 5979,
											"end": 6438,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5979,
											"end": 6438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 5979,
											"end": 6438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5979,
											"end": 6438,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6471,
											"end": 6472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6456,
											"end": 6468,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6456,
											"end": 6472,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6448,
											"end": 6503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 6448,
											"end": 6503,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6448,
											"end": 6503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6448,
											"end": 6503,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6448,
											"end": 6503,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6448,
											"end": 6503,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8275,
											"end": 8277,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6448,
											"end": 6503,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6448,
											"end": 6503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8257,
											"end": 8278,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8314,
											"end": 8316,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 8294,
											"end": 8312,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8294,
											"end": 8312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8294,
											"end": 8312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8287,
											"end": 8317,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8353,
											"end": 8381,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A546F74616C20616D6F756E74206973203021000000000000"
										},
										{
											"begin": 8333,
											"end": 8351,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8333,
											"end": 8351,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8333,
											"end": 8351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8326,
											"end": 8382,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6448,
											"end": 6503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 8073,
											"end": 8423,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6448,
											"end": 6503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 6448,
											"end": 6503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6515,
											"end": 6561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 6515,
											"end": 6520,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6515,
											"end": 6533,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6548,
											"end": 6560,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6515,
											"end": 6533,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 6515,
											"end": 6561,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6515,
											"end": 6561,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 6515,
											"end": 6561,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 6569,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 6569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 6569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 6569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6577,
											"end": 6815,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 6577,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6654,
											"end": 6655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6645,
											"end": 6655,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6636,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 6636,
											"end": 6701,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6636,
											"end": 6701,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6636,
											"end": 6701,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6636,
											"end": 6701,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6636,
											"end": 6701,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6559,
											"end": 6561,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6636,
											"end": 6701,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6636,
											"end": 6701,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6636,
											"end": 6701,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6600,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6571,
											"end": 6601,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6637,
											"end": 6671,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 6672,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68616E207A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6720,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6737,
											"end": 6756,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6737,
											"end": 6756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6636,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 6357,
											"end": 6762,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6636,
											"end": 6701,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 6636,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6712,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 6712,
											"end": 6718,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6712,
											"end": 6735,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6758,
											"end": 6762,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6765,
											"end": 6771,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6712,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 6712,
											"end": 6772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6712,
											"end": 6772,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 6712,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6788,
											"end": 6807,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6788,
											"end": 6807,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6807,
											"name": "PUSH",
											"source": 8,
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 6788,
											"end": 6807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6807,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6788,
											"end": 6807,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6788,
											"end": 6807,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6788,
											"end": 6807,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6788,
											"end": 6807,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6788,
											"end": 6807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6788,
											"end": 6807,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 6577,
											"end": 6815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6577,
											"end": 6815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7358,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 7111,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 7244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7234,
											"end": 7258,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7234,
											"end": 7258,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7234,
											"end": 7258,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7234,
											"end": 7258,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7269,
											"end": 7288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7269,
											"end": 7311,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7322,
											"end": 7334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7322,
											"end": 7350,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2061,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2175,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1325,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1356,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1356,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1317,
											"end": 1356,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1341,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1356,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1317,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4762,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4800,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4864,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E76616C6964205374616B652049442100000000000000"
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4810,
											"end": 4865,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4900,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4882,
											"end": 4900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4557,
											"end": 4906,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 1309,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2312,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2312,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2312,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2296,
											"end": 2312,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2312,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2312,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2318,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2318,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2373,
											"end": 2402,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2417,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2417,
											"end": 2447,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2417,
											"end": 2447,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2417,
											"end": 2447,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2417,
											"end": 2447,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2318,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2318,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2318,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2333,
											"end": 2358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2358,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2358,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2333,
											"end": 2358,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2358,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2373,
											"end": 2402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 3475,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2575,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2643,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2679,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2686,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2662,
											"end": 2686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2662,
											"end": 2686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2697,
											"end": 2712,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2715,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2715,
											"end": 2742,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2715,
											"end": 2742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2715,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2715,
											"end": 2742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2715,
											"end": 2742,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2715,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2697,
											"end": 2742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2697,
											"end": 2742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2753,
											"end": 2763,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2798,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2779,
											"end": 2798,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2766,
											"end": 2778,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2766,
											"end": 2778,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2766,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2753,
											"end": 2798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2753,
											"end": 2798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2820,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2853,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2834,
											"end": 2853,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2823,
											"end": 2853,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 2853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2823,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 2853,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2823,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2882,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2882,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2864,
											"end": 3468,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2937,
											"end": 2947,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2937,
											"end": 2947,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2929,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2929,
											"end": 2947,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2929,
											"end": 2934,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2929,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2929,
											"end": 2947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2929,
											"end": 2947,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2929,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2927,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2915,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2915,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 3475,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2575,
											"end": 3475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 3468,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2864,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3000,
											"end": 3010,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3094,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3084,
											"end": 3094,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3076,
											"end": 3081,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3076,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3061,
											"end": 3073,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3061,
											"end": 3073,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3058,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3039,
											"end": 3058,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3028,
											"end": 3033,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3036,
											"end": 3037,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3028,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3028,
											"end": 3037,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3028,
											"end": 3037,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3028,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3028,
											"end": 3037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3028,
											"end": 3037,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3028,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3027,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3027,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3027,
											"end": 3073,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3027,
											"end": 3073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3027,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 3027,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3027,
											"end": 3073,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3027,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3013,
											"end": 3074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3025,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3013,
											"end": 3074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3074,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3013,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3013,
											"end": 3095,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 3013,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3095,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3013,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3000,
											"end": 3095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3000,
											"end": 3095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3110,
											"end": 3121,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3199,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3189,
											"end": 3199,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 3180,
											"end": 3199,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3180,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3199,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 3180,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3158,
											"end": 3177,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3158,
											"end": 3177,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 3151,
											"end": 3177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3157,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3151,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3177,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 3151,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 3138,
											"end": 3177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 3138,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3177,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 3138,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3124,
											"end": 3178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3136,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3124,
											"end": 3178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3178,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3124,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3124,
											"end": 3200,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3200,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 3124,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3200,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3124,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3110,
											"end": 3200,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3215,
											"end": 3228,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3228,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3258,
											"end": 3263,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3267,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3258,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3258,
											"end": 3267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3267,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3258,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3251,
											"end": 3267,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3395,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 3247,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3273,
											"end": 3279,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3269,
											"end": 3270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3269,
											"end": 3279,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3395,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3247,
											"end": 3395,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3378,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3368,
											"end": 3378,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 3364,
											"end": 3378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3365,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3364,
											"end": 3378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3378,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 3364,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3343,
											"end": 3362,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3343,
											"end": 3362,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 3330,
											"end": 3362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3330,
											"end": 3362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3362,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 3330,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 3330,
											"end": 3379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 3330,
											"end": 3379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3379,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 3330,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 3318,
											"end": 3379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3379,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3318,
											"end": 3379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3379,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 3318,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3281,
											"end": 3284,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3281,
											"end": 3284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 3247,
											"end": 3395,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3395,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3247,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3444,
											"end": 3456,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3442,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 3425,
											"end": 3433,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3422,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3417,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3433,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 3417,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3417,
											"end": 3442,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3417,
											"end": 3442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3442,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3417,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3416,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3416,
											"end": 3456,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3416,
											"end": 3456,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3416,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 3416,
											"end": 3456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3416,
											"end": 3456,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3416,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3456,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 3475,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2575,
											"end": 3475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 7103,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 6823,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6960,
											"end": 6976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6960,
											"end": 6976,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6951,
											"end": 6976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 6951,
											"end": 6976,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6951,
											"end": 6957,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6951,
											"end": 6976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 6951,
											"end": 6976,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6951,
											"end": 6976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 6951,
											"end": 6976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6916,
											"end": 6947,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"name": "PUSH",
											"source": 8,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6916,
											"end": 6947,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6941,
											"end": 6945,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6916,
											"end": 6947,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 587,
											"end": 661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6916,
											"end": 6922,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6916,
											"end": 6932,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 6916,
											"end": 6932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 6916,
											"end": 6947,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 6916,
											"end": 6947,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6976,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6976,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6908,
											"end": 7010,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 6908,
											"end": 7010,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6908,
											"end": 7010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6908,
											"end": 7010,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6908,
											"end": 7010,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6908,
											"end": 7010,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7319,
											"end": 7321,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6908,
											"end": 7010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6908,
											"end": 7010,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6908,
											"end": 7010,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7301,
											"end": 7322,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7360,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7331,
											"end": 7361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7397,
											"end": 7428,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E73756666696369656E742062616C616E636521000000"
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7370,
											"end": 7429,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7464,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7446,
											"end": 7464,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6908,
											"end": 7010,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 7117,
											"end": 7470,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6908,
											"end": 7010,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 6908,
											"end": 7010,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7021,
											"end": 7052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7027,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": 7021,
											"end": 7040,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7041,
											"end": 7043,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7045,
											"end": 7051,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7021,
											"end": 7040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 7021,
											"end": 7052,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7021,
											"end": 7052,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 7021,
											"end": 7052,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7068,
											"end": 7095,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337"
										},
										{
											"begin": 7088,
											"end": 7094,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7068,
											"end": 7095,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 7068,
											"end": 7095,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 7068,
											"end": 7095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7068,
											"end": 7095,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7095,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7095,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7095,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7068,
											"end": 7095,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 7103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 7103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 7103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3735,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3728,
											"end": 3735,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3728,
											"end": 3735,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3728,
											"end": 3735,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3728,
											"end": 3735,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3728,
											"end": 3735,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3727,
											"end": 3735,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8992,
											"end": 8994,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8974,
											"end": 8995,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9031,
											"end": 9033,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 9011,
											"end": 9029,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9011,
											"end": 9029,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9011,
											"end": 9029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9004,
											"end": 9034,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A53544F505045442100000000000000000000000000000000"
										},
										{
											"begin": 9050,
											"end": 9068,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9050,
											"end": 9068,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9050,
											"end": 9068,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9043,
											"end": 9089,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9124,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9106,
											"end": 9124,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 8790,
											"end": 9130,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3791,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3787,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 3791,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 3767,
											"end": 3840,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3840,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3767,
											"end": 3840,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3767,
											"end": 3840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3840,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9337,
											"end": 9339,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3767,
											"end": 3840,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3767,
											"end": 3840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9319,
											"end": 9340,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9376,
											"end": 9378,
											"name": "PUSH",
											"source": 10,
											"value": "2C"
										},
										{
											"begin": 9356,
											"end": 9374,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9356,
											"end": 9374,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9356,
											"end": 9374,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9349,
											"end": 9379,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9415,
											"end": 9449,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A5374616B6520616D6F756E74206D75737420626520677265"
										},
										{
											"begin": 9395,
											"end": 9413,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9395,
											"end": 9413,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9395,
											"end": 9413,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9388,
											"end": 9450,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9486,
											"end": 9500,
											"name": "PUSH",
											"source": 10,
											"value": "61746572207468616E2030210000000000000000000000000000000000000000"
										},
										{
											"begin": 9466,
											"end": 9484,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9466,
											"end": 9484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9466,
											"end": 9484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9459,
											"end": 9501,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9518,
											"end": 9537,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9518,
											"end": 9537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 9135,
											"end": 9543,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3840,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 3767,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 577,
											"end": 585,
											"name": "PUSH",
											"source": 8,
											"value": "ED4E00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3859,
											"end": 3882,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3859,
											"end": 3882,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3859,
											"end": 3882,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3859,
											"end": 3882,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3851,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 3851,
											"end": 3918,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3851,
											"end": 3918,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3851,
											"end": 3918,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3851,
											"end": 3918,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3851,
											"end": 3918,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9750,
											"end": 9752,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3918,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3851,
											"end": 3918,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3851,
											"end": 3918,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9732,
											"end": 9753,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9789,
											"end": 9791,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9769,
											"end": 9787,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9769,
											"end": 9787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9769,
											"end": 9787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9762,
											"end": 9792,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9828,
											"end": 9861,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A557365206C6F6E676572206C6F636B5F706572696F642100"
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9801,
											"end": 9862,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9879,
											"end": 9897,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9879,
											"end": 9897,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 9548,
											"end": 9903,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3918,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 3851,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3929,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 3929,
											"end": 3934,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3929,
											"end": 3951,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 3978,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 3993,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3929,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3929,
											"end": 3994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3929,
											"end": 3994,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 3929,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4006,
											"end": 4021,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 4037,
											"end": 4048,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2558,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 4024,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4048,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 4024,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4006,
											"end": 4048,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4006,
											"end": 4048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 4096,
											"end": 4108,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4080,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 4080,
											"end": 4109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4109,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4120,
											"end": 4133,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4136,
											"end": 4148,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4120,
											"end": 4148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4120,
											"end": 4148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4225,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 4213,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4175,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4175,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4175,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4165,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4159,
											"end": 4175,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4175,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4175,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4175,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4175,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4287,
											"end": 4299,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4287,
											"end": 4299,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4287,
											"end": 4299,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4287,
											"end": 4299,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 4375,
											"end": 4403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4448,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4431,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4415,
											"end": 4431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4415,
											"end": 4448,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4448,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4448,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 4415,
											"end": 4448,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 4415,
											"end": 4448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4448,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 4415,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4448,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4448,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 4533,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4464,
											"end": 4533,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4533,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10357,
											"end": 10382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10382,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10382,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10418,
											"end": 10457,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10418,
											"end": 10457,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10413,
											"end": 10415,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10391,
											"end": 10458,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10532,
											"end": 10534,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10517,
											"end": 10535,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10517,
											"end": 10535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10510,
											"end": 10544,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10510,
											"end": 10544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10510,
											"end": 10544,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4464,
											"end": 4533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4533,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 4533,
											"name": "PUSH",
											"source": 8,
											"value": "24FE2D25C10EB2C67B5AC1E3EDBCADC94191E154ED388AD667A9480C44F47146"
										},
										{
											"begin": 4464,
											"end": 4533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4533,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4533,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10344,
											"end": 10347,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4464,
											"end": 4533,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4464,
											"end": 4533,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 4544,
											"end": 4556,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4544,
											"end": 4558,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4544,
											"end": 4558,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4544,
											"end": 4558,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4544,
											"end": 4556,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4544,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4544,
											"end": 4558,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4544,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 4544,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4544,
											"end": 4558,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4544,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4544,
											"end": 4558,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4544,
											"end": 4558,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4544,
											"end": 4558,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4576,
											"end": 4584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4576,
											"end": 4584,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4599,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4599,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 4608,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3620,
											"end": 4608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 427,
											"end": 667,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 427,
											"end": 667,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10887,
											"end": 10942,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10887,
											"end": 10942,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10887,
											"end": 10942,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10869,
											"end": 10943,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10959,
											"end": 10977,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10959,
											"end": 10977,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10959,
											"end": 10977,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10952,
											"end": 10986,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10952,
											"end": 10986,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10952,
											"end": 10986,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10842,
											"end": 10860,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10842,
											"end": 10860,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11217,
											"end": 11272,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11217,
											"end": 11272,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11217,
											"end": 11272,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11199,
											"end": 11273,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11309,
											"end": 11364,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11309,
											"end": 11364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11309,
											"end": 11364,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11289,
											"end": 11307,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11289,
											"end": 11307,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11289,
											"end": 11307,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11282,
											"end": 11365,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11381,
											"end": 11399,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11381,
											"end": 11399,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11381,
											"end": 11399,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11374,
											"end": 11408,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11374,
											"end": 11408,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11374,
											"end": 11408,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11172,
											"end": 11190,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11172,
											"end": 11190,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 10997,
											"end": 11414,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 605,
											"end": 660,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 605,
											"end": 660,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 587,
											"end": 661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 427,
											"end": 667,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 196,
											"end": 422,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 196,
											"end": 422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 369,
											"end": 392,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 369,
											"end": 392,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 196,
											"end": 422,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1308,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 1308,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1376,
											"end": 1382,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1435,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1440,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1457,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1405,
											"end": 1457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1455,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1457,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1405,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1498,
											"end": 1521,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1521,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1521,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1590,
											"end": 1622,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1590,
											"end": 1622,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1659,
											"end": 2269,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1659,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1794,
											"end": 1803,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1792,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1804,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1809,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1824,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1871,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1872,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 1914,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1931,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 1881,
											"end": 1931,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 1928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1917,
											"end": 1929,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1931,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 1881,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 1972,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 1972,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2003,
											"end": 2007,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1995,
											"end": 2008,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1995,
											"end": 2008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2018,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1981,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 1981,
											"end": 2036,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2034,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1981,
											"end": 2036,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 1981,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2074,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2075,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2116,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2090,
											"end": 2096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2117,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2134,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 2084,
											"end": 2134,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2132,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2134,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 2084,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2190,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2178,
											"end": 2180,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2165,
											"end": 2166,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2161,
											"end": 2175,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2159,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2149,
											"end": 2181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2191,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2208,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 2143,
											"end": 2208,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2206,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2208,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 2143,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1659,
											"end": 2269,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1659,
											"end": 2269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2740,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 2274,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2357,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2365,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2422,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2408,
											"end": 2417,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2399,
											"end": 2406,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2418,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2391,
											"end": 2423,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2440,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2388,
											"end": 2440,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2436,
											"end": 2437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2434,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2438,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2440,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2388,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2603,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2586,
											"end": 2604,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2586,
											"end": 2604,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2605,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2605,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2704,
											"end": 2706,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2689,
											"end": 2707,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2689,
											"end": 2707,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2689,
											"end": 2707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2708,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2708,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2274,
											"end": 2740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3190,
											"end": 3386,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 3190,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3307,
											"end": 3361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3307,
											"end": 3361,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3297,
											"end": 3362,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3297,
											"end": 3362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 3287,
											"end": 3380,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3376,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3378,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3380,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 3287,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3190,
											"end": 3386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3190,
											"end": 3386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3190,
											"end": 3386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3190,
											"end": 3386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3691,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 3391,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3517,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3495,
											"end": 3518,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3491,
											"end": 3523,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3488,
											"end": 3540,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3488,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 3488,
											"end": 3540,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3536,
											"end": 3537,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3533,
											"end": 3534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3488,
											"end": 3540,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 3488,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3559,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 3578,
											"end": 3587,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3559,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 3559,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3559,
											"end": 3588,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 3559,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3588,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3659,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3629,
											"end": 3661,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3629,
											"end": 3661,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3391,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3696,
											"end": 4108,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 3696,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3769,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3826,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3812,
											"end": 3821,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3810,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3799,
											"end": 3822,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3827,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 3844,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3792,
											"end": 3844,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3837,
											"end": 3838,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3842,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 3844,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3792,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3879,
											"end": 3888,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3866,
											"end": 3889,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3922,
											"end": 3927,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3918,
											"end": 3956,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3911,
											"end": 3916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 3957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 3898,
											"end": 3975,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 3972,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 3969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3973,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4552,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 4366,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4425,
											"end": 4431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4480,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4466,
											"end": 4475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4464,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4453,
											"end": 4476,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4449,
											"end": 4481,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4498,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 4446,
											"end": 4498,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4494,
											"end": 4495,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4484,
											"end": 4496,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4498,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 4446,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 4536,
											"end": 4545,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 4517,
											"end": 4546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4546,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 4517,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4546,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4552,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4366,
											"end": 4552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6035,
											"end": 6219,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 6035,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6084,
											"end": 6085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6165,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6184,
											"end": 6188,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 6181,
											"end": 6182,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6174,
											"end": 6189,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6212,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6205,
											"end": 6206,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6213,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6352,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 6224,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6300,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6300,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6300,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6312,
											"end": 6323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6312,
											"end": 6323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6312,
											"end": 6323,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6309,
											"end": 6346,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6309,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 6309,
											"end": 6346,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6326,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 6326,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 6326,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6326,
											"end": 6344,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 6326,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6352,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6352,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7475,
											"end": 7749,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 7475,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7515,
											"end": 7516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7542,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 7531,
											"end": 7720,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7573,
											"end": 7574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7566,
											"end": 7654,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7677,
											"end": 7681,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 7674,
											"end": 7675,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7667,
											"end": 7682,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7705,
											"end": 7709,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7702,
											"end": 7703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7695,
											"end": 7710,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7720,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 7531,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7734,
											"end": 7743,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7734,
											"end": 7743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7475,
											"end": 7749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7879,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 7754,
											"end": 7879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7819,
											"end": 7828,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7819,
											"end": 7828,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7819,
											"end": 7828,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7840,
											"end": 7850,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7840,
											"end": 7850,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7840,
											"end": 7850,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7837,
											"end": 7873,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7837,
											"end": 7873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 7837,
											"end": 7873,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7853,
											"end": 7871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 7853,
											"end": 7871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 7853,
											"end": 7871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7884,
											"end": 8068,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 7884,
											"end": 8068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7933,
											"end": 7934,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 8014,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 8030,
											"end": 8031,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8057,
											"end": 8061,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8428,
											"end": 8596,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 8428,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8510,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8510,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8510,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8532,
											"end": 8541,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8532,
											"end": 8541,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8564,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8565,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8565,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8566,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 8519,
											"end": 8590,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 8570,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 8570,
											"end": 8588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8601,
											"end": 8785,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 8601,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8671,
											"end": 8677,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8724,
											"end": 8726,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8712,
											"end": 8721,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8703,
											"end": 8710,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8699,
											"end": 8722,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8695,
											"end": 8727,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8692,
											"end": 8744,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8692,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 8692,
											"end": 8744,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8740,
											"end": 8741,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8737,
											"end": 8738,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8730,
											"end": 8742,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8692,
											"end": 8744,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 8692,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8763,
											"end": 8779,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8763,
											"end": 8779,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8601,
											"end": 8785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8601,
											"end": 8785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9908,
											"end": 10123,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 9908,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9976,
											"end": 10010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9976,
											"end": 10010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9976,
											"end": 10010,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10012,
											"end": 10046,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10012,
											"end": 10046,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10012,
											"end": 10046,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9972,
											"end": 10047,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9972,
											"end": 10047,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10059,
											"end": 10094,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10059,
											"end": 10094,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10056,
											"end": 10117,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10056,
											"end": 10117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 10056,
											"end": 10117,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10097,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 10097,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 10097,
											"end": 10115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10690,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 10555,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10594,
											"end": 10597,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10615,
											"end": 10632,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10615,
											"end": 10632,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10615,
											"end": 10632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10612,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 10612,
											"end": 10655,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10635,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 10635,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 10635,
											"end": 10653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10635,
											"end": 10653,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 10635,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10682,
											"end": 10683,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10671,
											"end": 10684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10671,
											"end": 10684,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10555,
											"end": 10690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ModuleX.sol",
								"contracts/interface/IModuleX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CREDI()": "6db08f25",
							"DIFFICULTY_INTERVAL()": "109cf399",
							"MATURITY()": "8e12c0cd",
							"addRewards(uint256)": "beceed39",
							"batchWithdrawCREDI(uint256[])": "bc854352",
							"calculateReward(uint256)": "d2d7231f",
							"claim(uint256)": "379607f5",
							"getCREDIAddress()": "d46149a2",
							"getDifficulty()": "b6baffe3",
							"getStake(uint256)": "ce325bf8",
							"getStakesCount()": "b5fa91fe",
							"getxCREDIAddress()": "7c2fdeb5",
							"owner()": "8da5cb5b",
							"pending_payments()": "8f4729b7",
							"renounceOwnership()": "715018a6",
							"setDifficulty(uint256,uint256,uint256)": "c9ea62c1",
							"stake(uint96,uint256)": "d93c04a0",
							"stop()": "07da68f5",
							"stopped()": "75f12b21",
							"total_staked()": "af7568dd",
							"transferOwnership(address)": "f2fde38b",
							"withdrawCREDI(uint256,uint256)": "ac00500f",
							"withdrawRewards(address,uint256)": "d6ef7af0",
							"xCREDI()": "b109beec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_credi_addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_xcredi_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_DIFFICULTY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_DIFFICULTY_INTERVAL\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CREDIWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"maturity\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewards_amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Stopped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CREDI\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DIFFICULTY_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MATURITY\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"stake_ids\",\"type\":\"uint256[]\"}],\"name\":\"batchWithdrawCREDI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"getStake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getxCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pending_payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_DIFFICULTY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_DIFFICULTY_INTERVAL\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_total_staked\",\"type\":\"uint256\"}],\"name\":\"setDifficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lock_period\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"total_staked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCREDI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xCREDI\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ModuleX.sol\":\"ModuleX\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ModuleX.sol\":{\"keccak256\":\"0x611dd4457fc4a6613e450a36b2f0443be716df961d478caaa93f3d0d66efab01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d338d78cecd11cb80f6a0c14686545fbff4c8331746a0b7a45668ac42340d4d8\",\"dweb:/ipfs/QmZmWFEESBpXz45RwCQa8V62KJzRoxAPQQ5SYX3ZbGs3dT\"]},\"contracts/interface/IModuleX.sol\":{\"keccak256\":\"0xe488182db68cc6c3f36721122793f9ae18c0121b496f81fcf04db3a920cdd305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73a131102987d248464278c0095139c9fa869966455db5d1002311216f61cd1e\",\"dweb:/ipfs/Qmf4Em7XiH35WNu8oyemuhzegDEPvJ7827zo9U4cM7zbNU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 847,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "stopped",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 853,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "total_staked",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 855,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "DIFFICULTY",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 857,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "DIFFICULTY_INTERVAL",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 868,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "stakes",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(StakeDetails)844_storage)"
							},
							{
								"astId": 871,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "stakes_count",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 874,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "pending_payments",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_struct(StakeDetails)844_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ModuleX.StakeDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeDetails)844_storage"
							},
							"t_struct(StakeDetails)844_storage": {
								"encoding": "inplace",
								"label": "struct ModuleX.StakeDetails",
								"members": [
									{
										"astId": 837,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 839,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "maturity",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									},
									{
										"astId": 841,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "stake_amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 843,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "reward_amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IModuleX.sol": {
				"IModuleX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "xCREDI_reward",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDifficulty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakesCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getxCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "lock_period",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "xCREDI_reward",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateReward(uint256)": "d2d7231f",
							"claim(uint256)": "379607f5",
							"getCREDIAddress()": "d46149a2",
							"getDifficulty()": "b6baffe3",
							"getStakesCount()": "b5fa91fe",
							"getxCREDIAddress()": "7c2fdeb5",
							"stake(uint96,uint256)": "d93c04a0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xCREDI_reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getxCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lock_period\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xCREDI_reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IModuleX.sol\":\"IModuleX\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"contracts/interface/IModuleX.sol\":{\"keccak256\":\"0xe488182db68cc6c3f36721122793f9ae18c0121b496f81fcf04db3a920cdd305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73a131102987d248464278c0095139c9fa869966455db5d1002311216f61cd1e\",\"dweb:/ipfs/Qmf4Em7XiH35WNu8oyemuhzegDEPvJ7827zo9U4cM7zbNU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 810,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 809,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 809,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								809
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							821
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								821,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							821
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 822,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 315,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 315,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 315,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 315,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 315,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 315,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							779
						]
					},
					"id": 780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 327,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 336,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 351,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 353,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 349,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 347,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 779,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 779,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 404,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 406,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 402,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 400,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 411,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 390,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 389,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 779,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 432,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 434,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 435,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 428,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 440,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 416,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 415,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 779,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 466,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 468,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 444,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 779,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 514,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															485
														],
														"declarations": [
															{
																"constant": false,
																"id": 485,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 514,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 484,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 494,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 490,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 488,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 492,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 496,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 505,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 504,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 499,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 500,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 501,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 481,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 498,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 503,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 508,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 509,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 510,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 506,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 513,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 475,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 779,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 531,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 533,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 535,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 529,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 539,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 540,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 538,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 547,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 549,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 522,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 550,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 551,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 545,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 543,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 557,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 518,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 315,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 779,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 576,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 590,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 592,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 588,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 603,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 602,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 598,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 567,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 596,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 595,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 601,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 583,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 581,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 586,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 565,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 779,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 621,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 637,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 638,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 639,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 650,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 649,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 645,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 643,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 642,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 648,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 627,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 629,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 626,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 779,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 666,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 682,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 678,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 693,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 692,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 688,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 657,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 686,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 685,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 691,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 672,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 673,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 674,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 671,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 676,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 655,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 779,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 706,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 709,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 700,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 711,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 723,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 717,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 715,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 730,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 728,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 727,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 733,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 698,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 779,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 748,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 741,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 759,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 770,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 764,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 741,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 763,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 762,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 774,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 747,
												"id": 776,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 739,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 315,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 779,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 780,
							"src": "698:9376:5",
							"usedErrors": [
								327,
								336
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							809
						]
					},
					"id": 810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 809,
							"linearizedBaseContracts": [
								809
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 787,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 786,
												"id": 789,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 809,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 796,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 795,
												"id": 798,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 809,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 804,
												"id": 806,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 809,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 810,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							821
						]
					},
					"id": 822,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 811,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 812,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:7",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 821,
							"linearizedBaseContracts": [
								821
							],
							"name": "IERC165",
							"nameLocation": "432:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "818:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 814,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:7"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "861:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:7"
									},
									"scope": 821,
									"src": "791:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 822,
							"src": "422:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:7"
				},
				"id": 7
			},
			"contracts/ModuleX.sol": {
				"ast": {
					"absolutePath": "contracts/ModuleX.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"IModuleX": [
							1641
						],
						"ModuleX": [
							1593
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							779
						]
					},
					"id": 1594,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 823,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 824,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 148,
							"src": "61:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 825,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 316,
							"src": "115:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 780,
							"src": "173:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IModuleX.sol",
							"file": "./interface/IModuleX.sol",
							"id": 827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 1642,
							"src": "240:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 828,
										"name": "IModuleX",
										"nameLocations": [
											"298:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1641,
										"src": "298:8:8"
									},
									"id": 829,
									"nodeType": "InheritanceSpecifier",
									"src": "298:8:8"
								},
								{
									"baseName": {
										"id": 830,
										"name": "Ownable",
										"nameLocations": [
											"308:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "308:7:8"
									},
									"id": 831,
									"nodeType": "InheritanceSpecifier",
									"src": "308:7:8"
								}
							],
							"canonicalName": "ModuleX",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1593,
							"linearizedBaseContracts": [
								1593,
								147,
								809,
								1641
							],
							"name": "ModuleX",
							"nameLocation": "287:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 835,
									"libraryName": {
										"id": 832,
										"name": "SafeERC20",
										"nameLocations": [
											"331:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 779,
										"src": "331:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "325:27:8",
									"typeName": {
										"id": 834,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 833,
											"name": "IERC20",
											"nameLocations": [
												"345:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "345:6:8"
										},
										"referencedDeclaration": 315,
										"src": "345:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "ModuleX.StakeDetails",
									"id": 844,
									"members": [
										{
											"constant": false,
											"id": 837,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "404:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "396:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 836,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "396:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 839,
											"mutability": "mutable",
											"name": "maturity",
											"nameLocation": "427:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "420:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 838,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "420:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 841,
											"mutability": "mutable",
											"name": "stake_amount",
											"nameLocation": "451:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "446:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 840,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "446:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 843,
											"mutability": "mutable",
											"name": "reward_amount",
											"nameLocation": "479:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "474:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 842,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "474:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeDetails",
									"nameLocation": "367:12:8",
									"nodeType": "StructDefinition",
									"scope": 1593,
									"src": "360:140:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75f12b21",
									"id": 847,
									"mutability": "mutable",
									"name": "stopped",
									"nameLocation": "520:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "508:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 845,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "508:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 846,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "530:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8e12c0cd",
									"id": 850,
									"mutability": "constant",
									"name": "MATURITY",
									"nameLocation": "566:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "543:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint96",
										"typeString": "uint96"
									},
									"typeName": {
										"id": 848,
										"name": "uint96",
										"nodeType": "ElementaryTypeName",
										"src": "543:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint96",
											"typeString": "uint96"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 849,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "577:8:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15552000_by_1",
											"typeString": "int_const 15552000"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "af7568dd",
									"id": 853,
									"mutability": "mutable",
									"name": "total_staked",
									"nameLocation": "604:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "592:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 851,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "592:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 852,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "619:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 855,
									"mutability": "mutable",
									"name": "DIFFICULTY",
									"nameLocation": "640:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "627:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 854,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "627:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "109cf399",
									"id": 857,
									"mutability": "mutable",
									"name": "DIFFICULTY_INTERVAL",
									"nameLocation": "691:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "679:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 856,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "679:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6db08f25",
									"id": 860,
									"mutability": "immutable",
									"name": "CREDI",
									"nameLocation": "741:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "717:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 859,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 858,
											"name": "IERC20",
											"nameLocations": [
												"717:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "717:6:8"
										},
										"referencedDeclaration": 315,
										"src": "717:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b109beec",
									"id": 863,
									"mutability": "immutable",
									"name": "xCREDI",
									"nameLocation": "777:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "753:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 862,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 861,
											"name": "IERC20",
											"nameLocations": [
												"753:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "753:6:8"
										},
										"referencedDeclaration": 315,
										"src": "753:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 868,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "835:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "796:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
										"typeString": "mapping(uint256 => struct ModuleX.StakeDetails)"
									},
									"typeName": {
										"id": 867,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 864,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "805:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "796:30:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
											"typeString": "mapping(uint256 => struct ModuleX.StakeDetails)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 866,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 865,
												"name": "StakeDetails",
												"nameLocations": [
													"813:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 844,
												"src": "813:12:8"
											},
											"referencedDeclaration": 844,
											"src": "813:12:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
												"typeString": "struct ModuleX.StakeDetails"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 871,
									"mutability": "mutable",
									"name": "stakes_count",
									"nameLocation": "861:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "848:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 869,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "848:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 870,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "876:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8f4729b7",
									"id": 874,
									"mutability": "mutable",
									"name": "pending_payments",
									"nameLocation": "896:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "884:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 872,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "884:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 873,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "915:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "de88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d",
									"id": 878,
									"name": "RewardAdded",
									"nameLocation": "931:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "948:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "943:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "943:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:13:8"
									},
									"src": "925:31:8"
								},
								{
									"anonymous": false,
									"eventSelector": "1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337",
									"id": 884,
									"name": "RewardWithdrawn",
									"nameLocation": "968:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1000:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "984:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1009:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1004:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1004:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:33:8"
									},
									"src": "962:55:8"
								},
								{
									"anonymous": false,
									"eventSelector": "24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146",
									"id": 896,
									"name": "Staked",
									"nameLocation": "1029:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1052:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1036:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1063:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1058:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1058:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"indexed": false,
												"mutability": "mutable",
												"name": "maturity",
												"nameLocation": "1080:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1073:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 889,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1073:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "1095:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1090:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1090:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewards_amount",
												"nameLocation": "1114:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1109:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1109:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1035:94:8"
									},
									"src": "1023:107:8"
								},
								{
									"anonymous": false,
									"eventSelector": "03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c",
									"id": 902,
									"name": "CREDIWithdrawn",
									"nameLocation": "1142:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1162:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1157:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1157:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1177:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1172:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1172:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:28:8"
									},
									"src": "1136:49:8"
								},
								{
									"anonymous": false,
									"eventSelector": "67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc19",
									"id": 906,
									"name": "RewardPaid",
									"nameLocation": "1197:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1213:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "1208:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1208:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:15:8"
									},
									"src": "1191:32:8"
								},
								{
									"anonymous": false,
									"eventSelector": "7acc84e34091ae817647a4c49116f5cc07f319078ba80f8f5fde37ea7e25cbd6",
									"id": 908,
									"name": "Stopped",
									"nameLocation": "1235:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1242:2:8"
									},
									"src": "1229:16:8"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "1298:108:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 913,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "1317:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1328:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1317:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 916,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "1333:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 917,
																	"name": "stakes_count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "1344:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1333:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1317:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a496e76616c6964205374616b6520494421",
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1358:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
															},
															"value": "ModuleX:Invalid Stake ID!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
															}
														],
														"id": 912,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1309:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1309:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "1309:77:8"
											},
											{
												"id": 923,
												"nodeType": "PlaceholderStatement",
												"src": "1397:1:8"
											}
										]
									},
									"id": 925,
									"name": "validate_stake",
									"nameLocation": "1262:14:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1282:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1277:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1277:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1276:15:8"
									},
									"src": "1253:153:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "1541:175:8",
										"statements": [
											{
												"expression": {
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 940,
														"name": "CREDI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "1553:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 942,
																"name": "_credi_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "1568:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 941,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1561:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1561:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "1553:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "1553:27:8"
											},
											{
												"expression": {
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 946,
														"name": "xCREDI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "1591:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 948,
																"name": "_xcredi_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "1607:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 947,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1600:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1600:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "1591:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "1591:29:8"
											},
											{
												"expression": {
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 952,
														"name": "DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "1631:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 953,
														"name": "_DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "1653:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1631:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "1631:42:8"
											},
											{
												"expression": {
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 956,
														"name": "DIFFICULTY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "1684:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 957,
														"name": "_DIFFICULTY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "1697:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1684:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "1684:24:8"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 936,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "1522:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1522:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 938,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 935,
												"name": "Ownable",
												"nameLocations": [
													"1514:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1514:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1514:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "_credi_addr",
												"nameLocation": "1434:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1426:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1426:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "_xcredi_addr",
												"nameLocation": "1455:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1447:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1447:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "_DIFFICULTY",
												"nameLocation": "1474:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1469:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "_DIFFICULTY_INTERVAL",
												"nameLocation": "1492:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1487:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1487:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1425:88:8"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1541:0:8"
									},
									"scope": 1593,
									"src": "1414:302:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1600
									],
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "1791:40:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 968,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "1817:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														],
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1809:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 966,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1809:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1809:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 965,
												"id": 970,
												"nodeType": "Return",
												"src": "1802:21:8"
											}
										]
									},
									"functionSelector": "d46149a2",
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCREDIAddress",
									"nameLocation": "1737:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1752:2:8"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1777:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1777:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1776:9:8"
									},
									"scope": 1593,
									"src": "1728:103:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1605
									],
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "1903:41:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 979,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "1929:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														],
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1921:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 977,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1921:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1921:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 976,
												"id": 981,
												"nodeType": "Return",
												"src": "1914:22:8"
											}
										]
									},
									"functionSelector": "7c2fdeb5",
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getxCREDIAddress",
									"nameLocation": "1848:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1864:2:8"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "1889:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1889:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1888:9:8"
									},
									"scope": 1593,
									"src": "1839:105:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1610
									],
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "2011:42:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 988,
														"name": "stakes_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "2029:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2044:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2029:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 987,
												"id": 991,
												"nodeType": "Return",
												"src": "2022:23:8"
											}
										]
									},
									"functionSelector": "b5fa91fe",
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakesCount",
									"nameLocation": "1961:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:2:8"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "2000:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2000:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:6:8"
									},
									"scope": 1593,
									"src": "1952:101:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "2263:193:8",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1009,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "2296:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1011,
																"indexExpression": {
																	"id": 1010,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "2303:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2296:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2313:5:8",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 837,
															"src": "2296:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1013,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "2333:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1015,
																"indexExpression": {
																	"id": 1014,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "2340:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2333:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2350:8:8",
															"memberName": "maturity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 839,
															"src": "2333:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1017,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "2373:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1019,
																"indexExpression": {
																	"id": 1018,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "2380:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2373:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2390:12:8",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 841,
															"src": "2373:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1021,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "2417:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1023,
																"indexExpression": {
																	"id": 1022,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "2424:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2417:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2434:13:8",
															"memberName": "reward_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 843,
															"src": "2417:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1025,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2281:167:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint96_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,uint96,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1008,
												"id": 1026,
												"nodeType": "Return",
												"src": "2274:174:8"
											}
										]
									},
									"functionSelector": "ce325bf8",
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 998,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 995,
													"src": "2118:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 999,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 997,
												"name": "validate_stake",
												"nameLocations": [
													"2103:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 925,
												"src": "2103:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2103:24:8"
										}
									],
									"name": "getStake",
									"nameLocation": "2070:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "2084:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2079:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2078:15:8"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2170:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2162:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2162:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "maturity",
												"nameLocation": "2191:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2186:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2186:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "2215:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2210:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2210:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "reward_amount",
												"nameLocation": "2243:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2238:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2238:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2151:106:8"
									},
									"scope": 1593,
									"src": "2061:395:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "2518:49:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1035,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2543:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2549:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2543:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2536:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 1033,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "2536:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2536:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1032,
												"id": 1038,
												"nodeType": "Return",
												"src": "2529:30:8"
											}
										]
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "time_now",
									"nameLocation": "2473:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:2:8"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2505:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1030,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2505:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2504:8:8"
									},
									"scope": 1593,
									"src": "2464:103:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1622
									],
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "2650:825:8",
										"statements": [
											{
												"assignments": [
													1048
												],
												"declarations": [
													{
														"constant": false,
														"id": 1048,
														"mutability": "mutable",
														"name": "SCALE_FACTOR",
														"nameLocation": "2667:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1155,
														"src": "2662:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1047,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2662:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1050,
												"initialValue": {
													"hexValue": "31653138",
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2682:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2662:24:8"
											},
											{
												"assignments": [
													1052
												],
												"declarations": [
													{
														"constant": false,
														"id": 1052,
														"mutability": "mutable",
														"name": "curr_total",
														"nameLocation": "2702:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1155,
														"src": "2697:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1051,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2697:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1056,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1053,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "2715:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1054,
														"name": "stake_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "2730:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2715:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2697:45:8"
											},
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"mutability": "mutable",
														"name": "low_d",
														"nameLocation": "2758:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1155,
														"src": "2753:10:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1057,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2753:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1059,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "2766:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1060,
														"name": "DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2779:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2766:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2753:45:8"
											},
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "high_d",
														"nameLocation": "2814:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1155,
														"src": "2809:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1063,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2809:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1068,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1065,
														"name": "curr_total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "2823:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1066,
														"name": "DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2834:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2823:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2809:44:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1069,
														"name": "low_d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "2867:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1070,
														"name": "high_d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "2876:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2867:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1153,
													"nodeType": "Block",
													"src": "2985:483:8",
													"statements": [
														{
															"assignments": [
																1081
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1081,
																	"mutability": "mutable",
																	"name": "low_r",
																	"nameLocation": "3005:5:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1153,
																	"src": "3000:10:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1080,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3000:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1098,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1082,
																		"name": "SCALE_FACTOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "3013:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1088,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1085,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1083,
																									"name": "low_d",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1058,
																									"src": "3028:5:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1084,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3036:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "3028:9:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1086,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3027:11:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1087,
																						"name": "DIFFICULTY_INTERVAL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "3039:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3027:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1089,
																					"name": "total_staked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 853,
																					"src": "3061:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3027:46:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1091,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3026:48:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3013:61:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1093,
																				"name": "low_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "3076:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1094,
																				"name": "DIFFICULTY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 855,
																				"src": "3084:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3076:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1096,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3075:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3013:82:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3000:95:8"
														},
														{
															"assignments": [
																1100
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1100,
																	"mutability": "mutable",
																	"name": "high_r",
																	"nameLocation": "3115:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1153,
																	"src": "3110:11:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1099,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3110:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1114,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1101,
																		"name": "SCALE_FACTOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "3124:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1102,
																					"name": "curr_total",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "3138:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1105,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1103,
																						"name": "high_d",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1064,
																						"src": "3151:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1104,
																						"name": "DIFFICULTY_INTERVAL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "3158:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3151:26:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3138:39:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1107,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3137:41:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3124:54:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1109,
																				"name": "high_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1064,
																				"src": "3180:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1110,
																				"name": "DIFFICULTY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 855,
																				"src": "3189:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3180:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1112,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3179:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3124:76:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3110:90:8"
														},
														{
															"assignments": [
																1116
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1116,
																	"mutability": "mutable",
																	"name": "middle_r",
																	"nameLocation": "3220:8:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1153,
																	"src": "3215:13:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1115,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3215:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1118,
															"initialValue": {
																"hexValue": "30",
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3231:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3215:17:8"
														},
														{
															"body": {
																"id": 1142,
																"nodeType": "Block",
																"src": "3299:96:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1131,
																				"name": "middle_r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1116,
																				"src": "3318:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1139,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1134,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1132,
																						"name": "SCALE_FACTOR",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1048,
																						"src": "3330:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1133,
																						"name": "DIFFICULTY_INTERVAL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "3343:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3330:32:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1137,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1135,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1120,
																								"src": "3364:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1136,
																								"name": "DIFFICULTY",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 855,
																								"src": "3368:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3364:14:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1138,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3363:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3330:49:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3318:61:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1141,
																		"nodeType": "ExpressionStatement",
																		"src": "3318:61:8"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1125,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "3269:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1126,
																	"name": "high_d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "3273:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3269:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1143,
															"initializationExpression": {
																"assignments": [
																	1120
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1120,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "3256:1:8",
																		"nodeType": "VariableDeclaration",
																		"scope": 1143,
																		"src": "3251:6:8",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1119,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "3251:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1124,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1121,
																		"name": "low_d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1058,
																		"src": "3258:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3266:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3258:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3251:16:8"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3281:3:8",
																	"subExpression": {
																		"id": 1128,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1120,
																		"src": "3281:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1130,
																"nodeType": "ExpressionStatement",
																"src": "3281:3:8"
															},
															"nodeType": "ForStatement",
															"src": "3247:148:8"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1146,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1144,
																					"name": "low_r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1081,
																					"src": "3417:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1145,
																					"name": "middle_r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "3425:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3417:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1147,
																				"name": "high_r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "3436:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3417:25:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1149,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3416:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1150,
																	"name": "SCALE_FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1048,
																	"src": "3444:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3416:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1046,
															"id": 1152,
															"nodeType": "Return",
															"src": "3409:47:8"
														}
													]
												},
												"id": 1154,
												"nodeType": "IfStatement",
												"src": "2864:604:8",
												"trueBody": {
													"id": 1079,
													"nodeType": "Block",
													"src": "2893:67:8",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1072,
																	"name": "stake_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "2915:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1073,
																				"name": "low_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "2929:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1074,
																				"name": "DIFFICULTY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 855,
																				"src": "2937:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2929:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1076,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2928:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2915:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1046,
															"id": 1078,
															"nodeType": "Return",
															"src": "2908:40:8"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d2d7231f",
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "2584:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "2605:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "2600:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2600:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2599:19:8"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "2639:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2639:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2638:6:8"
									},
									"scope": 1593,
									"src": "2575:900:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1615
									],
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "3541:71:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1161,
															"name": "total_staked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "3559:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1162,
															"name": "DIFFICULTY_INTERVAL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "3572:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3559:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1164,
														"name": "DIFFICULTY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "3594:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3559:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1160,
												"id": 1166,
												"nodeType": "Return",
												"src": "3552:52:8"
											}
										]
									},
									"functionSelector": "b6baffe3",
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDifficulty",
									"nameLocation": "3492:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:2:8"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "3530:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3530:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3529:6:8"
									},
									"scope": 1593,
									"src": "3483:129:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1633
									],
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "3708:900:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3727:8:8",
															"subExpression": {
																"id": 1180,
																"name": "stopped",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "3728:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a53544f5050454421",
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3737:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae6e0d54110718e95446f0f4e86565c7e5f169a2d3f15682ce13c35e6dce1a0a",
																"typeString": "literal_string \"ModuleX:STOPPED!\""
															},
															"value": "ModuleX:STOPPED!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae6e0d54110718e95446f0f4e86565c7e5f169a2d3f15682ce13c35e6dce1a0a",
																"typeString": "literal_string \"ModuleX:STOPPED!\""
															}
														],
														"id": 1179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3719:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3719:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "3719:37:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1186,
																"name": "stake_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "3775:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3790:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3775:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a5374616b6520616d6f756e74206d7573742062652067726561746572207468616e203021",
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3793:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09",
																"typeString": "literal_string \"ModuleX:Stake amount must be greater than 0!\""
															},
															"value": "ModuleX:Stake amount must be greater than 0!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09",
																"typeString": "literal_string \"ModuleX:Stake amount must be greater than 0!\""
															}
														],
														"id": 1185,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3767:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3767:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "3767:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1193,
																"name": "lock_period",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "3859:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1194,
																"name": "MATURITY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "3874:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "3859:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f6421",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3884:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847",
																"typeString": "literal_string \"ModuleX:Use longer lock_period!\""
															},
															"value": "ModuleX:Use longer lock_period!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847",
																"typeString": "literal_string \"ModuleX:Use longer lock_period!\""
															}
														],
														"id": 1192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3851:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "3851:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1202,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "3952:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3952:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1206,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3974:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ModuleX_$1593",
																		"typeString": "contract ModuleX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ModuleX_$1593",
																		"typeString": "contract ModuleX"
																	}
																],
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3966:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1204,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3966:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3966:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1208,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "3981:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1199,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "3929:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3935:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "3929:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3929:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "3929:65:8"
											},
											{
												"assignments": [
													1212
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"mutability": "mutable",
														"name": "maturity",
														"nameLocation": "4013:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1264,
														"src": "4006:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 1211,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "4006:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1217,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1213,
															"name": "time_now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "4024:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																"typeString": "function () view returns (uint96)"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4024:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1215,
														"name": "lock_period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4037:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "4024:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4006:42:8"
											},
											{
												"assignments": [
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "reward_amount",
														"nameLocation": "4064:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1264,
														"src": "4059:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1218,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4059:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1223,
												"initialValue": {
													"arguments": [
														{
															"id": 1221,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "4096:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1220,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "4080:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4080:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4059:50:8"
											},
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "stake_id",
														"nameLocation": "4125:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1264,
														"src": "4120:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1224,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4120:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1227,
												"initialValue": {
													"id": 1226,
													"name": "stakes_count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 871,
													"src": "4136:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4120:28:8"
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1228,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "4159:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
															}
														},
														"id": 1230,
														"indexExpression": {
															"id": 1229,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "4166:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4159:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
															"typeString": "struct ModuleX.StakeDetails storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1232,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "4213:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4213:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1234,
																"name": "maturity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "4250:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"id": 1235,
																"name": "stake_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "4287:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1236,
																"name": "reward_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "4329:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1231,
															"name": "StakeDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "4178:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_StakeDetails_$844_storage_ptr_$",
																"typeString": "type(struct ModuleX.StakeDetails storage pointer)"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"4206:5:8",
															"4240:8:8",
															"4273:12:8",
															"4314:13:8"
														],
														"names": [
															"owner",
															"maturity",
															"stake_amount",
															"reward_amount"
														],
														"nodeType": "FunctionCall",
														"src": "4178:176:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_memory_ptr",
															"typeString": "struct ModuleX.StakeDetails memory"
														}
													},
													"src": "4159:195:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
														"typeString": "struct ModuleX.StakeDetails storage ref"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "4159:195:8"
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1240,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "4375:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1241,
														"name": "stake_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "4391:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4375:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "4375:28:8"
											},
											{
												"expression": {
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1244,
														"name": "pending_payments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "4415:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1245,
														"name": "reward_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "4435:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4415:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "4415:33:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1249,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "4471:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4471:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1251,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "4485:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1252,
															"name": "maturity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "4495:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 1253,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "4505:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1254,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "4519:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1248,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "4464:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint96_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint96,uint256,uint256)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4464:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "EmitStatement",
												"src": "4459:74:8"
											},
											{
												"expression": {
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4544:14:8",
													"subExpression": {
														"id": 1257,
														"name": "stakes_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "4544:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "4544:14:8"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1260,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "4576:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1261,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "4586:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1262,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4575:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1263,
												"nodeType": "Return",
												"src": "4569:31:8"
											}
										]
									},
									"functionSelector": "d93c04a0",
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "3629:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "lock_period",
												"nameLocation": "3642:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "3635:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1169,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3635:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "3660:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "3655:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3655:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3634:39:8"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "3691:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3691:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "3697:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3697:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3690:12:8"
									},
									"scope": 1593,
									"src": "3620:988:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1640
									],
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "4699:586:8",
										"statements": [
											{
												"assignments": [
													1277
												],
												"declarations": [
													{
														"constant": false,
														"id": 1277,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "4731:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "4710:28:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
															"typeString": "struct ModuleX.StakeDetails"
														},
														"typeName": {
															"id": 1276,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1275,
																"name": "StakeDetails",
																"nameLocations": [
																	"4710:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 844,
																"src": "4710:12:8"
															},
															"referencedDeclaration": 844,
															"src": "4710:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1281,
												"initialValue": {
													"baseExpression": {
														"id": 1278,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "4741:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
															"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
														}
													},
													"id": 1280,
													"indexExpression": {
														"id": 1279,
														"name": "stake_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "4748:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4741:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
														"typeString": "struct ModuleX.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4710:47:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1283,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "4776:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4784:5:8",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 837,
																"src": "4776:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1285,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "4793:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4793:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4776:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4807:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9",
																"typeString": "literal_string \"ModuleX:Caller is not the owner\""
															},
															"value": "ModuleX:Caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9",
																"typeString": "literal_string \"ModuleX:Caller is not the owner\""
															}
														],
														"id": 1282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4768:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4768:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "4768:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1292,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "4860:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4860:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1294,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "4874:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4882:8:8",
																"memberName": "maturity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "4874:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "4860:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a4561726c79205769746864726177616c206973206e6f74207065726d697474656421",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4892:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818",
																"typeString": "literal_string \"ModuleX:Early Withdrawal is not permitted!\""
															},
															"value": "ModuleX:Early Withdrawal is not permitted!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818",
																"typeString": "literal_string \"ModuleX:Early Withdrawal is not permitted!\""
															}
														],
														"id": 1291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4852:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4852:85:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "4852:85:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1301,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "4957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4965:13:8",
																"memberName": "reward_amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 843,
																"src": "4957:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4981:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4957:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a4e6f7468696e6720746f20636c61696d",
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4984:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763",
																"typeString": "literal_string \"ModuleX:Nothing to claim\""
															},
															"value": "ModuleX:Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763",
																"typeString": "literal_string \"ModuleX:Nothing to claim\""
															}
														],
														"id": 1300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4949:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4949:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "4949:62:8"
											},
											{
												"assignments": [
													1309
												],
												"declarations": [
													{
														"constant": false,
														"id": 1309,
														"mutability": "mutable",
														"name": "reward_amount",
														"nameLocation": "5027:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "5022:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1308,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5022:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1312,
												"initialValue": {
													"expression": {
														"id": 1310,
														"name": "details",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "5043:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
															"typeString": "struct ModuleX.StakeDetails storage pointer"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5051:13:8",
													"memberName": "reward_amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 843,
													"src": "5043:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5022:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1316,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "5095:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5095:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1318,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "5109:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1313,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "5075:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5082:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "5075:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5075:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "5075:48:8"
											},
											{
												"expression": {
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1321,
														"name": "pending_payments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "5139:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1322,
														"name": "reward_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "5159:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5139:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "5139:33:8"
											},
											{
												"expression": {
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1325,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "5183:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails storage pointer"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5191:13:8",
														"memberName": "reward_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "5183:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5207:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5183:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "5183:25:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1332,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "5236:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1331,
														"name": "RewardPaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "5225:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5225:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "EmitStatement",
												"src": "5220:25:8"
											},
											{
												"expression": {
													"id": 1335,
													"name": "reward_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1309,
													"src": "5264:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1274,
												"id": 1336,
												"nodeType": "Return",
												"src": "5257:20:8"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1270,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1267,
													"src": "4670:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1271,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1269,
												"name": "validate_stake",
												"nameLocations": [
													"4655:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 925,
												"src": "4655:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4655:24:8"
										}
									],
									"name": "claim",
									"nameLocation": "4625:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "4636:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "4631:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4631:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:15:8"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "4688:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4688:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4687:6:8"
									},
									"scope": 1593,
									"src": "4616:669:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "5393:456:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1351,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "5413:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5422:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5413:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207468616e207a65726f21",
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5425:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															},
															"value": "ModuleX:amount must be greater than zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															}
														],
														"id": 1350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5404:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "5404:65:8"
											},
											{
												"assignments": [
													1359
												],
												"declarations": [
													{
														"constant": false,
														"id": 1359,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "5501:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1401,
														"src": "5480:28:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
															"typeString": "struct ModuleX.StakeDetails"
														},
														"typeName": {
															"id": 1358,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1357,
																"name": "StakeDetails",
																"nameLocations": [
																	"5480:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 844,
																"src": "5480:12:8"
															},
															"referencedDeclaration": 844,
															"src": "5480:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1363,
												"initialValue": {
													"baseExpression": {
														"id": 1360,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "5511:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
															"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
														}
													},
													"id": 1362,
													"indexExpression": {
														"id": 1361,
														"name": "stake_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "5518:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5511:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
														"typeString": "struct ModuleX.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5480:47:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1365,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "5546:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5546:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1367,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "5560:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5568:8:8",
																"memberName": "maturity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "5560:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "5546:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a4275726e7420746f6b656e7321",
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5578:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																"typeString": "literal_string \"ModuleX:Burnt tokens!\""
															},
															"value": "ModuleX:Burnt tokens!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																"typeString": "literal_string \"ModuleX:Burnt tokens!\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5538:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5538:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "5538:64:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1374,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "5622:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1375,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "5632:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5640:12:8",
																"memberName": "stake_amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 841,
																"src": "5632:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5622:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a496e73756666696369656e742062616c616e636521",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5654:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															},
															"value": "ModuleX:Insufficient balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															}
														],
														"id": 1373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5614:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5614:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "5614:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1384,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "5717:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5717:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1386,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "5731:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																	"typeString": "struct ModuleX.StakeDetails storage pointer"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5739:12:8",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 841,
															"src": "5731:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1381,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "5698:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5704:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "5698:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5698:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "5698:54:8"
											},
											{
												"expression": {
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1390,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "5763:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails storage pointer"
															}
														},
														"id": 1392,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5771:12:8",
														"memberName": "stake_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 841,
														"src": "5763:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1393,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "5787:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5763:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "5763:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1397,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "5824:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "5834:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1396,
														"name": "CREDIWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "5809:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1400,
												"nodeType": "EmitStatement",
												"src": "5804:37:8"
											}
										]
									},
									"functionSelector": "ac00500f",
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1345,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1344,
												"name": "onlyOwner",
												"nameLocations": [
													"5353:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5353:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5353:9:8"
										},
										{
											"arguments": [
												{
													"id": 1347,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1340,
													"src": "5378:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1348,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1346,
												"name": "validate_stake",
												"nameLocations": [
													"5363:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 925,
												"src": "5363:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5363:24:8"
										}
									],
									"name": "withdrawCREDI",
									"nameLocation": "5302:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "5321:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "5316:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5316:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5336:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "5331:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5331:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:28:8"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5393:0:8"
									},
									"scope": 1593,
									"src": "5293:556:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "5936:633:8",
										"statements": [
											{
												"assignments": [
													1411
												],
												"declarations": [
													{
														"constant": false,
														"id": 1411,
														"mutability": "mutable",
														"name": "total_amount",
														"nameLocation": "5952:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1488,
														"src": "5947:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1410,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5947:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"hexValue": "30",
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5967:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5947:21:8"
											},
											{
												"body": {
													"id": 1471,
													"nodeType": "Block",
													"src": "6031:407:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1426,
																				"name": "stake_ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1405,
																				"src": "6054:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1428,
																			"indexExpression": {
																				"id": 1427,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "6064:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6054:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1429,
																			"name": "stakes_count",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 871,
																			"src": "6069:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6054:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d6f64756c65583a496e76616c6964205374616b6520494421",
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6083:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																			"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
																		},
																		"value": "ModuleX:Invalid Stake ID!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																			"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
																		}
																	],
																	"id": 1425,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6046:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6046:65:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1433,
															"nodeType": "ExpressionStatement",
															"src": "6046:65:8"
														},
														{
															"assignments": [
																1436
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1436,
																	"mutability": "mutable",
																	"name": "details",
																	"nameLocation": "6147:7:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1471,
																	"src": "6126:28:8",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails"
																	},
																	"typeName": {
																		"id": 1435,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1434,
																			"name": "StakeDetails",
																			"nameLocations": [
																				"6126:12:8"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 844,
																			"src": "6126:12:8"
																		},
																		"referencedDeclaration": 844,
																		"src": "6126:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																			"typeString": "struct ModuleX.StakeDetails"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1442,
															"initialValue": {
																"baseExpression": {
																	"id": 1437,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "6157:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1441,
																"indexExpression": {
																	"baseExpression": {
																		"id": 1438,
																		"name": "stake_ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "6164:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1440,
																	"indexExpression": {
																		"id": 1439,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "6174:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6164:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6157:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6126:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1444,
																				"name": "time_now",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1040,
																				"src": "6200:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																					"typeString": "function () view returns (uint96)"
																				}
																			},
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6200:10:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"expression": {
																				"id": 1446,
																				"name": "details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1436,
																				"src": "6214:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																					"typeString": "struct ModuleX.StakeDetails storage pointer"
																				}
																			},
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6222:8:8",
																			"memberName": "maturity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 839,
																			"src": "6214:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"src": "6200:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d6f64756c65583a4275726e7420746f6b656e7321",
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6232:23:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																			"typeString": "literal_string \"ModuleX:Burnt tokens!\""
																		},
																		"value": "ModuleX:Burnt tokens!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																			"typeString": "literal_string \"ModuleX:Burnt tokens!\""
																		}
																	],
																	"id": 1443,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6192:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6192:64:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1451,
															"nodeType": "ExpressionStatement",
															"src": "6192:64:8"
														},
														{
															"expression": {
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1452,
																	"name": "total_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1411,
																	"src": "6271:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 1453,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "6287:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																			"typeString": "struct ModuleX.StakeDetails storage pointer"
																		}
																	},
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6295:12:8",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "6287:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6271:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1456,
															"nodeType": "ExpressionStatement",
															"src": "6271:36:8"
														},
														{
															"expression": {
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1457,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "6322:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																			"typeString": "struct ModuleX.StakeDetails storage pointer"
																		}
																	},
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6330:12:8",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "6322:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6345:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6322:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1462,
															"nodeType": "ExpressionStatement",
															"src": "6322:24:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1464,
																			"name": "stake_ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "6391:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1466,
																		"indexExpression": {
																			"id": 1465,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "6401:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6391:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1467,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "6405:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																				"typeString": "struct ModuleX.StakeDetails storage pointer"
																			}
																		},
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6413:12:8",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 841,
																		"src": "6405:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1463,
																	"name": "CREDIWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "6376:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6376:50:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1470,
															"nodeType": "EmitStatement",
															"src": "6371:55:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1418,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "5995:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1419,
															"name": "stake_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "5999:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6009:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5999:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5995:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1472,
												"initializationExpression": {
													"assignments": [
														1415
													],
													"declarations": [
														{
															"constant": false,
															"id": 1415,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5988:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1472,
															"src": "5983:6:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1414,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5983:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1417,
													"initialValue": {
														"hexValue": "30",
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5992:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5983:10:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6017:3:8",
														"subExpression": {
															"id": 1422,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "6017:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1424,
													"nodeType": "ExpressionStatement",
													"src": "6017:3:8"
												},
												"nodeType": "ForStatement",
												"src": "5979:459:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1474,
																"name": "total_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "6456:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6471:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6456:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a546f74616c20616d6f756e74206973203021",
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6474:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881",
																"typeString": "literal_string \"ModuleX:Total amount is 0!\""
															},
															"value": "ModuleX:Total amount is 0!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881",
																"typeString": "literal_string \"ModuleX:Total amount is 0!\""
															}
														],
														"id": 1473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6448:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6448:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "6448:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1483,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6534:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6534:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1485,
															"name": "total_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "6548:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1480,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "6515:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6521:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "6515:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6515:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1487,
												"nodeType": "ExpressionStatement",
												"src": "6515:46:8"
											}
										]
									},
									"functionSelector": "bc854352",
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1408,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1407,
												"name": "onlyOwner",
												"nameLocations": [
													"5921:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5921:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5921:9:8"
										}
									],
									"name": "batchWithdrawCREDI",
									"nameLocation": "5866:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "stake_ids",
												"nameLocation": "5901:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "5885:25:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1403,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "5885:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1404,
													"nodeType": "ArrayTypeName",
													"src": "5885:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:27:8"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5936:0:8"
									},
									"scope": 1593,
									"src": "5857:712:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "6625:190:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1495,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "6645:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6654:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6645:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207468616e207a65726f21",
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6657:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															},
															"value": "ModuleX:amount must be greater than zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															}
														],
														"id": 1494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6636:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6636:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1500,
												"nodeType": "ExpressionStatement",
												"src": "6636:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1504,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6736:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6736:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1508,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6758:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ModuleX_$1593",
																		"typeString": "contract ModuleX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ModuleX_$1593",
																		"typeString": "contract ModuleX"
																	}
																],
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6750:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1506,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6750:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6750:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1510,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "6765:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1501,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "6712:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6719:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "6712:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6712:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "6712:60:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1514,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "6800:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1513,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "6788:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1516,
												"nodeType": "EmitStatement",
												"src": "6783:24:8"
											}
										]
									},
									"functionSelector": "beceed39",
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addRewards",
									"nameLocation": "6586:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6602:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "6597:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6597:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6596:13:8"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6625:0:8"
									},
									"scope": 1593,
									"src": "6577:238:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "6897:206:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1532,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6941:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ModuleX_$1593",
																					"typeString": "contract ModuleX"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ModuleX_$1593",
																					"typeString": "contract ModuleX"
																				}
																			],
																			"id": 1531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6933:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1530,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6933:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6933:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1528,
																		"name": "xCREDI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "6916:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6923:9:8",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 272,
																	"src": "6916:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6916:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1535,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "6951:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1536,
																	"name": "pending_payments",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "6960:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6951:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6916:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a496e73756666696369656e742062616c616e636521",
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6978:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															},
															"value": "ModuleX:Insufficient balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															}
														],
														"id": 1527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6908:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6908:102:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1541,
												"nodeType": "ExpressionStatement",
												"src": "6908:102:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1545,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "7041:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1546,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "7045:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1542,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "7021:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7028:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "7021:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7021:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1548,
												"nodeType": "ExpressionStatement",
												"src": "7021:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1550,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "7084:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1551,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "7088:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1549,
														"name": "RewardWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "7068:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1553,
												"nodeType": "EmitStatement",
												"src": "7063:32:8"
											}
										]
									},
									"functionSelector": "d6ef7af0",
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1525,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1524,
												"name": "onlyOwner",
												"nameLocations": [
													"6882:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6882:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6882:9:8"
										}
									],
									"name": "withdrawRewards",
									"nameLocation": "6832:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6856:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "6848:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6848:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6865:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "6860:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6860:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6847:25:8"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6897:0:8"
									},
									"scope": 1593,
									"src": "6823:280:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "7223:135:8",
										"statements": [
											{
												"expression": {
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1566,
														"name": "DIFFICULTY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "7234:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1567,
														"name": "_DIFFICULTY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "7247:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7234:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1569,
												"nodeType": "ExpressionStatement",
												"src": "7234:24:8"
											},
											{
												"expression": {
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1570,
														"name": "DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "7269:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1571,
														"name": "_DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "7291:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7269:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "7269:42:8"
											},
											{
												"expression": {
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1574,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "7322:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1575,
														"name": "_total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "7337:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7322:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "7322:28:8"
											}
										]
									},
									"functionSelector": "c9ea62c1",
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1564,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1563,
												"name": "onlyOwner",
												"nameLocations": [
													"7208:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7208:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7208:9:8"
										}
									],
									"name": "setDifficulty",
									"nameLocation": "7120:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "_DIFFICULTY",
												"nameLocation": "7139:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "7134:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7134:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "_DIFFICULTY_INTERVAL",
												"nameLocation": "7157:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "7152:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7152:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "_total_staked",
												"nameLocation": "7184:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "7179:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7179:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7133:65:8"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7223:0:8"
									},
									"scope": 1593,
									"src": "7111:247:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "7406:58:8",
										"statements": [
											{
												"expression": {
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1584,
														"name": "stopped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "7417:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7427:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7417:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1587,
												"nodeType": "ExpressionStatement",
												"src": "7417:14:8"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1588,
														"name": "Stopped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "7447:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7447:9:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1590,
												"nodeType": "EmitStatement",
												"src": "7442:14:8"
											}
										]
									},
									"functionSelector": "07da68f5",
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1582,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1581,
												"name": "onlyOwner",
												"nameLocations": [
													"7391:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7391:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7391:9:8"
										}
									],
									"name": "stop",
									"nameLocation": "7375:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7379:2:8"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7406:0:8"
									},
									"scope": 1593,
									"src": "7366:98:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1594,
							"src": "278:7191:8",
							"usedErrors": [
								13,
								18,
								327
							],
							"usedEvents": [
								24,
								878,
								884,
								896,
								902,
								906,
								908
							]
						}
					],
					"src": "33:7438:8"
				},
				"id": 8
			},
			"contracts/interface/IModuleX.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IModuleX.sol",
					"exportedSymbols": {
						"IModuleX": [
							1641
						]
					},
					"id": 1642,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1595,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IModuleX",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1641,
							"linearizedBaseContracts": [
								1641
							],
							"name": "IModuleX",
							"nameLocation": "71:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d46149a2",
									"id": 1600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCREDIAddress",
									"nameLocation": "97:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:9"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "137:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:9:9"
									},
									"scope": 1641,
									"src": "88:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7c2fdeb5",
									"id": 1605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getxCREDIAddress",
									"nameLocation": "163:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "179:2:9"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "204:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:9"
									},
									"scope": 1641,
									"src": "154:59:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b5fa91fe",
									"id": 1610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStakesCount",
									"nameLocation": "230:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:2:9"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "269:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:6:9"
									},
									"scope": 1641,
									"src": "221:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6baffe3",
									"id": 1615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDifficulty",
									"nameLocation": "296:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "309:2:9"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "334:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "334:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:6:9"
									},
									"scope": 1641,
									"src": "287:53:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d2d7231f",
									"id": 1622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "361:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "382:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "377:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "377:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:19:9"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "413:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "413:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:6:9"
									},
									"scope": 1641,
									"src": "352:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d93c04a0",
									"id": 1633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "436:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "lock_period",
												"nameLocation": "449:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "442:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1623,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "467:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "462:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "462:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:33:9"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "497:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "492:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "492:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "xCREDI_reward",
												"nameLocation": "512:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "507:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "507:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:35:9"
									},
									"scope": 1641,
									"src": "427:100:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "379607f5",
									"id": 1640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "544:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "555:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "550:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "550:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "549:15:9"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "xCREDI_reward",
												"nameLocation": "587:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "582:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "582:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "581:20:9"
									},
									"scope": 1641,
									"src": "535:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1642,
							"src": "61:546:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:576:9"
				},
				"id": 9
			}
		}
	}
}