{
	"id": "997e13febe7d73ff2a8f7281c440e0cf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MarketingStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\n\r\ncontract MarketingStaking is Ownable, ReentrancyGuard\r\n{\r\n    using SafeERC20 for IERC20;\r\n    struct PoolInfo\r\n    {\r\n        IERC20 staking_token;\r\n        uint96 start_epoch;\r\n        IERC20 rewards_token;\r\n        uint96 end_epoch;       \r\n        uint stake_amount;\r\n        uint reward_rate;\r\n        uint reward_rate_cumsum;\r\n        uint available_rewards;\r\n        uint96 last_update_epoch;\r\n    }\r\n\r\n    struct StakeDetails\r\n    {\r\n        uint stake_amount;\r\n        uint reward_amount;\r\n        uint reward_rate_cumsum;\r\n    }\r\n\r\n    uint96 constant public CLAIM_PERIOD = 40 days;\r\n    uint constant public SCALE_FACTOR = 1e21;\r\n    PoolInfo[] private pools;\r\n    mapping (address => mapping (uint => StakeDetails)) public stakes;\r\n\r\n    event RewardAdded(uint indexed pool_id, uint amount);\r\n    event RewardWithdrawn(uint indexed pool_id, address indexed to, uint amount);\r\n    event PoolCreated(uint indexed pool_id, address staking_token, address rewards_token, uint96 start_epoch, uint96 end_epoch, uint scale_factor);\r\n    event PoolUpdated(uint indexed pool_id, uint stake_amount, uint reward_rate, uint reward_rate_cumsum, uint96 last_update_epoch);\r\n    event StakeUpdated(uint indexed pool_id, address indexed user, uint stake_amount, uint reward_amount, uint reward_rate_cumsum);\r\n    event StakeWithdrawn(uint indexed pool_id, address indexed user, uint amount);\r\n    event RewardPaid(uint indexed pool_id, address indexed user, uint amount);\r\n\r\n    modifier validate_pool(uint pool_id) \r\n    {\r\n        require(pool_id > 0 && pool_id < pools.length, \"MarketingStaking:Invalid Pool ID!\");\r\n        _;\r\n    }\r\n    \r\n    constructor() Ownable(_msgSender())\r\n    { \r\n        pools.push(PoolInfo({\r\n            staking_token: IERC20(address(0)),\r\n            rewards_token: IERC20(address(0)),\r\n            start_epoch: 0,\r\n            end_epoch: 0,\r\n            stake_amount: 0,\r\n            reward_rate: 0,\r\n            reward_rate_cumsum: 0,\r\n            last_update_epoch: 0,\r\n            available_rewards: 0\r\n        }));\r\n    }\r\n\r\n    function getPool(uint pool_id) external validate_pool(pool_id) view \r\n        returns (address staking_token,\r\n            address rewards_token,\r\n            uint96 start_epoch,\r\n            uint96 end_epoch,\r\n            uint stake_amount,\r\n            uint reward_rate,\r\n            uint reward_rate_cumsum,\r\n            uint96 last_update_epoch,\r\n            uint available_rewards)\r\n    {\r\n        PoolInfo storage pool = pools[pool_id];\r\n        return (address(pool.staking_token),\r\n            address(pool.rewards_token),\r\n            pool.start_epoch,\r\n            pool.end_epoch,\r\n            pool.stake_amount,\r\n            pool.reward_rate,\r\n            pool.reward_rate_cumsum,\r\n            pool.last_update_epoch,\r\n            pool.available_rewards);\r\n    }\r\n  \r\n    function getPoolsCount() external view returns (uint) \r\n    {\r\n        return pools.length - 1;\r\n    }\r\n\r\n    function time_now() private view returns(uint96)\r\n    {\r\n        return uint96(block.timestamp);\r\n    }\r\n\r\n    function createPool(address staking_token, address rewards_token, uint96 start_epoch, uint96 end_epoch, uint reward_amount, uint transfer_reward_amount) external onlyOwner returns(uint)\r\n    {\r\n        require(time_now() < end_epoch, \"MarketingStaking:End time must be greater than time_now!\");\r\n        start_epoch = uint96(Math.max(start_epoch, time_now()));\r\n        require(start_epoch < end_epoch, \"MarketingStaking:Start time must be less than end time!\");     \r\n        uint reward_rate = SCALE_FACTOR*reward_amount/(end_epoch - start_epoch);\r\n        pools.push(PoolInfo({\r\n            staking_token: IERC20(staking_token),\r\n            rewards_token: IERC20(rewards_token),\r\n            start_epoch: start_epoch,\r\n            end_epoch: end_epoch,\r\n            stake_amount: 0,\r\n            reward_rate: reward_rate,\r\n            reward_rate_cumsum: 0,\r\n            last_update_epoch: start_epoch,\r\n            available_rewards: transfer_reward_amount\r\n        }));\r\n        uint pool_id = pools.length - 1;\r\n        emit PoolCreated(pool_id, staking_token, rewards_token, start_epoch, end_epoch, SCALE_FACTOR);\r\n        if(transfer_reward_amount > 0)\r\n        {\r\n            IERC20(rewards_token).safeTransferFrom(_msgSender(), address(this), transfer_reward_amount);\r\n            emit RewardAdded(pool_id, transfer_reward_amount);\r\n        }\r\n        return pool_id;\r\n    }\r\n\r\n    function updatePool(uint pool_id, address user) internal\r\n    {\r\n        PoolInfo storage pool = pools[pool_id];\r\n        uint96 new_epoch = uint96(Math.max(pool.last_update_epoch, Math.min(time_now(), pool.end_epoch)));\r\n        if (pool.stake_amount > 0 && new_epoch > pool.last_update_epoch)\r\n        {\r\n            pool.reward_rate_cumsum += (new_epoch - pool.last_update_epoch)*pool.reward_rate/pool.stake_amount;\r\n        }\r\n        pool.last_update_epoch = new_epoch;\r\n\r\n        if(user != address(0))\r\n        {\r\n            StakeDetails storage user_stake = stakes[user][pool_id];\r\n            if(user_stake.stake_amount > 0)\r\n            {\r\n                user_stake.reward_amount += user_stake.stake_amount*(pool.reward_rate_cumsum - user_stake.reward_rate_cumsum)/SCALE_FACTOR;              \r\n            }\r\n            user_stake.reward_rate_cumsum = pool.reward_rate_cumsum;\r\n        }\r\n    }\r\n\r\n    function stake(uint pool_id, uint stake_amount) external nonReentrant validate_pool(pool_id)\r\n    {\r\n        PoolInfo storage pool = pools[pool_id];\r\n        require(time_now() >= pool.start_epoch && time_now() < pool.end_epoch, \"MarketingStaking:Pool is not active!\");\r\n        require(stake_amount > 0, \"MarketingStaking:stake_amount must be greater than 0!\");\r\n\r\n        pool.staking_token.safeTransferFrom(_msgSender(), address(this), stake_amount); \r\n        updatePool(pool_id, _msgSender());\r\n        StakeDetails storage user_stake = stakes[_msgSender()][pool_id];\r\n        user_stake.stake_amount += stake_amount;\r\n        pool.stake_amount += stake_amount;\r\n        emit StakeUpdated(pool_id, _msgSender(), user_stake.stake_amount, user_stake.reward_amount, user_stake.reward_rate_cumsum);\r\n        emit PoolUpdated(pool_id, pool.stake_amount, pool.reward_rate, pool.reward_rate_cumsum, pool.last_update_epoch);       \r\n    }\r\n\r\n    function getUserRewards(uint pool_id, address user) external view validate_pool(pool_id) returns(uint)\r\n    {\r\n        StakeDetails storage user_stake = stakes[user][pool_id];\r\n        PoolInfo storage pool = pools[pool_id];\r\n        uint epoch_now = Math.max(pool.last_update_epoch, Math.min(time_now(), pool.end_epoch));\r\n        uint reward_rate_cumsum = pool.reward_rate_cumsum;\r\n        if (pool.stake_amount > 0 && epoch_now > pool.last_update_epoch)\r\n        {\r\n            reward_rate_cumsum = pool.reward_rate_cumsum + (epoch_now - pool.last_update_epoch)*pool.reward_rate/pool.stake_amount;\r\n        }\r\n        return user_stake.reward_amount + user_stake.stake_amount*(reward_rate_cumsum - user_stake.reward_rate_cumsum)/SCALE_FACTOR;\r\n    }\r\n\r\n    function claim(uint pool_id) external nonReentrant validate_pool(pool_id)\r\n    {\r\n        updatePool(pool_id, _msgSender());\r\n        StakeDetails storage details = stakes[_msgSender()][pool_id];\r\n        PoolInfo storage pool = pools[pool_id];\r\n        require(time_now() >= pool.end_epoch, \"MarketingStaking:Early Withdrawal is not permitted!\"); \r\n        require(details.reward_amount > 0, \"MarketingStaking:Nothing to claim\");\r\n        require(pool.available_rewards >= details.reward_amount, \"MarketingStaking:Insufficient balance!\");\r\n        if(details.stake_amount > 0)\r\n        {\r\n            pool.staking_token.safeTransfer(_msgSender(), details.stake_amount);\r\n            pool.stake_amount -= details.stake_amount;\r\n            emit StakeWithdrawn(pool_id, _msgSender(), details.stake_amount);\r\n            details.stake_amount = 0;\r\n        }\r\n\r\n        pool.rewards_token.safeTransfer(_msgSender(), details.reward_amount);\r\n        pool.available_rewards -= details.reward_amount;\r\n        emit RewardPaid(pool_id, _msgSender(), details.reward_amount);\r\n        details.reward_amount = 0;\r\n        details.reward_rate_cumsum = 0;\r\n        emit StakeUpdated(pool_id, _msgSender(), details.stake_amount, details.reward_amount, details.reward_rate_cumsum);\r\n        emit PoolUpdated(pool_id, pool.stake_amount, pool.reward_rate, pool.reward_rate_cumsum, pool.last_update_epoch);\r\n    }\r\n\r\n    function withdrawStake(uint pool_id) external nonReentrant validate_pool(pool_id)\r\n    {\r\n        updatePool(pool_id, _msgSender());\r\n        StakeDetails storage details = stakes[_msgSender()][pool_id];\r\n        PoolInfo storage pool = pools[pool_id];\r\n        require(time_now() >= pool.end_epoch, \"MarketingStaking:Early Withdrawal is not permitted!\"); \r\n        \r\n        if(details.stake_amount > 0)\r\n        {\r\n            pool.staking_token.safeTransfer(_msgSender(), details.stake_amount);\r\n            pool.stake_amount -= details.stake_amount;\r\n            emit StakeWithdrawn(pool_id, _msgSender(), details.stake_amount);\r\n            details.stake_amount = 0;\r\n            emit StakeUpdated(pool_id, _msgSender(), details.stake_amount, details.reward_amount, details.reward_rate_cumsum);\r\n            emit PoolUpdated(pool_id, pool.stake_amount, pool.reward_rate, pool.reward_rate_cumsum, pool.last_update_epoch);\r\n        }  \r\n    }\r\n\r\n    function addRewards(uint pool_id, uint amount) external nonReentrant validate_pool(pool_id) \r\n    {\r\n        require (amount > 0, \"MarketingStaking:amount must be greater than zero!\");\r\n        PoolInfo storage pool = pools[pool_id];\r\n        pool.rewards_token.safeTransferFrom(_msgSender(), address(this), amount);\r\n        pool.available_rewards += amount;\r\n        emit RewardAdded(pool_id, amount);\r\n    }\r\n\r\n    function withdrawRewards(uint pool_id, address to, uint amount) external onlyOwner validate_pool(pool_id)\r\n    {\r\n        require (amount > 0, \"MarketingStaking:amount must be greater than zero!\");\r\n        PoolInfo storage pool = pools[pool_id];\r\n        require(pool.available_rewards >= amount, \"MarketingStaking:Insufficient balance!\");\r\n        require(time_now() >= pool.end_epoch + CLAIM_PERIOD || pool.stake_amount == 0);\r\n        pool.rewards_token.safeTransfer(to, amount);\r\n        pool.available_rewards -= amount;\r\n        emit RewardWithdrawn(pool_id, to, amount);\r\n    }\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212204bf8158af3d7c8d7ab245c9b0ba1283d2ba519cf21a5f114d82ca2474455a98464736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204bf8158af3d7c8d7ab245c9b0ba1283d2ba519cf21a5f114d82ca2474455a98464736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B EXTCALL ISZERO DUP11 RETURN 0xD7 0xC8 0xD7 0xAB 0x24 TLOAD SWAP12 SIGNEXTEND LOG1 0x28 RETURNDATASIZE 0x2B 0xA5 NOT 0xCF 0x21 0xA5 CALL EQ 0xD8 0x2C LOG2 SELFBALANCE PREVRANDAO SSTORE 0xA9 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204bf8158af3d7c8d7ab245c9b0ba1283d2ba519cf21a5f114d82ca2474455a98464736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B EXTCALL ISZERO DUP11 RETURN 0xD7 0xC8 0xD7 0xAB 0x24 TLOAD SWAP12 SIGNEXTEND LOG1 0x28 RETURNDATASIZE 0x2B 0xA5 NOT 0xCF 0x21 0xA5 CALL EQ 0xD8 0x2C LOG2 SELFBALANCE PREVRANDAO SSTORE 0xA9 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204bf8158af3d7c8d7ab245c9b0ba1283d2ba519cf21a5f114d82ca2474455a98464736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"contracts/MarketingStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122061b36661da90b87345825985ba821999b58f7def490800742b0e993e53299a3064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122061b36661da90b87345825985ba821999b58f7def490800742b0e993e53299a3064736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xB366 PUSH2 0xDA90 0xB8 PUSH20 0x45825985BA821999B58F7DEF490800742B0E993E MSTORE8 0x29 SWAP11 ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "657:1315:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122061b36661da90b87345825985ba821999b58f7def490800742b0e993e53299a3064736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xB366 PUSH2 0xDA90 0xB8 PUSH20 0x45825985BA821999B58F7DEF490800742B0E993E MSTORE8 0x29 SWAP11 ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "657:1315:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061b36661da90b87345825985ba821999b58f7def490800742b0e993e53299a3064736f6c634300081e0033",
									".code": [
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"contracts/MarketingStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 872,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:32144  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:32144  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212200e34978469e08d1a432cc143b5351f95037681e1af8ee5e5d8badb70b6adc37f64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212200e34978469e08d1a432cc143b5351f95037681e1af8ee5e5d8badb70b6adc37f64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE CALLVALUE SWAP8 DUP5 PUSH10 0xE08D1A432CC143B5351F SWAP6 SUB PUSH23 0x81E1AF8EE5E5D8BADB70B6ADC37F64736F6C634300081E STOP CALLER ",
							"sourceMap": "281:31863:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212200e34978469e08d1a432cc143b5351f95037681e1af8ee5e5d8badb70b6adc37f64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE CALLVALUE SWAP8 DUP5 PUSH10 0xE08D1A432CC143B5351F SWAP6 SUB PUSH23 0x81E1AF8EE5E5D8BADB70B6ADC37F64736F6C634300081E STOP CALLER ",
							"sourceMap": "281:31863:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"add512(uint256,uint256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"invModPrime(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mul512(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"mulShr(uint256,uint256,uint8)": "infinite",
								"mulShr(uint256,uint256,uint8,enum Math.Rounding)": "infinite",
								"saturatingAdd(uint256,uint256)": "infinite",
								"saturatingMul(uint256,uint256)": "infinite",
								"saturatingSub(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200e34978469e08d1a432cc143b5351f95037681e1af8ee5e5d8badb70b6adc37f64736f6c634300081e0033",
									".code": [
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"contracts/MarketingStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220fa9d6728c7f1dba733ed459f5d1d52f48b15c4d0bc788df1878a8baa4b26db1a64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fa9d6728c7f1dba733ed459f5d1d52f48b15c4d0bc788df1878a8baa4b26db1a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL SWAP14 PUSH8 0x28C7F1DBA733ED45 SWAP16 TSTORE SAR MSTORE DELEGATECALL DUP12 ISZERO 0xC4 0xD0 0xBC PUSH25 0x8DF1878A8BAA4B26DB1A64736F6C634300081E003300000000 ",
							"sourceMap": "769:34173:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fa9d6728c7f1dba733ed459f5d1d52f48b15c4d0bc788df1878a8baa4b26db1a64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL SWAP14 PUSH8 0x28C7F1DBA733ED45 SWAP16 TSTORE SAR MSTORE DELEGATECALL DUP12 ISZERO 0xC4 0xD0 0xBC PUSH25 0x8DF1878A8BAA4B26DB1A64736F6C634300081E003300000000 ",
							"sourceMap": "769:34173:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fa9d6728c7f1dba733ed459f5d1d52f48b15c4d0bc788df1878a8baa4b26db1a64736f6c634300081e0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"contracts/MarketingStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MarketingStaking.sol": {
				"MarketingStaking": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "staking_token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "rewards_token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "start_epoch",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "end_epoch",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scale_factor",
									"type": "uint256"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward_rate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward_rate_cumsum",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "last_update_epoch",
									"type": "uint96"
								}
							],
							"name": "PoolUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward_rate_cumsum",
									"type": "uint256"
								}
							],
							"name": "StakeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeWithdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CLAIM_PERIOD",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SCALE_FACTOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staking_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewards_token",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "start_epoch",
									"type": "uint96"
								},
								{
									"internalType": "uint96",
									"name": "end_epoch",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "reward_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "transfer_reward_amount",
									"type": "uint256"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "staking_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewards_token",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "start_epoch",
									"type": "uint96"
								},
								{
									"internalType": "uint96",
									"name": "end_epoch",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward_rate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward_rate_cumsum",
									"type": "uint256"
								},
								{
									"internalType": "uint96",
									"name": "last_update_epoch",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "available_rewards",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolsCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward_rate_cumsum",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MarketingStaking.sol\":358:10800  contract MarketingStaking is Ownable, ReentrancyGuard... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MarketingStaking.sol\":2001:2412  constructor() Ownable(_msgSender())... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":160:211   */\n  mstore\n    /* \"#utility.yul\":133:151   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup1\n  dup1\n  sstore\n    /* \"contracts/MarketingStaking.sol\":2065:2403  PoolInfo({... */\n  0x40\n  dup1\n  mload\n  0x0120\n  dup2\n  add\n  dup3\n  mstore\n  0x00\n  dup1\n  dup3\n  mstore\n  0x20\n  dup3\n  add\n  dup2\n  dup2\n  mstore\n  swap3\n  dup3\n  add\n  dup2\n  dup2\n  mstore\n  0x60\n  dup4\n  add\n  dup3\n  dup2\n  mstore\n  0x80\n  dup5\n  add\n  dup4\n  dup2\n  mstore\n  0xa0\n  dup6\n  add\n  dup5\n  dup2\n  mstore\n  0xc0\n  dup7\n  add\n  dup6\n  dup2\n  mstore\n  0xe0\n  dup8\n  add\n  dup7\n  dup2\n  mstore\n  0x0100\n  dup9\n  add\n  dup8\n  dup2\n  mstore\n    /* \"contracts/MarketingStaking.sol\":2054:2059  pools */\n  0x02\n    /* \"contracts/MarketingStaking.sol\":2054:2404  pools.push(PoolInfo({... */\n  dup1\n  sload\n  swap12\n  dup13\n  add\n  dup2\n  sstore\n  swap1\n  swap8\n  mstore\n  swap7\n  mload\n  swap8\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap9\n  dup10\n  and\n  shl(0xa0, 0x01)\n  sub(shl(0x60, 0x01), 0x01)\n  swap3\n  dup4\n  and\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  or\n  0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace\n  0x07\n  swap1\n  swap13\n  mul\n  swap12\n  dup13\n  add\n  sstore\n  swap6\n  mload\n  swap5\n  mload\n  swap5\n  swap1\n  swap9\n  and\n  swap4\n  dup9\n  and\n  swap1\n  swap5\n  mul\n  swap3\n  swap1\n  swap3\n  or\n  0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf\n  dup9\n  add\n  sstore\n  mload\n  0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0\n  dup8\n  add\n  sstore\n  mload\n  0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad1\n  dup7\n  add\n  sstore\n  mload\n  0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad2\n  dup6\n  add\n  sstore\n  swap1\n  mload\n  0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad3\n  dup5\n  add\n  sstore\n  mload\n  0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad4\n  swap1\n  swap3\n  add\n  dup1\n  sload\n  not(sub(shl(0x60, 0x01), 0x01))\n  and\n  swap3\n  swap1\n  swap2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/MarketingStaking.sol\":358:10800  contract MarketingStaking is Ownable, ReentrancyGuard... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:217   */\ntag_19:\n    /* \"contracts/MarketingStaking.sol\":358:10800  contract MarketingStaking is Ownable, ReentrancyGuard... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MarketingStaking.sol\":358:10800  contract MarketingStaking is Ownable, ReentrancyGuard... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b0472f0\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xce4b5bbe\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xce4b5bbe\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xfc41aa09\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xfdeef425\n      eq\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_19:\n      dup1\n      0x7b0472f0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7db7e3bf\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb4ac6860\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_18:\n      dup1\n      0x379607f5\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x584b62a1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5d9d2318\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      dup1\n      0x068bcd8d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x21241dfe\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x25d5971f\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/MarketingStaking.sol\":2420:3193  function getPool(uint pool_id) external validate_pool(pool_id) view ... */\n    tag_3:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":628:660   */\n      swap11\n      dup12\n      and\n        /* \"#utility.yul\":610:661   */\n      dup2\n      mstore\n        /* \"#utility.yul\":697:729   */\n      swap10\n      swap1\n      swap9\n      and\n        /* \"#utility.yul\":692:694   */\n      0x20\n        /* \"#utility.yul\":677:695   */\n      dup11\n      add\n        /* \"#utility.yul\":670:730   */\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":766:805   */\n      swap7\n      dup8\n      and\n        /* \"#utility.yul\":746:764   */\n      swap8\n      dup10\n      add\n        /* \"#utility.yul\":739:806   */\n      swap8\n      swap1\n      swap8\n      mstore\n        /* \"#utility.yul\":842:881   */\n      swap4\n      dup6\n      and\n        /* \"#utility.yul\":837:839   */\n      0x60\n        /* \"#utility.yul\":822:840   */\n      dup9\n      add\n        /* \"#utility.yul\":815:882   */\n      mstore\n        /* \"#utility.yul\":913:916   */\n      0x80\n        /* \"#utility.yul\":898:917   */\n      dup8\n      add\n        /* \"#utility.yul\":891:926   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":648:651   */\n      0xa0\n        /* \"#utility.yul\":942:961   */\n      dup7\n      add\n        /* \"#utility.yul\":935:970   */\n      mstore\n        /* \"#utility.yul\":1001:1004   */\n      0xc0\n        /* \"#utility.yul\":986:1005   */\n      dup6\n      add\n        /* \"#utility.yul\":979:1014   */\n      mstore\n        /* \"#utility.yul\":1051:1090   */\n      and\n        /* \"#utility.yul\":1045:1048   */\n      0xe0\n        /* \"#utility.yul\":1030:1049   */\n      dup4\n      add\n        /* \"#utility.yul\":1023:1091   */\n      mstore\n        /* \"#utility.yul\":1122:1125   */\n      0x0100\n        /* \"#utility.yul\":1107:1126   */\n      dup3\n      add\n        /* \"#utility.yul\":1100:1135   */\n      mstore\n        /* \"#utility.yul\":597:600   */\n      0x0120\n        /* \"#utility.yul\":582:601   */\n      add\n        /* \"contracts/MarketingStaking.sol\":2420:3193  function getPool(uint pool_id) external validate_pool(pool_id) view ... */\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MarketingStaking.sol\":904:949  uint96 constant public CLAIM_PERIOD = 40 days */\n    tag_4:\n      tag_27\n        /* \"contracts/MarketingStaking.sol\":942:949  40 days */\n      0x34bc00\n        /* \"contracts/MarketingStaking.sol\":904:949  uint96 constant public CLAIM_PERIOD = 40 days */\n      dup2\n      jump\n    tag_27:\n      mload(0x40)\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":1308:1347   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1290:1348   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1278:1280   */\n      0x20\n        /* \"#utility.yul\":1263:1281   */\n      add\n        /* \"contracts/MarketingStaking.sol\":904:949  uint96 constant public CLAIM_PERIOD = 40 days */\n      tag_25\n        /* \"#utility.yul\":1146:1354   */\n      jump\n        /* \"contracts/MarketingStaking.sol\":8839:9784  function withdrawStake(uint pool_id) external nonReentrant validate_pool(pool_id)... */\n    tag_5:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/MarketingStaking.sol\":7435:8831  function claim(uint pool_id) external nonReentrant validate_pool(pool_id)... */\n    tag_6:\n      tag_31\n      tag_35\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"contracts/MarketingStaking.sol\":1034:1099  mapping (address => mapping (uint => StakeDetails)) public stakes */\n    tag_7:\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      0x03\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\n    tag_37:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2044:2069   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":2100:2102   */\n      0x20\n        /* \"#utility.yul\":2085:2103   */\n      dup5\n      add\n        /* \"#utility.yul\":2078:2112   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":2128:2146   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2121:2155   */\n      mstore\n        /* \"#utility.yul\":2032:2034   */\n      0x60\n        /* \"#utility.yul\":2017:2035   */\n      add\n        /* \"contracts/MarketingStaking.sol\":1034:1099  mapping (address => mapping (uint => StakeDetails)) public stakes */\n      tag_25\n        /* \"#utility.yul\":1842:2161   */\n      jump\n        /* \"contracts/MarketingStaking.sol\":3424:4809  function createPool(address staking_token, address rewards_token, uint96 start_epoch, uint96 end_epoch, uint reward_amount, uint transfer_reward_amount) external onlyOwner returns(uint)... */\n    tag_8:\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":3142:3167   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3130:3132   */\n      0x20\n        /* \"#utility.yul\":3115:3133   */\n      add\n        /* \"contracts/MarketingStaking.sol\":3424:4809  function createPool(address staking_token, address rewards_token, uint96 start_epoch, uint96 end_epoch, uint reward_amount, uint transfer_reward_amount) external onlyOwner returns(uint)... */\n      tag_25\n        /* \"#utility.yul\":2996:3173   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_31\n      tag_50\n      jump\t// in\n        /* \"contracts/MarketingStaking.sol\":5732:6667  function stake(uint pool_id, uint stake_amount) external nonReentrant validate_pool(pool_id)... */\n    tag_10:\n      tag_31\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n        /* \"contracts/MarketingStaking.sol\":10210:10795  function withdrawRewards(uint pool_id, address to, uint amount) external onlyOwner validate_pool(pool_id)... */\n    tag_11:\n      tag_31\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4100:4151   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4088:4090   */\n      0x20\n        /* \"#utility.yul\":4073:4091   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_25\n        /* \"#utility.yul\":3954:4157   */\n      jump\n        /* \"contracts/MarketingStaking.sol\":3203:3305  function getPoolsCount() external view returns (uint) ... */\n    tag_13:\n      tag_43\n      tag_64\n      jump\t// in\n        /* \"contracts/MarketingStaking.sol\":956:996  uint constant public SCALE_FACTOR = 1e21 */\n    tag_14:\n      tag_43\n        /* \"contracts/MarketingStaking.sol\":992:996  1e21 */\n      0x3635c9adc5dea00000\n        /* \"contracts/MarketingStaking.sol\":956:996  uint constant public SCALE_FACTOR = 1e21 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_31\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"contracts/MarketingStaking.sol\":9792:10202  function addRewards(uint pool_id, uint amount) external nonReentrant validate_pool(pool_id) ... */\n    tag_16:\n      tag_31\n      tag_74\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"contracts/MarketingStaking.sol\":6675:7427  function getUserRewards(uint pool_id, address user) external view validate_pool(pool_id) returns(uint)... */\n    tag_17:\n      tag_43\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"contracts/MarketingStaking.sol\":2420:3193  function getPool(uint pool_id) external validate_pool(pool_id) view ... */\n    tag_24:\n        /* \"contracts/MarketingStaking.sol\":2507:2528  address staking_token */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":2543:2564  address rewards_token */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":2579:2597  uint96 start_epoch */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":2612:2628  uint96 end_epoch */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":2643:2660  uint stake_amount */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":2675:2691  uint reward_rate */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":2706:2729  uint reward_rate_cumsum */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":2744:2768  uint96 last_update_epoch */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":2783:2805  uint available_rewards */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":2474:2481  pool_id */\n      dup10\n        /* \"contracts/MarketingStaking.sol\":1904:1905  0 */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":1894:1901  pool_id */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":1894:1905  pool_id > 0 */\n      gt\n        /* \"contracts/MarketingStaking.sol\":1894:1931  pool_id > 0 && pool_id < pools.length */\n      dup1\n      iszero\n      tag_82\n      jumpi\n      pop\n        /* \"contracts/MarketingStaking.sol\":1919:1924  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":1919:1931  pools.length */\n      sload\n        /* \"contracts/MarketingStaking.sol\":1909:1931  pool_id < pools.length */\n      dup2\n      lt\n        /* \"contracts/MarketingStaking.sol\":1894:1931  pool_id > 0 && pool_id < pools.length */\n    tag_82:\n        /* \"contracts/MarketingStaking.sol\":1886:1969  require(pool_id > 0 && pool_id < pools.length, \"MarketingStaking:Invalid Pool ID!\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"contracts/MarketingStaking.sol\":2823:2844  PoolInfo storage pool */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":2847:2852  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":2853:2860  pool_id */\n      dup13\n        /* \"contracts/MarketingStaking.sol\":2847:2861  pools[pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_88\n      jumpi\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/MarketingStaking.sol\":2823:2861  PoolInfo storage pool = pools[pool_id] */\n      swap1\n      pop\n        /* \"contracts/MarketingStaking.sol\":2888:2892  pool */\n      dup1\n        /* \"contracts/MarketingStaking.sol\":2888:2906  pool.staking_token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/MarketingStaking.sol\":2930:2934  pool */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":2930:2948  pool.rewards_token */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/MarketingStaking.sol\":2964:2968  pool */\n      dup3\n        /* \"contracts/MarketingStaking.sol\":2964:2980  pool.start_epoch */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/MarketingStaking.sol\":2995:2999  pool */\n      dup4\n        /* \"contracts/MarketingStaking.sol\":2995:3009  pool.end_epoch */\n      0x01\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/MarketingStaking.sol\":3024:3028  pool */\n      dup5\n        /* \"contracts/MarketingStaking.sol\":3024:3041  pool.stake_amount */\n      0x02\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":3056:3060  pool */\n      dup6\n        /* \"contracts/MarketingStaking.sol\":3056:3072  pool.reward_rate */\n      0x03\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":3087:3091  pool */\n      dup7\n        /* \"contracts/MarketingStaking.sol\":3087:3110  pool.reward_rate_cumsum */\n      0x04\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":3125:3129  pool */\n      dup8\n        /* \"contracts/MarketingStaking.sol\":3125:3147  pool.last_update_epoch */\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/MarketingStaking.sol\":3162:3166  pool */\n      dup9\n        /* \"contracts/MarketingStaking.sol\":3162:3184  pool.available_rewards */\n      0x05\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":2872:3185  return (address(pool.staking_token),... */\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      swap11\n      pop\n      pop\n        /* \"contracts/MarketingStaking.sol\":2420:3193  function getPool(uint pool_id) external validate_pool(pool_id) view ... */\n      pop\n      swap2\n      swap4\n      swap6\n      swap8\n      swap10\n      swap1\n      swap3\n      swap5\n      swap7\n      swap9\n      pop\n      jump\t// out\n        /* \"contracts/MarketingStaking.sol\":8839:9784  function withdrawStake(uint pool_id) external nonReentrant validate_pool(pool_id)... */\n    tag_33:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_92\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_93\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/MarketingStaking.sol\":8912:8919  pool_id */\n      dup1\n        /* \"contracts/MarketingStaking.sol\":1904:1905  0 */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":1894:1901  pool_id */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":1894:1905  pool_id > 0 */\n      gt\n        /* \"contracts/MarketingStaking.sol\":1894:1931  pool_id > 0 && pool_id < pools.length */\n      dup1\n      iszero\n      tag_95\n      jumpi\n      pop\n        /* \"contracts/MarketingStaking.sol\":1919:1924  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":1919:1931  pools.length */\n      sload\n        /* \"contracts/MarketingStaking.sol\":1909:1931  pool_id < pools.length */\n      dup2\n      lt\n        /* \"contracts/MarketingStaking.sol\":1894:1931  pool_id > 0 && pool_id < pools.length */\n    tag_95:\n        /* \"contracts/MarketingStaking.sol\":1886:1969  require(pool_id > 0 && pool_id < pools.length, \"MarketingStaking:Invalid Pool ID!\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_96:\n        /* \"contracts/MarketingStaking.sol\":8937:8970  updatePool(pool_id, _msgSender()) */\n      tag_99\n        /* \"contracts/MarketingStaking.sol\":8948:8955  pool_id */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/MarketingStaking.sol\":8937:8947  updatePool */\n      tag_102\n        /* \"contracts/MarketingStaking.sol\":8937:8970  updatePool(pool_id, _msgSender()) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/MarketingStaking.sol\":8981:9009  StakeDetails storage details */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":9012:9032  stakes[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MarketingStaking.sol\":9012:9018  stakes */\n      0x03\n        /* \"contracts/MarketingStaking.sol\":9012:9032  stakes[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/MarketingStaking.sol\":9012:9041  stakes[_msgSender()][pool_id] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/MarketingStaking.sol\":9076:9081  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":9076:9090  pools[pool_id] */\n      dup1\n      sload\n        /* \"contracts/MarketingStaking.sol\":9012:9041  stakes[_msgSender()][pool_id] */\n      swap2\n      swap3\n        /* \"contracts/MarketingStaking.sol\":8981:9009  StakeDetails storage details */\n      swap2\n        /* \"contracts/MarketingStaking.sol\":9033:9040  pool_id */\n      dup6\n      swap1\n        /* \"contracts/MarketingStaking.sol\":9076:9090  pools[pool_id] */\n      dup2\n      lt\n      tag_105\n      jumpi\n      tag_105\n      tag_89\n      jump\t// in\n    tag_105:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x07\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/MarketingStaking.sol\":9123:9137  pool.end_epoch */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":9076:9090  pools[pool_id] */\n      swap1\n      swap2\n      pop\n      shl(0xa0, 0x01)\n        /* \"contracts/MarketingStaking.sol\":9123:9137  pool.end_epoch */\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/MarketingStaking.sol\":3392:3407  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":9109:9137  time_now() >= pool.end_epoch */\n      and\n      lt\n      iszero\n        /* \"contracts/MarketingStaking.sol\":9101:9193  require(time_now() >= pool.end_epoch, \"MarketingStaking:Early Withdrawal is not permitted!\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_111\n      jump\t// in\n    tag_109:\n        /* \"contracts/MarketingStaking.sol\":9218:9238  details.stake_amount */\n      dup2\n      sload\n        /* \"contracts/MarketingStaking.sol\":9218:9242  details.stake_amount > 0 */\n      iszero\n        /* \"contracts/MarketingStaking.sol\":9215:9775  if(details.stake_amount > 0)... */\n      tag_112\n      jumpi\n        /* \"contracts/MarketingStaking.sol\":9268:9335  pool.staking_token.safeTransfer(_msgSender(), details.stake_amount) */\n      tag_113\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/MarketingStaking.sol\":9300:9312  _msgSender() */\n    tag_114:\n        /* \"contracts/MarketingStaking.sol\":9314:9334  details.stake_amount */\n      dup4\n      sload\n        /* \"contracts/MarketingStaking.sol\":9268:9286  pool.staking_token */\n      dup4\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n        /* \"contracts/MarketingStaking.sol\":9268:9335  pool.staking_token.safeTransfer(_msgSender(), details.stake_amount) */\n      swap1\n        /* \"contracts/MarketingStaking.sol\":9268:9299  pool.staking_token.safeTransfer */\n      tag_115\n        /* \"contracts/MarketingStaking.sol\":9268:9335  pool.staking_token.safeTransfer(_msgSender(), details.stake_amount) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/MarketingStaking.sol\":9371:9391  details.stake_amount */\n      dup2\n      sload\n        /* \"contracts/MarketingStaking.sol\":9350:9367  pool.stake_amount */\n      0x02\n      dup3\n      add\n        /* \"contracts/MarketingStaking.sol\":9350:9391  pool.stake_amount -= details.stake_amount */\n      dup1\n      sload\n        /* \"contracts/MarketingStaking.sol\":9371:9391  details.stake_amount */\n      0x00\n      swap1\n        /* \"contracts/MarketingStaking.sol\":9350:9391  pool.stake_amount -= details.stake_amount */\n      tag_116\n      swap1\n        /* \"contracts/MarketingStaking.sol\":9371:9391  details.stake_amount */\n      dup5\n      swap1\n        /* \"contracts/MarketingStaking.sol\":9350:9391  pool.stake_amount -= details.stake_amount */\n      tag_117\n      jump\t// in\n    tag_116:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/MarketingStaking.sol\":9449:9469  details.stake_amount */\n      dup2\n      sload\n        /* \"contracts/MarketingStaking.sol\":9411:9470  StakeWithdrawn(pool_id, _msgSender(), details.stake_amount) */\n      mload(0x40)\n        /* \"#utility.yul\":3142:3167   */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"contracts/MarketingStaking.sol\":9426:9433  pool_id */\n      dup6\n      swap1\n        /* \"contracts/MarketingStaking.sol\":9411:9470  StakeWithdrawn(pool_id, _msgSender(), details.stake_amount) */\n      0x459d5aef2c549903c1eeb1736f5728845d5ccf82537ddd5bf8035795eee89263\n      swap1\n        /* \"#utility.yul\":3130:3132   */\n      0x20\n        /* \"#utility.yul\":3115:3133   */\n      add\n        /* \"contracts/MarketingStaking.sol\":9411:9470  StakeWithdrawn(pool_id, _msgSender(), details.stake_amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MarketingStaking.sol\":9508:9509  0 */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":9485:9509  details.stake_amount = 0 */\n      dup3\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/MarketingStaking.sol\":9551:9563  _msgSender() */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":9529:9637  StakeUpdated(pool_id, _msgSender(), details.stake_amount, details.reward_amount, details.reward_rate_cumsum) */\n      and\n        /* \"contracts/MarketingStaking.sol\":9542:9549  pool_id */\n      dup5\n        /* \"contracts/MarketingStaking.sol\":9529:9637  StakeUpdated(pool_id, _msgSender(), details.stake_amount, details.reward_amount, details.reward_rate_cumsum) */\n      0x8fe70e917ad578cbb5b0779aa52ee3f23afa39c5295542125059f2a4e98cbbfe\n        /* \"contracts/MarketingStaking.sol\":9565:9572  details */\n      dup5\n        /* \"contracts/MarketingStaking.sol\":9565:9585  details.stake_amount */\n      0x00\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":9587:9594  details */\n      dup6\n        /* \"contracts/MarketingStaking.sol\":9587:9608  details.reward_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":9610:9617  details */\n      dup7\n        /* \"contracts/MarketingStaking.sol\":9610:9636  details.reward_rate_cumsum */\n      0x02\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":9529:9637  StakeUpdated(pool_id, _msgSender(), details.stake_amount, details.reward_amount, details.reward_rate_cumsum) */\n      mload(0x40)\n      tag_121\n      swap4\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":2044:2069   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":2100:2102   */\n      0x20\n        /* \"#utility.yul\":2085:2103   */\n      dup4\n      add\n        /* \"#utility.yul\":2078:2112   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2143:2145   */\n      0x40\n        /* \"#utility.yul\":2128:2146   */\n      dup3\n      add\n        /* \"#utility.yul\":2121:2155   */\n      mstore\n        /* \"#utility.yul\":2032:2034   */\n      0x60\n        /* \"#utility.yul\":2017:2035   */\n      add\n      swap1\n        /* \"#utility.yul\":1842:2161   */\n      jump\n        /* \"contracts/MarketingStaking.sol\":9529:9637  StakeUpdated(pool_id, _msgSender(), details.stake_amount, details.reward_amount, details.reward_rate_cumsum) */\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MarketingStaking.sol\":9678:9695  pool.stake_amount */\n      0x02\n      dup2\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":9697:9713  pool.reward_rate */\n      0x03\n      dup3\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":9715:9738  pool.reward_rate_cumsum */\n      0x04\n      dup4\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":9740:9762  pool.last_update_epoch */\n      0x06\n      dup5\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":9657:9763  PoolUpdated(pool_id, pool.stake_amount, pool.reward_rate, pool.reward_rate_cumsum, pool.last_update_epoch) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6106:6131   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":6162:6164   */\n      0x20\n        /* \"#utility.yul\":6147:6165   */\n      dup6\n      add\n        /* \"#utility.yul\":6140:6174   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":6190:6208   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":6183:6217   */\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":9740:9762  pool.last_update_epoch */\n      and\n        /* \"#utility.yul\":6248:6250   */\n      0x60\n        /* \"#utility.yul\":6233:6251   */\n      dup3\n      add\n        /* \"#utility.yul\":6226:6293   */\n      mstore\n        /* \"contracts/MarketingStaking.sol\":9669:9676  pool_id */\n      dup5\n      swap1\n        /* \"contracts/MarketingStaking.sol\":9657:9763  PoolUpdated(pool_id, pool.stake_amount, pool.reward_rate, pool.reward_rate_cumsum, pool.last_update_epoch) */\n      0xe9d4ced29dfd1b7392aa77b7ea3220d8318a5a65cd900f4e40e9d816d11d84f2\n      swap1\n        /* \"#utility.yul\":6093:6096   */\n      0x80\n        /* \"#utility.yul\":6078:6097   */\n      add\n        /* \"contracts/MarketingStaking.sol\":9657:9763  PoolUpdated(pool_id, pool.stake_amount, pool.reward_rate, pool.reward_rate_cumsum, pool.last_update_epoch) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MarketingStaking.sol\":9215:9775  if(details.stake_amount > 0)... */\n    tag_112:\n        /* \"contracts/MarketingStaking.sol\":8926:9784  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_124\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n    tag_124:\n        /* \"contracts/MarketingStaking.sol\":8839:9784  function withdrawStake(uint pool_id) external nonReentrant validate_pool(pool_id)... */\n      pop\n      jump\t// out\n        /* \"contracts/MarketingStaking.sol\":7435:8831  function claim(uint pool_id) external nonReentrant validate_pool(pool_id)... */\n    tag_36:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_127\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_93\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/MarketingStaking.sol\":7500:7507  pool_id */\n      dup1\n        /* \"contracts/MarketingStaking.sol\":1904:1905  0 */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":1894:1901  pool_id */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":1894:1905  pool_id > 0 */\n      gt\n        /* \"contracts/MarketingStaking.sol\":1894:1931  pool_id > 0 && pool_id < pools.length */\n      dup1\n      iszero\n      tag_129\n      jumpi\n      pop\n        /* \"contracts/MarketingStaking.sol\":1919:1924  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":1919:1931  pools.length */\n      sload\n        /* \"contracts/MarketingStaking.sol\":1909:1931  pool_id < pools.length */\n      dup2\n      lt\n        /* \"contracts/MarketingStaking.sol\":1894:1931  pool_id > 0 && pool_id < pools.length */\n    tag_129:\n        /* \"contracts/MarketingStaking.sol\":1886:1969  require(pool_id > 0 && pool_id < pools.length, \"MarketingStaking:Invalid Pool ID!\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_130:\n        /* \"contracts/MarketingStaking.sol\":7525:7558  updatePool(pool_id, _msgSender()) */\n      tag_133\n        /* \"contracts/MarketingStaking.sol\":7536:7543  pool_id */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/MarketingStaking.sol\":8937:8947  updatePool */\n      tag_102\n        /* \"contracts/MarketingStaking.sol\":8937:8970  updatePool(pool_id, _msgSender()) */\n      jump\t// in\n        /* \"contracts/MarketingStaking.sol\":7525:7558  updatePool(pool_id, _msgSender()) */\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/MarketingStaking.sol\":7569:7597  StakeDetails storage details */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":7600:7620  stakes[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MarketingStaking.sol\":7600:7606  stakes */\n      0x03\n        /* \"contracts/MarketingStaking.sol\":7600:7620  stakes[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/MarketingStaking.sol\":7600:7629  stakes[_msgSender()][pool_id] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/MarketingStaking.sol\":7664:7669  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":7664:7678  pools[pool_id] */\n      dup1\n      sload\n        /* \"contracts/MarketingStaking.sol\":7600:7629  stakes[_msgSender()][pool_id] */\n      swap2\n      swap3\n        /* \"contracts/MarketingStaking.sol\":7569:7597  StakeDetails storage details */\n      swap2\n        /* \"contracts/MarketingStaking.sol\":7621:7628  pool_id */\n      dup6\n      swap1\n        /* \"contracts/MarketingStaking.sol\":7664:7678  pools[pool_id] */\n      dup2\n      lt\n      tag_137\n      jumpi\n      tag_137\n      tag_89\n      jump\t// in\n    tag_137:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x07\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/MarketingStaking.sol\":7711:7725  pool.end_epoch */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":7664:7678  pools[pool_id] */\n      swap1\n      swap2\n      pop\n      shl(0xa0, 0x01)\n        /* \"contracts/MarketingStaking.sol\":7711:7725  pool.end_epoch */\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/MarketingStaking.sol\":3392:3407  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":7697:7725  time_now() >= pool.end_epoch */\n      and\n      lt\n      iszero\n        /* \"contracts/MarketingStaking.sol\":7689:7781  require(time_now() >= pool.end_epoch, \"MarketingStaking:Early Withdrawal is not permitted!\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_111\n      jump\t// in\n    tag_140:\n        /* \"contracts/MarketingStaking.sol\":7825:7826  0 */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":7801:7808  details */\n      dup3\n        /* \"contracts/MarketingStaking.sol\":7801:7822  details.reward_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":7801:7826  details.reward_amount > 0 */\n      gt\n        /* \"contracts/MarketingStaking.sol\":7793:7864  require(details.reward_amount > 0, \"MarketingStaking:Nothing to claim\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6506:6508   */\n      0x20\n        /* \"contracts/MarketingStaking.sol\":7793:7864  require(details.reward_amount > 0, \"MarketingStaking:Nothing to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6488:6509   */\n      mstore\n        /* \"#utility.yul\":6545:6547   */\n      0x21\n        /* \"#utility.yul\":6525:6543   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6518:6548   */\n      mstore\n        /* \"#utility.yul\":6584:6618   */\n      0x4d61726b6574696e675374616b696e673a4e6f7468696e6720746f20636c6169\n        /* \"#utility.yul\":6564:6582   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6557:6619   */\n      mstore\n      shl(0xf8, 0x6d)\n        /* \"#utility.yul\":6635:6653   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6628:6659   */\n      mstore\n        /* \"#utility.yul\":6676:6695   */\n      0x84\n      add\n        /* \"contracts/MarketingStaking.sol\":7793:7864  require(details.reward_amount > 0, \"MarketingStaking:Nothing to claim\") */\n      tag_84\n        /* \"#utility.yul\":6304:6701   */\n      jump\n        /* \"contracts/MarketingStaking.sol\":7793:7864  require(details.reward_amount > 0, \"MarketingStaking:Nothing to claim\") */\n    tag_142:\n        /* \"contracts/MarketingStaking.sol\":7909:7916  details */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":7909:7930  details.reward_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":7883:7887  pool */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":7883:7905  pool.available_rewards */\n      0x05\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":7883:7930  pool.available_rewards >= details.reward_amount */\n      lt\n      iszero\n        /* \"contracts/MarketingStaking.sol\":7875:7973  require(pool.available_rewards >= details.reward_amount, \"MarketingStaking:Insufficient balance!\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_147\n      jump\t// in\n    tag_145:\n        /* \"contracts/MarketingStaking.sol\":7987:8007  details.stake_amount */\n      dup2\n      sload\n        /* \"contracts/MarketingStaking.sol\":7987:8011  details.stake_amount > 0 */\n      iszero\n        /* \"contracts/MarketingStaking.sol\":7984:8290  if(details.stake_amount > 0)... */\n      tag_148\n      jumpi\n        /* \"contracts/MarketingStaking.sol\":8037:8104  pool.staking_token.safeTransfer(_msgSender(), details.stake_amount) */\n      tag_149\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/MarketingStaking.sol\":8069:8081  _msgSender() */\n      tag_114\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/MarketingStaking.sol\":8037:8104  pool.staking_token.safeTransfer(_msgSender(), details.stake_amount) */\n    tag_149:\n        /* \"contracts/MarketingStaking.sol\":8140:8160  details.stake_amount */\n      dup2\n      sload\n        /* \"contracts/MarketingStaking.sol\":8119:8136  pool.stake_amount */\n      0x02\n      dup3\n      add\n        /* \"contracts/MarketingStaking.sol\":8119:8160  pool.stake_amount -= details.stake_amount */\n      dup1\n      sload\n        /* \"contracts/MarketingStaking.sol\":8140:8160  details.stake_amount */\n      0x00\n      swap1\n        /* \"contracts/MarketingStaking.sol\":8119:8160  pool.stake_amount -= details.stake_amount */\n      tag_151\n      swap1\n        /* \"contracts/MarketingStaking.sol\":8140:8160  details.stake_amount */\n      dup5\n      swap1\n        /* \"contracts/MarketingStaking.sol\":8119:8160  pool.stake_amount -= details.stake_amount */\n      tag_117\n      jump\t// in\n    tag_151:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/MarketingStaking.sol\":8218:8238  details.stake_amount */\n      dup2\n      sload\n        /* \"contracts/MarketingStaking.sol\":8180:8239  StakeWithdrawn(pool_id, _msgSender(), details.stake_amount) */\n      mload(0x40)\n        /* \"#utility.yul\":3142:3167   */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"contracts/MarketingStaking.sol\":8195:8202  pool_id */\n      dup6\n      swap1\n        /* \"contracts/MarketingStaking.sol\":8180:8239  StakeWithdrawn(pool_id, _msgSender(), details.stake_amount) */\n      0x459d5aef2c549903c1eeb1736f5728845d5ccf82537ddd5bf8035795eee89263\n      swap1\n        /* \"#utility.yul\":3130:3132   */\n      0x20\n        /* \"#utility.yul\":3115:3133   */\n      add\n        /* \"contracts/MarketingStaking.sol\":8180:8239  StakeWithdrawn(pool_id, _msgSender(), details.stake_amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MarketingStaking.sol\":8277:8278  0 */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":8254:8278  details.stake_amount = 0 */\n      dup3\n      sstore\n        /* \"contracts/MarketingStaking.sol\":7984:8290  if(details.stake_amount > 0)... */\n    tag_148:\n        /* \"contracts/MarketingStaking.sol\":8302:8370  pool.rewards_token.safeTransfer(_msgSender(), details.reward_amount) */\n      tag_154\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/MarketingStaking.sol\":8348:8369  details.reward_amount */\n      0x01\n      dup1\n      dup6\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":8302:8320  pool.rewards_token */\n      swap1\n      dup5\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n        /* \"contracts/MarketingStaking.sol\":8302:8370  pool.rewards_token.safeTransfer(_msgSender(), details.reward_amount) */\n      swap1\n        /* \"contracts/MarketingStaking.sol\":8302:8333  pool.rewards_token.safeTransfer */\n      tag_115\n        /* \"contracts/MarketingStaking.sol\":8302:8370  pool.rewards_token.safeTransfer(_msgSender(), details.reward_amount) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/MarketingStaking.sol\":8407:8414  details */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":8407:8428  details.reward_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":8381:8385  pool */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":8381:8403  pool.available_rewards */\n      0x05\n      add\n      0x00\n        /* \"contracts/MarketingStaking.sol\":8381:8428  pool.available_rewards -= details.reward_amount */\n      dup3\n      dup3\n      sload\n      tag_156\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_156:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/MarketingStaking.sol\":8478:8499  details.reward_amount */\n      0x01\n      dup3\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":8444:8500  RewardPaid(pool_id, _msgSender(), details.reward_amount) */\n      mload(0x40)\n        /* \"#utility.yul\":3142:3167   */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"contracts/MarketingStaking.sol\":8455:8462  pool_id */\n      dup6\n      swap1\n        /* \"contracts/MarketingStaking.sol\":8444:8500  RewardPaid(pool_id, _msgSender(), details.reward_amount) */\n      0x04492fab062412e7e4e5f46c9e919f1640652946a5e163ad6e6c1c03d87954d2\n      swap1\n        /* \"#utility.yul\":3130:3132   */\n      0x20\n        /* \"#utility.yul\":3115:3133   */\n      add\n        /* \"contracts/MarketingStaking.sol\":8444:8500  RewardPaid(pool_id, _msgSender(), details.reward_amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MarketingStaking.sol\":8535:8536  0 */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":8511:8532  details.reward_amount */\n      0x01\n      dup4\n      add\n        /* \"contracts/MarketingStaking.sol\":8511:8536  details.reward_amount = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/MarketingStaking.sol\":8547:8573  details.reward_rate_cumsum */\n      0x02\n      dup4\n      add\n        /* \"contracts/MarketingStaking.sol\":8547:8577  details.reward_rate_cumsum = 0 */\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/MarketingStaking.sol\":8615:8627  _msgSender() */\n      tag_120\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/MarketingStaking.sol\":3424:4809  function createPool(address staking_token, address rewards_token, uint96 start_epoch, uint96 end_epoch, uint reward_amount, uint transfer_reward_amount) external onlyOwner returns(uint)... */\n    tag_46:\n        /* \"contracts/MarketingStaking.sol\":3604:3608  uint */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_164:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":3634:3656  time_now() < end_epoch */\n      dup5\n      and\n        /* \"contracts/MarketingStaking.sol\":3392:3407  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":3634:3656  time_now() < end_epoch */\n      and\n      lt\n        /* \"contracts/MarketingStaking.sol\":3626:3717  require(time_now() < end_epoch, \"MarketingStaking:End time must be greater than time_now!\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7315:7317   */\n      0x20\n        /* \"contracts/MarketingStaking.sol\":3626:3717  require(time_now() < end_epoch, \"MarketingStaking:End time must be greater than time_now!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7297:7318   */\n      mstore\n        /* \"#utility.yul\":7354:7356   */\n      0x38\n        /* \"#utility.yul\":7334:7352   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7327:7357   */\n      mstore\n        /* \"#utility.yul\":7393:7427   */\n      0x4d61726b6574696e675374616b696e673a456e642074696d65206d7573742062\n        /* \"#utility.yul\":7373:7391   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7366:7428   */\n      mstore\n        /* \"#utility.yul\":7464:7490   */\n      0x652067726561746572207468616e2074696d655f6e6f77210000000000000000\n        /* \"#utility.yul\":7444:7462   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7437:7491   */\n      mstore\n        /* \"#utility.yul\":7508:7527   */\n      0x84\n      add\n        /* \"contracts/MarketingStaking.sol\":3626:3717  require(time_now() < end_epoch, \"MarketingStaking:End time must be greater than time_now!\") */\n      tag_84\n        /* \"#utility.yul\":7113:7533   */\n      jump\n        /* \"contracts/MarketingStaking.sol\":3626:3717  require(time_now() < end_epoch, \"MarketingStaking:End time must be greater than time_now!\") */\n    tag_168:\n        /* \"contracts/MarketingStaking.sol\":3749:3782  Math.max(start_epoch, time_now()) */\n      tag_171\n      sub(shl(0x60, 0x01), 0x01)\n      dup7\n      and\n        /* \"contracts/MarketingStaking.sol\":3392:3407  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":3749:3782  Math.max(start_epoch, time_now()) */\n      and\n        /* \"contracts/MarketingStaking.sol\":3749:3757  Math.max */\n      tag_173\n        /* \"contracts/MarketingStaking.sol\":3749:3782  Math.max(start_epoch, time_now()) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/MarketingStaking.sol\":3728:3783  start_epoch = uint96(Math.max(start_epoch, time_now())) */\n      swap5\n      pop\n        /* \"contracts/MarketingStaking.sol\":3816:3825  end_epoch */\n      dup4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":3802:3825  start_epoch < end_epoch */\n      and\n        /* \"contracts/MarketingStaking.sol\":3802:3813  start_epoch */\n      dup6\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":3802:3825  start_epoch < end_epoch */\n      and\n      lt\n        /* \"contracts/MarketingStaking.sol\":3794:3885  require(start_epoch < end_epoch, \"MarketingStaking:Start time must be less than end time!\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7740:7742   */\n      0x20\n        /* \"contracts/MarketingStaking.sol\":3794:3885  require(start_epoch < end_epoch, \"MarketingStaking:Start time must be less than end time!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7722:7743   */\n      mstore\n        /* \"#utility.yul\":7779:7781   */\n      0x37\n        /* \"#utility.yul\":7759:7777   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7752:7782   */\n      mstore\n        /* \"#utility.yul\":7818:7852   */\n      0x4d61726b6574696e675374616b696e673a53746172742074696d65206d757374\n        /* \"#utility.yul\":7798:7816   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7791:7853   */\n      mstore\n        /* \"#utility.yul\":7889:7914   */\n      0x206265206c657373207468616e20656e642074696d6521000000000000000000\n        /* \"#utility.yul\":7869:7887   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7862:7915   */\n      mstore\n        /* \"#utility.yul\":7932:7951   */\n      0x84\n      add\n        /* \"contracts/MarketingStaking.sol\":3794:3885  require(start_epoch < end_epoch, \"MarketingStaking:Start time must be less than end time!\") */\n      tag_84\n        /* \"#utility.yul\":7538:7957   */\n      jump\n        /* \"contracts/MarketingStaking.sol\":3794:3885  require(start_epoch < end_epoch, \"MarketingStaking:Start time must be less than end time!\") */\n    tag_174:\n        /* \"contracts/MarketingStaking.sol\":3901:3917  uint reward_rate */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":3948:3971  end_epoch - start_epoch */\n      tag_177\n        /* \"contracts/MarketingStaking.sol\":3960:3971  start_epoch */\n      dup7\n        /* \"contracts/MarketingStaking.sol\":3948:3957  end_epoch */\n      dup7\n        /* \"contracts/MarketingStaking.sol\":3948:3971  end_epoch - start_epoch */\n      tag_178\n      jump\t// in\n    tag_177:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":3920:3972  SCALE_FACTOR*reward_amount/(end_epoch - start_epoch) */\n      and\n        /* \"contracts/MarketingStaking.sol\":3920:3946  SCALE_FACTOR*reward_amount */\n      tag_179\n        /* \"contracts/MarketingStaking.sol\":3933:3946  reward_amount */\n      dup6\n        /* \"contracts/MarketingStaking.sol\":992:996  1e21 */\n      0x3635c9adc5dea00000\n        /* \"contracts/MarketingStaking.sol\":3920:3946  SCALE_FACTOR*reward_amount */\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"contracts/MarketingStaking.sol\":3920:3972  SCALE_FACTOR*reward_amount/(end_epoch - start_epoch) */\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"contracts/MarketingStaking.sol\":3994:4397  PoolInfo({... */\n      0x40\n      dup1\n      mload\n      0x0120\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup12\n      dup2\n      and\n      dup3\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      dup11\n      dup2\n      and\n      0x20\n      dup5\n      add\n      dup2\n      dup2\n      mstore\n      dup14\n      dup5\n      and\n      swap6\n      dup6\n      add\n      swap6\n      dup7\n      mstore\n      dup12\n      dup4\n      and\n      0x60\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n      0x00\n      0x80\n      dup8\n      add\n      dup2\n      dup2\n      mstore\n      0xa0\n      dup9\n      add\n      dup11\n      dup2\n      mstore\n      0xc0\n      dup10\n      add\n      dup4\n      dup2\n      mstore\n      0xe0\n      dup11\n      add\n      dup16\n      dup2\n      mstore\n      0x0100\n      dup12\n      add\n      swap8\n      dup9\n      mstore\n        /* \"contracts/MarketingStaking.sol\":3983:3988  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":3983:4398  pools.push(PoolInfo({... */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup4\n      sstore\n      dup3\n      dup9\n      mstore\n      swap13\n      mload\n      swap9\n      mload\n      swap9\n      dup13\n      and\n      shl(0xa0, 0x01)\n      swap10\n      dup13\n      and\n      dup11\n      mul\n      or\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace\n      0x07\n      swap1\n      swap3\n      mul\n      swap2\n      dup3\n      add\n      sstore\n      swap13\n      mload\n      swap7\n      mload\n      swap7\n      swap1\n      swap11\n      and\n      swap6\n      dup10\n      and\n      swap1\n      swap7\n      mul\n      swap5\n      swap1\n      swap5\n      or\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf\n      dup12\n      add\n      sstore\n      swap1\n      mload\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0\n      dup11\n      add\n      sstore\n      mload\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad1\n      dup10\n      add\n      sstore\n      swap1\n      mload\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad2\n      dup9\n      add\n      sstore\n      swap1\n      mload\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad3\n      dup8\n      add\n      sstore\n      swap1\n      mload\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad4\n      swap1\n      swap6\n      add\n      dup1\n      sload\n      not(0xffffffffffffffffffffffff)\n      and\n      swap6\n      swap1\n      swap3\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      sstore\n        /* \"contracts/MarketingStaking.sol\":4424:4436  pools.length */\n      sload\n        /* \"contracts/MarketingStaking.sol\":3994:4397  PoolInfo({... */\n      swap3\n      swap4\n      pop\n      swap1\n      swap2\n        /* \"contracts/MarketingStaking.sol\":4424:4440  pools.length - 1 */\n      tag_184\n      swap2\n        /* \"contracts/MarketingStaking.sol\":3983:4398  pools.push(PoolInfo({... */\n      swap1\n        /* \"contracts/MarketingStaking.sol\":4424:4440  pools.length - 1 */\n      tag_117\n      jump\t// in\n    tag_184:\n        /* \"contracts/MarketingStaking.sol\":4456:4544  PoolCreated(pool_id, staking_token, rewards_token, start_epoch, end_epoch, SCALE_FACTOR) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8853:8885   */\n      dup13\n      dup2\n      and\n        /* \"#utility.yul\":8835:8886   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8922:8954   */\n      dup12\n      and\n        /* \"#utility.yul\":8917:8919   */\n      0x20\n        /* \"#utility.yul\":8902:8920   */\n      dup3\n      add\n        /* \"#utility.yul\":8895:8955   */\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":8991:9030   */\n      dup11\n      dup2\n      and\n        /* \"#utility.yul\":8971:8989   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":8964:9031   */\n      mstore\n        /* \"#utility.yul\":9067:9106   */\n      dup10\n      and\n        /* \"#utility.yul\":9062:9064   */\n      0x60\n        /* \"#utility.yul\":9047:9065   */\n      dup3\n      add\n        /* \"#utility.yul\":9040:9107   */\n      mstore\n        /* \"contracts/MarketingStaking.sol\":992:996  1e21 */\n      0x3635c9adc5dea00000\n        /* \"#utility.yul\":9138:9141   */\n      0x80\n        /* \"#utility.yul\":9123:9142   */\n      dup3\n      add\n        /* \"#utility.yul\":9116:9151   */\n      mstore\n        /* \"contracts/MarketingStaking.sol\":4456:4544  PoolCreated(pool_id, staking_token, rewards_token, start_epoch, end_epoch, SCALE_FACTOR) */\n      swap1\n      mload\n        /* \"contracts/MarketingStaking.sol\":4409:4440  uint pool_id = pools.length - 1 */\n      swap2\n      swap3\n      pop\n      dup3\n      swap2\n        /* \"contracts/MarketingStaking.sol\":4456:4544  PoolCreated(pool_id, staking_token, rewards_token, start_epoch, end_epoch, SCALE_FACTOR) */\n      0x7c89ff64ffbfc8006a5f9ef85541e2fc4f990a7906ba4920928ffd9c9b7b3a95\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":8822:8825   */\n      0xa0\n        /* \"contracts/MarketingStaking.sol\":4456:4544  PoolCreated(pool_id, staking_token, rewards_token, start_epoch, end_epoch, SCALE_FACTOR) */\n      add\n      swap1\n      log2\n        /* \"contracts/MarketingStaking.sol\":4558:4584  transfer_reward_amount > 0 */\n      dup4\n      iszero\n        /* \"contracts/MarketingStaking.sol\":4555:4777  if(transfer_reward_amount > 0)... */\n      tag_187\n      jumpi\n        /* \"contracts/MarketingStaking.sol\":4610:4701  IERC20(rewards_token).safeTransferFrom(_msgSender(), address(this), transfer_reward_amount) */\n      tag_188\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":4610:4648  IERC20(rewards_token).safeTransferFrom */\n      dup10\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/MarketingStaking.sol\":4671:4675  this */\n      address\n        /* \"contracts/MarketingStaking.sol\":4678:4700  transfer_reward_amount */\n      dup8\n        /* \"contracts/MarketingStaking.sol\":4610:4648  IERC20(rewards_token).safeTransferFrom */\n      tag_190\n        /* \"contracts/MarketingStaking.sol\":4610:4701  IERC20(rewards_token).safeTransferFrom(_msgSender(), address(this), transfer_reward_amount) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/MarketingStaking.sol\":4733:4740  pool_id */\n      dup1\n        /* \"contracts/MarketingStaking.sol\":4721:4765  RewardAdded(pool_id, transfer_reward_amount) */\n      0x6c07ee05dcf262f13abf9d87b846ee789d2f90fe991d495acd7d7fc109ee1f55\n        /* \"contracts/MarketingStaking.sol\":4742:4764  transfer_reward_amount */\n      dup6\n        /* \"contracts/MarketingStaking.sol\":4721:4765  RewardAdded(pool_id, transfer_reward_amount) */\n      mload(0x40)\n      tag_191\n      swap2\n        /* \"#utility.yul\":3142:3167   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3130:3132   */\n      0x20\n        /* \"#utility.yul\":3115:3133   */\n      add\n      swap1\n        /* \"#utility.yul\":2996:3173   */\n      jump\n        /* \"contracts/MarketingStaking.sol\":4721:4765  RewardAdded(pool_id, transfer_reward_amount) */\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MarketingStaking.sol\":4555:4777  if(transfer_reward_amount > 0)... */\n    tag_187:\n        /* \"contracts/MarketingStaking.sol\":4794:4801  pool_id */\n      swap9\n        /* \"contracts/MarketingStaking.sol\":3424:4809  function createPool(address staking_token, address rewards_token, uint96 start_epoch, uint96 end_epoch, uint reward_amount, uint transfer_reward_amount) external onlyOwner returns(uint)... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MarketingStaking.sol\":5732:6667  function stake(uint pool_id, uint stake_amount) external nonReentrant validate_pool(pool_id)... */\n    tag_54:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_198\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_93\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_198:\n        /* \"contracts/MarketingStaking.sol\":5816:5823  pool_id */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":1904:1905  0 */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":1894:1901  pool_id */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":1894:1905  pool_id > 0 */\n      gt\n        /* \"contracts/MarketingStaking.sol\":1894:1931  pool_id > 0 && pool_id < pools.length */\n      dup1\n      iszero\n      tag_200\n      jumpi\n      pop\n        /* \"contracts/MarketingStaking.sol\":1919:1924  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":1919:1931  pools.length */\n      sload\n        /* \"contracts/MarketingStaking.sol\":1909:1931  pool_id < pools.length */\n      dup2\n      lt\n        /* \"contracts/MarketingStaking.sol\":1894:1931  pool_id > 0 && pool_id < pools.length */\n    tag_200:\n        /* \"contracts/MarketingStaking.sol\":1886:1969  require(pool_id > 0 && pool_id < pools.length, \"MarketingStaking:Invalid Pool ID!\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_201:\n        /* \"contracts/MarketingStaking.sol\":5841:5862  PoolInfo storage pool */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":5865:5870  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":5871:5878  pool_id */\n      dup5\n        /* \"contracts/MarketingStaking.sol\":5865:5879  pools[pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_205\n      jumpi\n      tag_205\n      tag_89\n      jump\t// in\n    tag_205:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x07\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/MarketingStaking.sol\":5912:5928  pool.start_epoch */\n      dup1\n      sload\n        /* \"contracts/MarketingStaking.sol\":5865:5879  pools[pool_id] */\n      swap1\n      swap2\n      pop\n      shl(0xa0, 0x01)\n        /* \"contracts/MarketingStaking.sol\":5912:5928  pool.start_epoch */\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/MarketingStaking.sol\":3392:3407  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":5898:5928  time_now() >= pool.start_epoch */\n      and\n      lt\n      iszero\n        /* \"contracts/MarketingStaking.sol\":5898:5959  time_now() >= pool.start_epoch && time_now() < pool.end_epoch */\n      dup1\n      iszero\n      tag_208\n      jumpi\n      pop\n        /* \"contracts/MarketingStaking.sol\":5945:5959  pool.end_epoch */\n      0x01\n      dup2\n      add\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/MarketingStaking.sol\":3392:3407  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":5932:5959  time_now() < pool.end_epoch */\n      and\n      lt\n        /* \"contracts/MarketingStaking.sol\":5898:5959  time_now() >= pool.start_epoch && time_now() < pool.end_epoch */\n    tag_208:\n        /* \"contracts/MarketingStaking.sol\":5890:6000  require(time_now() >= pool.start_epoch && time_now() < pool.end_epoch, \"MarketingStaking:Pool is not active!\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9364:9366   */\n      0x20\n        /* \"contracts/MarketingStaking.sol\":5890:6000  require(time_now() >= pool.start_epoch && time_now() < pool.end_epoch, \"MarketingStaking:Pool is not active!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9346:9367   */\n      mstore\n        /* \"#utility.yul\":9403:9405   */\n      0x24\n        /* \"#utility.yul\":9383:9401   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9376:9406   */\n      mstore\n        /* \"#utility.yul\":9442:9476   */\n      0x4d61726b6574696e675374616b696e673a506f6f6c206973206e6f7420616374\n        /* \"#utility.yul\":9422:9440   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9415:9477   */\n      mstore\n      shl(0xe0, 0x69766521)\n        /* \"#utility.yul\":9493:9511   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9486:9520   */\n      mstore\n        /* \"#utility.yul\":9537:9556   */\n      0x84\n      add\n        /* \"contracts/MarketingStaking.sol\":5890:6000  require(time_now() >= pool.start_epoch && time_now() < pool.end_epoch, \"MarketingStaking:Pool is not active!\") */\n      tag_84\n        /* \"#utility.yul\":9162:9562   */\n      jump\n        /* \"contracts/MarketingStaking.sol\":5890:6000  require(time_now() >= pool.start_epoch && time_now() < pool.end_epoch, \"MarketingStaking:Pool is not active!\") */\n    tag_210:\n        /* \"contracts/MarketingStaking.sol\":6034:6035  0 */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":6019:6031  stake_amount */\n      dup4\n        /* \"contracts/MarketingStaking.sol\":6019:6035  stake_amount > 0 */\n      gt\n        /* \"contracts/MarketingStaking.sol\":6011:6093  require(stake_amount > 0, \"MarketingStaking:stake_amount must be greater than 0!\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9769:9771   */\n      0x20\n        /* \"contracts/MarketingStaking.sol\":6011:6093  require(stake_amount > 0, \"MarketingStaking:stake_amount must be greater than 0!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9751:9772   */\n      mstore\n        /* \"#utility.yul\":9808:9810   */\n      0x35\n        /* \"#utility.yul\":9788:9806   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9781:9811   */\n      mstore\n        /* \"#utility.yul\":9847:9881   */\n      0x4d61726b6574696e675374616b696e673a7374616b655f616d6f756e74206d75\n        /* \"#utility.yul\":9827:9845   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9820:9882   */\n      mstore\n      shl(0x58, 0x73742062652067726561746572207468616e203021)\n        /* \"#utility.yul\":9898:9916   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9891:9942   */\n      mstore\n        /* \"#utility.yul\":9959:9978   */\n      0x84\n      add\n        /* \"contracts/MarketingStaking.sol\":6011:6093  require(stake_amount > 0, \"MarketingStaking:stake_amount must be greater than 0!\") */\n      tag_84\n        /* \"#utility.yul\":9567:9984   */\n      jump\n        /* \"contracts/MarketingStaking.sol\":6011:6093  require(stake_amount > 0, \"MarketingStaking:stake_amount must be greater than 0!\") */\n    tag_213:\n        /* \"contracts/MarketingStaking.sol\":6106:6184  pool.staking_token.safeTransferFrom(_msgSender(), address(this), stake_amount) */\n      tag_216\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/MarketingStaking.sol\":6106:6124  pool.staking_token */\n      dup3\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/MarketingStaking.sol\":6164:6168  this */\n      address\n        /* \"contracts/MarketingStaking.sol\":6171:6183  stake_amount */\n      dup7\n        /* \"contracts/MarketingStaking.sol\":6106:6141  pool.staking_token.safeTransferFrom */\n      tag_190\n        /* \"contracts/MarketingStaking.sol\":6106:6184  pool.staking_token.safeTransferFrom(_msgSender(), address(this), stake_amount) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/MarketingStaking.sol\":6196:6229  updatePool(pool_id, _msgSender()) */\n      tag_218\n        /* \"contracts/MarketingStaking.sol\":6207:6214  pool_id */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/MarketingStaking.sol\":8937:8947  updatePool */\n      tag_102\n        /* \"contracts/MarketingStaking.sol\":8937:8970  updatePool(pool_id, _msgSender()) */\n      jump\t// in\n        /* \"contracts/MarketingStaking.sol\":6196:6229  updatePool(pool_id, _msgSender()) */\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/MarketingStaking.sol\":6240:6271  StakeDetails storage user_stake */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":6274:6294  stakes[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MarketingStaking.sol\":6274:6280  stakes */\n      0x03\n        /* \"contracts/MarketingStaking.sol\":6274:6294  stakes[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/MarketingStaking.sol\":6274:6303  stakes[_msgSender()][pool_id] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/MarketingStaking.sol\":6314:6353  user_stake.stake_amount += stake_amount */\n      dup1\n      sload\n        /* \"contracts/MarketingStaking.sol\":6274:6303  stakes[_msgSender()][pool_id] */\n      swap1\n      swap2\n        /* \"contracts/MarketingStaking.sol\":6341:6353  stake_amount */\n      dup6\n      swap2\n        /* \"contracts/MarketingStaking.sol\":6274:6303  stakes[_msgSender()][pool_id] */\n      dup4\n      swap2\n        /* \"contracts/MarketingStaking.sol\":6240:6271  StakeDetails storage user_stake */\n      swap1\n        /* \"contracts/MarketingStaking.sol\":6314:6353  user_stake.stake_amount += stake_amount */\n      tag_221\n      swap1\n        /* \"contracts/MarketingStaking.sol\":6341:6353  stake_amount */\n      dup5\n      swap1\n        /* \"contracts/MarketingStaking.sol\":6314:6353  user_stake.stake_amount += stake_amount */\n      tag_222\n      jump\t// in\n    tag_221:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MarketingStaking.sol\":6385:6397  stake_amount */\n      dup4\n        /* \"contracts/MarketingStaking.sol\":6364:6368  pool */\n      dup3\n        /* \"contracts/MarketingStaking.sol\":6364:6381  pool.stake_amount */\n      0x02\n      add\n      0x00\n        /* \"contracts/MarketingStaking.sol\":6364:6397  pool.stake_amount += stake_amount */\n      dup3\n      dup3\n      sload\n      tag_223\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_223:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/MarketingStaking.sol\":6449:6472  user_stake.stake_amount */\n      dup1\n      sload\n        /* \"contracts/MarketingStaking.sol\":6474:6498  user_stake.reward_amount */\n      0x01\n      dup3\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":6500:6529  user_stake.reward_rate_cumsum */\n      0x02\n      dup4\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":6413:6530  StakeUpdated(pool_id, _msgSender(), user_stake.stake_amount, user_stake.reward_amount, user_stake.reward_rate_cumsum) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2044:2069   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":2100:2102   */\n      0x20\n        /* \"#utility.yul\":2085:2103   */\n      dup5\n      add\n        /* \"#utility.yul\":2078:2112   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":2128:2146   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2121:2155   */\n      mstore\n        /* \"contracts/MarketingStaking.sol\":6413:6530  StakeUpdated(pool_id, _msgSender(), user_stake.stake_amount, user_stake.reward_amount, user_stake.reward_rate_cumsum) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap2\n        /* \"contracts/MarketingStaking.sol\":6426:6433  pool_id */\n      dup8\n      swap2\n        /* \"contracts/MarketingStaking.sol\":6413:6530  StakeUpdated(pool_id, _msgSender(), user_stake.stake_amount, user_stake.reward_amount, user_stake.reward_rate_cumsum) */\n      0x8fe70e917ad578cbb5b0779aa52ee3f23afa39c5295542125059f2a4e98cbbfe\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":2032:2034   */\n      0x60\n        /* \"contracts/MarketingStaking.sol\":6413:6530  StakeUpdated(pool_id, _msgSender(), user_stake.stake_amount, user_stake.reward_amount, user_stake.reward_rate_cumsum) */\n      add\n      swap1\n      log3\n        /* \"contracts/MarketingStaking.sol\":6567:6584  pool.stake_amount */\n      0x02\n      dup3\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":6586:6602  pool.reward_rate */\n      0x03\n      dup4\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":6604:6627  pool.reward_rate_cumsum */\n      0x04\n      dup5\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":6629:6651  pool.last_update_epoch */\n      0x06\n      dup6\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":6546:6652  PoolUpdated(pool_id, pool.stake_amount, pool.reward_rate, pool.reward_rate_cumsum, pool.last_update_epoch) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6106:6131   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":6162:6164   */\n      0x20\n        /* \"#utility.yul\":6147:6165   */\n      dup6\n      add\n        /* \"#utility.yul\":6140:6174   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":6190:6208   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":6183:6217   */\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":6629:6651  pool.last_update_epoch */\n      and\n        /* \"#utility.yul\":6248:6250   */\n      0x60\n        /* \"#utility.yul\":6233:6251   */\n      dup3\n      add\n        /* \"#utility.yul\":6226:6293   */\n      mstore\n        /* \"contracts/MarketingStaking.sol\":6558:6565  pool_id */\n      dup6\n      swap1\n        /* \"contracts/MarketingStaking.sol\":6546:6652  PoolUpdated(pool_id, pool.stake_amount, pool.reward_rate, pool.reward_rate_cumsum, pool.last_update_epoch) */\n      0xe9d4ced29dfd1b7392aa77b7ea3220d8318a5a65cd900f4e40e9d816d11d84f2\n      swap1\n        /* \"#utility.yul\":6093:6096   */\n      0x80\n        /* \"#utility.yul\":6078:6097   */\n      add\n        /* \"contracts/MarketingStaking.sol\":6546:6652  PoolUpdated(pool_id, pool.stake_amount, pool.reward_rate, pool.reward_rate_cumsum, pool.last_update_epoch) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MarketingStaking.sol\":5830:6667  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_227\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n    tag_227:\n        /* \"contracts/MarketingStaking.sol\":5732:6667  function stake(uint pool_id, uint stake_amount) external nonReentrant validate_pool(pool_id)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MarketingStaking.sol\":10210:10795  function withdrawRewards(uint pool_id, address to, uint amount) external onlyOwner validate_pool(pool_id)... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_229:\n        /* \"contracts/MarketingStaking.sol\":10307:10314  pool_id */\n      dup3\n        /* \"contracts/MarketingStaking.sol\":1904:1905  0 */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":1894:1901  pool_id */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":1894:1905  pool_id > 0 */\n      gt\n        /* \"contracts/MarketingStaking.sol\":1894:1931  pool_id > 0 && pool_id < pools.length */\n      dup1\n      iszero\n      tag_231\n      jumpi\n      pop\n        /* \"contracts/MarketingStaking.sol\":1919:1924  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":1919:1931  pools.length */\n      sload\n        /* \"contracts/MarketingStaking.sol\":1909:1931  pool_id < pools.length */\n      dup2\n      lt\n        /* \"contracts/MarketingStaking.sol\":1894:1931  pool_id > 0 && pool_id < pools.length */\n    tag_231:\n        /* \"contracts/MarketingStaking.sol\":1886:1969  require(pool_id > 0 && pool_id < pools.length, \"MarketingStaking:Invalid Pool ID!\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_232:\n        /* \"contracts/MarketingStaking.sol\":10350:10351  0 */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":10341:10347  amount */\n      dup3\n        /* \"contracts/MarketingStaking.sol\":10341:10351  amount > 0 */\n      gt\n        /* \"contracts/MarketingStaking.sol\":10332:10406  require (amount > 0, \"MarketingStaking:amount must be greater than zero!\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_237\n      jump\t// in\n    tag_235:\n        /* \"contracts/MarketingStaking.sol\":10417:10438  PoolInfo storage pool */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":10441:10446  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":10447:10454  pool_id */\n      dup6\n        /* \"contracts/MarketingStaking.sol\":10441:10455  pools[pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_239\n      jumpi\n      tag_239\n      tag_89\n      jump\t// in\n    tag_239:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/MarketingStaking.sol\":10417:10455  PoolInfo storage pool = pools[pool_id] */\n      swap1\n      pop\n        /* \"contracts/MarketingStaking.sol\":10500:10506  amount */\n      dup3\n        /* \"contracts/MarketingStaking.sol\":10474:10478  pool */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":10474:10496  pool.available_rewards */\n      0x05\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":10474:10506  pool.available_rewards >= amount */\n      lt\n      iszero\n        /* \"contracts/MarketingStaking.sol\":10466:10549  require(pool.available_rewards >= amount, \"MarketingStaking:Insufficient balance!\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_147\n      jump\t// in\n    tag_241:\n        /* \"contracts/MarketingStaking.sol\":10582:10596  pool.end_epoch */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":10582:10611  pool.end_epoch + CLAIM_PERIOD */\n      tag_243\n      swap1\n        /* \"contracts/MarketingStaking.sol\":942:949  40 days */\n      0x34bc00\n      swap1\n      shl(0xa0, 0x01)\n        /* \"contracts/MarketingStaking.sol\":10582:10596  pool.end_epoch */\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/MarketingStaking.sol\":10582:10611  pool.end_epoch + CLAIM_PERIOD */\n      tag_244\n      jump\t// in\n    tag_243:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":10568:10611  time_now() >= pool.end_epoch + CLAIM_PERIOD */\n      and\n        /* \"contracts/MarketingStaking.sol\":3392:3407  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":10568:10611  time_now() >= pool.end_epoch + CLAIM_PERIOD */\n      and\n      lt\n      iszero\n        /* \"contracts/MarketingStaking.sol\":10568:10637  time_now() >= pool.end_epoch + CLAIM_PERIOD || pool.stake_amount == 0 */\n      dup1\n      tag_246\n      jumpi\n      pop\n        /* \"contracts/MarketingStaking.sol\":10615:10632  pool.stake_amount */\n      0x02\n      dup2\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":10615:10637  pool.stake_amount == 0 */\n      iszero\n        /* \"contracts/MarketingStaking.sol\":10568:10637  time_now() >= pool.end_epoch + CLAIM_PERIOD || pool.stake_amount == 0 */\n    tag_246:\n        /* \"contracts/MarketingStaking.sol\":10560:10638  require(time_now() >= pool.end_epoch + CLAIM_PERIOD || pool.stake_amount == 0) */\n      tag_247\n      jumpi\n      revert(0x00, 0x00)\n    tag_247:\n        /* \"contracts/MarketingStaking.sol\":10649:10667  pool.rewards_token */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":10649:10692  pool.rewards_token.safeTransfer(to, amount) */\n      tag_248\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":10649:10667  pool.rewards_token */\n      and\n        /* \"contracts/MarketingStaking.sol\":10681:10683  to */\n      dup6\n        /* \"contracts/MarketingStaking.sol\":10685:10691  amount */\n      dup6\n        /* \"contracts/MarketingStaking.sol\":10649:10680  pool.rewards_token.safeTransfer */\n      tag_115\n        /* \"contracts/MarketingStaking.sol\":10649:10692  pool.rewards_token.safeTransfer(to, amount) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/MarketingStaking.sol\":10729:10735  amount */\n      dup3\n        /* \"contracts/MarketingStaking.sol\":10703:10707  pool */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":10703:10725  pool.available_rewards */\n      0x05\n      add\n      0x00\n        /* \"contracts/MarketingStaking.sol\":10703:10735  pool.available_rewards -= amount */\n      dup3\n      dup3\n      sload\n      tag_249\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_249:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/MarketingStaking.sol\":10751:10787  RewardWithdrawn(pool_id, to, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":3142:3167   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":10751:10787  RewardWithdrawn(pool_id, to, amount) */\n      dup6\n      and\n      swap1\n        /* \"contracts/MarketingStaking.sol\":10767:10774  pool_id */\n      dup7\n      swap1\n        /* \"contracts/MarketingStaking.sol\":10751:10787  RewardWithdrawn(pool_id, to, amount) */\n      0xb886382d42263e3c08a157dd29a33c435741f36625dbc3acb6fb8c19bbf78247\n      swap1\n        /* \"#utility.yul\":3130:3132   */\n      0x20\n        /* \"#utility.yul\":3115:3133   */\n      add\n        /* \"contracts/MarketingStaking.sol\":10751:10787  RewardWithdrawn(pool_id, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MarketingStaking.sol\":10321:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"contracts/MarketingStaking.sol\":10210:10795  function withdrawRewards(uint pool_id, address to, uint amount) external onlyOwner validate_pool(pool_id)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MarketingStaking.sol\":3203:3305  function getPoolsCount() external view returns (uint) ... */\n    tag_64:\n        /* \"contracts/MarketingStaking.sol\":3281:3286  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":3281:3293  pools.length */\n      sload\n        /* \"contracts/MarketingStaking.sol\":3251:3255  uint */\n      0x00\n      swap1\n        /* \"contracts/MarketingStaking.sol\":3281:3297  pools.length - 1 */\n      tag_253\n      swap1\n        /* \"contracts/MarketingStaking.sol\":3296:3297  1 */\n      0x01\n      swap1\n        /* \"contracts/MarketingStaking.sol\":3281:3297  pools.length - 1 */\n      tag_117\n      jump\t// in\n    tag_253:\n        /* \"contracts/MarketingStaking.sol\":3274:3297  return pools.length - 1 */\n      swap1\n      pop\n        /* \"contracts/MarketingStaking.sol\":3203:3305  function getPoolsCount() external view returns (uint) ... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_255:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4100:4151   */\n      mstore\n        /* \"#utility.yul\":4073:4091   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_84\n        /* \"#utility.yul\":3954:4157   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/MarketingStaking.sol\":9792:10202  function addRewards(uint pool_id, uint amount) external nonReentrant validate_pool(pool_id) ... */\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_261\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_93\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_261:\n        /* \"contracts/MarketingStaking.sol\":9875:9882  pool_id */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":1904:1905  0 */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":1894:1901  pool_id */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":1894:1905  pool_id > 0 */\n      gt\n        /* \"contracts/MarketingStaking.sol\":1894:1931  pool_id > 0 && pool_id < pools.length */\n      dup1\n      iszero\n      tag_263\n      jumpi\n      pop\n        /* \"contracts/MarketingStaking.sol\":1919:1924  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":1919:1931  pools.length */\n      sload\n        /* \"contracts/MarketingStaking.sol\":1909:1931  pool_id < pools.length */\n      dup2\n      lt\n        /* \"contracts/MarketingStaking.sol\":1894:1931  pool_id > 0 && pool_id < pools.length */\n    tag_263:\n        /* \"contracts/MarketingStaking.sol\":1886:1969  require(pool_id > 0 && pool_id < pools.length, \"MarketingStaking:Invalid Pool ID!\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_264:\n        /* \"contracts/MarketingStaking.sol\":9919:9920  0 */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":9910:9916  amount */\n      dup3\n        /* \"contracts/MarketingStaking.sol\":9910:9920  amount > 0 */\n      gt\n        /* \"contracts/MarketingStaking.sol\":9901:9975  require (amount > 0, \"MarketingStaking:amount must be greater than zero!\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_237\n      jump\t// in\n    tag_267:\n        /* \"contracts/MarketingStaking.sol\":9986:10007  PoolInfo storage pool */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":10010:10015  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":10016:10023  pool_id */\n      dup5\n        /* \"contracts/MarketingStaking.sol\":10010:10024  pools[pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_270\n      jumpi\n      tag_270\n      tag_89\n      jump\t// in\n    tag_270:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/MarketingStaking.sol\":9986:10024  PoolInfo storage pool = pools[pool_id] */\n      swap1\n      pop\n        /* \"contracts/MarketingStaking.sol\":10035:10107  pool.rewards_token.safeTransferFrom(_msgSender(), address(this), amount) */\n      tag_272\n        /* \"contracts/MarketingStaking.sol\":10071:10083  _msgSender() */\n      tag_273\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/MarketingStaking.sol\":10071:10083  _msgSender() */\n    tag_273:\n        /* \"contracts/MarketingStaking.sol\":10035:10053  pool.rewards_token */\n      0x01\n      dup4\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/MarketingStaking.sol\":10093:10097  this */\n      address\n        /* \"contracts/MarketingStaking.sol\":10100:10106  amount */\n      dup7\n        /* \"contracts/MarketingStaking.sol\":10035:10070  pool.rewards_token.safeTransferFrom */\n      tag_190\n        /* \"contracts/MarketingStaking.sol\":10035:10107  pool.rewards_token.safeTransferFrom(_msgSender(), address(this), amount) */\n      jump\t// in\n    tag_272:\n        /* \"contracts/MarketingStaking.sol\":10144:10150  amount */\n      dup3\n        /* \"contracts/MarketingStaking.sol\":10118:10122  pool */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":10118:10140  pool.available_rewards */\n      0x05\n      add\n      0x00\n        /* \"contracts/MarketingStaking.sol\":10118:10150  pool.available_rewards += amount */\n      dup3\n      dup3\n      sload\n      tag_274\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_274:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/MarketingStaking.sol\":10166:10194  RewardAdded(pool_id, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":3142:3167   */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/MarketingStaking.sol\":10178:10185  pool_id */\n      dup5\n      swap1\n        /* \"contracts/MarketingStaking.sol\":10166:10194  RewardAdded(pool_id, amount) */\n      0x6c07ee05dcf262f13abf9d87b846ee789d2f90fe991d495acd7d7fc109ee1f55\n      swap1\n        /* \"#utility.yul\":3130:3132   */\n      0x20\n        /* \"#utility.yul\":3115:3133   */\n      add\n        /* \"contracts/MarketingStaking.sol\":10166:10194  RewardAdded(pool_id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MarketingStaking.sol\":9890:10202  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_227\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"contracts/MarketingStaking.sol\":6675:7427  function getUserRewards(uint pool_id, address user) external view validate_pool(pool_id) returns(uint)... */\n    tag_79:\n        /* \"contracts/MarketingStaking.sol\":6772:6776  uint */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":6755:6762  pool_id */\n      dup3\n        /* \"contracts/MarketingStaking.sol\":1904:1905  0 */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":1894:1901  pool_id */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":1894:1905  pool_id > 0 */\n      gt\n        /* \"contracts/MarketingStaking.sol\":1894:1931  pool_id > 0 && pool_id < pools.length */\n      dup1\n      iszero\n      tag_278\n      jumpi\n      pop\n        /* \"contracts/MarketingStaking.sol\":1919:1924  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":1919:1931  pools.length */\n      sload\n        /* \"contracts/MarketingStaking.sol\":1909:1931  pool_id < pools.length */\n      dup2\n      lt\n        /* \"contracts/MarketingStaking.sol\":1894:1931  pool_id > 0 && pool_id < pools.length */\n    tag_278:\n        /* \"contracts/MarketingStaking.sol\":1886:1969  require(pool_id > 0 && pool_id < pools.length, \"MarketingStaking:Invalid Pool ID!\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":6828:6840  stakes[user] */\n      dup4\n      and\n        /* \"contracts/MarketingStaking.sol\":6794:6825  StakeDetails storage user_stake */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":6828:6840  stakes[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MarketingStaking.sol\":6828:6834  stakes */\n      0x03\n        /* \"contracts/MarketingStaking.sol\":6828:6840  stakes[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/MarketingStaking.sol\":6828:6849  stakes[user][pool_id] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/MarketingStaking.sol\":6884:6889  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":6884:6898  pools[pool_id] */\n      dup1\n      sload\n        /* \"contracts/MarketingStaking.sol\":6828:6849  stakes[user][pool_id] */\n      swap2\n      swap3\n        /* \"contracts/MarketingStaking.sol\":6794:6825  StakeDetails storage user_stake */\n      swap2\n        /* \"contracts/MarketingStaking.sol\":6841:6848  pool_id */\n      dup8\n      swap1\n        /* \"contracts/MarketingStaking.sol\":6884:6898  pools[pool_id] */\n      dup2\n      lt\n      tag_283\n      jumpi\n      tag_283\n      tag_89\n      jump\t// in\n    tag_283:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x07\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/MarketingStaking.sol\":6935:6957  pool.last_update_epoch */\n      0x06\n      dup2\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":6884:6898  pools[pool_id] */\n      swap1\n      swap3\n      pop\n        /* \"contracts/MarketingStaking.sol\":6926:6996  Math.max(pool.last_update_epoch, Math.min(time_now(), pool.end_epoch)) */\n      tag_285\n      swap1\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":6935:6957  pool.last_update_epoch */\n      and\n        /* \"contracts/MarketingStaking.sol\":6959:6995  Math.min(time_now(), pool.end_epoch) */\n      tag_286\n        /* \"contracts/MarketingStaking.sol\":3392:3407  block.timestamp */\n      timestamp\n        /* \"contracts/MarketingStaking.sol\":6968:6978  time_now() */\n    tag_287:\n        /* \"contracts/MarketingStaking.sol\":6980:6994  pool.end_epoch */\n      0x01\n      dup7\n      add\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":6959:6995  Math.min(time_now(), pool.end_epoch) */\n      swap2\n      dup3\n      and\n      swap2\n      shl(0xa0, 0x01)\n        /* \"contracts/MarketingStaking.sol\":6980:6994  pool.end_epoch */\n      swap1\n      swap2\n      div\n      and\n        /* \"contracts/MarketingStaking.sol\":6959:6967  Math.min */\n      tag_288\n        /* \"contracts/MarketingStaking.sol\":6959:6995  Math.min(time_now(), pool.end_epoch) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/MarketingStaking.sol\":6926:6934  Math.max */\n      tag_173\n        /* \"contracts/MarketingStaking.sol\":6926:6996  Math.max(pool.last_update_epoch, Math.min(time_now(), pool.end_epoch)) */\n      jump\t// in\n    tag_285:\n        /* \"contracts/MarketingStaking.sol\":7033:7056  pool.reward_rate_cumsum */\n      0x04\n      dup4\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":7071:7088  pool.stake_amount */\n      0x02\n      dup5\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":6909:6996  uint epoch_now = Math.max(pool.last_update_epoch, Math.min(time_now(), pool.end_epoch)) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/MarketingStaking.sol\":7033:7056  pool.reward_rate_cumsum */\n      swap1\n        /* \"contracts/MarketingStaking.sol\":7071:7092  pool.stake_amount > 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/MarketingStaking.sol\":7071:7130  pool.stake_amount > 0 && epoch_now > pool.last_update_epoch */\n      tag_289\n      jumpi\n      pop\n        /* \"contracts/MarketingStaking.sol\":7108:7130  pool.last_update_epoch */\n      0x06\n      dup4\n      add\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/MarketingStaking.sol\":7096:7130  epoch_now > pool.last_update_epoch */\n      dup3\n      gt\n        /* \"contracts/MarketingStaking.sol\":7071:7130  pool.stake_amount > 0 && epoch_now > pool.last_update_epoch */\n    tag_289:\n        /* \"contracts/MarketingStaking.sol\":7067:7286  if (pool.stake_amount > 0 && epoch_now > pool.last_update_epoch)... */\n      iszero\n      tag_290\n      jumpi\n        /* \"contracts/MarketingStaking.sol\":7257:7274  pool.stake_amount */\n      0x02\n      dup4\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":7240:7256  pool.reward_rate */\n      0x03\n      dup5\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":7216:7238  pool.last_update_epoch */\n      0x06\n      dup6\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":7204:7238  epoch_now - pool.last_update_epoch */\n      tag_291\n      swap1\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":7216:7238  pool.last_update_epoch */\n      and\n        /* \"contracts/MarketingStaking.sol\":7204:7213  epoch_now */\n      dup6\n        /* \"contracts/MarketingStaking.sol\":7204:7238  epoch_now - pool.last_update_epoch */\n      tag_117\n      jump\t// in\n    tag_291:\n        /* \"contracts/MarketingStaking.sol\":7203:7256  (epoch_now - pool.last_update_epoch)*pool.reward_rate */\n      tag_292\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_292:\n        /* \"contracts/MarketingStaking.sol\":7203:7274  (epoch_now - pool.last_update_epoch)*pool.reward_rate/pool.stake_amount */\n      tag_293\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_293:\n        /* \"contracts/MarketingStaking.sol\":7177:7181  pool */\n      dup4\n        /* \"contracts/MarketingStaking.sol\":7177:7200  pool.reward_rate_cumsum */\n      0x04\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":7177:7274  pool.reward_rate_cumsum + (epoch_now - pool.last_update_epoch)*pool.reward_rate/pool.stake_amount */\n      tag_294\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_294:\n        /* \"contracts/MarketingStaking.sol\":7156:7274  reward_rate_cumsum = pool.reward_rate_cumsum + (epoch_now - pool.last_update_epoch)*pool.reward_rate/pool.stake_amount */\n      swap1\n      pop\n        /* \"contracts/MarketingStaking.sol\":7067:7286  if (pool.stake_amount > 0 && epoch_now > pool.last_update_epoch)... */\n    tag_290:\n        /* \"contracts/MarketingStaking.sol\":992:996  1e21 */\n      0x3635c9adc5dea00000\n        /* \"contracts/MarketingStaking.sol\":7376:7386  user_stake */\n      dup5\n        /* \"contracts/MarketingStaking.sol\":7376:7405  user_stake.reward_rate_cumsum */\n      0x02\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":7355:7373  reward_rate_cumsum */\n      dup3\n        /* \"contracts/MarketingStaking.sol\":7355:7405  reward_rate_cumsum - user_stake.reward_rate_cumsum */\n      tag_295\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_295:\n        /* \"contracts/MarketingStaking.sol\":7330:7353  user_stake.stake_amount */\n      dup6\n      sload\n        /* \"contracts/MarketingStaking.sol\":7330:7406  user_stake.stake_amount*(reward_rate_cumsum - user_stake.reward_rate_cumsum) */\n      tag_296\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_296:\n        /* \"contracts/MarketingStaking.sol\":7330:7419  user_stake.stake_amount*(reward_rate_cumsum - user_stake.reward_rate_cumsum)/SCALE_FACTOR */\n      tag_297\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_297:\n        /* \"contracts/MarketingStaking.sol\":7303:7313  user_stake */\n      dup5\n        /* \"contracts/MarketingStaking.sol\":7303:7327  user_stake.reward_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":7303:7419  user_stake.reward_amount + user_stake.stake_amount*(reward_rate_cumsum - user_stake.reward_rate_cumsum)/SCALE_FACTOR */\n      tag_187\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"contracts/MarketingStaking.sol\":4817:5724  function updatePool(uint pool_id, address user) internal... */\n    tag_102:\n        /* \"contracts/MarketingStaking.sol\":4890:4911  PoolInfo storage pool */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":4914:4919  pools */\n      0x02\n        /* \"contracts/MarketingStaking.sol\":4920:4927  pool_id */\n      dup4\n        /* \"contracts/MarketingStaking.sol\":4914:4928  pools[pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_304\n      jumpi\n      tag_304\n      tag_89\n      jump\t// in\n    tag_304:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x07\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/MarketingStaking.sol\":4974:4996  pool.last_update_epoch */\n      0x06\n      dup2\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":4914:4928  pools[pool_id] */\n      swap1\n      swap3\n      pop\n        /* \"contracts/MarketingStaking.sol\":4965:5035  Math.max(pool.last_update_epoch, Math.min(time_now(), pool.end_epoch)) */\n      tag_306\n      swap1\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":4974:4996  pool.last_update_epoch */\n      and\n        /* \"contracts/MarketingStaking.sol\":4998:5034  Math.min(time_now(), pool.end_epoch) */\n      tag_286\n        /* \"contracts/MarketingStaking.sol\":3392:3407  block.timestamp */\n      timestamp\n        /* \"contracts/MarketingStaking.sol\":5007:5017  time_now() */\n      tag_287\n        /* \"contracts/MarketingStaking.sol\":3313:3416  function time_now() private view returns(uint96)... */\n      jump\n        /* \"contracts/MarketingStaking.sol\":4965:5035  Math.max(pool.last_update_epoch, Math.min(time_now(), pool.end_epoch)) */\n    tag_306:\n        /* \"contracts/MarketingStaking.sol\":4939:5036  uint96 new_epoch = uint96(Math.max(pool.last_update_epoch, Math.min(time_now(), pool.end_epoch))) */\n      swap1\n      pop\n        /* \"contracts/MarketingStaking.sol\":5071:5072  0 */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":5051:5055  pool */\n      dup3\n        /* \"contracts/MarketingStaking.sol\":5051:5068  pool.stake_amount */\n      0x02\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":5051:5072  pool.stake_amount > 0 */\n      gt\n        /* \"contracts/MarketingStaking.sol\":5051:5110  pool.stake_amount > 0 && new_epoch > pool.last_update_epoch */\n      dup1\n      iszero\n      tag_309\n      jumpi\n      pop\n        /* \"contracts/MarketingStaking.sol\":5088:5110  pool.last_update_epoch */\n      0x06\n      dup3\n      add\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/MarketingStaking.sol\":5076:5110  new_epoch > pool.last_update_epoch */\n      swap1\n      dup3\n      and\n      gt\n        /* \"contracts/MarketingStaking.sol\":5051:5110  pool.stake_amount > 0 && new_epoch > pool.last_update_epoch */\n    tag_309:\n        /* \"contracts/MarketingStaking.sol\":5047:5246  if (pool.stake_amount > 0 && new_epoch > pool.last_update_epoch)... */\n      iszero\n      tag_310\n      jumpi\n        /* \"contracts/MarketingStaking.sol\":5217:5234  pool.stake_amount */\n      0x02\n      dup3\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":5200:5216  pool.reward_rate */\n      0x03\n      dup4\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":5176:5198  pool.last_update_epoch */\n      0x06\n      dup5\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":5164:5198  new_epoch - pool.last_update_epoch */\n      tag_311\n      swap1\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":5176:5198  pool.last_update_epoch */\n      and\n        /* \"contracts/MarketingStaking.sol\":5164:5173  new_epoch */\n      dup5\n        /* \"contracts/MarketingStaking.sol\":5164:5198  new_epoch - pool.last_update_epoch */\n      tag_178\n      jump\t// in\n    tag_311:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":5163:5216  (new_epoch - pool.last_update_epoch)*pool.reward_rate */\n      and\n      tag_312\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_312:\n        /* \"contracts/MarketingStaking.sol\":5163:5234  (new_epoch - pool.last_update_epoch)*pool.reward_rate/pool.stake_amount */\n      tag_313\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_313:\n        /* \"contracts/MarketingStaking.sol\":5136:5140  pool */\n      dup3\n        /* \"contracts/MarketingStaking.sol\":5136:5159  pool.reward_rate_cumsum */\n      0x04\n      add\n      0x00\n        /* \"contracts/MarketingStaking.sol\":5136:5234  pool.reward_rate_cumsum += (new_epoch - pool.last_update_epoch)*pool.reward_rate/pool.stake_amount */\n      dup3\n      dup3\n      sload\n      tag_314\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_314:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/MarketingStaking.sol\":5047:5246  if (pool.stake_amount > 0 && new_epoch > pool.last_update_epoch)... */\n    tag_310:\n        /* \"contracts/MarketingStaking.sol\":5256:5278  pool.last_update_epoch */\n      0x06\n      dup3\n      add\n        /* \"contracts/MarketingStaking.sol\":5256:5290  pool.last_update_epoch = new_epoch */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffff)\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":5306:5324  user != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/MarketingStaking.sol\":5303:5717  if(user != address(0))... */\n      tag_315\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MarketingStaking.sol\":5384:5396  stakes[user] */\n      dup4\n      and\n        /* \"contracts/MarketingStaking.sol\":5350:5381  StakeDetails storage user_stake */\n      0x00\n        /* \"contracts/MarketingStaking.sol\":5384:5396  stakes[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MarketingStaking.sol\":5384:5390  stakes */\n      0x03\n        /* \"contracts/MarketingStaking.sol\":5384:5396  stakes[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/MarketingStaking.sol\":5384:5405  stakes[user][pool_id] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/MarketingStaking.sol\":5423:5446  user_stake.stake_amount */\n      dup1\n      sload\n        /* \"contracts/MarketingStaking.sol\":5423:5450  user_stake.stake_amount > 0 */\n      iszero\n        /* \"contracts/MarketingStaking.sol\":5420:5636  if(user_stake.stake_amount > 0)... */\n      tag_316\n      jumpi\n        /* \"contracts/MarketingStaking.sol\":992:996  1e21 */\n      0x3635c9adc5dea00000\n        /* \"contracts/MarketingStaking.sol\":5563:5573  user_stake */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":5563:5592  user_stake.reward_rate_cumsum */\n      0x02\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":5537:5541  pool */\n      dup5\n        /* \"contracts/MarketingStaking.sol\":5537:5560  pool.reward_rate_cumsum */\n      0x04\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":5537:5592  pool.reward_rate_cumsum - user_stake.reward_rate_cumsum */\n      tag_317\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_317:\n        /* \"contracts/MarketingStaking.sol\":5512:5535  user_stake.stake_amount */\n      dup3\n      sload\n        /* \"contracts/MarketingStaking.sol\":5512:5593  user_stake.stake_amount*(pool.reward_rate_cumsum - user_stake.reward_rate_cumsum) */\n      tag_318\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_318:\n        /* \"contracts/MarketingStaking.sol\":5512:5606  user_stake.stake_amount*(pool.reward_rate_cumsum - user_stake.reward_rate_cumsum)/SCALE_FACTOR */\n      tag_319\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_319:\n        /* \"contracts/MarketingStaking.sol\":5484:5494  user_stake */\n      dup2\n        /* \"contracts/MarketingStaking.sol\":5484:5508  user_stake.reward_amount */\n      0x01\n      add\n      0x00\n        /* \"contracts/MarketingStaking.sol\":5484:5606  user_stake.reward_amount += user_stake.stake_amount*(pool.reward_rate_cumsum - user_stake.reward_rate_cumsum)/SCALE_FACTOR */\n      dup3\n      dup3\n      sload\n      tag_320\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_320:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/MarketingStaking.sol\":5420:5636  if(user_stake.stake_amount > 0)... */\n    tag_316:\n        /* \"contracts/MarketingStaking.sol\":5682:5705  pool.reward_rate_cumsum */\n      0x04\n      dup4\n      add\n      sload\n        /* \"contracts/MarketingStaking.sol\":5650:5679  user_stake.reward_rate_cumsum */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"contracts/MarketingStaking.sol\":5650:5705  user_stake.reward_rate_cumsum = pool.reward_rate_cumsum */\n      sstore\n        /* \"contracts/MarketingStaking.sol\":5303:5717  if(user != address(0))... */\n    tag_315:\n        /* \"contracts/MarketingStaking.sol\":4879:5724  {... */\n      pop\n      pop\n        /* \"contracts/MarketingStaking.sol\":4817:5724  function updatePool(uint pool_id, address user) internal... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10950:10982   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":10932:10983   */\n      mstore\n        /* \"#utility.yul\":10999:11017   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10992:11026   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_323\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":10905:10923   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n    tag_324:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_326\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4100:4151   */\n      mstore\n        /* \"#utility.yul\":4073:4091   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_84\n        /* \"#utility.yul\":3954:4157   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5435:5546  function max(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5493:5500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5312:5317  a ^ b */\n      dup3\n      dup3\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5527:5532  a > b */\n      dup3\n      dup5\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5311:5347  (a ^ b) * SafeCast.toUint(condition) */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5306:5348  b ^ ((a ^ b) * SafeCast.toUint(condition)) */\n      dup3\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5519:5539  ternary(a > b, a, b) */\n    tag_335:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5512:5539  return ternary(a > b, a, b) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5435:5546  function max(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_334:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11257:11289   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":11239:11290   */\n      mstore\n        /* \"#utility.yul\":11326:11358   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":11306:11324   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":11299:11359   */\n      mstore\n        /* \"#utility.yul\":11375:11393   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11368:11402   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_315\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":11212:11230   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_324\n        /* \"#utility.yul\":11037:11408   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5617:5728  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5675:5682  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5312:5317  a ^ b */\n      dup3\n      dup3\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5709:5714  a < b */\n      dup3\n      dup5\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5311:5347  (a ^ b) * SafeCast.toUint(condition) */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5306:5348  b ^ ((a ^ b) * SafeCast.toUint(condition)) */\n      dup3\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5701:5721  ternary(a < b, a, b) */\n      tag_335\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5071:5365  function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_345:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_347)\n    tag_346:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_315\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4118:4150   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4100:4151   */\n      mstore\n        /* \"#utility.yul\":4073:4091   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      tag_84\n        /* \"#utility.yul\":3954:4157   */\n      jump\n        /* \"#utility.yul\":14:240   */\n    tag_23:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_359:\n      pop\n        /* \"#utility.yul\":187:210   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:240   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1359:1532   */\n    tag_354:\n        /* \"#utility.yul\":1427:1447   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1476:1507   */\n      dup2\n      and\n        /* \"#utility.yul\":1466:1508   */\n      dup2\n      eq\n        /* \"#utility.yul\":1456:1526   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":1522:1523   */\n      0x00\n        /* \"#utility.yul\":1519:1520   */\n      0x00\n        /* \"#utility.yul\":1512:1524   */\n      revert\n        /* \"#utility.yul\":1456:1526   */\n    tag_363:\n        /* \"#utility.yul\":1359:1532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1537:1837   */\n    tag_39:\n        /* \"#utility.yul\":1605:1611   */\n      0x00\n        /* \"#utility.yul\":1613:1619   */\n      0x00\n        /* \"#utility.yul\":1666:1668   */\n      0x40\n        /* \"#utility.yul\":1654:1663   */\n      dup4\n        /* \"#utility.yul\":1645:1652   */\n      dup6\n        /* \"#utility.yul\":1641:1664   */\n      sub\n        /* \"#utility.yul\":1637:1669   */\n      slt\n        /* \"#utility.yul\":1634:1686   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":1682:1683   */\n      0x00\n        /* \"#utility.yul\":1679:1680   */\n      0x00\n        /* \"#utility.yul\":1672:1684   */\n      revert\n        /* \"#utility.yul\":1634:1686   */\n    tag_365:\n        /* \"#utility.yul\":1705:1734   */\n      tag_366\n        /* \"#utility.yul\":1724:1733   */\n      dup4\n        /* \"#utility.yul\":1705:1734   */\n      tag_354\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1695:1734   */\n      swap5\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1775:1807   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1537:1837   */\n      jump\t// out\n        /* \"#utility.yul\":2166:2345   */\n    tag_355:\n        /* \"#utility.yul\":2233:2253   */\n      dup1\n      calldataload\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":2282:2320   */\n      dup2\n      and\n        /* \"#utility.yul\":2272:2321   */\n      dup2\n      eq\n        /* \"#utility.yul\":2262:2339   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":2335:2336   */\n      0x00\n        /* \"#utility.yul\":2332:2333   */\n      0x00\n        /* \"#utility.yul\":2325:2337   */\n      revert\n        /* \"#utility.yul\":2350:2991   */\n    tag_45:\n        /* \"#utility.yul\":2452:2458   */\n      0x00\n        /* \"#utility.yul\":2460:2466   */\n      0x00\n        /* \"#utility.yul\":2468:2474   */\n      0x00\n        /* \"#utility.yul\":2476:2482   */\n      0x00\n        /* \"#utility.yul\":2484:2490   */\n      0x00\n        /* \"#utility.yul\":2492:2498   */\n      0x00\n        /* \"#utility.yul\":2545:2548   */\n      0xc0\n        /* \"#utility.yul\":2533:2542   */\n      dup8\n        /* \"#utility.yul\":2524:2531   */\n      dup10\n        /* \"#utility.yul\":2520:2543   */\n      sub\n        /* \"#utility.yul\":2516:2549   */\n      slt\n        /* \"#utility.yul\":2513:2566   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":2562:2563   */\n      0x00\n        /* \"#utility.yul\":2559:2560   */\n      0x00\n        /* \"#utility.yul\":2552:2564   */\n      revert\n        /* \"#utility.yul\":2513:2566   */\n    tag_371:\n        /* \"#utility.yul\":2585:2614   */\n      tag_372\n        /* \"#utility.yul\":2604:2613   */\n      dup8\n        /* \"#utility.yul\":2585:2614   */\n      tag_354\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2575:2614   */\n      swap6\n      pop\n        /* \"#utility.yul\":2633:2671   */\n      tag_373\n        /* \"#utility.yul\":2667:2669   */\n      0x20\n        /* \"#utility.yul\":2656:2665   */\n      dup9\n        /* \"#utility.yul\":2652:2670   */\n      add\n        /* \"#utility.yul\":2633:2671   */\n      tag_354\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2623:2671   */\n      swap5\n      pop\n        /* \"#utility.yul\":2690:2727   */\n      tag_374\n        /* \"#utility.yul\":2723:2725   */\n      0x40\n        /* \"#utility.yul\":2712:2721   */\n      dup9\n        /* \"#utility.yul\":2708:2726   */\n      add\n        /* \"#utility.yul\":2690:2727   */\n      tag_355\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2680:2727   */\n      swap4\n      pop\n        /* \"#utility.yul\":2746:2783   */\n      tag_375\n        /* \"#utility.yul\":2779:2781   */\n      0x60\n        /* \"#utility.yul\":2768:2777   */\n      dup9\n        /* \"#utility.yul\":2764:2782   */\n      add\n        /* \"#utility.yul\":2746:2783   */\n      tag_355\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2350:2991   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":2852:2855   */\n      0x80\n        /* \"#utility.yul\":2837:2856   */\n      dup2\n      add\n        /* \"#utility.yul\":2824:2857   */\n      calldataload\n      swap5\n        /* \"#utility.yul\":2954:2957   */\n      0xa0\n        /* \"#utility.yul\":2939:2958   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2926:2959   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":2350:2991   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3178:3524   */\n    tag_53:\n        /* \"#utility.yul\":3246:3252   */\n      0x00\n        /* \"#utility.yul\":3254:3260   */\n      0x00\n        /* \"#utility.yul\":3307:3309   */\n      0x40\n        /* \"#utility.yul\":3295:3304   */\n      dup4\n        /* \"#utility.yul\":3286:3293   */\n      dup6\n        /* \"#utility.yul\":3282:3305   */\n      sub\n        /* \"#utility.yul\":3278:3310   */\n      slt\n        /* \"#utility.yul\":3275:3327   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3320:3321   */\n      0x00\n        /* \"#utility.yul\":3313:3325   */\n      revert\n        /* \"#utility.yul\":3275:3327   */\n    tag_378:\n      pop\n      pop\n        /* \"#utility.yul\":3368:3391   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3488:3490   */\n      0x20\n        /* \"#utility.yul\":3473:3491   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3460:3492   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3178:3524   */\n      jump\t// out\n        /* \"#utility.yul\":3529:3949   */\n    tag_57:\n        /* \"#utility.yul\":3606:3612   */\n      0x00\n        /* \"#utility.yul\":3614:3620   */\n      0x00\n        /* \"#utility.yul\":3622:3628   */\n      0x00\n        /* \"#utility.yul\":3675:3677   */\n      0x60\n        /* \"#utility.yul\":3663:3672   */\n      dup5\n        /* \"#utility.yul\":3654:3661   */\n      dup7\n        /* \"#utility.yul\":3650:3673   */\n      sub\n        /* \"#utility.yul\":3646:3678   */\n      slt\n        /* \"#utility.yul\":3643:3695   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":3691:3692   */\n      0x00\n        /* \"#utility.yul\":3688:3689   */\n      0x00\n        /* \"#utility.yul\":3681:3693   */\n      revert\n        /* \"#utility.yul\":3643:3695   */\n    tag_380:\n        /* \"#utility.yul\":3736:3759   */\n      dup4\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":3802:3840   */\n      tag_381\n        /* \"#utility.yul\":3836:3838   */\n      0x20\n        /* \"#utility.yul\":3821:3839   */\n      dup6\n      add\n        /* \"#utility.yul\":3802:3840   */\n      tag_354\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3529:3949   */\n      swap3\n      swap6\n        /* \"#utility.yul\":3792:3840   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3913:3915   */\n      0x40\n        /* \"#utility.yul\":3898:3916   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3885:3917   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":3529:3949   */\n      jump\t// out\n        /* \"#utility.yul\":4162:4348   */\n    tag_71:\n        /* \"#utility.yul\":4221:4227   */\n      0x00\n        /* \"#utility.yul\":4274:4276   */\n      0x20\n        /* \"#utility.yul\":4262:4271   */\n      dup3\n        /* \"#utility.yul\":4253:4260   */\n      dup5\n        /* \"#utility.yul\":4249:4272   */\n      sub\n        /* \"#utility.yul\":4245:4277   */\n      slt\n        /* \"#utility.yul\":4242:4294   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":4290:4291   */\n      0x00\n        /* \"#utility.yul\":4287:4288   */\n      0x00\n        /* \"#utility.yul\":4280:4292   */\n      revert\n        /* \"#utility.yul\":4242:4294   */\n    tag_384:\n        /* \"#utility.yul\":4313:4342   */\n      tag_335\n        /* \"#utility.yul\":4332:4341   */\n      dup3\n        /* \"#utility.yul\":4313:4342   */\n      tag_354\n      jump\t// in\n        /* \"#utility.yul\":4353:4653   */\n    tag_78:\n        /* \"#utility.yul\":4421:4427   */\n      0x00\n        /* \"#utility.yul\":4429:4435   */\n      0x00\n        /* \"#utility.yul\":4482:4484   */\n      0x40\n        /* \"#utility.yul\":4470:4479   */\n      dup4\n        /* \"#utility.yul\":4461:4468   */\n      dup6\n        /* \"#utility.yul\":4457:4480   */\n      sub\n        /* \"#utility.yul\":4453:4485   */\n      slt\n        /* \"#utility.yul\":4450:4502   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":4498:4499   */\n      0x00\n        /* \"#utility.yul\":4495:4496   */\n      0x00\n        /* \"#utility.yul\":4488:4500   */\n      revert\n        /* \"#utility.yul\":4450:4502   */\n    tag_387:\n        /* \"#utility.yul\":4543:4566   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4609:4647   */\n      tag_388\n        /* \"#utility.yul\":4643:4645   */\n      0x20\n        /* \"#utility.yul\":4628:4646   */\n      dup5\n      add\n        /* \"#utility.yul\":4609:4647   */\n      tag_354\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4599:4647   */\n      swap1\n      pop\n        /* \"#utility.yul\":4353:4653   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4658:5055   */\n    tag_85:\n        /* \"#utility.yul\":4860:4862   */\n      0x20\n        /* \"#utility.yul\":4842:4863   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4899:4901   */\n      0x21\n        /* \"#utility.yul\":4879:4897   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4872:4902   */\n      mstore\n        /* \"#utility.yul\":4938:4972   */\n      0x4d61726b6574696e675374616b696e673a496e76616c696420506f6f6c204944\n        /* \"#utility.yul\":4933:4935   */\n      0x40\n        /* \"#utility.yul\":4918:4936   */\n      dup3\n      add\n        /* \"#utility.yul\":4911:4973   */\n      mstore\n      shl(0xf8, 0x21)\n        /* \"#utility.yul\":5004:5006   */\n      0x60\n        /* \"#utility.yul\":4989:5007   */\n      dup3\n      add\n        /* \"#utility.yul\":4982:5013   */\n      mstore\n        /* \"#utility.yul\":5045:5048   */\n      0x80\n        /* \"#utility.yul\":5030:5049   */\n      add\n      swap1\n        /* \"#utility.yul\":4658:5055   */\n      jump\t// out\n        /* \"#utility.yul\":5060:5187   */\n    tag_89:\n        /* \"#utility.yul\":5121:5131   */\n      0x4e487b71\n        /* \"#utility.yul\":5116:5119   */\n      0xe0\n        /* \"#utility.yul\":5112:5132   */\n      shl\n        /* \"#utility.yul\":5109:5110   */\n      0x00\n        /* \"#utility.yul\":5102:5133   */\n      mstore\n        /* \"#utility.yul\":5152:5156   */\n      0x32\n        /* \"#utility.yul\":5149:5150   */\n      0x04\n        /* \"#utility.yul\":5142:5157   */\n      mstore\n        /* \"#utility.yul\":5176:5180   */\n      0x24\n        /* \"#utility.yul\":5173:5174   */\n      0x00\n        /* \"#utility.yul\":5166:5181   */\n      revert\n        /* \"#utility.yul\":5192:5607   */\n    tag_111:\n        /* \"#utility.yul\":5394:5396   */\n      0x20\n        /* \"#utility.yul\":5376:5397   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5433:5435   */\n      0x33\n        /* \"#utility.yul\":5413:5431   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5406:5436   */\n      mstore\n        /* \"#utility.yul\":5472:5506   */\n      0x4d61726b6574696e675374616b696e673a4561726c7920576974686472617761\n        /* \"#utility.yul\":5467:5469   */\n      0x40\n        /* \"#utility.yul\":5452:5470   */\n      dup3\n      add\n        /* \"#utility.yul\":5445:5507   */\n      mstore\n      shl(0x68, 0x6c206973206e6f74207065726d697474656421)\n        /* \"#utility.yul\":5538:5540   */\n      0x60\n        /* \"#utility.yul\":5523:5541   */\n      dup3\n      add\n        /* \"#utility.yul\":5516:5565   */\n      mstore\n        /* \"#utility.yul\":5597:5600   */\n      0x80\n        /* \"#utility.yul\":5582:5601   */\n      add\n      swap1\n        /* \"#utility.yul\":5192:5607   */\n      jump\t// out\n        /* \"#utility.yul\":5612:5739   */\n    tag_356:\n        /* \"#utility.yul\":5673:5683   */\n      0x4e487b71\n        /* \"#utility.yul\":5668:5671   */\n      0xe0\n        /* \"#utility.yul\":5664:5684   */\n      shl\n        /* \"#utility.yul\":5661:5662   */\n      0x00\n        /* \"#utility.yul\":5654:5685   */\n      mstore\n        /* \"#utility.yul\":5704:5708   */\n      0x11\n        /* \"#utility.yul\":5701:5702   */\n      0x04\n        /* \"#utility.yul\":5694:5709   */\n      mstore\n        /* \"#utility.yul\":5728:5732   */\n      0x24\n        /* \"#utility.yul\":5725:5726   */\n      0x00\n        /* \"#utility.yul\":5718:5733   */\n      revert\n        /* \"#utility.yul\":5744:5872   */\n    tag_117:\n        /* \"#utility.yul\":5811:5820   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5832:5843   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5829:5866   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":5846:5864   */\n      tag_334\n      tag_356\n      jump\t// in\n        /* \"#utility.yul\":6706:7108   */\n    tag_147:\n        /* \"#utility.yul\":6908:6910   */\n      0x20\n        /* \"#utility.yul\":6890:6911   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6947:6949   */\n      0x26\n        /* \"#utility.yul\":6927:6945   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6920:6950   */\n      mstore\n        /* \"#utility.yul\":6986:7020   */\n      0x4d61726b6574696e675374616b696e673a496e73756666696369656e74206261\n        /* \"#utility.yul\":6981:6983   */\n      0x40\n        /* \"#utility.yul\":6966:6984   */\n      dup3\n      add\n        /* \"#utility.yul\":6959:7021   */\n      mstore\n      shl(0xd0, 0x6c616e636521)\n        /* \"#utility.yul\":7052:7054   */\n      0x60\n        /* \"#utility.yul\":7037:7055   */\n      dup3\n      add\n        /* \"#utility.yul\":7030:7066   */\n      mstore\n        /* \"#utility.yul\":7098:7101   */\n      0x80\n        /* \"#utility.yul\":7083:7102   */\n      add\n      swap1\n        /* \"#utility.yul\":6706:7108   */\n      jump\t// out\n        /* \"#utility.yul\":7962:8180   */\n    tag_178:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":8068:8102   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":8032:8066   */\n      dup3\n      dup3\n      and\n        /* \"#utility.yul\":8028:8103   */\n      sub\n      swap1\n        /* \"#utility.yul\":8115:8151   */\n      dup2\n      gt\n        /* \"#utility.yul\":8112:8174   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":8154:8172   */\n      tag_334\n      tag_356\n      jump\t// in\n        /* \"#utility.yul\":8185:8353   */\n    tag_180:\n        /* \"#utility.yul\":8258:8267   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":8289:8298   */\n      dup2\n      iszero\n        /* \"#utility.yul\":8306:8321   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":8300:8322   */\n      dup5\n      eq\n        /* \"#utility.yul\":8286:8323   */\n      or\n        /* \"#utility.yul\":8276:8347   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":8327:8345   */\n      tag_334\n      tag_356\n      jump\t// in\n        /* \"#utility.yul\":8358:8575   */\n    tag_182:\n        /* \"#utility.yul\":8398:8399   */\n      0x00\n        /* \"#utility.yul\":8424:8425   */\n      dup3\n        /* \"#utility.yul\":8414:8546   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":8468:8478   */\n      0x4e487b71\n        /* \"#utility.yul\":8463:8466   */\n      0xe0\n        /* \"#utility.yul\":8459:8479   */\n      shl\n        /* \"#utility.yul\":8456:8457   */\n      0x00\n        /* \"#utility.yul\":8449:8480   */\n      mstore\n        /* \"#utility.yul\":8503:8507   */\n      0x12\n        /* \"#utility.yul\":8500:8501   */\n      0x04\n        /* \"#utility.yul\":8493:8508   */\n      mstore\n        /* \"#utility.yul\":8531:8535   */\n      0x24\n        /* \"#utility.yul\":8528:8529   */\n      0x00\n        /* \"#utility.yul\":8521:8536   */\n      revert\n        /* \"#utility.yul\":8414:8546   */\n    tag_408:\n      pop\n        /* \"#utility.yul\":8560:8569   */\n      div\n      swap1\n        /* \"#utility.yul\":8358:8575   */\n      jump\t// out\n        /* \"#utility.yul\":9989:10114   */\n    tag_222:\n        /* \"#utility.yul\":10054:10063   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10075:10085   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":10072:10108   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":10088:10106   */\n      tag_334\n      tag_356\n      jump\t// in\n        /* \"#utility.yul\":10119:10533   */\n    tag_237:\n        /* \"#utility.yul\":10321:10323   */\n      0x20\n        /* \"#utility.yul\":10303:10324   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10360:10362   */\n      0x32\n        /* \"#utility.yul\":10340:10358   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10333:10363   */\n      mstore\n        /* \"#utility.yul\":10399:10433   */\n      0x4d61726b6574696e675374616b696e673a616d6f756e74206d75737420626520\n        /* \"#utility.yul\":10394:10396   */\n      0x40\n        /* \"#utility.yul\":10379:10397   */\n      dup3\n      add\n        /* \"#utility.yul\":10372:10434   */\n      mstore\n      shl(0x70, 0x67726561746572207468616e207a65726f21)\n        /* \"#utility.yul\":10465:10467   */\n      0x60\n        /* \"#utility.yul\":10450:10468   */\n      dup3\n      add\n        /* \"#utility.yul\":10443:10491   */\n      mstore\n        /* \"#utility.yul\":10523:10526   */\n      0x80\n        /* \"#utility.yul\":10508:10527   */\n      add\n      swap1\n        /* \"#utility.yul\":10119:10533   */\n      jump\t// out\n        /* \"#utility.yul\":10538:10753   */\n    tag_244:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":10606:10640   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":10642:10676   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":10602:10677   */\n      add\n      swap1\n        /* \"#utility.yul\":10689:10724   */\n      dup2\n      gt\n        /* \"#utility.yul\":10686:10747   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":10727:10745   */\n      tag_334\n      tag_356\n      jump\t// in\n\n    auxdata: 0xa26469706673582212202370d657e21c71e0e678798406608ab1b8a3eed29fa468d0bd13c5823d12374364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_4508": {
									"entryPoint": null,
									"id": 4508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_883": {
									"entryPoint": null,
									"id": 883,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 497,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:219:13",
										"nodeType": "YulBlock",
										"src": "0:219:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:13",
													"nodeType": "YulBlock",
													"src": "115:102:13",
													"statements": [
														{
															"nativeSrc": "125:26:13",
															"nodeType": "YulAssignment",
															"src": "125:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:13",
																		"nodeType": "YulLiteral",
																		"src": "148:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:13"
																},
																"nativeSrc": "133:18:13",
																"nodeType": "YulFunctionCall",
																"src": "133:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:13",
																								"nodeType": "YulLiteral",
																								"src": "198:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:13",
																								"nodeType": "YulLiteral",
																								"src": "203:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:13"
																						},
																						"nativeSrc": "194:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:13",
																						"nodeType": "YulLiteral",
																						"src": "207:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:13"
																				},
																				"nativeSrc": "190:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:13"
																		},
																		"nativeSrc": "178:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:13"
																},
																"nativeSrc": "160:51:13",
																"nodeType": "YulFunctionCall",
																"src": "160:51:13"
															},
															"nativeSrc": "160:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:13",
														"nodeType": "YulTypedName",
														"src": "84:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:13",
														"nodeType": "YulTypedName",
														"src": "95:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:13",
														"nodeType": "YulTypedName",
														"src": "106:4:13",
														"type": ""
													}
												],
												"src": "14:203:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50338061003557604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61003e816101f1565b50600180805560408051610120810182525f80825260208201818152928201818152606083018281526080840183815260a0850184815260c0860185815260e087018681526101008801878152600280549b8c018155909752965197516001600160a01b03988916600160a01b6001600160601b039283168102919091177f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace6007909c029b8c01559551945194909816938816909402929092177f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf880155517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0870155517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad1860155517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad285015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad3840155517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad490920180546001600160601b03191692909116919091179055610240565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61198a8061024d5f395ff3fe608060405234801561000f575f5ffd5b50600436106100f0575f3560e01c80637b0472f011610093578063ce4b5bbe11610063578063ce4b5bbe14610276578063f2fde38b14610286578063fc41aa0914610299578063fdeef425146102ac575f5ffd5b80637b0472f01461022e5780637db7e3bf146102415780638da5cb5b14610254578063b4ac68601461026e575f5ffd5b8063379607f5116100ce578063379607f51461019e578063584b62a1146101b15780635d9d231814610205578063715018a614610226575f5ffd5b8063068bcd8d146100f457806321241dfe1461016757806325d5971f14610189575b5f5ffd5b6101076101023660046115fe565b6102bf565b604080516001600160a01b039a8b1681529990981660208a01526001600160601b03968716978901979097529385166060880152608087019290925260a086015260c08501521660e0830152610100820152610120015b60405180910390f35b6101716234bc0081565b6040516001600160601b03909116815260200161015e565b61019c6101973660046115fe565b6103c8565b005b61019c6101ac3660046115fe565b6105d3565b6101ea6101bf366004611630565b600360209081525f928352604080842090915290825290208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161015e565b61021861021336600461166e565b610806565b60405190815260200161015e565b61019c610c06565b61019c61023c3660046116d0565b610c19565b61019c61024f3660046116f0565b610eae565b5f546040516001600160a01b03909116815260200161015e565b61021861100d565b610218683635c9adc5dea0000081565b61019c610294366004611723565b611023565b61019c6102a73660046116d0565b61105d565b6102186102ba36600461173c565b61114b565b5f5f5f5f5f5f5f5f5f895f811180156102d9575060025481105b6102fe5760405162461bcd60e51b81526004016102f590611766565b60405180910390fd5b5f60028c81548110610312576103126117a7565b905f5260205f2090600702019050805f015f9054906101000a90046001600160a01b0316816001015f9054906101000a90046001600160a01b0316825f0160149054906101000a90046001600160601b03168360010160149054906101000a90046001600160601b0316846002015485600301548660040154876006015f9054906101000a90046001600160601b031688600501549a509a509a509a509a509a509a509a509a5050509193959799909294969850565b6103d06112b3565b805f811180156103e1575060025481105b6103fd5760405162461bcd60e51b81526004016102f590611766565b61040782336112dd565b335f90815260036020908152604080832085845290915281206002805491929185908110610437576104376117a7565b5f91825260209091206007909102016001810154909150600160a01b90046001600160601b0316426001600160601b031610156104865760405162461bcd60e51b81526004016102f5906117bb565b8154156105c4576104a6335b835483546001600160a01b03169190611457565b81546002820180545f906104bb908490611822565b90915550508154604051908152339085907f459d5aef2c549903c1eeb1736f5728845d5ccf82537ddd5bf8035795eee892639060200160405180910390a35f8255335b6001600160a01b0316847f8fe70e917ad578cbb5b0779aa52ee3f23afa39c5295542125059f2a4e98cbbfe845f015485600101548660020154604051610557939291909283526020830191909152604082015260600190565b60405180910390a36002810154600382015460048301546006840154604080519485526020850193909352918301526001600160601b0316606082015284907fe9d4ced29dfd1b7392aa77b7ea3220d8318a5a65cd900f4e40e9d816d11d84f29060800160405180910390a25b5050506105d060018055565b50565b6105db6112b3565b805f811180156105ec575060025481105b6106085760405162461bcd60e51b81526004016102f590611766565b61061282336112dd565b335f90815260036020908152604080832085845290915281206002805491929185908110610642576106426117a7565b5f91825260209091206007909102016001810154909150600160a01b90046001600160601b0316426001600160601b031610156106915760405162461bcd60e51b81526004016102f5906117bb565b5f8260010154116106ee5760405162461bcd60e51b815260206004820152602160248201527f4d61726b6574696e675374616b696e673a4e6f7468696e6720746f20636c61696044820152606d60f81b60648201526084016102f5565b8160010154816005015410156107165760405162461bcd60e51b81526004016102f590611835565b81541561077d5761072633610492565b81546002820180545f9061073b908490611822565b90915550508154604051908152339085907f459d5aef2c549903c1eeb1736f5728845d5ccf82537ddd5bf8035795eee892639060200160405180910390a35f82555b61079b33600180850154908401546001600160a01b03169190611457565b8160010154816005015f8282546107b29190611822565b90915550506001820154604051908152339085907f04492fab062412e7e4e5f46c9e919f1640652946a5e163ad6e6c1c03d87954d29060200160405180910390a35f600183018190556002830155336104fe565b5f61080f6114bb565b6001600160601b038416426001600160601b0316106108965760405162461bcd60e51b815260206004820152603860248201527f4d61726b6574696e675374616b696e673a456e642074696d65206d757374206260448201527f652067726561746572207468616e2074696d655f6e6f7721000000000000000060648201526084016102f5565b6108b26001600160601b038616426001600160601b03166114e7565b9450836001600160601b0316856001600160601b03161061093b5760405162461bcd60e51b815260206004820152603760248201527f4d61726b6574696e675374616b696e673a53746172742074696d65206d75737460448201527f206265206c657373207468616e20656e642074696d652100000000000000000060648201526084016102f5565b5f610946868661187b565b6001600160601b031661096285683635c9adc5dea0000061189a565b61096c91906118b1565b60408051610120810182526001600160a01b038b811682526001600160601b038a8116602084018181528d84169585019586528b8316606086019081525f6080870181815260a088018a815260c0890183815260e08a018f81526101008b0197885260028054600180820183558288529c519851988c16600160a01b998c168a02177f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace6007909202918201559c51965196909a16958916909602949094177f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf8b015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad08a0155517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad189015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad288015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad387015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad490950180546bffffffffffffffffffffffff191695909216949094179055549293509091610b369190611822565b604080516001600160a01b038c811682528b1660208201526001600160601b038a81168284015289166060820152683635c9adc5dea000006080820152905191925082917f7c89ff64ffbfc8006a5f9ef85541e2fc4f990a7906ba4920928ffd9c9b7b3a959181900360a00190a28315610bfa57610bbf6001600160a01b0389163330876114fb565b807f6c07ee05dcf262f13abf9d87b846ee789d2f90fe991d495acd7d7fc109ee1f5585604051610bf191815260200190565b60405180910390a25b98975050505050505050565b610c0e6114bb565b610c175f611534565b565b610c216112b3565b815f81118015610c32575060025481105b610c4e5760405162461bcd60e51b81526004016102f590611766565b5f60028481548110610c6257610c626117a7565b5f91825260209091206007909102018054909150600160a01b90046001600160601b0316426001600160601b031610158015610cba57506001810154600160a01b90046001600160601b0316426001600160601b0316105b610d125760405162461bcd60e51b8152602060048201526024808201527f4d61726b6574696e675374616b696e673a506f6f6c206973206e6f74206163746044820152636976652160e01b60648201526084016102f5565b5f8311610d7f5760405162461bcd60e51b815260206004820152603560248201527f4d61726b6574696e675374616b696e673a7374616b655f616d6f756e74206d7560448201527473742062652067726561746572207468616e20302160581b60648201526084016102f5565b610d963382546001600160a01b03169030866114fb565b610da084336112dd565b335f9081526003602090815260408083208784529091528120805490918591839190610dcd9084906118d0565b9250508190555083826002015f828254610de791906118d0565b90915550508054600182015460028301546040805193845260208401929092528282015251339187917f8fe70e917ad578cbb5b0779aa52ee3f23afa39c5295542125059f2a4e98cbbfe9181900360600190a36002820154600383015460048401546006850154604080519485526020850193909352918301526001600160601b0316606082015285907fe9d4ced29dfd1b7392aa77b7ea3220d8318a5a65cd900f4e40e9d816d11d84f29060800160405180910390a2505050610eaa60018055565b5050565b610eb66114bb565b825f81118015610ec7575060025481105b610ee35760405162461bcd60e51b81526004016102f590611766565b5f8211610f025760405162461bcd60e51b81526004016102f5906118e3565b5f60028581548110610f1657610f166117a7565b905f5260205f20906007020190508281600501541015610f485760405162461bcd60e51b81526004016102f590611835565b6001810154610f6b906234bc0090600160a01b90046001600160601b0316611935565b6001600160601b0316426001600160601b0316101580610f8d57506002810154155b610f95575f5ffd5b6001810154610fae906001600160a01b03168585611457565b82816005015f828254610fc19190611822565b90915550506040518381526001600160a01b0385169086907fb886382d42263e3c08a157dd29a33c435741f36625dbc3acb6fb8c19bbf782479060200160405180910390a35050505050565b6002545f9061101e90600190611822565b905090565b61102b6114bb565b6001600160a01b03811661105457604051631e4fbdf760e01b81525f60048201526024016102f5565b6105d081611534565b6110656112b3565b815f81118015611076575060025481105b6110925760405162461bcd60e51b81526004016102f590611766565b5f82116110b15760405162461bcd60e51b81526004016102f5906118e3565b5f600284815481106110c5576110c56117a7565b905f5260205f20906007020190506110f36110dd3390565b60018301546001600160a01b03169030866114fb565b82816005015f82825461110691906118d0565b909155505060405183815284907f6c07ee05dcf262f13abf9d87b846ee789d2f90fe991d495acd7d7fc109ee1f559060200160405180910390a25050610eaa60018055565b5f825f8111801561115d575060025481105b6111795760405162461bcd60e51b81526004016102f590611766565b6001600160a01b0383165f908152600360209081526040808320878452909152812060028054919291879081106111b2576111b26117a7565b5f918252602082206007919091020160068101549092506111ff906001600160601b03166111fa425b60018601546001600160601b0391821691600160a01b90910416611583565b6114e7565b600483015460028401549192509015801590611227575060068301546001600160601b031682115b156112745760028301546003840154600685015461124e906001600160601b031685611822565b611258919061189a565b61126291906118b1565b836004015461127191906118d0565b90505b683635c9adc5dea0000084600201548261128e9190611822565b855461129a919061189a565b6112a491906118b1565b8460010154610bfa91906118d0565b6002600154036112d657604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b5f600283815481106112f1576112f16117a7565b5f9182526020822060079190910201600681015490925061131e906001600160601b03166111fa426111db565b90505f8260020154118015611343575060068201546001600160601b03908116908216115b1561139f5760028201546003830154600684015461136a906001600160601b03168461187b565b6001600160601b031661137d919061189a565b61138791906118b1565b826004015f82825461139991906118d0565b90915550505b6006820180546bffffffffffffffffffffffff19166001600160601b0383161790556001600160a01b03831615611451576001600160a01b0383165f908152600360209081526040808320878452909152902080541561144557683635c9adc5dea00000816002015484600401546114179190611822565b8254611423919061189a565b61142d91906118b1565b816001015f82825461143f91906118d0565b90915550505b60048301546002909101555b50505050565b6040516001600160a01b038381166024830152604482018390526114b691859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611592565b505050565b5f546001600160a01b03163314610c175760405163118cdaa760e01b81523360048201526024016102f5565b5f8282188284110282185b90505b92915050565b6040516001600160a01b0384811660248301528381166044830152606482018390526114519186918216906323b872dd90608401611484565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f8282188284100282186114f2565b5f5f60205f8451602086015f885af1806115b1576040513d5f823e3d81fd5b50505f513d915081156115c85780600114156115d5565b6001600160a01b0384163b155b1561145157604051635274afe760e01b81526001600160a01b03851660048201526024016102f5565b5f6020828403121561160e575f5ffd5b5035919050565b80356001600160a01b038116811461162b575f5ffd5b919050565b5f5f60408385031215611641575f5ffd5b61164a83611615565b946020939093013593505050565b80356001600160601b038116811461162b575f5ffd5b5f5f5f5f5f5f60c08789031215611683575f5ffd5b61168c87611615565b955061169a60208801611615565b94506116a860408801611658565b93506116b660608801611658565b9598949750929560808101359460a0909101359350915050565b5f5f604083850312156116e1575f5ffd5b50508035926020909101359150565b5f5f5f60608486031215611702575f5ffd5b8335925061171260208501611615565b929592945050506040919091013590565b5f60208284031215611733575f5ffd5b6114f282611615565b5f5f6040838503121561174d575f5ffd5b8235915061175d60208401611615565b90509250929050565b60208082526021908201527f4d61726b6574696e675374616b696e673a496e76616c696420506f6f6c2049446040820152602160f81b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b60208082526033908201527f4d61726b6574696e675374616b696e673a4561726c79205769746864726177616040820152726c206973206e6f74207065726d69747465642160681b606082015260800190565b634e487b7160e01b5f52601160045260245ffd5b818103818111156114f5576114f561180e565b60208082526026908201527f4d61726b6574696e675374616b696e673a496e73756666696369656e742062616040820152656c616e63652160d01b606082015260800190565b6001600160601b0382811682821603908111156114f5576114f561180e565b80820281158282048414176114f5576114f561180e565b5f826118cb57634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156114f5576114f561180e565b60208082526032908201527f4d61726b6574696e675374616b696e673a616d6f756e74206d7573742062652060408201527167726561746572207468616e207a65726f2160701b606082015260800190565b6001600160601b0381811683821601908111156114f5576114f561180e56fea26469706673582212202370d657e21c71e0e678798406608ab1b8a3eed29fa468d0bd13c5823d12374364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER DUP1 PUSH2 0x35 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E DUP2 PUSH2 0x1F1 JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 MSTORE SWAP3 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x80 DUP5 ADD DUP4 DUP2 MSTORE PUSH1 0xA0 DUP6 ADD DUP5 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD DUP6 DUP2 MSTORE PUSH1 0xE0 DUP8 ADD DUP7 DUP2 MSTORE PUSH2 0x100 DUP9 ADD DUP8 DUP2 MSTORE PUSH1 0x2 DUP1 SLOAD SWAP12 DUP13 ADD DUP2 SSTORE SWAP1 SWAP8 MSTORE SWAP7 MLOAD SWAP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 DUP4 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE PUSH1 0x7 SWAP1 SWAP13 MUL SWAP12 DUP13 ADD SSTORE SWAP6 MLOAD SWAP5 MLOAD SWAP5 SWAP1 SWAP9 AND SWAP4 DUP9 AND SWAP1 SWAP5 MUL SWAP3 SWAP1 SWAP3 OR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF DUP9 ADD SSTORE MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0 DUP8 ADD SSTORE MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD1 DUP7 ADD SSTORE MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD2 DUP6 ADD SSTORE SWAP1 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD3 DUP5 ADD SSTORE MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x240 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x198A DUP1 PUSH2 0x24D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0472F0 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xCE4B5BBE GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xCE4B5BBE EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xFC41AA09 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xFDEEF425 EQ PUSH2 0x2AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x7DB7E3BF EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xB4AC6860 EQ PUSH2 0x26E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x379607F5 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x584B62A1 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x5D9D2318 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x226 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x68BCD8D EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x21241DFE EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x25D5971F EQ PUSH2 0x189 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP11 DUP12 AND DUP2 MSTORE SWAP10 SWAP1 SWAP9 AND PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND SWAP8 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP4 DUP6 AND PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH3 0x34BC00 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15E JUMP JUMPDEST PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x3C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1630 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x15E JUMP JUMPDEST PUSH2 0x218 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x166E JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15E JUMP JUMPDEST PUSH2 0x19C PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x16F0 JUMP JUMPDEST PUSH2 0xEAE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15E JUMP JUMPDEST PUSH2 0x218 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x218 PUSH9 0x3635C9ADC5DEA00000 DUP2 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x1023 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0x105D JUMP JUMPDEST PUSH2 0x218 PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x173C JUMP JUMPDEST PUSH2 0x114B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 DUP10 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x2D9 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x2FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP13 DUP2 SLOAD DUP2 LT PUSH2 0x312 JUMPI PUSH2 0x312 PUSH2 0x17A7 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP4 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP5 PUSH1 0x2 ADD SLOAD DUP6 PUSH1 0x3 ADD SLOAD DUP7 PUSH1 0x4 ADD SLOAD DUP8 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP9 PUSH1 0x5 ADD SLOAD SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP10 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 POP JUMP JUMPDEST PUSH2 0x3D0 PUSH2 0x12B3 JUMP JUMPDEST DUP1 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x3E1 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x407 DUP3 CALLER PUSH2 0x12DD JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x437 JUMPI PUSH2 0x437 PUSH2 0x17A7 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x17BB JUMP JUMPDEST DUP2 SLOAD ISZERO PUSH2 0x5C4 JUMPI PUSH2 0x4A6 CALLER JUMPDEST DUP4 SLOAD DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH0 SWAP1 PUSH2 0x4BB SWAP1 DUP5 SWAP1 PUSH2 0x1822 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 DUP6 SWAP1 PUSH32 0x459D5AEF2C549903C1EEB1736F5728845D5CCF82537DDD5BF8035795EEE89263 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 DUP3 SSTORE CALLER JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x8FE70E917AD578CBB5B0779AA52EE3F23AFA39C5295542125059F2A4E98CBBFE DUP5 PUSH0 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD DUP7 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x557 SWAP4 SWAP3 SWAP2 SWAP1 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE DUP5 SWAP1 PUSH32 0xE9D4CED29DFD1B7392AA77B7EA3220D8318A5A65CD900F4E40E9D816D11D84F2 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP PUSH2 0x5D0 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x12B3 JUMP JUMPDEST DUP1 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x5EC JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x612 DUP3 CALLER PUSH2 0x12DD JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x642 JUMPI PUSH2 0x642 PUSH2 0x17A7 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 ADD SLOAD GT PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A4E6F7468696E6720746F20636C6169 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x6D PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F5 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x5 ADD SLOAD LT ISZERO PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1835 JUMP JUMPDEST DUP2 SLOAD ISZERO PUSH2 0x77D JUMPI PUSH2 0x726 CALLER PUSH2 0x492 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH0 SWAP1 PUSH2 0x73B SWAP1 DUP5 SWAP1 PUSH2 0x1822 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 DUP6 SWAP1 PUSH32 0x459D5AEF2C549903C1EEB1736F5728845D5CCF82537DDD5BF8035795EEE89263 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 DUP3 SSTORE JUMPDEST PUSH2 0x79B CALLER PUSH1 0x1 DUP1 DUP6 ADD SLOAD SWAP1 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0x1822 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 DUP6 SWAP1 PUSH32 0x4492FAB062412E7E4E5F46C9E919F1640652946A5E163AD6E6C1C03D87954D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP4 ADD SSTORE CALLER PUSH2 0x4FE JUMP JUMPDEST PUSH0 PUSH2 0x80F PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A456E642074696D65206D7573742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x652067726561746572207468616E2074696D655F6E6F77210000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x8B2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x14E7 JUMP JUMPDEST SWAP5 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A53746172742074696D65206D757374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206265206C657373207468616E20656E642074696D6521000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH0 PUSH2 0x946 DUP7 DUP7 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x962 DUP6 PUSH9 0x3635C9ADC5DEA00000 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x96C SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP11 DUP2 AND PUSH1 0x20 DUP5 ADD DUP2 DUP2 MSTORE DUP14 DUP5 AND SWAP6 DUP6 ADD SWAP6 DUP7 MSTORE DUP12 DUP4 AND PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH0 PUSH1 0x80 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0xA0 DUP9 ADD DUP11 DUP2 MSTORE PUSH1 0xC0 DUP10 ADD DUP4 DUP2 MSTORE PUSH1 0xE0 DUP11 ADD DUP16 DUP2 MSTORE PUSH2 0x100 DUP12 ADD SWAP8 DUP9 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE DUP3 DUP9 MSTORE SWAP13 MLOAD SWAP9 MLOAD SWAP9 DUP13 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP10 DUP13 AND DUP11 MUL OR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE PUSH1 0x7 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD SSTORE SWAP13 MLOAD SWAP7 MLOAD SWAP7 SWAP1 SWAP11 AND SWAP6 DUP10 AND SWAP1 SWAP7 MUL SWAP5 SWAP1 SWAP5 OR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF DUP12 ADD SSTORE SWAP1 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0 DUP11 ADD SSTORE MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD1 DUP10 ADD SSTORE SWAP1 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD2 DUP9 ADD SSTORE SWAP1 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD3 DUP8 ADD SSTORE SWAP1 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD4 SWAP1 SWAP6 ADD DUP1 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP6 SWAP1 SWAP3 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SSTORE SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND DUP3 MSTORE DUP12 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP11 DUP2 AND DUP3 DUP5 ADD MSTORE DUP10 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 PUSH32 0x7C89FF64FFBFC8006A5F9EF85541E2FC4F990A7906BA4920928FFD9C9B7B3A95 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG2 DUP4 ISZERO PUSH2 0xBFA JUMPI PUSH2 0xBBF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND CALLER ADDRESS DUP8 PUSH2 0x14FB JUMP JUMPDEST DUP1 PUSH32 0x6C07EE05DCF262F13ABF9D87B846EE789D2F90FE991D495ACD7D7FC109EE1F55 DUP6 PUSH1 0x40 MLOAD PUSH2 0xBF1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC0E PUSH2 0x14BB JUMP JUMPDEST PUSH2 0xC17 PUSH0 PUSH2 0x1534 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC21 PUSH2 0x12B3 JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xC32 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0xC4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC62 JUMPI PUSH2 0xC62 PUSH2 0x17A7 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO DUP1 ISZERO PUSH2 0xCBA JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT JUMPDEST PUSH2 0xD12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A506F6F6C206973206E6F7420616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x69766521 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0xD7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A7374616B655F616D6F756E74206D75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x73742062652067726561746572207468616E203021 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0xD96 CALLER DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP7 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0xDA0 DUP5 CALLER PUSH2 0x12DD JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP6 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xDCD SWAP1 DUP5 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDE7 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD CALLER SWAP2 DUP8 SWAP2 PUSH32 0x8FE70E917AD578CBB5B0779AA52EE3F23AFA39C5295542125059F2A4E98CBBFE SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE DUP6 SWAP1 PUSH32 0xE9D4CED29DFD1B7392AA77B7EA3220D8318A5A65CD900F4E40E9D816D11D84F2 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0xEAA PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xEB6 PUSH2 0x14BB JUMP JUMPDEST DUP3 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xEC7 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0xEE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0xF02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xF16 JUMPI PUSH2 0xF16 PUSH2 0x17A7 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP3 DUP2 PUSH1 0x5 ADD SLOAD LT ISZERO PUSH2 0xF48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xF6B SWAP1 PUSH3 0x34BC00 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO DUP1 PUSH2 0xF8D JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD ISZERO JUMPDEST PUSH2 0xF95 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xFAE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 PUSH2 0x1457 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x1822 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP7 SWAP1 PUSH32 0xB886382D42263E3C08A157DD29A33C435741F36625DBC3ACB6FB8C19BBF78247 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP1 PUSH2 0x101E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1822 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x102B PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1054 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x5D0 DUP2 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x1065 PUSH2 0x12B3 JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x1076 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x1092 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x10B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x10C5 JUMPI PUSH2 0x10C5 PUSH2 0x17A7 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH2 0x10F3 PUSH2 0x10DD CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP7 PUSH2 0x14FB JUMP JUMPDEST DUP3 DUP2 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1106 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP5 SWAP1 PUSH32 0x6C07EE05DCF262F13ABF9D87B846EE789D2F90FE991D495ACD7D7FC109EE1F55 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xEAA PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH0 DUP3 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x115D JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x1179 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP8 SWAP1 DUP2 LT PUSH2 0x11B2 JUMPI PUSH2 0x11B2 PUSH2 0x17A7 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x7 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x6 DUP2 ADD SLOAD SWAP1 SWAP3 POP PUSH2 0x11FF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x11FA TIMESTAMP JUMPDEST PUSH1 0x1 DUP7 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND PUSH2 0x1583 JUMP JUMPDEST PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x2 DUP5 ADD SLOAD SWAP2 SWAP3 POP SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1227 JUMPI POP PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 GT JUMPDEST ISZERO PUSH2 0x1274 JUMPI PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH2 0x124E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP6 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x1258 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1262 SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x1271 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP5 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x1822 JUMP JUMPDEST DUP6 SLOAD PUSH2 0x129A SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x12A4 SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xBFA SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x12D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x12F1 JUMPI PUSH2 0x12F1 PUSH2 0x17A7 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x7 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x6 DUP2 ADD SLOAD SWAP1 SWAP3 POP PUSH2 0x131E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x11FA TIMESTAMP PUSH2 0x11DB JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD SLOAD GT DUP1 ISZERO PUSH2 0x1343 JUMPI POP PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND GT JUMPDEST ISZERO PUSH2 0x139F JUMPI PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD PUSH2 0x136A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP5 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x137D SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1387 SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST DUP3 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1399 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1451 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x1445 JUMPI PUSH9 0x3635C9ADC5DEA00000 DUP2 PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x4 ADD SLOAD PUSH2 0x1417 SWAP2 SWAP1 PUSH2 0x1822 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1423 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x142D SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x14B6 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1592 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH0 DUP3 DUP3 XOR DUP3 DUP5 GT MUL DUP3 XOR JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1451 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x1484 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 XOR DUP3 DUP5 LT MUL DUP3 XOR PUSH2 0x14F2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x15B1 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x15C8 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x15D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1451 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x160E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x162B JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1641 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x164A DUP4 PUSH2 0x1615 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x162B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1683 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x168C DUP8 PUSH2 0x1615 JUMP JUMPDEST SWAP6 POP PUSH2 0x169A PUSH1 0x20 DUP9 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP5 POP PUSH2 0x16A8 PUSH1 0x40 DUP9 ADD PUSH2 0x1658 JUMP JUMPDEST SWAP4 POP PUSH2 0x16B6 PUSH1 0x60 DUP9 ADD PUSH2 0x1658 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1702 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x1712 PUSH1 0x20 DUP6 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1733 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14F2 DUP3 PUSH2 0x1615 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x174D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x175D PUSH1 0x20 DUP5 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A496E76616C696420506F6F6C204944 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A4561726C7920576974686472617761 PUSH1 0x40 DUP3 ADD MSTORE PUSH19 0x6C206973206E6F74207065726D697474656421 PUSH1 0x68 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x14F5 JUMPI PUSH2 0x14F5 PUSH2 0x180E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A496E73756666696369656E74206261 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x6C616E636521 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x14F5 JUMPI PUSH2 0x14F5 PUSH2 0x180E JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x14F5 JUMPI PUSH2 0x14F5 PUSH2 0x180E JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x18CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x14F5 JUMPI PUSH2 0x14F5 PUSH2 0x180E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A616D6F756E74206D75737420626520 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x67726561746572207468616E207A65726F21 PUSH1 0x70 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x14F5 JUMPI PUSH2 0x14F5 PUSH2 0x180E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 PUSH17 0xD657E21C71E0E678798406608AB1B8A3EE 0xD2 SWAP16 LOG4 PUSH9 0xD0BD13C5823D123743 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "358:10442:12:-:0;;;2001:411;;;;;;;;;-1:-1:-1;735:10:6;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:13;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:8;2061:21;;;2065:338:12::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;2065:338:12;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:5:::1;:350:::0;;;;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;2054:350:12;;::::1;-1:-1:-1::0;;;;;;;;2054:350:12;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2054:350:12::1;::::0;;;::::1;::::0;;;::::1;::::0;;358:10442;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:203:13:-;358:10442:12;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CLAIM_PERIOD_4374": {
									"entryPoint": null,
									"id": 4374,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SCALE_FACTOR_4377": {
									"entryPoint": null,
									"id": 4377,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_737": {
									"entryPoint": 5522,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5307,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_918": {
									"entryPoint": null,
									"id": 918,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_910": {
									"entryPoint": 4787,
									"id": 910,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5428,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRewards_5338": {
									"entryPoint": 4189,
									"id": 5338,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@claim_5181": {
									"entryPoint": 1491,
									"id": 5181,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@createPool_4710": {
									"entryPoint": 2054,
									"id": 4710,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@getPool_4568": {
									"entryPoint": 703,
									"id": 4568,
									"parameterSlots": 1,
									"returnSlots": 9
								},
								"@getPoolsCount_4579": {
									"entryPoint": 4109,
									"id": 4579,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserRewards_5021": {
									"entryPoint": 4427,
									"id": 5021,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@max_1250": {
									"entryPoint": 5351,
									"id": 1250,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@min_1269": {
									"entryPoint": 5507,
									"id": 1269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 3078,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_387": {
									"entryPoint": 5371,
									"id": 387,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_360": {
									"entryPoint": 5207,
									"id": 360,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_4930": {
									"entryPoint": 3097,
									"id": 4930,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakes_4388": {
									"entryPoint": null,
									"id": 4388,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ternary_1231": {
									"entryPoint": null,
									"id": 1231,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@time_now_4591": {
									"entryPoint": null,
									"id": 4591,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toUint_4327": {
									"entryPoint": null,
									"id": 4327,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4131,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePool_4822": {
									"entryPoint": 4829,
									"id": 4822,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawRewards_5411": {
									"entryPoint": 3758,
									"id": 5411,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdrawStake_5286": {
									"entryPoint": 968,
									"id": 5286,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint96t_uint96t_uint256t_uint256": {
									"entryPoint": 5742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 5948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256": {
									"entryPoint": 5872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_uint96": {
									"entryPoint": 5720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint96_t_uint96_t_uint256__to_t_address_t_address_t_uint96_t_uint96_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint96_t_uint96_t_uint256_t_uint256_t_uint256_t_uint96_t_uint256__to_t_address_t_address_t_uint96_t_uint96_t_uint256_t_uint256_t_uint256_t_uint96_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 10,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1fb492bde4633503501151572865f95cf285b0b8399d0e32d0b44e16616b3bc6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2ffeb4d6a6e18c53bdbb1e26a888925e88a2c474bd647fcf899e8c6ee5114207__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36ba13c2aa6092f52775d769340484f347ee40a294ff19b7999ca5c4fd4b67b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_42908245c450f80f818d9000a6ee4b3b82113f201550c2dc613cb5413b32f2ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_44b7b0a7f318941981ae615ca206c281a67717329a5dc47e2eb5c5286b628868__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c75e03f9b44f14ed5ce8359be3379649f6c328e6dab2912e90239799cefdf367__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cb2ec3ad1b16139b199a6192b421b7a409e15b7e840d7a712143f257a9526abb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d0549e760046a4449575c3a7b4e24b7bb5b43ca1711440b99a696ac6d0735289__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3435391364d3c746d0b75b7b53feb547a8b3de93813fde01f437a139cf16310__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint96__to_t_uint256_t_uint256_t_uint256_t_uint96__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint96": {
									"entryPoint": 6453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint96": {
									"entryPoint": 6267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6158,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6055,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11410:13",
										"nodeType": "YulBlock",
										"src": "0:11410:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:156:13",
													"nodeType": "YulBlock",
													"src": "84:156:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:13",
																"nodeType": "YulBlock",
																"src": "130:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:13",
																					"nodeType": "YulLiteral",
																					"src": "139:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:13",
																					"nodeType": "YulLiteral",
																					"src": "142:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:13"
																			},
																			"nativeSrc": "132:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:13"
																		},
																		"nativeSrc": "132:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:13"
																		},
																		"nativeSrc": "101:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:13",
																		"nodeType": "YulLiteral",
																		"src": "126:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:13"
																},
																"nativeSrc": "97:32:13",
																"nodeType": "YulFunctionCall",
																"src": "97:32:13"
															},
															"nativeSrc": "94:52:13",
															"nodeType": "YulIf",
															"src": "94:52:13"
														},
														{
															"nativeSrc": "155:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "155:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "168:1:13",
																"nodeType": "YulLiteral",
																"src": "168:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:13",
																	"nodeType": "YulTypedName",
																	"src": "159:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "178:32:13",
															"nodeType": "YulAssignment",
															"src": "178:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "200:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "200:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "187:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:12:13"
																},
																"nativeSrc": "187:23:13",
																"nodeType": "YulFunctionCall",
																"src": "187:23:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "178:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "178:5:13"
																}
															]
														},
														{
															"nativeSrc": "219:15:13",
															"nodeType": "YulAssignment",
															"src": "219:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "229:5:13",
																"nodeType": "YulIdentifier",
																"src": "229:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "219:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "219:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:226:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:13",
														"nodeType": "YulTypedName",
														"src": "50:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:13",
														"nodeType": "YulTypedName",
														"src": "61:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:13",
														"nodeType": "YulTypedName",
														"src": "73:6:13",
														"type": ""
													}
												],
												"src": "14:226:13"
											},
											{
												"body": {
													"nativeSrc": "564:577:13",
													"nodeType": "YulBlock",
													"src": "564:577:13",
													"statements": [
														{
															"nativeSrc": "574:27:13",
															"nodeType": "YulAssignment",
															"src": "574:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "586:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "586:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "597:3:13",
																		"nodeType": "YulLiteral",
																		"src": "597:3:13",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "582:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "582:3:13"
																},
																"nativeSrc": "582:19:13",
																"nodeType": "YulFunctionCall",
																"src": "582:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "574:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "574:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "617:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "632:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "632:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "648:3:13",
																								"nodeType": "YulLiteral",
																								"src": "648:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "653:1:13",
																								"nodeType": "YulLiteral",
																								"src": "653:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "644:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "644:3:13"
																						},
																						"nativeSrc": "644:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "644:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "657:1:13",
																						"nodeType": "YulLiteral",
																						"src": "657:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "640:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "640:3:13"
																				},
																				"nativeSrc": "640:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "640:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "628:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "628:3:13"
																		},
																		"nativeSrc": "628:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "628:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "610:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "610:6:13"
																},
																"nativeSrc": "610:51:13",
																"nodeType": "YulFunctionCall",
																"src": "610:51:13"
															},
															"nativeSrc": "610:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "610:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "681:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "681:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "692:2:13",
																				"nodeType": "YulLiteral",
																				"src": "692:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "677:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "677:3:13"
																		},
																		"nativeSrc": "677:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "677:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "701:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "701:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "717:3:13",
																								"nodeType": "YulLiteral",
																								"src": "717:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "722:1:13",
																								"nodeType": "YulLiteral",
																								"src": "722:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "713:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "713:3:13"
																						},
																						"nativeSrc": "713:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "713:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "726:1:13",
																						"nodeType": "YulLiteral",
																						"src": "726:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "709:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "709:3:13"
																				},
																				"nativeSrc": "709:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "709:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "697:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "697:3:13"
																		},
																		"nativeSrc": "697:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "697:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "670:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "670:6:13"
																},
																"nativeSrc": "670:60:13",
																"nodeType": "YulFunctionCall",
																"src": "670:60:13"
															},
															"nativeSrc": "670:60:13",
															"nodeType": "YulExpressionStatement",
															"src": "670:60:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "750:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "750:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "761:2:13",
																				"nodeType": "YulLiteral",
																				"src": "761:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "746:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "746:3:13"
																		},
																		"nativeSrc": "746:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "746:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "770:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "778:26:13",
																				"nodeType": "YulLiteral",
																				"src": "778:26:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "766:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:13"
																		},
																		"nativeSrc": "766:39:13",
																		"nodeType": "YulFunctionCall",
																		"src": "766:39:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "739:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "739:6:13"
																},
																"nativeSrc": "739:67:13",
																"nodeType": "YulFunctionCall",
																"src": "739:67:13"
															},
															"nativeSrc": "739:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "739:67:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "826:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:2:13",
																				"nodeType": "YulLiteral",
																				"src": "837:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "822:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "822:3:13"
																		},
																		"nativeSrc": "822:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "822:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "846:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "846:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "854:26:13",
																				"nodeType": "YulLiteral",
																				"src": "854:26:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "842:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "842:3:13"
																		},
																		"nativeSrc": "842:39:13",
																		"nodeType": "YulFunctionCall",
																		"src": "842:39:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "815:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "815:6:13"
																},
																"nativeSrc": "815:67:13",
																"nodeType": "YulFunctionCall",
																"src": "815:67:13"
															},
															"nativeSrc": "815:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "815:67:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "902:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "902:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "913:3:13",
																				"nodeType": "YulLiteral",
																				"src": "913:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "898:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:13"
																		},
																		"nativeSrc": "898:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "898:19:13"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "919:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "919:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "891:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "891:6:13"
																},
																"nativeSrc": "891:35:13",
																"nodeType": "YulFunctionCall",
																"src": "891:35:13"
															},
															"nativeSrc": "891:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "891:35:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "946:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "946:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "957:3:13",
																				"nodeType": "YulLiteral",
																				"src": "957:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "942:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:13"
																		},
																		"nativeSrc": "942:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "942:19:13"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "963:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "963:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "935:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "935:6:13"
																},
																"nativeSrc": "935:35:13",
																"nodeType": "YulFunctionCall",
																"src": "935:35:13"
															},
															"nativeSrc": "935:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "935:35:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "990:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "990:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1001:3:13",
																				"nodeType": "YulLiteral",
																				"src": "1001:3:13",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "986:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "986:3:13"
																		},
																		"nativeSrc": "986:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "986:19:13"
																	},
																	{
																		"name": "value6",
																		"nativeSrc": "1007:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1007:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "979:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "979:6:13"
																},
																"nativeSrc": "979:35:13",
																"nodeType": "YulFunctionCall",
																"src": "979:35:13"
															},
															"nativeSrc": "979:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "979:35:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1034:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1034:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1045:3:13",
																				"nodeType": "YulLiteral",
																				"src": "1045:3:13",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1030:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1030:3:13"
																		},
																		"nativeSrc": "1030:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1030:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value7",
																				"nativeSrc": "1055:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1055:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1063:26:13",
																				"nodeType": "YulLiteral",
																				"src": "1063:26:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1051:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1051:3:13"
																		},
																		"nativeSrc": "1051:39:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1051:39:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1023:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1023:6:13"
																},
																"nativeSrc": "1023:68:13",
																"nodeType": "YulFunctionCall",
																"src": "1023:68:13"
															},
															"nativeSrc": "1023:68:13",
															"nodeType": "YulExpressionStatement",
															"src": "1023:68:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1111:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1111:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1122:3:13",
																				"nodeType": "YulLiteral",
																				"src": "1122:3:13",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1107:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1107:3:13"
																		},
																		"nativeSrc": "1107:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1107:19:13"
																	},
																	{
																		"name": "value8",
																		"nativeSrc": "1128:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1128:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:13"
																},
																"nativeSrc": "1100:35:13",
																"nodeType": "YulFunctionCall",
																"src": "1100:35:13"
															},
															"nativeSrc": "1100:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "1100:35:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint96_t_uint96_t_uint256_t_uint256_t_uint256_t_uint96_t_uint256__to_t_address_t_address_t_uint96_t_uint96_t_uint256_t_uint256_t_uint256_t_uint96_t_uint256__fromStack_reversed",
												"nativeSrc": "245:896:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "469:9:13",
														"nodeType": "YulTypedName",
														"src": "469:9:13",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "480:6:13",
														"nodeType": "YulTypedName",
														"src": "480:6:13",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "488:6:13",
														"nodeType": "YulTypedName",
														"src": "488:6:13",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "496:6:13",
														"nodeType": "YulTypedName",
														"src": "496:6:13",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "504:6:13",
														"nodeType": "YulTypedName",
														"src": "504:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "512:6:13",
														"nodeType": "YulTypedName",
														"src": "512:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "520:6:13",
														"nodeType": "YulTypedName",
														"src": "520:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "528:6:13",
														"nodeType": "YulTypedName",
														"src": "528:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "536:6:13",
														"nodeType": "YulTypedName",
														"src": "536:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "544:6:13",
														"nodeType": "YulTypedName",
														"src": "544:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "555:4:13",
														"nodeType": "YulTypedName",
														"src": "555:4:13",
														"type": ""
													}
												],
												"src": "245:896:13"
											},
											{
												"body": {
													"nativeSrc": "1245:109:13",
													"nodeType": "YulBlock",
													"src": "1245:109:13",
													"statements": [
														{
															"nativeSrc": "1255:26:13",
															"nodeType": "YulAssignment",
															"src": "1255:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1267:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1267:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1278:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1278:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1263:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1263:3:13"
																},
																"nativeSrc": "1263:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1263:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1255:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1255:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1297:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1297:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1312:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1312:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1320:26:13",
																				"nodeType": "YulLiteral",
																				"src": "1320:26:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1308:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1308:3:13"
																		},
																		"nativeSrc": "1308:39:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1308:39:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1290:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1290:6:13"
																},
																"nativeSrc": "1290:58:13",
																"nodeType": "YulFunctionCall",
																"src": "1290:58:13"
															},
															"nativeSrc": "1290:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "1290:58:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
												"nativeSrc": "1146:208:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1214:9:13",
														"nodeType": "YulTypedName",
														"src": "1214:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1225:6:13",
														"nodeType": "YulTypedName",
														"src": "1225:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1236:4:13",
														"nodeType": "YulTypedName",
														"src": "1236:4:13",
														"type": ""
													}
												],
												"src": "1146:208:13"
											},
											{
												"body": {
													"nativeSrc": "1408:124:13",
													"nodeType": "YulBlock",
													"src": "1408:124:13",
													"statements": [
														{
															"nativeSrc": "1418:29:13",
															"nodeType": "YulAssignment",
															"src": "1418:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1440:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1427:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1427:12:13"
																},
																"nativeSrc": "1427:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1427:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1418:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1418:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1510:16:13",
																"nodeType": "YulBlock",
																"src": "1510:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1519:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1519:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1522:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1522:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1512:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1512:6:13"
																			},
																			"nativeSrc": "1512:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1512:12:13"
																		},
																		"nativeSrc": "1512:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1512:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1469:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1469:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1480:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1480:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1495:3:13",
																										"nodeType": "YulLiteral",
																										"src": "1495:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1500:1:13",
																										"nodeType": "YulLiteral",
																										"src": "1500:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1491:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1491:3:13"
																								},
																								"nativeSrc": "1491:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1491:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1504:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1504:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1487:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1487:3:13"
																						},
																						"nativeSrc": "1487:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1487:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1476:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1476:3:13"
																				},
																				"nativeSrc": "1476:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1476:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1466:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1466:2:13"
																		},
																		"nativeSrc": "1466:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1466:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1459:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1459:6:13"
																},
																"nativeSrc": "1459:50:13",
																"nodeType": "YulFunctionCall",
																"src": "1459:50:13"
															},
															"nativeSrc": "1456:70:13",
															"nodeType": "YulIf",
															"src": "1456:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1359:173:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1387:6:13",
														"nodeType": "YulTypedName",
														"src": "1387:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1398:5:13",
														"nodeType": "YulTypedName",
														"src": "1398:5:13",
														"type": ""
													}
												],
												"src": "1359:173:13"
											},
											{
												"body": {
													"nativeSrc": "1624:213:13",
													"nodeType": "YulBlock",
													"src": "1624:213:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1670:16:13",
																"nodeType": "YulBlock",
																"src": "1670:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1679:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1679:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1682:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1682:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1672:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1672:6:13"
																			},
																			"nativeSrc": "1672:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1672:12:13"
																		},
																		"nativeSrc": "1672:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1672:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1645:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1645:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1654:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1654:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1641:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1641:3:13"
																		},
																		"nativeSrc": "1641:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1641:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1666:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1666:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1637:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1637:3:13"
																},
																"nativeSrc": "1637:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1637:32:13"
															},
															"nativeSrc": "1634:52:13",
															"nodeType": "YulIf",
															"src": "1634:52:13"
														},
														{
															"nativeSrc": "1695:39:13",
															"nodeType": "YulAssignment",
															"src": "1695:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1724:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1724:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1705:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1705:18:13"
																},
																"nativeSrc": "1705:29:13",
																"nodeType": "YulFunctionCall",
																"src": "1705:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1695:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1695:6:13"
																}
															]
														},
														{
															"nativeSrc": "1743:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1743:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1756:1:13",
																"nodeType": "YulLiteral",
																"src": "1756:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1747:5:13",
																	"nodeType": "YulTypedName",
																	"src": "1747:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1766:41:13",
															"nodeType": "YulAssignment",
															"src": "1766:41:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1792:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1792:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1803:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1803:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1788:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1788:3:13"
																		},
																		"nativeSrc": "1788:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1788:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1775:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1775:12:13"
																},
																"nativeSrc": "1775:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1775:32:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1766:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1766:5:13"
																}
															]
														},
														{
															"nativeSrc": "1816:15:13",
															"nodeType": "YulAssignment",
															"src": "1816:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "1826:5:13",
																"nodeType": "YulIdentifier",
																"src": "1826:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1816:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1816:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1537:300:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1582:9:13",
														"nodeType": "YulTypedName",
														"src": "1582:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1593:7:13",
														"nodeType": "YulTypedName",
														"src": "1593:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1605:6:13",
														"nodeType": "YulTypedName",
														"src": "1605:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1613:6:13",
														"nodeType": "YulTypedName",
														"src": "1613:6:13",
														"type": ""
													}
												],
												"src": "1537:300:13"
											},
											{
												"body": {
													"nativeSrc": "1999:162:13",
													"nodeType": "YulBlock",
													"src": "1999:162:13",
													"statements": [
														{
															"nativeSrc": "2009:26:13",
															"nodeType": "YulAssignment",
															"src": "2009:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2021:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2021:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2032:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2032:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2017:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2017:3:13"
																},
																"nativeSrc": "2017:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2017:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2009:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2009:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2051:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2051:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2062:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2062:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2044:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2044:6:13"
																},
																"nativeSrc": "2044:25:13",
																"nodeType": "YulFunctionCall",
																"src": "2044:25:13"
															},
															"nativeSrc": "2044:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "2044:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2089:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2089:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2100:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2100:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2085:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2085:3:13"
																		},
																		"nativeSrc": "2085:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2085:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2105:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2105:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2078:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2078:6:13"
																},
																"nativeSrc": "2078:34:13",
																"nodeType": "YulFunctionCall",
																"src": "2078:34:13"
															},
															"nativeSrc": "2078:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "2078:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2132:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2132:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2143:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2143:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2128:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2128:3:13"
																		},
																		"nativeSrc": "2128:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2128:18:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2148:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2148:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2121:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2121:6:13"
																},
																"nativeSrc": "2121:34:13",
																"nodeType": "YulFunctionCall",
																"src": "2121:34:13"
															},
															"nativeSrc": "2121:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "2121:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1842:319:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1952:9:13",
														"nodeType": "YulTypedName",
														"src": "1952:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1963:6:13",
														"nodeType": "YulTypedName",
														"src": "1963:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1971:6:13",
														"nodeType": "YulTypedName",
														"src": "1971:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1979:6:13",
														"nodeType": "YulTypedName",
														"src": "1979:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1990:4:13",
														"nodeType": "YulTypedName",
														"src": "1990:4:13",
														"type": ""
													}
												],
												"src": "1842:319:13"
											},
											{
												"body": {
													"nativeSrc": "2214:131:13",
													"nodeType": "YulBlock",
													"src": "2214:131:13",
													"statements": [
														{
															"nativeSrc": "2224:29:13",
															"nodeType": "YulAssignment",
															"src": "2224:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2246:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2246:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2233:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2233:12:13"
																},
																"nativeSrc": "2233:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2233:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2224:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2224:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2323:16:13",
																"nodeType": "YulBlock",
																"src": "2323:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2332:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2332:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2335:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2335:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2325:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2325:6:13"
																			},
																			"nativeSrc": "2325:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2325:12:13"
																		},
																		"nativeSrc": "2325:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2325:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2275:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2275:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2286:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2286:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2293:26:13",
																						"nodeType": "YulLiteral",
																						"src": "2293:26:13",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2282:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2282:3:13"
																				},
																				"nativeSrc": "2282:38:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2282:38:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2272:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2272:2:13"
																		},
																		"nativeSrc": "2272:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2272:49:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2265:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2265:6:13"
																},
																"nativeSrc": "2265:57:13",
																"nodeType": "YulFunctionCall",
																"src": "2265:57:13"
															},
															"nativeSrc": "2262:77:13",
															"nodeType": "YulIf",
															"src": "2262:77:13"
														}
													]
												},
												"name": "abi_decode_uint96",
												"nativeSrc": "2166:179:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2193:6:13",
														"nodeType": "YulTypedName",
														"src": "2193:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2204:5:13",
														"nodeType": "YulTypedName",
														"src": "2204:5:13",
														"type": ""
													}
												],
												"src": "2166:179:13"
											},
											{
												"body": {
													"nativeSrc": "2503:488:13",
													"nodeType": "YulBlock",
													"src": "2503:488:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2550:16:13",
																"nodeType": "YulBlock",
																"src": "2550:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2559:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2559:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2562:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2562:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2552:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2552:6:13"
																			},
																			"nativeSrc": "2552:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2552:12:13"
																		},
																		"nativeSrc": "2552:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2552:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2524:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2524:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2533:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2533:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2520:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2520:3:13"
																		},
																		"nativeSrc": "2520:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2520:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2545:3:13",
																		"nodeType": "YulLiteral",
																		"src": "2545:3:13",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2516:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2516:3:13"
																},
																"nativeSrc": "2516:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2516:33:13"
															},
															"nativeSrc": "2513:53:13",
															"nodeType": "YulIf",
															"src": "2513:53:13"
														},
														{
															"nativeSrc": "2575:39:13",
															"nodeType": "YulAssignment",
															"src": "2575:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2604:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2604:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2585:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2585:18:13"
																},
																"nativeSrc": "2585:29:13",
																"nodeType": "YulFunctionCall",
																"src": "2585:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2575:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2575:6:13"
																}
															]
														},
														{
															"nativeSrc": "2623:48:13",
															"nodeType": "YulAssignment",
															"src": "2623:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2656:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2656:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2667:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2667:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2652:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2652:3:13"
																		},
																		"nativeSrc": "2652:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2652:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2633:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2633:18:13"
																},
																"nativeSrc": "2633:38:13",
																"nodeType": "YulFunctionCall",
																"src": "2633:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2623:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2623:6:13"
																}
															]
														},
														{
															"nativeSrc": "2680:47:13",
															"nodeType": "YulAssignment",
															"src": "2680:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2712:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2712:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2723:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2723:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2708:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2708:3:13"
																		},
																		"nativeSrc": "2708:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint96",
																	"nativeSrc": "2690:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2690:17:13"
																},
																"nativeSrc": "2690:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2690:37:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2680:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2680:6:13"
																}
															]
														},
														{
															"nativeSrc": "2736:47:13",
															"nodeType": "YulAssignment",
															"src": "2736:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2768:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2779:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2779:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2764:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:13"
																		},
																		"nativeSrc": "2764:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint96",
																	"nativeSrc": "2746:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2746:17:13"
																},
																"nativeSrc": "2746:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2746:37:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2736:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2736:6:13"
																}
															]
														},
														{
															"nativeSrc": "2792:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2792:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "2805:1:13",
																"nodeType": "YulLiteral",
																"src": "2805:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2796:5:13",
																	"nodeType": "YulTypedName",
																	"src": "2796:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2815:42:13",
															"nodeType": "YulAssignment",
															"src": "2815:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2841:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2841:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2852:3:13",
																				"nodeType": "YulLiteral",
																				"src": "2852:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2837:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2837:3:13"
																		},
																		"nativeSrc": "2837:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2837:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2824:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2824:12:13"
																},
																"nativeSrc": "2824:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2824:33:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2815:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2815:5:13"
																}
															]
														},
														{
															"nativeSrc": "2866:15:13",
															"nodeType": "YulAssignment",
															"src": "2866:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "2876:5:13",
																"nodeType": "YulIdentifier",
																"src": "2876:5:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "2866:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2866:6:13"
																}
															]
														},
														{
															"nativeSrc": "2890:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2890:16:13",
															"value": {
																"kind": "number",
																"nativeSrc": "2905:1:13",
																"nodeType": "YulLiteral",
																"src": "2905:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2894:7:13",
																	"nodeType": "YulTypedName",
																	"src": "2894:7:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2915:44:13",
															"nodeType": "YulAssignment",
															"src": "2915:44:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2943:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2943:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2954:3:13",
																				"nodeType": "YulLiteral",
																				"src": "2954:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2939:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2939:3:13"
																		},
																		"nativeSrc": "2939:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2939:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2926:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2926:12:13"
																},
																"nativeSrc": "2926:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2926:33:13"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "2915:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:13"
																}
															]
														},
														{
															"nativeSrc": "2968:17:13",
															"nodeType": "YulAssignment",
															"src": "2968:17:13",
															"value": {
																"name": "value_1",
																"nativeSrc": "2978:7:13",
																"nodeType": "YulIdentifier",
																"src": "2978:7:13"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "2968:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2968:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint96t_uint96t_uint256t_uint256",
												"nativeSrc": "2350:641:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2429:9:13",
														"nodeType": "YulTypedName",
														"src": "2429:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2440:7:13",
														"nodeType": "YulTypedName",
														"src": "2440:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2452:6:13",
														"nodeType": "YulTypedName",
														"src": "2452:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2460:6:13",
														"nodeType": "YulTypedName",
														"src": "2460:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2468:6:13",
														"nodeType": "YulTypedName",
														"src": "2468:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2476:6:13",
														"nodeType": "YulTypedName",
														"src": "2476:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2484:6:13",
														"nodeType": "YulTypedName",
														"src": "2484:6:13",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2492:6:13",
														"nodeType": "YulTypedName",
														"src": "2492:6:13",
														"type": ""
													}
												],
												"src": "2350:641:13"
											},
											{
												"body": {
													"nativeSrc": "3097:76:13",
													"nodeType": "YulBlock",
													"src": "3097:76:13",
													"statements": [
														{
															"nativeSrc": "3107:26:13",
															"nodeType": "YulAssignment",
															"src": "3107:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3119:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3119:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3130:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3130:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3115:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3115:3:13"
																},
																"nativeSrc": "3115:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3115:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3107:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3107:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3149:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3149:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3160:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3160:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3142:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3142:6:13"
																},
																"nativeSrc": "3142:25:13",
																"nodeType": "YulFunctionCall",
																"src": "3142:25:13"
															},
															"nativeSrc": "3142:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "3142:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2996:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3066:9:13",
														"nodeType": "YulTypedName",
														"src": "3066:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3077:6:13",
														"nodeType": "YulTypedName",
														"src": "3077:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3088:4:13",
														"nodeType": "YulTypedName",
														"src": "3088:4:13",
														"type": ""
													}
												],
												"src": "2996:177:13"
											},
											{
												"body": {
													"nativeSrc": "3265:259:13",
													"nodeType": "YulBlock",
													"src": "3265:259:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3311:16:13",
																"nodeType": "YulBlock",
																"src": "3311:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3320:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3320:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3323:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3323:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3313:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3313:6:13"
																			},
																			"nativeSrc": "3313:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3313:12:13"
																		},
																		"nativeSrc": "3313:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3313:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3286:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3286:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3295:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3295:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3282:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3282:3:13"
																		},
																		"nativeSrc": "3282:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3282:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3307:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3307:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3278:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3278:3:13"
																},
																"nativeSrc": "3278:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3278:32:13"
															},
															"nativeSrc": "3275:52:13",
															"nodeType": "YulIf",
															"src": "3275:52:13"
														},
														{
															"nativeSrc": "3336:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3336:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3349:1:13",
																"nodeType": "YulLiteral",
																"src": "3349:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3340:5:13",
																	"nodeType": "YulTypedName",
																	"src": "3340:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3359:32:13",
															"nodeType": "YulAssignment",
															"src": "3359:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3381:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3381:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3368:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3368:12:13"
																},
																"nativeSrc": "3368:23:13",
																"nodeType": "YulFunctionCall",
																"src": "3368:23:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3359:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3359:5:13"
																}
															]
														},
														{
															"nativeSrc": "3400:15:13",
															"nodeType": "YulAssignment",
															"src": "3400:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "3410:5:13",
																"nodeType": "YulIdentifier",
																"src": "3410:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3400:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3400:6:13"
																}
															]
														},
														{
															"nativeSrc": "3424:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3424:16:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3439:1:13",
																"nodeType": "YulLiteral",
																"src": "3439:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3428:7:13",
																	"nodeType": "YulTypedName",
																	"src": "3428:7:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3449:43:13",
															"nodeType": "YulAssignment",
															"src": "3449:43:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3477:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3477:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3488:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3488:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3473:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:13"
																		},
																		"nativeSrc": "3473:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3473:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3460:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3460:12:13"
																},
																"nativeSrc": "3460:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3460:32:13"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3449:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3449:7:13"
																}
															]
														},
														{
															"nativeSrc": "3501:17:13",
															"nodeType": "YulAssignment",
															"src": "3501:17:13",
															"value": {
																"name": "value_1",
																"nativeSrc": "3511:7:13",
																"nodeType": "YulIdentifier",
																"src": "3511:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3501:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3178:346:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3223:9:13",
														"nodeType": "YulTypedName",
														"src": "3223:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3234:7:13",
														"nodeType": "YulTypedName",
														"src": "3234:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3246:6:13",
														"nodeType": "YulTypedName",
														"src": "3246:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3254:6:13",
														"nodeType": "YulTypedName",
														"src": "3254:6:13",
														"type": ""
													}
												],
												"src": "3178:346:13"
											},
											{
												"body": {
													"nativeSrc": "3633:316:13",
													"nodeType": "YulBlock",
													"src": "3633:316:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3679:16:13",
																"nodeType": "YulBlock",
																"src": "3679:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3688:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3688:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3691:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3691:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3681:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3681:6:13"
																			},
																			"nativeSrc": "3681:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3681:12:13"
																		},
																		"nativeSrc": "3681:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3681:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3654:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3654:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3663:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3663:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3650:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:13"
																		},
																		"nativeSrc": "3650:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3650:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3675:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3675:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3646:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3646:3:13"
																},
																"nativeSrc": "3646:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3646:32:13"
															},
															"nativeSrc": "3643:52:13",
															"nodeType": "YulIf",
															"src": "3643:52:13"
														},
														{
															"nativeSrc": "3704:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3704:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3717:1:13",
																"nodeType": "YulLiteral",
																"src": "3717:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3708:5:13",
																	"nodeType": "YulTypedName",
																	"src": "3708:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3727:32:13",
															"nodeType": "YulAssignment",
															"src": "3727:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3749:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3749:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3736:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3736:12:13"
																},
																"nativeSrc": "3736:23:13",
																"nodeType": "YulFunctionCall",
																"src": "3736:23:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3727:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3727:5:13"
																}
															]
														},
														{
															"nativeSrc": "3768:15:13",
															"nodeType": "YulAssignment",
															"src": "3768:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "3778:5:13",
																"nodeType": "YulIdentifier",
																"src": "3778:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3768:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3768:6:13"
																}
															]
														},
														{
															"nativeSrc": "3792:48:13",
															"nodeType": "YulAssignment",
															"src": "3792:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3825:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3825:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3836:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3836:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3821:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3821:3:13"
																		},
																		"nativeSrc": "3821:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3821:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3802:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "3802:18:13"
																},
																"nativeSrc": "3802:38:13",
																"nodeType": "YulFunctionCall",
																"src": "3802:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3792:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3792:6:13"
																}
															]
														},
														{
															"nativeSrc": "3849:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3849:16:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3864:1:13",
																"nodeType": "YulLiteral",
																"src": "3864:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3853:7:13",
																	"nodeType": "YulTypedName",
																	"src": "3853:7:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3874:43:13",
															"nodeType": "YulAssignment",
															"src": "3874:43:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3902:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3902:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3913:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3913:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3898:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3898:3:13"
																		},
																		"nativeSrc": "3898:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3898:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3885:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3885:12:13"
																},
																"nativeSrc": "3885:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3885:32:13"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3874:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3874:7:13"
																}
															]
														},
														{
															"nativeSrc": "3926:17:13",
															"nodeType": "YulAssignment",
															"src": "3926:17:13",
															"value": {
																"name": "value_1",
																"nativeSrc": "3936:7:13",
																"nodeType": "YulIdentifier",
																"src": "3936:7:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3926:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3926:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256",
												"nativeSrc": "3529:420:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3583:9:13",
														"nodeType": "YulTypedName",
														"src": "3583:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3594:7:13",
														"nodeType": "YulTypedName",
														"src": "3594:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3606:6:13",
														"nodeType": "YulTypedName",
														"src": "3606:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3614:6:13",
														"nodeType": "YulTypedName",
														"src": "3614:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3622:6:13",
														"nodeType": "YulTypedName",
														"src": "3622:6:13",
														"type": ""
													}
												],
												"src": "3529:420:13"
											},
											{
												"body": {
													"nativeSrc": "4055:102:13",
													"nodeType": "YulBlock",
													"src": "4055:102:13",
													"statements": [
														{
															"nativeSrc": "4065:26:13",
															"nodeType": "YulAssignment",
															"src": "4065:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4077:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4077:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4088:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4088:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4073:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4073:3:13"
																},
																"nativeSrc": "4073:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4073:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4065:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4065:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4107:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4107:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4122:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4122:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4138:3:13",
																								"nodeType": "YulLiteral",
																								"src": "4138:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4143:1:13",
																								"nodeType": "YulLiteral",
																								"src": "4143:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4134:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "4134:3:13"
																						},
																						"nativeSrc": "4134:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "4134:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4147:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4147:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4130:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4130:3:13"
																				},
																				"nativeSrc": "4130:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4130:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4118:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4118:3:13"
																		},
																		"nativeSrc": "4118:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4118:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4100:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4100:6:13"
																},
																"nativeSrc": "4100:51:13",
																"nodeType": "YulFunctionCall",
																"src": "4100:51:13"
															},
															"nativeSrc": "4100:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "4100:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3954:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4024:9:13",
														"nodeType": "YulTypedName",
														"src": "4024:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4035:6:13",
														"nodeType": "YulTypedName",
														"src": "4035:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4046:4:13",
														"nodeType": "YulTypedName",
														"src": "4046:4:13",
														"type": ""
													}
												],
												"src": "3954:203:13"
											},
											{
												"body": {
													"nativeSrc": "4232:116:13",
													"nodeType": "YulBlock",
													"src": "4232:116:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4278:16:13",
																"nodeType": "YulBlock",
																"src": "4278:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4287:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4287:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4290:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4290:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4280:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4280:6:13"
																			},
																			"nativeSrc": "4280:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4280:12:13"
																		},
																		"nativeSrc": "4280:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4280:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4253:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4253:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4262:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4262:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4249:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4249:3:13"
																		},
																		"nativeSrc": "4249:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4249:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4274:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4274:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4245:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4245:3:13"
																},
																"nativeSrc": "4245:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4245:32:13"
															},
															"nativeSrc": "4242:52:13",
															"nodeType": "YulIf",
															"src": "4242:52:13"
														},
														{
															"nativeSrc": "4303:39:13",
															"nodeType": "YulAssignment",
															"src": "4303:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4332:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4332:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4313:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4313:18:13"
																},
																"nativeSrc": "4313:29:13",
																"nodeType": "YulFunctionCall",
																"src": "4313:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4303:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4303:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4162:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4198:9:13",
														"nodeType": "YulTypedName",
														"src": "4198:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4209:7:13",
														"nodeType": "YulTypedName",
														"src": "4209:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4221:6:13",
														"nodeType": "YulTypedName",
														"src": "4221:6:13",
														"type": ""
													}
												],
												"src": "4162:186:13"
											},
											{
												"body": {
													"nativeSrc": "4440:213:13",
													"nodeType": "YulBlock",
													"src": "4440:213:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4486:16:13",
																"nodeType": "YulBlock",
																"src": "4486:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4495:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4495:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4498:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4498:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4488:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4488:6:13"
																			},
																			"nativeSrc": "4488:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4488:12:13"
																		},
																		"nativeSrc": "4488:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4488:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4461:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4461:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4470:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4470:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4457:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4457:3:13"
																		},
																		"nativeSrc": "4457:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4457:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4482:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4482:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4453:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4453:3:13"
																},
																"nativeSrc": "4453:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4453:32:13"
															},
															"nativeSrc": "4450:52:13",
															"nodeType": "YulIf",
															"src": "4450:52:13"
														},
														{
															"nativeSrc": "4511:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4511:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "4524:1:13",
																"nodeType": "YulLiteral",
																"src": "4524:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4515:5:13",
																	"nodeType": "YulTypedName",
																	"src": "4515:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4534:32:13",
															"nodeType": "YulAssignment",
															"src": "4534:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4556:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4556:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4543:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4543:12:13"
																},
																"nativeSrc": "4543:23:13",
																"nodeType": "YulFunctionCall",
																"src": "4543:23:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4534:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4534:5:13"
																}
															]
														},
														{
															"nativeSrc": "4575:15:13",
															"nodeType": "YulAssignment",
															"src": "4575:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "4585:5:13",
																"nodeType": "YulIdentifier",
																"src": "4585:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4575:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4575:6:13"
																}
															]
														},
														{
															"nativeSrc": "4599:48:13",
															"nodeType": "YulAssignment",
															"src": "4599:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4632:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4632:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4643:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4643:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4628:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4628:3:13"
																		},
																		"nativeSrc": "4628:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4628:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4609:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4609:18:13"
																},
																"nativeSrc": "4609:38:13",
																"nodeType": "YulFunctionCall",
																"src": "4609:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4599:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4599:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "4353:300:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4398:9:13",
														"nodeType": "YulTypedName",
														"src": "4398:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4409:7:13",
														"nodeType": "YulTypedName",
														"src": "4409:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4421:6:13",
														"nodeType": "YulTypedName",
														"src": "4421:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4429:6:13",
														"nodeType": "YulTypedName",
														"src": "4429:6:13",
														"type": ""
													}
												],
												"src": "4353:300:13"
											},
											{
												"body": {
													"nativeSrc": "4832:223:13",
													"nodeType": "YulBlock",
													"src": "4832:223:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4849:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4849:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4860:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4860:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4842:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4842:6:13"
																},
																"nativeSrc": "4842:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4842:21:13"
															},
															"nativeSrc": "4842:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "4842:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4883:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4883:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4894:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4894:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4879:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:13"
																		},
																		"nativeSrc": "4879:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4879:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4899:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4899:2:13",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4872:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4872:6:13"
																},
																"nativeSrc": "4872:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4872:30:13"
															},
															"nativeSrc": "4872:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "4872:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4922:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4922:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4933:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4933:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4918:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4918:3:13"
																		},
																		"nativeSrc": "4918:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4918:18:13"
																	},
																	{
																		"hexValue": "4d61726b6574696e675374616b696e673a496e76616c696420506f6f6c204944",
																		"kind": "string",
																		"nativeSrc": "4938:34:13",
																		"nodeType": "YulLiteral",
																		"src": "4938:34:13",
																		"type": "",
																		"value": "MarketingStaking:Invalid Pool ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4911:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4911:6:13"
																},
																"nativeSrc": "4911:62:13",
																"nodeType": "YulFunctionCall",
																"src": "4911:62:13"
															},
															"nativeSrc": "4911:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "4911:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4993:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4993:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5004:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5004:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4989:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4989:3:13"
																		},
																		"nativeSrc": "4989:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4989:18:13"
																	},
																	{
																		"hexValue": "21",
																		"kind": "string",
																		"nativeSrc": "5009:3:13",
																		"nodeType": "YulLiteral",
																		"src": "5009:3:13",
																		"type": "",
																		"value": "!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4982:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4982:6:13"
																},
																"nativeSrc": "4982:31:13",
																"nodeType": "YulFunctionCall",
																"src": "4982:31:13"
															},
															"nativeSrc": "4982:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "4982:31:13"
														},
														{
															"nativeSrc": "5022:27:13",
															"nodeType": "YulAssignment",
															"src": "5022:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5034:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5034:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5045:3:13",
																		"nodeType": "YulLiteral",
																		"src": "5045:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5030:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5030:3:13"
																},
																"nativeSrc": "5030:19:13",
																"nodeType": "YulFunctionCall",
																"src": "5030:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5022:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5022:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2ffeb4d6a6e18c53bdbb1e26a888925e88a2c474bd647fcf899e8c6ee5114207__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4658:397:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4809:9:13",
														"nodeType": "YulTypedName",
														"src": "4809:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4823:4:13",
														"nodeType": "YulTypedName",
														"src": "4823:4:13",
														"type": ""
													}
												],
												"src": "4658:397:13"
											},
											{
												"body": {
													"nativeSrc": "5092:95:13",
													"nodeType": "YulBlock",
													"src": "5092:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5109:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5109:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5116:3:13",
																				"nodeType": "YulLiteral",
																				"src": "5116:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5121:10:13",
																				"nodeType": "YulLiteral",
																				"src": "5121:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5112:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5112:3:13"
																		},
																		"nativeSrc": "5112:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5102:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5102:6:13"
																},
																"nativeSrc": "5102:31:13",
																"nodeType": "YulFunctionCall",
																"src": "5102:31:13"
															},
															"nativeSrc": "5102:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "5102:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5149:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5149:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5152:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5152:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5142:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5142:6:13"
																},
																"nativeSrc": "5142:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5142:15:13"
															},
															"nativeSrc": "5142:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5142:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5173:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5173:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5176:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5176:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5166:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:13"
																},
																"nativeSrc": "5166:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5166:15:13"
															},
															"nativeSrc": "5166:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5166:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "5060:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5060:127:13"
											},
											{
												"body": {
													"nativeSrc": "5366:241:13",
													"nodeType": "YulBlock",
													"src": "5366:241:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5383:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5383:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5394:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5394:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5376:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5376:6:13"
																},
																"nativeSrc": "5376:21:13",
																"nodeType": "YulFunctionCall",
																"src": "5376:21:13"
															},
															"nativeSrc": "5376:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "5376:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5417:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5417:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5428:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5428:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5413:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5413:3:13"
																		},
																		"nativeSrc": "5413:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5413:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5433:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5433:2:13",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5406:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5406:6:13"
																},
																"nativeSrc": "5406:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5406:30:13"
															},
															"nativeSrc": "5406:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "5406:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5456:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5456:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5467:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5467:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5452:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5452:3:13"
																		},
																		"nativeSrc": "5452:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5452:18:13"
																	},
																	{
																		"hexValue": "4d61726b6574696e675374616b696e673a4561726c7920576974686472617761",
																		"kind": "string",
																		"nativeSrc": "5472:34:13",
																		"nodeType": "YulLiteral",
																		"src": "5472:34:13",
																		"type": "",
																		"value": "MarketingStaking:Early Withdrawa"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5445:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5445:6:13"
																},
																"nativeSrc": "5445:62:13",
																"nodeType": "YulFunctionCall",
																"src": "5445:62:13"
															},
															"nativeSrc": "5445:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "5445:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5527:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5527:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5538:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5538:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5523:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5523:3:13"
																		},
																		"nativeSrc": "5523:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5523:18:13"
																	},
																	{
																		"hexValue": "6c206973206e6f74207065726d697474656421",
																		"kind": "string",
																		"nativeSrc": "5543:21:13",
																		"nodeType": "YulLiteral",
																		"src": "5543:21:13",
																		"type": "",
																		"value": "l is not permitted!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5516:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5516:6:13"
																},
																"nativeSrc": "5516:49:13",
																"nodeType": "YulFunctionCall",
																"src": "5516:49:13"
															},
															"nativeSrc": "5516:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "5516:49:13"
														},
														{
															"nativeSrc": "5574:27:13",
															"nodeType": "YulAssignment",
															"src": "5574:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5586:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5586:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5597:3:13",
																		"nodeType": "YulLiteral",
																		"src": "5597:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5582:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5582:3:13"
																},
																"nativeSrc": "5582:19:13",
																"nodeType": "YulFunctionCall",
																"src": "5582:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5574:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5574:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_44b7b0a7f318941981ae615ca206c281a67717329a5dc47e2eb5c5286b628868__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5192:415:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5343:9:13",
														"nodeType": "YulTypedName",
														"src": "5343:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5357:4:13",
														"nodeType": "YulTypedName",
														"src": "5357:4:13",
														"type": ""
													}
												],
												"src": "5192:415:13"
											},
											{
												"body": {
													"nativeSrc": "5644:95:13",
													"nodeType": "YulBlock",
													"src": "5644:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5661:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5661:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5668:3:13",
																				"nodeType": "YulLiteral",
																				"src": "5668:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5673:10:13",
																				"nodeType": "YulLiteral",
																				"src": "5673:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5664:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5664:3:13"
																		},
																		"nativeSrc": "5664:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5664:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5654:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5654:6:13"
																},
																"nativeSrc": "5654:31:13",
																"nodeType": "YulFunctionCall",
																"src": "5654:31:13"
															},
															"nativeSrc": "5654:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "5654:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5701:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5701:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5704:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5694:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5694:6:13"
																},
																"nativeSrc": "5694:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5694:15:13"
															},
															"nativeSrc": "5694:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5694:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5725:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5725:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5728:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5728:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5718:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5718:6:13"
																},
																"nativeSrc": "5718:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5718:15:13"
															},
															"nativeSrc": "5718:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5718:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5612:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5612:127:13"
											},
											{
												"body": {
													"nativeSrc": "5793:79:13",
													"nodeType": "YulBlock",
													"src": "5793:79:13",
													"statements": [
														{
															"nativeSrc": "5803:17:13",
															"nodeType": "YulAssignment",
															"src": "5803:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5815:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5815:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5818:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5818:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5811:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5811:3:13"
																},
																"nativeSrc": "5811:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5811:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5803:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5803:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5844:22:13",
																"nodeType": "YulBlock",
																"src": "5844:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5846:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5846:16:13"
																			},
																			"nativeSrc": "5846:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5846:18:13"
																		},
																		"nativeSrc": "5846:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5846:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5835:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5835:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5841:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5841:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5832:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5832:2:13"
																},
																"nativeSrc": "5832:11:13",
																"nodeType": "YulFunctionCall",
																"src": "5832:11:13"
															},
															"nativeSrc": "5829:37:13",
															"nodeType": "YulIf",
															"src": "5829:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5744:128:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5775:1:13",
														"nodeType": "YulTypedName",
														"src": "5775:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5778:1:13",
														"nodeType": "YulTypedName",
														"src": "5778:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5784:4:13",
														"nodeType": "YulTypedName",
														"src": "5784:4:13",
														"type": ""
													}
												],
												"src": "5744:128:13"
											},
											{
												"body": {
													"nativeSrc": "6060:239:13",
													"nodeType": "YulBlock",
													"src": "6060:239:13",
													"statements": [
														{
															"nativeSrc": "6070:27:13",
															"nodeType": "YulAssignment",
															"src": "6070:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6082:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6082:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6093:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6093:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6078:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6078:3:13"
																},
																"nativeSrc": "6078:19:13",
																"nodeType": "YulFunctionCall",
																"src": "6078:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6070:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6070:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6113:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6113:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6124:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6124:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6106:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6106:6:13"
																},
																"nativeSrc": "6106:25:13",
																"nodeType": "YulFunctionCall",
																"src": "6106:25:13"
															},
															"nativeSrc": "6106:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "6106:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6151:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6151:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6162:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6162:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6147:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6147:3:13"
																		},
																		"nativeSrc": "6147:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6147:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6167:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6167:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6140:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6140:6:13"
																},
																"nativeSrc": "6140:34:13",
																"nodeType": "YulFunctionCall",
																"src": "6140:34:13"
															},
															"nativeSrc": "6140:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "6140:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6194:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6194:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6205:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6205:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6190:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6190:3:13"
																		},
																		"nativeSrc": "6190:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6190:18:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6210:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6210:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6183:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6183:6:13"
																},
																"nativeSrc": "6183:34:13",
																"nodeType": "YulFunctionCall",
																"src": "6183:34:13"
															},
															"nativeSrc": "6183:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "6183:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6237:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6237:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6248:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6248:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6233:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6233:3:13"
																		},
																		"nativeSrc": "6233:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6233:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "6257:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6257:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6265:26:13",
																				"nodeType": "YulLiteral",
																				"src": "6265:26:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6253:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:13"
																		},
																		"nativeSrc": "6253:39:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6253:39:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6226:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6226:6:13"
																},
																"nativeSrc": "6226:67:13",
																"nodeType": "YulFunctionCall",
																"src": "6226:67:13"
															},
															"nativeSrc": "6226:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "6226:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint96__to_t_uint256_t_uint256_t_uint256_t_uint96__fromStack_reversed",
												"nativeSrc": "5877:422:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6005:9:13",
														"nodeType": "YulTypedName",
														"src": "6005:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6016:6:13",
														"nodeType": "YulTypedName",
														"src": "6016:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6024:6:13",
														"nodeType": "YulTypedName",
														"src": "6024:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6032:6:13",
														"nodeType": "YulTypedName",
														"src": "6032:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6040:6:13",
														"nodeType": "YulTypedName",
														"src": "6040:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6051:4:13",
														"nodeType": "YulTypedName",
														"src": "6051:4:13",
														"type": ""
													}
												],
												"src": "5877:422:13"
											},
											{
												"body": {
													"nativeSrc": "6478:223:13",
													"nodeType": "YulBlock",
													"src": "6478:223:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6495:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6495:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6506:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6506:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6488:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6488:6:13"
																},
																"nativeSrc": "6488:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6488:21:13"
															},
															"nativeSrc": "6488:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "6488:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6529:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6529:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6540:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6540:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6525:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6525:3:13"
																		},
																		"nativeSrc": "6525:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6525:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6545:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6545:2:13",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6518:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6518:6:13"
																},
																"nativeSrc": "6518:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6518:30:13"
															},
															"nativeSrc": "6518:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "6518:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6568:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6568:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6579:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6579:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6564:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6564:3:13"
																		},
																		"nativeSrc": "6564:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6564:18:13"
																	},
																	{
																		"hexValue": "4d61726b6574696e675374616b696e673a4e6f7468696e6720746f20636c6169",
																		"kind": "string",
																		"nativeSrc": "6584:34:13",
																		"nodeType": "YulLiteral",
																		"src": "6584:34:13",
																		"type": "",
																		"value": "MarketingStaking:Nothing to clai"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6557:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6557:6:13"
																},
																"nativeSrc": "6557:62:13",
																"nodeType": "YulFunctionCall",
																"src": "6557:62:13"
															},
															"nativeSrc": "6557:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "6557:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6639:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6639:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6650:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6650:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6635:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6635:3:13"
																		},
																		"nativeSrc": "6635:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6635:18:13"
																	},
																	{
																		"hexValue": "6d",
																		"kind": "string",
																		"nativeSrc": "6655:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6655:3:13",
																		"type": "",
																		"value": "m"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6628:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6628:6:13"
																},
																"nativeSrc": "6628:31:13",
																"nodeType": "YulFunctionCall",
																"src": "6628:31:13"
															},
															"nativeSrc": "6628:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "6628:31:13"
														},
														{
															"nativeSrc": "6668:27:13",
															"nodeType": "YulAssignment",
															"src": "6668:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6680:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6680:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6691:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6691:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6676:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6676:3:13"
																},
																"nativeSrc": "6676:19:13",
																"nodeType": "YulFunctionCall",
																"src": "6676:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6668:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6668:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3435391364d3c746d0b75b7b53feb547a8b3de93813fde01f437a139cf16310__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6304:397:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6455:9:13",
														"nodeType": "YulTypedName",
														"src": "6455:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6469:4:13",
														"nodeType": "YulTypedName",
														"src": "6469:4:13",
														"type": ""
													}
												],
												"src": "6304:397:13"
											},
											{
												"body": {
													"nativeSrc": "6880:228:13",
													"nodeType": "YulBlock",
													"src": "6880:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6897:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6897:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6908:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6908:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6890:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6890:6:13"
																},
																"nativeSrc": "6890:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6890:21:13"
															},
															"nativeSrc": "6890:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "6890:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6931:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6931:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6942:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6942:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6927:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6927:3:13"
																		},
																		"nativeSrc": "6927:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6927:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6947:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6947:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6920:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6920:6:13"
																},
																"nativeSrc": "6920:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6920:30:13"
															},
															"nativeSrc": "6920:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "6920:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6970:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6970:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6981:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6981:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6966:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6966:3:13"
																		},
																		"nativeSrc": "6966:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6966:18:13"
																	},
																	{
																		"hexValue": "4d61726b6574696e675374616b696e673a496e73756666696369656e74206261",
																		"kind": "string",
																		"nativeSrc": "6986:34:13",
																		"nodeType": "YulLiteral",
																		"src": "6986:34:13",
																		"type": "",
																		"value": "MarketingStaking:Insufficient ba"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6959:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6959:6:13"
																},
																"nativeSrc": "6959:62:13",
																"nodeType": "YulFunctionCall",
																"src": "6959:62:13"
															},
															"nativeSrc": "6959:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "6959:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7041:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7041:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7052:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7052:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7037:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7037:3:13"
																		},
																		"nativeSrc": "7037:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7037:18:13"
																	},
																	{
																		"hexValue": "6c616e636521",
																		"kind": "string",
																		"nativeSrc": "7057:8:13",
																		"nodeType": "YulLiteral",
																		"src": "7057:8:13",
																		"type": "",
																		"value": "lance!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7030:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7030:6:13"
																},
																"nativeSrc": "7030:36:13",
																"nodeType": "YulFunctionCall",
																"src": "7030:36:13"
															},
															"nativeSrc": "7030:36:13",
															"nodeType": "YulExpressionStatement",
															"src": "7030:36:13"
														},
														{
															"nativeSrc": "7075:27:13",
															"nodeType": "YulAssignment",
															"src": "7075:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7087:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7087:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7098:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7098:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7083:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7083:3:13"
																},
																"nativeSrc": "7083:19:13",
																"nodeType": "YulFunctionCall",
																"src": "7083:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7075:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7075:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1fb492bde4633503501151572865f95cf285b0b8399d0e32d0b44e16616b3bc6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6706:402:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6857:9:13",
														"nodeType": "YulTypedName",
														"src": "6857:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6871:4:13",
														"nodeType": "YulTypedName",
														"src": "6871:4:13",
														"type": ""
													}
												],
												"src": "6706:402:13"
											},
											{
												"body": {
													"nativeSrc": "7287:246:13",
													"nodeType": "YulBlock",
													"src": "7287:246:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7304:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7304:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7315:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7315:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7297:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7297:6:13"
																},
																"nativeSrc": "7297:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7297:21:13"
															},
															"nativeSrc": "7297:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "7297:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7338:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7338:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7349:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7349:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7334:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7334:3:13"
																		},
																		"nativeSrc": "7334:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7334:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7354:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7354:2:13",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7327:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7327:6:13"
																},
																"nativeSrc": "7327:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7327:30:13"
															},
															"nativeSrc": "7327:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "7327:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7377:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7377:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7388:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7388:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7373:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7373:3:13"
																		},
																		"nativeSrc": "7373:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7373:18:13"
																	},
																	{
																		"hexValue": "4d61726b6574696e675374616b696e673a456e642074696d65206d7573742062",
																		"kind": "string",
																		"nativeSrc": "7393:34:13",
																		"nodeType": "YulLiteral",
																		"src": "7393:34:13",
																		"type": "",
																		"value": "MarketingStaking:End time must b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7366:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:13"
																},
																"nativeSrc": "7366:62:13",
																"nodeType": "YulFunctionCall",
																"src": "7366:62:13"
															},
															"nativeSrc": "7366:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "7366:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7448:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7448:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7459:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7459:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7444:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7444:3:13"
																		},
																		"nativeSrc": "7444:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7444:18:13"
																	},
																	{
																		"hexValue": "652067726561746572207468616e2074696d655f6e6f7721",
																		"kind": "string",
																		"nativeSrc": "7464:26:13",
																		"nodeType": "YulLiteral",
																		"src": "7464:26:13",
																		"type": "",
																		"value": "e greater than time_now!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7437:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7437:6:13"
																},
																"nativeSrc": "7437:54:13",
																"nodeType": "YulFunctionCall",
																"src": "7437:54:13"
															},
															"nativeSrc": "7437:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "7437:54:13"
														},
														{
															"nativeSrc": "7500:27:13",
															"nodeType": "YulAssignment",
															"src": "7500:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7512:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7512:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7523:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7523:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7508:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7508:3:13"
																},
																"nativeSrc": "7508:19:13",
																"nodeType": "YulFunctionCall",
																"src": "7508:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7500:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7500:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c75e03f9b44f14ed5ce8359be3379649f6c328e6dab2912e90239799cefdf367__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7113:420:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7264:9:13",
														"nodeType": "YulTypedName",
														"src": "7264:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7278:4:13",
														"nodeType": "YulTypedName",
														"src": "7278:4:13",
														"type": ""
													}
												],
												"src": "7113:420:13"
											},
											{
												"body": {
													"nativeSrc": "7712:245:13",
													"nodeType": "YulBlock",
													"src": "7712:245:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7729:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7729:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7740:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7740:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7722:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7722:6:13"
																},
																"nativeSrc": "7722:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7722:21:13"
															},
															"nativeSrc": "7722:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "7722:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7763:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7763:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7774:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7774:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7759:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7759:3:13"
																		},
																		"nativeSrc": "7759:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7759:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7779:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7779:2:13",
																		"type": "",
																		"value": "55"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7752:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7752:6:13"
																},
																"nativeSrc": "7752:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7752:30:13"
															},
															"nativeSrc": "7752:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "7752:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7802:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7802:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7813:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7813:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7798:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7798:3:13"
																		},
																		"nativeSrc": "7798:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7798:18:13"
																	},
																	{
																		"hexValue": "4d61726b6574696e675374616b696e673a53746172742074696d65206d757374",
																		"kind": "string",
																		"nativeSrc": "7818:34:13",
																		"nodeType": "YulLiteral",
																		"src": "7818:34:13",
																		"type": "",
																		"value": "MarketingStaking:Start time must"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7791:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7791:6:13"
																},
																"nativeSrc": "7791:62:13",
																"nodeType": "YulFunctionCall",
																"src": "7791:62:13"
															},
															"nativeSrc": "7791:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "7791:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7873:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7873:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7884:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7884:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7869:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7869:3:13"
																		},
																		"nativeSrc": "7869:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7869:18:13"
																	},
																	{
																		"hexValue": "206265206c657373207468616e20656e642074696d6521",
																		"kind": "string",
																		"nativeSrc": "7889:25:13",
																		"nodeType": "YulLiteral",
																		"src": "7889:25:13",
																		"type": "",
																		"value": " be less than end time!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7862:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7862:6:13"
																},
																"nativeSrc": "7862:53:13",
																"nodeType": "YulFunctionCall",
																"src": "7862:53:13"
															},
															"nativeSrc": "7862:53:13",
															"nodeType": "YulExpressionStatement",
															"src": "7862:53:13"
														},
														{
															"nativeSrc": "7924:27:13",
															"nodeType": "YulAssignment",
															"src": "7924:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7936:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7936:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7947:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7947:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7932:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7932:3:13"
																},
																"nativeSrc": "7932:19:13",
																"nodeType": "YulFunctionCall",
																"src": "7932:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7924:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7924:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_42908245c450f80f818d9000a6ee4b3b82113f201550c2dc613cb5413b32f2ba__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7538:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7689:9:13",
														"nodeType": "YulTypedName",
														"src": "7689:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7703:4:13",
														"nodeType": "YulTypedName",
														"src": "7703:4:13",
														"type": ""
													}
												],
												"src": "7538:419:13"
											},
											{
												"body": {
													"nativeSrc": "8010:170:13",
													"nodeType": "YulBlock",
													"src": "8010:170:13",
													"statements": [
														{
															"nativeSrc": "8020:83:13",
															"nodeType": "YulAssignment",
															"src": "8020:83:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "8036:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "8036:1:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8039:26:13",
																				"nodeType": "YulLiteral",
																				"src": "8039:26:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8032:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8032:3:13"
																		},
																		"nativeSrc": "8032:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8032:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "8072:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "8072:1:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8075:26:13",
																				"nodeType": "YulLiteral",
																				"src": "8075:26:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8068:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8068:3:13"
																		},
																		"nativeSrc": "8068:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8068:34:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8028:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8028:3:13"
																},
																"nativeSrc": "8028:75:13",
																"nodeType": "YulFunctionCall",
																"src": "8028:75:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8020:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8020:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8152:22:13",
																"nodeType": "YulBlock",
																"src": "8152:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8154:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8154:16:13"
																			},
																			"nativeSrc": "8154:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8154:18:13"
																		},
																		"nativeSrc": "8154:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8154:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8118:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8118:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8124:26:13",
																		"nodeType": "YulLiteral",
																		"src": "8124:26:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8115:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8115:2:13"
																},
																"nativeSrc": "8115:36:13",
																"nodeType": "YulFunctionCall",
																"src": "8115:36:13"
															},
															"nativeSrc": "8112:62:13",
															"nodeType": "YulIf",
															"src": "8112:62:13"
														}
													]
												},
												"name": "checked_sub_t_uint96",
												"nativeSrc": "7962:218:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7992:1:13",
														"nodeType": "YulTypedName",
														"src": "7992:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7995:1:13",
														"nodeType": "YulTypedName",
														"src": "7995:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8001:4:13",
														"nodeType": "YulTypedName",
														"src": "8001:4:13",
														"type": ""
													}
												],
												"src": "7962:218:13"
											},
											{
												"body": {
													"nativeSrc": "8237:116:13",
													"nodeType": "YulBlock",
													"src": "8237:116:13",
													"statements": [
														{
															"nativeSrc": "8247:20:13",
															"nodeType": "YulAssignment",
															"src": "8247:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8262:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8262:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8265:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8265:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8258:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8258:3:13"
																},
																"nativeSrc": "8258:9:13",
																"nodeType": "YulFunctionCall",
																"src": "8258:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8247:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "8247:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8325:22:13",
																"nodeType": "YulBlock",
																"src": "8325:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8327:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8327:16:13"
																			},
																			"nativeSrc": "8327:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8327:18:13"
																		},
																		"nativeSrc": "8327:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8327:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8296:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "8296:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8289:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8289:6:13"
																				},
																				"nativeSrc": "8289:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8289:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8303:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "8303:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8310:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "8310:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8319:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "8319:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8306:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "8306:3:13"
																						},
																						"nativeSrc": "8306:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "8306:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8300:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "8300:2:13"
																				},
																				"nativeSrc": "8300:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8300:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8286:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8286:2:13"
																		},
																		"nativeSrc": "8286:37:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8286:37:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8279:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8279:6:13"
																},
																"nativeSrc": "8279:45:13",
																"nodeType": "YulFunctionCall",
																"src": "8279:45:13"
															},
															"nativeSrc": "8276:71:13",
															"nodeType": "YulIf",
															"src": "8276:71:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8185:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8216:1:13",
														"nodeType": "YulTypedName",
														"src": "8216:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8219:1:13",
														"nodeType": "YulTypedName",
														"src": "8219:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8225:7:13",
														"nodeType": "YulTypedName",
														"src": "8225:7:13",
														"type": ""
													}
												],
												"src": "8185:168:13"
											},
											{
												"body": {
													"nativeSrc": "8404:171:13",
													"nodeType": "YulBlock",
													"src": "8404:171:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8435:111:13",
																"nodeType": "YulBlock",
																"src": "8435:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8456:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8456:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8463:3:13",
																							"nodeType": "YulLiteral",
																							"src": "8463:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8468:10:13",
																							"nodeType": "YulLiteral",
																							"src": "8468:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8459:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "8459:3:13"
																					},
																					"nativeSrc": "8459:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8459:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8449:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8449:6:13"
																			},
																			"nativeSrc": "8449:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8449:31:13"
																		},
																		"nativeSrc": "8449:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8449:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8500:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8500:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8503:4:13",
																					"nodeType": "YulLiteral",
																					"src": "8503:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8493:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8493:6:13"
																			},
																			"nativeSrc": "8493:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8493:15:13"
																		},
																		"nativeSrc": "8493:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8493:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8528:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8528:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8531:4:13",
																					"nodeType": "YulLiteral",
																					"src": "8531:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8521:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8521:6:13"
																			},
																			"nativeSrc": "8521:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8521:15:13"
																		},
																		"nativeSrc": "8521:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8521:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8424:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8424:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8417:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8417:6:13"
																},
																"nativeSrc": "8417:9:13",
																"nodeType": "YulFunctionCall",
																"src": "8417:9:13"
															},
															"nativeSrc": "8414:132:13",
															"nodeType": "YulIf",
															"src": "8414:132:13"
														},
														{
															"nativeSrc": "8555:14:13",
															"nodeType": "YulAssignment",
															"src": "8555:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8564:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8564:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8567:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8567:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8560:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8560:3:13"
																},
																"nativeSrc": "8560:9:13",
																"nodeType": "YulFunctionCall",
																"src": "8560:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8555:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "8555:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8358:217:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8389:1:13",
														"nodeType": "YulTypedName",
														"src": "8389:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8392:1:13",
														"nodeType": "YulTypedName",
														"src": "8392:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8398:1:13",
														"nodeType": "YulTypedName",
														"src": "8398:1:13",
														"type": ""
													}
												],
												"src": "8358:217:13"
											},
											{
												"body": {
													"nativeSrc": "8789:368:13",
													"nodeType": "YulBlock",
													"src": "8789:368:13",
													"statements": [
														{
															"nativeSrc": "8799:27:13",
															"nodeType": "YulAssignment",
															"src": "8799:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8811:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8811:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8822:3:13",
																		"nodeType": "YulLiteral",
																		"src": "8822:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8807:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8807:3:13"
																},
																"nativeSrc": "8807:19:13",
																"nodeType": "YulFunctionCall",
																"src": "8807:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8799:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8799:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8842:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8842:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8857:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8857:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8873:3:13",
																								"nodeType": "YulLiteral",
																								"src": "8873:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8878:1:13",
																								"nodeType": "YulLiteral",
																								"src": "8878:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8869:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "8869:3:13"
																						},
																						"nativeSrc": "8869:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "8869:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8882:1:13",
																						"nodeType": "YulLiteral",
																						"src": "8882:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8865:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8865:3:13"
																				},
																				"nativeSrc": "8865:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8865:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8853:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8853:3:13"
																		},
																		"nativeSrc": "8853:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8853:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8835:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8835:6:13"
																},
																"nativeSrc": "8835:51:13",
																"nodeType": "YulFunctionCall",
																"src": "8835:51:13"
															},
															"nativeSrc": "8835:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "8835:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8906:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8906:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8917:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8917:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8902:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8902:3:13"
																		},
																		"nativeSrc": "8902:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8902:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8926:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8926:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8942:3:13",
																								"nodeType": "YulLiteral",
																								"src": "8942:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8947:1:13",
																								"nodeType": "YulLiteral",
																								"src": "8947:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8938:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "8938:3:13"
																						},
																						"nativeSrc": "8938:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "8938:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8951:1:13",
																						"nodeType": "YulLiteral",
																						"src": "8951:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8934:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8934:3:13"
																				},
																				"nativeSrc": "8934:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8934:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8922:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8922:3:13"
																		},
																		"nativeSrc": "8922:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8922:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8895:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8895:6:13"
																},
																"nativeSrc": "8895:60:13",
																"nodeType": "YulFunctionCall",
																"src": "8895:60:13"
															},
															"nativeSrc": "8895:60:13",
															"nodeType": "YulExpressionStatement",
															"src": "8895:60:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8975:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8975:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8986:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8986:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8971:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8971:3:13"
																		},
																		"nativeSrc": "8971:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8971:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "8995:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8995:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9003:26:13",
																				"nodeType": "YulLiteral",
																				"src": "9003:26:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8991:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8991:3:13"
																		},
																		"nativeSrc": "8991:39:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8991:39:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8964:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8964:6:13"
																},
																"nativeSrc": "8964:67:13",
																"nodeType": "YulFunctionCall",
																"src": "8964:67:13"
															},
															"nativeSrc": "8964:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "8964:67:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9051:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9051:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9062:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9062:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9047:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9047:3:13"
																		},
																		"nativeSrc": "9047:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9047:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "9071:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9071:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9079:26:13",
																				"nodeType": "YulLiteral",
																				"src": "9079:26:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9067:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9067:3:13"
																		},
																		"nativeSrc": "9067:39:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9067:39:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9040:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9040:6:13"
																},
																"nativeSrc": "9040:67:13",
																"nodeType": "YulFunctionCall",
																"src": "9040:67:13"
															},
															"nativeSrc": "9040:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "9040:67:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9127:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9127:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9138:3:13",
																				"nodeType": "YulLiteral",
																				"src": "9138:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9123:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9123:3:13"
																		},
																		"nativeSrc": "9123:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9123:19:13"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "9144:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9144:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9116:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9116:6:13"
																},
																"nativeSrc": "9116:35:13",
																"nodeType": "YulFunctionCall",
																"src": "9116:35:13"
															},
															"nativeSrc": "9116:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "9116:35:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint96_t_uint96_t_uint256__to_t_address_t_address_t_uint96_t_uint96_t_uint256__fromStack_reversed",
												"nativeSrc": "8580:577:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8726:9:13",
														"nodeType": "YulTypedName",
														"src": "8726:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8737:6:13",
														"nodeType": "YulTypedName",
														"src": "8737:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8745:6:13",
														"nodeType": "YulTypedName",
														"src": "8745:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8753:6:13",
														"nodeType": "YulTypedName",
														"src": "8753:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8761:6:13",
														"nodeType": "YulTypedName",
														"src": "8761:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8769:6:13",
														"nodeType": "YulTypedName",
														"src": "8769:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8780:4:13",
														"nodeType": "YulTypedName",
														"src": "8780:4:13",
														"type": ""
													}
												],
												"src": "8580:577:13"
											},
											{
												"body": {
													"nativeSrc": "9336:226:13",
													"nodeType": "YulBlock",
													"src": "9336:226:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9353:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9353:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9364:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9364:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9346:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9346:6:13"
																},
																"nativeSrc": "9346:21:13",
																"nodeType": "YulFunctionCall",
																"src": "9346:21:13"
															},
															"nativeSrc": "9346:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "9346:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9387:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9387:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9398:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9398:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9383:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9383:3:13"
																		},
																		"nativeSrc": "9383:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9383:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9403:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9403:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9376:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9376:6:13"
																},
																"nativeSrc": "9376:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9376:30:13"
															},
															"nativeSrc": "9376:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "9376:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9426:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9426:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9437:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9437:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9422:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9422:3:13"
																		},
																		"nativeSrc": "9422:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9422:18:13"
																	},
																	{
																		"hexValue": "4d61726b6574696e675374616b696e673a506f6f6c206973206e6f7420616374",
																		"kind": "string",
																		"nativeSrc": "9442:34:13",
																		"nodeType": "YulLiteral",
																		"src": "9442:34:13",
																		"type": "",
																		"value": "MarketingStaking:Pool is not act"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9415:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9415:6:13"
																},
																"nativeSrc": "9415:62:13",
																"nodeType": "YulFunctionCall",
																"src": "9415:62:13"
															},
															"nativeSrc": "9415:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "9415:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9497:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9497:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9508:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9508:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9493:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9493:3:13"
																		},
																		"nativeSrc": "9493:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9493:18:13"
																	},
																	{
																		"hexValue": "69766521",
																		"kind": "string",
																		"nativeSrc": "9513:6:13",
																		"nodeType": "YulLiteral",
																		"src": "9513:6:13",
																		"type": "",
																		"value": "ive!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9486:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9486:6:13"
																},
																"nativeSrc": "9486:34:13",
																"nodeType": "YulFunctionCall",
																"src": "9486:34:13"
															},
															"nativeSrc": "9486:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "9486:34:13"
														},
														{
															"nativeSrc": "9529:27:13",
															"nodeType": "YulAssignment",
															"src": "9529:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9541:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9541:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9552:3:13",
																		"nodeType": "YulLiteral",
																		"src": "9552:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9537:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9537:3:13"
																},
																"nativeSrc": "9537:19:13",
																"nodeType": "YulFunctionCall",
																"src": "9537:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9529:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9529:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d0549e760046a4449575c3a7b4e24b7bb5b43ca1711440b99a696ac6d0735289__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9162:400:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9313:9:13",
														"nodeType": "YulTypedName",
														"src": "9313:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9327:4:13",
														"nodeType": "YulTypedName",
														"src": "9327:4:13",
														"type": ""
													}
												],
												"src": "9162:400:13"
											},
											{
												"body": {
													"nativeSrc": "9741:243:13",
													"nodeType": "YulBlock",
													"src": "9741:243:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9758:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9758:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9769:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9769:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9751:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9751:6:13"
																},
																"nativeSrc": "9751:21:13",
																"nodeType": "YulFunctionCall",
																"src": "9751:21:13"
															},
															"nativeSrc": "9751:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "9751:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9792:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9792:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9803:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9803:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9788:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9788:3:13"
																		},
																		"nativeSrc": "9788:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9788:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9808:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9808:2:13",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9781:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9781:6:13"
																},
																"nativeSrc": "9781:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9781:30:13"
															},
															"nativeSrc": "9781:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "9781:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9831:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9831:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9842:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9842:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9827:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9827:3:13"
																		},
																		"nativeSrc": "9827:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9827:18:13"
																	},
																	{
																		"hexValue": "4d61726b6574696e675374616b696e673a7374616b655f616d6f756e74206d75",
																		"kind": "string",
																		"nativeSrc": "9847:34:13",
																		"nodeType": "YulLiteral",
																		"src": "9847:34:13",
																		"type": "",
																		"value": "MarketingStaking:stake_amount mu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9820:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9820:6:13"
																},
																"nativeSrc": "9820:62:13",
																"nodeType": "YulFunctionCall",
																"src": "9820:62:13"
															},
															"nativeSrc": "9820:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "9820:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9902:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9902:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9913:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9913:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9898:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9898:3:13"
																		},
																		"nativeSrc": "9898:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9898:18:13"
																	},
																	{
																		"hexValue": "73742062652067726561746572207468616e203021",
																		"kind": "string",
																		"nativeSrc": "9918:23:13",
																		"nodeType": "YulLiteral",
																		"src": "9918:23:13",
																		"type": "",
																		"value": "st be greater than 0!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9891:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9891:6:13"
																},
																"nativeSrc": "9891:51:13",
																"nodeType": "YulFunctionCall",
																"src": "9891:51:13"
															},
															"nativeSrc": "9891:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "9891:51:13"
														},
														{
															"nativeSrc": "9951:27:13",
															"nodeType": "YulAssignment",
															"src": "9951:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9963:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9963:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9974:3:13",
																		"nodeType": "YulLiteral",
																		"src": "9974:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9959:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9959:3:13"
																},
																"nativeSrc": "9959:19:13",
																"nodeType": "YulFunctionCall",
																"src": "9959:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9951:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9951:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36ba13c2aa6092f52775d769340484f347ee40a294ff19b7999ca5c4fd4b67b0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9567:417:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9718:9:13",
														"nodeType": "YulTypedName",
														"src": "9718:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9732:4:13",
														"nodeType": "YulTypedName",
														"src": "9732:4:13",
														"type": ""
													}
												],
												"src": "9567:417:13"
											},
											{
												"body": {
													"nativeSrc": "10037:77:13",
													"nodeType": "YulBlock",
													"src": "10037:77:13",
													"statements": [
														{
															"nativeSrc": "10047:16:13",
															"nodeType": "YulAssignment",
															"src": "10047:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10058:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10058:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10061:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10061:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10054:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10054:3:13"
																},
																"nativeSrc": "10054:9:13",
																"nodeType": "YulFunctionCall",
																"src": "10054:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10047:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10047:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10086:22:13",
																"nodeType": "YulBlock",
																"src": "10086:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10088:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10088:16:13"
																			},
																			"nativeSrc": "10088:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10088:18:13"
																		},
																		"nativeSrc": "10088:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10088:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10078:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10078:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10081:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10081:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10075:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10075:2:13"
																},
																"nativeSrc": "10075:10:13",
																"nodeType": "YulFunctionCall",
																"src": "10075:10:13"
															},
															"nativeSrc": "10072:36:13",
															"nodeType": "YulIf",
															"src": "10072:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9989:125:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10020:1:13",
														"nodeType": "YulTypedName",
														"src": "10020:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10023:1:13",
														"nodeType": "YulTypedName",
														"src": "10023:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10029:3:13",
														"nodeType": "YulTypedName",
														"src": "10029:3:13",
														"type": ""
													}
												],
												"src": "9989:125:13"
											},
											{
												"body": {
													"nativeSrc": "10293:240:13",
													"nodeType": "YulBlock",
													"src": "10293:240:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10310:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10310:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10321:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10321:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10303:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10303:6:13"
																},
																"nativeSrc": "10303:21:13",
																"nodeType": "YulFunctionCall",
																"src": "10303:21:13"
															},
															"nativeSrc": "10303:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "10303:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10344:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10344:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10355:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10355:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10340:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10340:3:13"
																		},
																		"nativeSrc": "10340:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10340:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10360:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10360:2:13",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10333:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10333:6:13"
																},
																"nativeSrc": "10333:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10333:30:13"
															},
															"nativeSrc": "10333:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "10333:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10383:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10383:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10394:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10394:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10379:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10379:3:13"
																		},
																		"nativeSrc": "10379:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10379:18:13"
																	},
																	{
																		"hexValue": "4d61726b6574696e675374616b696e673a616d6f756e74206d75737420626520",
																		"kind": "string",
																		"nativeSrc": "10399:34:13",
																		"nodeType": "YulLiteral",
																		"src": "10399:34:13",
																		"type": "",
																		"value": "MarketingStaking:amount must be "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10372:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10372:6:13"
																},
																"nativeSrc": "10372:62:13",
																"nodeType": "YulFunctionCall",
																"src": "10372:62:13"
															},
															"nativeSrc": "10372:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "10372:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10454:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10454:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10465:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10465:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10450:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10450:3:13"
																		},
																		"nativeSrc": "10450:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10450:18:13"
																	},
																	{
																		"hexValue": "67726561746572207468616e207a65726f21",
																		"kind": "string",
																		"nativeSrc": "10470:20:13",
																		"nodeType": "YulLiteral",
																		"src": "10470:20:13",
																		"type": "",
																		"value": "greater than zero!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10443:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10443:6:13"
																},
																"nativeSrc": "10443:48:13",
																"nodeType": "YulFunctionCall",
																"src": "10443:48:13"
															},
															"nativeSrc": "10443:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "10443:48:13"
														},
														{
															"nativeSrc": "10500:27:13",
															"nodeType": "YulAssignment",
															"src": "10500:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10512:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10512:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10523:3:13",
																		"nodeType": "YulLiteral",
																		"src": "10523:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10508:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10508:3:13"
																},
																"nativeSrc": "10508:19:13",
																"nodeType": "YulFunctionCall",
																"src": "10508:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10500:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10500:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cb2ec3ad1b16139b199a6192b421b7a409e15b7e840d7a712143f257a9526abb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10119:414:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10270:9:13",
														"nodeType": "YulTypedName",
														"src": "10270:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10284:4:13",
														"nodeType": "YulTypedName",
														"src": "10284:4:13",
														"type": ""
													}
												],
												"src": "10119:414:13"
											},
											{
												"body": {
													"nativeSrc": "10585:168:13",
													"nodeType": "YulBlock",
													"src": "10585:168:13",
													"statements": [
														{
															"nativeSrc": "10595:82:13",
															"nodeType": "YulAssignment",
															"src": "10595:82:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "10610:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "10610:1:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10613:26:13",
																				"nodeType": "YulLiteral",
																				"src": "10613:26:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10606:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10606:3:13"
																		},
																		"nativeSrc": "10606:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10606:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "10646:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "10646:1:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10649:26:13",
																				"nodeType": "YulLiteral",
																				"src": "10649:26:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10642:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10642:3:13"
																		},
																		"nativeSrc": "10642:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10642:34:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10602:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10602:3:13"
																},
																"nativeSrc": "10602:75:13",
																"nodeType": "YulFunctionCall",
																"src": "10602:75:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10595:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10595:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10725:22:13",
																"nodeType": "YulBlock",
																"src": "10725:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10727:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10727:16:13"
																			},
																			"nativeSrc": "10727:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10727:18:13"
																		},
																		"nativeSrc": "10727:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10727:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "10692:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10692:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10697:26:13",
																		"nodeType": "YulLiteral",
																		"src": "10697:26:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10689:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10689:2:13"
																},
																"nativeSrc": "10689:35:13",
																"nodeType": "YulFunctionCall",
																"src": "10689:35:13"
															},
															"nativeSrc": "10686:61:13",
															"nodeType": "YulIf",
															"src": "10686:61:13"
														}
													]
												},
												"name": "checked_add_t_uint96",
												"nativeSrc": "10538:215:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10568:1:13",
														"nodeType": "YulTypedName",
														"src": "10568:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10571:1:13",
														"nodeType": "YulTypedName",
														"src": "10571:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10577:3:13",
														"nodeType": "YulTypedName",
														"src": "10577:3:13",
														"type": ""
													}
												],
												"src": "10538:215:13"
											},
											{
												"body": {
													"nativeSrc": "10887:145:13",
													"nodeType": "YulBlock",
													"src": "10887:145:13",
													"statements": [
														{
															"nativeSrc": "10897:26:13",
															"nodeType": "YulAssignment",
															"src": "10897:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10909:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10909:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10920:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10920:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10905:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10905:3:13"
																},
																"nativeSrc": "10905:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10905:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10897:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10897:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10939:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10939:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10954:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10954:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10970:3:13",
																								"nodeType": "YulLiteral",
																								"src": "10970:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10975:1:13",
																								"nodeType": "YulLiteral",
																								"src": "10975:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10966:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "10966:3:13"
																						},
																						"nativeSrc": "10966:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "10966:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10979:1:13",
																						"nodeType": "YulLiteral",
																						"src": "10979:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10962:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10962:3:13"
																				},
																				"nativeSrc": "10962:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10962:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10950:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10950:3:13"
																		},
																		"nativeSrc": "10950:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10950:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10932:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10932:6:13"
																},
																"nativeSrc": "10932:51:13",
																"nodeType": "YulFunctionCall",
																"src": "10932:51:13"
															},
															"nativeSrc": "10932:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "10932:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11003:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11003:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11014:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11014:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10999:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10999:3:13"
																		},
																		"nativeSrc": "10999:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10999:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11019:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11019:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10992:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10992:6:13"
																},
																"nativeSrc": "10992:34:13",
																"nodeType": "YulFunctionCall",
																"src": "10992:34:13"
															},
															"nativeSrc": "10992:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "10992:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10758:274:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10848:9:13",
														"nodeType": "YulTypedName",
														"src": "10848:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10859:6:13",
														"nodeType": "YulTypedName",
														"src": "10859:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10867:6:13",
														"nodeType": "YulTypedName",
														"src": "10867:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10878:4:13",
														"nodeType": "YulTypedName",
														"src": "10878:4:13",
														"type": ""
													}
												],
												"src": "10758:274:13"
											},
											{
												"body": {
													"nativeSrc": "11194:214:13",
													"nodeType": "YulBlock",
													"src": "11194:214:13",
													"statements": [
														{
															"nativeSrc": "11204:26:13",
															"nodeType": "YulAssignment",
															"src": "11204:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11216:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11216:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11227:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11227:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11212:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11212:3:13"
																},
																"nativeSrc": "11212:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11212:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11204:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11204:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11246:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11246:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11261:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11261:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11277:3:13",
																								"nodeType": "YulLiteral",
																								"src": "11277:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11282:1:13",
																								"nodeType": "YulLiteral",
																								"src": "11282:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11273:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "11273:3:13"
																						},
																						"nativeSrc": "11273:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "11273:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11286:1:13",
																						"nodeType": "YulLiteral",
																						"src": "11286:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11269:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11269:3:13"
																				},
																				"nativeSrc": "11269:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11269:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11257:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11257:3:13"
																		},
																		"nativeSrc": "11257:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11257:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11239:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11239:6:13"
																},
																"nativeSrc": "11239:51:13",
																"nodeType": "YulFunctionCall",
																"src": "11239:51:13"
															},
															"nativeSrc": "11239:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "11239:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11310:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11310:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11321:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11321:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11306:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11306:3:13"
																		},
																		"nativeSrc": "11306:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11306:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11330:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11330:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11346:3:13",
																								"nodeType": "YulLiteral",
																								"src": "11346:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11351:1:13",
																								"nodeType": "YulLiteral",
																								"src": "11351:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11342:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "11342:3:13"
																						},
																						"nativeSrc": "11342:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "11342:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11355:1:13",
																						"nodeType": "YulLiteral",
																						"src": "11355:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11338:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11338:3:13"
																				},
																				"nativeSrc": "11338:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11338:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11326:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11326:3:13"
																		},
																		"nativeSrc": "11326:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11326:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11299:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11299:6:13"
																},
																"nativeSrc": "11299:60:13",
																"nodeType": "YulFunctionCall",
																"src": "11299:60:13"
															},
															"nativeSrc": "11299:60:13",
															"nodeType": "YulExpressionStatement",
															"src": "11299:60:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11379:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11379:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11390:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11390:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11375:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11375:3:13"
																		},
																		"nativeSrc": "11375:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11375:18:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11395:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11395:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11368:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11368:6:13"
																},
																"nativeSrc": "11368:34:13",
																"nodeType": "YulFunctionCall",
																"src": "11368:34:13"
															},
															"nativeSrc": "11368:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "11368:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11037:371:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11147:9:13",
														"nodeType": "YulTypedName",
														"src": "11147:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11158:6:13",
														"nodeType": "YulTypedName",
														"src": "11158:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11166:6:13",
														"nodeType": "YulTypedName",
														"src": "11166:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11174:6:13",
														"nodeType": "YulTypedName",
														"src": "11174:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11185:4:13",
														"nodeType": "YulTypedName",
														"src": "11185:4:13",
														"type": ""
													}
												],
												"src": "11037:371:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint96_t_uint96_t_uint256_t_uint256_t_uint256_t_uint96_t_uint256__to_t_address_t_address_t_uint96_t_uint96_t_uint256_t_uint256_t_uint256_t_uint96_t_uint256__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), and(value7, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 256), value8)\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_uint96(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint96t_uint96t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_uint96(add(headStart, 64))\n        value3 := abi_decode_uint96(add(headStart, 96))\n        let value := 0\n        value := calldataload(add(headStart, 128))\n        value4 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 160))\n        value5 := value_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_2ffeb4d6a6e18c53bdbb1e26a888925e88a2c474bd647fcf899e8c6ee5114207__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"MarketingStaking:Invalid Pool ID\")\n        mstore(add(headStart, 96), \"!\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_44b7b0a7f318941981ae615ca206c281a67717329a5dc47e2eb5c5286b628868__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"MarketingStaking:Early Withdrawa\")\n        mstore(add(headStart, 96), \"l is not permitted!\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint96__to_t_uint256_t_uint256_t_uint256_t_uint96__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_d3435391364d3c746d0b75b7b53feb547a8b3de93813fde01f437a139cf16310__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"MarketingStaking:Nothing to clai\")\n        mstore(add(headStart, 96), \"m\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1fb492bde4633503501151572865f95cf285b0b8399d0e32d0b44e16616b3bc6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"MarketingStaking:Insufficient ba\")\n        mstore(add(headStart, 96), \"lance!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c75e03f9b44f14ed5ce8359be3379649f6c328e6dab2912e90239799cefdf367__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"MarketingStaking:End time must b\")\n        mstore(add(headStart, 96), \"e greater than time_now!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_42908245c450f80f818d9000a6ee4b3b82113f201550c2dc613cb5413b32f2ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"MarketingStaking:Start time must\")\n        mstore(add(headStart, 96), \" be less than end time!\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint96(x, y) -> diff\n    {\n        diff := sub(and(x, 0xffffffffffffffffffffffff), and(y, 0xffffffffffffffffffffffff))\n        if gt(diff, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint96_t_uint96_t_uint256__to_t_address_t_address_t_uint96_t_uint96_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_d0549e760046a4449575c3a7b4e24b7bb5b43ca1711440b99a696ac6d0735289__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"MarketingStaking:Pool is not act\")\n        mstore(add(headStart, 96), \"ive!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_36ba13c2aa6092f52775d769340484f347ee40a294ff19b7999ca5c4fd4b67b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"MarketingStaking:stake_amount mu\")\n        mstore(add(headStart, 96), \"st be greater than 0!\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_cb2ec3ad1b16139b199a6192b421b7a409e15b7e840d7a712143f257a9526abb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"MarketingStaking:amount must be \")\n        mstore(add(headStart, 96), \"greater than zero!\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint96(x, y) -> sum\n    {\n        sum := add(and(x, 0xffffffffffffffffffffffff), and(y, 0xffffffffffffffffffffffff))\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100f0575f3560e01c80637b0472f011610093578063ce4b5bbe11610063578063ce4b5bbe14610276578063f2fde38b14610286578063fc41aa0914610299578063fdeef425146102ac575f5ffd5b80637b0472f01461022e5780637db7e3bf146102415780638da5cb5b14610254578063b4ac68601461026e575f5ffd5b8063379607f5116100ce578063379607f51461019e578063584b62a1146101b15780635d9d231814610205578063715018a614610226575f5ffd5b8063068bcd8d146100f457806321241dfe1461016757806325d5971f14610189575b5f5ffd5b6101076101023660046115fe565b6102bf565b604080516001600160a01b039a8b1681529990981660208a01526001600160601b03968716978901979097529385166060880152608087019290925260a086015260c08501521660e0830152610100820152610120015b60405180910390f35b6101716234bc0081565b6040516001600160601b03909116815260200161015e565b61019c6101973660046115fe565b6103c8565b005b61019c6101ac3660046115fe565b6105d3565b6101ea6101bf366004611630565b600360209081525f928352604080842090915290825290208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161015e565b61021861021336600461166e565b610806565b60405190815260200161015e565b61019c610c06565b61019c61023c3660046116d0565b610c19565b61019c61024f3660046116f0565b610eae565b5f546040516001600160a01b03909116815260200161015e565b61021861100d565b610218683635c9adc5dea0000081565b61019c610294366004611723565b611023565b61019c6102a73660046116d0565b61105d565b6102186102ba36600461173c565b61114b565b5f5f5f5f5f5f5f5f5f895f811180156102d9575060025481105b6102fe5760405162461bcd60e51b81526004016102f590611766565b60405180910390fd5b5f60028c81548110610312576103126117a7565b905f5260205f2090600702019050805f015f9054906101000a90046001600160a01b0316816001015f9054906101000a90046001600160a01b0316825f0160149054906101000a90046001600160601b03168360010160149054906101000a90046001600160601b0316846002015485600301548660040154876006015f9054906101000a90046001600160601b031688600501549a509a509a509a509a509a509a509a509a5050509193959799909294969850565b6103d06112b3565b805f811180156103e1575060025481105b6103fd5760405162461bcd60e51b81526004016102f590611766565b61040782336112dd565b335f90815260036020908152604080832085845290915281206002805491929185908110610437576104376117a7565b5f91825260209091206007909102016001810154909150600160a01b90046001600160601b0316426001600160601b031610156104865760405162461bcd60e51b81526004016102f5906117bb565b8154156105c4576104a6335b835483546001600160a01b03169190611457565b81546002820180545f906104bb908490611822565b90915550508154604051908152339085907f459d5aef2c549903c1eeb1736f5728845d5ccf82537ddd5bf8035795eee892639060200160405180910390a35f8255335b6001600160a01b0316847f8fe70e917ad578cbb5b0779aa52ee3f23afa39c5295542125059f2a4e98cbbfe845f015485600101548660020154604051610557939291909283526020830191909152604082015260600190565b60405180910390a36002810154600382015460048301546006840154604080519485526020850193909352918301526001600160601b0316606082015284907fe9d4ced29dfd1b7392aa77b7ea3220d8318a5a65cd900f4e40e9d816d11d84f29060800160405180910390a25b5050506105d060018055565b50565b6105db6112b3565b805f811180156105ec575060025481105b6106085760405162461bcd60e51b81526004016102f590611766565b61061282336112dd565b335f90815260036020908152604080832085845290915281206002805491929185908110610642576106426117a7565b5f91825260209091206007909102016001810154909150600160a01b90046001600160601b0316426001600160601b031610156106915760405162461bcd60e51b81526004016102f5906117bb565b5f8260010154116106ee5760405162461bcd60e51b815260206004820152602160248201527f4d61726b6574696e675374616b696e673a4e6f7468696e6720746f20636c61696044820152606d60f81b60648201526084016102f5565b8160010154816005015410156107165760405162461bcd60e51b81526004016102f590611835565b81541561077d5761072633610492565b81546002820180545f9061073b908490611822565b90915550508154604051908152339085907f459d5aef2c549903c1eeb1736f5728845d5ccf82537ddd5bf8035795eee892639060200160405180910390a35f82555b61079b33600180850154908401546001600160a01b03169190611457565b8160010154816005015f8282546107b29190611822565b90915550506001820154604051908152339085907f04492fab062412e7e4e5f46c9e919f1640652946a5e163ad6e6c1c03d87954d29060200160405180910390a35f600183018190556002830155336104fe565b5f61080f6114bb565b6001600160601b038416426001600160601b0316106108965760405162461bcd60e51b815260206004820152603860248201527f4d61726b6574696e675374616b696e673a456e642074696d65206d757374206260448201527f652067726561746572207468616e2074696d655f6e6f7721000000000000000060648201526084016102f5565b6108b26001600160601b038616426001600160601b03166114e7565b9450836001600160601b0316856001600160601b03161061093b5760405162461bcd60e51b815260206004820152603760248201527f4d61726b6574696e675374616b696e673a53746172742074696d65206d75737460448201527f206265206c657373207468616e20656e642074696d652100000000000000000060648201526084016102f5565b5f610946868661187b565b6001600160601b031661096285683635c9adc5dea0000061189a565b61096c91906118b1565b60408051610120810182526001600160a01b038b811682526001600160601b038a8116602084018181528d84169585019586528b8316606086019081525f6080870181815260a088018a815260c0890183815260e08a018f81526101008b0197885260028054600180820183558288529c519851988c16600160a01b998c168a02177f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace6007909202918201559c51965196909a16958916909602949094177f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf8b015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad08a0155517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad189015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad288015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad387015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad490950180546bffffffffffffffffffffffff191695909216949094179055549293509091610b369190611822565b604080516001600160a01b038c811682528b1660208201526001600160601b038a81168284015289166060820152683635c9adc5dea000006080820152905191925082917f7c89ff64ffbfc8006a5f9ef85541e2fc4f990a7906ba4920928ffd9c9b7b3a959181900360a00190a28315610bfa57610bbf6001600160a01b0389163330876114fb565b807f6c07ee05dcf262f13abf9d87b846ee789d2f90fe991d495acd7d7fc109ee1f5585604051610bf191815260200190565b60405180910390a25b98975050505050505050565b610c0e6114bb565b610c175f611534565b565b610c216112b3565b815f81118015610c32575060025481105b610c4e5760405162461bcd60e51b81526004016102f590611766565b5f60028481548110610c6257610c626117a7565b5f91825260209091206007909102018054909150600160a01b90046001600160601b0316426001600160601b031610158015610cba57506001810154600160a01b90046001600160601b0316426001600160601b0316105b610d125760405162461bcd60e51b8152602060048201526024808201527f4d61726b6574696e675374616b696e673a506f6f6c206973206e6f74206163746044820152636976652160e01b60648201526084016102f5565b5f8311610d7f5760405162461bcd60e51b815260206004820152603560248201527f4d61726b6574696e675374616b696e673a7374616b655f616d6f756e74206d7560448201527473742062652067726561746572207468616e20302160581b60648201526084016102f5565b610d963382546001600160a01b03169030866114fb565b610da084336112dd565b335f9081526003602090815260408083208784529091528120805490918591839190610dcd9084906118d0565b9250508190555083826002015f828254610de791906118d0565b90915550508054600182015460028301546040805193845260208401929092528282015251339187917f8fe70e917ad578cbb5b0779aa52ee3f23afa39c5295542125059f2a4e98cbbfe9181900360600190a36002820154600383015460048401546006850154604080519485526020850193909352918301526001600160601b0316606082015285907fe9d4ced29dfd1b7392aa77b7ea3220d8318a5a65cd900f4e40e9d816d11d84f29060800160405180910390a2505050610eaa60018055565b5050565b610eb66114bb565b825f81118015610ec7575060025481105b610ee35760405162461bcd60e51b81526004016102f590611766565b5f8211610f025760405162461bcd60e51b81526004016102f5906118e3565b5f60028581548110610f1657610f166117a7565b905f5260205f20906007020190508281600501541015610f485760405162461bcd60e51b81526004016102f590611835565b6001810154610f6b906234bc0090600160a01b90046001600160601b0316611935565b6001600160601b0316426001600160601b0316101580610f8d57506002810154155b610f95575f5ffd5b6001810154610fae906001600160a01b03168585611457565b82816005015f828254610fc19190611822565b90915550506040518381526001600160a01b0385169086907fb886382d42263e3c08a157dd29a33c435741f36625dbc3acb6fb8c19bbf782479060200160405180910390a35050505050565b6002545f9061101e90600190611822565b905090565b61102b6114bb565b6001600160a01b03811661105457604051631e4fbdf760e01b81525f60048201526024016102f5565b6105d081611534565b6110656112b3565b815f81118015611076575060025481105b6110925760405162461bcd60e51b81526004016102f590611766565b5f82116110b15760405162461bcd60e51b81526004016102f5906118e3565b5f600284815481106110c5576110c56117a7565b905f5260205f20906007020190506110f36110dd3390565b60018301546001600160a01b03169030866114fb565b82816005015f82825461110691906118d0565b909155505060405183815284907f6c07ee05dcf262f13abf9d87b846ee789d2f90fe991d495acd7d7fc109ee1f559060200160405180910390a25050610eaa60018055565b5f825f8111801561115d575060025481105b6111795760405162461bcd60e51b81526004016102f590611766565b6001600160a01b0383165f908152600360209081526040808320878452909152812060028054919291879081106111b2576111b26117a7565b5f918252602082206007919091020160068101549092506111ff906001600160601b03166111fa425b60018601546001600160601b0391821691600160a01b90910416611583565b6114e7565b600483015460028401549192509015801590611227575060068301546001600160601b031682115b156112745760028301546003840154600685015461124e906001600160601b031685611822565b611258919061189a565b61126291906118b1565b836004015461127191906118d0565b90505b683635c9adc5dea0000084600201548261128e9190611822565b855461129a919061189a565b6112a491906118b1565b8460010154610bfa91906118d0565b6002600154036112d657604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b5f600283815481106112f1576112f16117a7565b5f9182526020822060079190910201600681015490925061131e906001600160601b03166111fa426111db565b90505f8260020154118015611343575060068201546001600160601b03908116908216115b1561139f5760028201546003830154600684015461136a906001600160601b03168461187b565b6001600160601b031661137d919061189a565b61138791906118b1565b826004015f82825461139991906118d0565b90915550505b6006820180546bffffffffffffffffffffffff19166001600160601b0383161790556001600160a01b03831615611451576001600160a01b0383165f908152600360209081526040808320878452909152902080541561144557683635c9adc5dea00000816002015484600401546114179190611822565b8254611423919061189a565b61142d91906118b1565b816001015f82825461143f91906118d0565b90915550505b60048301546002909101555b50505050565b6040516001600160a01b038381166024830152604482018390526114b691859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611592565b505050565b5f546001600160a01b03163314610c175760405163118cdaa760e01b81523360048201526024016102f5565b5f8282188284110282185b90505b92915050565b6040516001600160a01b0384811660248301528381166044830152606482018390526114519186918216906323b872dd90608401611484565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f8282188284100282186114f2565b5f5f60205f8451602086015f885af1806115b1576040513d5f823e3d81fd5b50505f513d915081156115c85780600114156115d5565b6001600160a01b0384163b155b1561145157604051635274afe760e01b81526001600160a01b03851660048201526024016102f5565b5f6020828403121561160e575f5ffd5b5035919050565b80356001600160a01b038116811461162b575f5ffd5b919050565b5f5f60408385031215611641575f5ffd5b61164a83611615565b946020939093013593505050565b80356001600160601b038116811461162b575f5ffd5b5f5f5f5f5f5f60c08789031215611683575f5ffd5b61168c87611615565b955061169a60208801611615565b94506116a860408801611658565b93506116b660608801611658565b9598949750929560808101359460a0909101359350915050565b5f5f604083850312156116e1575f5ffd5b50508035926020909101359150565b5f5f5f60608486031215611702575f5ffd5b8335925061171260208501611615565b929592945050506040919091013590565b5f60208284031215611733575f5ffd5b6114f282611615565b5f5f6040838503121561174d575f5ffd5b8235915061175d60208401611615565b90509250929050565b60208082526021908201527f4d61726b6574696e675374616b696e673a496e76616c696420506f6f6c2049446040820152602160f81b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b60208082526033908201527f4d61726b6574696e675374616b696e673a4561726c79205769746864726177616040820152726c206973206e6f74207065726d69747465642160681b606082015260800190565b634e487b7160e01b5f52601160045260245ffd5b818103818111156114f5576114f561180e565b60208082526026908201527f4d61726b6574696e675374616b696e673a496e73756666696369656e742062616040820152656c616e63652160d01b606082015260800190565b6001600160601b0382811682821603908111156114f5576114f561180e565b80820281158282048414176114f5576114f561180e565b5f826118cb57634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156114f5576114f561180e565b60208082526032908201527f4d61726b6574696e675374616b696e673a616d6f756e74206d7573742062652060408201527167726561746572207468616e207a65726f2160701b606082015260800190565b6001600160601b0381811683821601908111156114f5576114f561180e56fea26469706673582212202370d657e21c71e0e678798406608ab1b8a3eed29fa468d0bd13c5823d12374364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0472F0 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xCE4B5BBE GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xCE4B5BBE EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xFC41AA09 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xFDEEF425 EQ PUSH2 0x2AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x7DB7E3BF EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xB4AC6860 EQ PUSH2 0x26E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x379607F5 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x584B62A1 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x5D9D2318 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x226 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x68BCD8D EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x21241DFE EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x25D5971F EQ PUSH2 0x189 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP11 DUP12 AND DUP2 MSTORE SWAP10 SWAP1 SWAP9 AND PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND SWAP8 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP4 DUP6 AND PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH3 0x34BC00 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15E JUMP JUMPDEST PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x3C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1630 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x15E JUMP JUMPDEST PUSH2 0x218 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x166E JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15E JUMP JUMPDEST PUSH2 0x19C PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x16F0 JUMP JUMPDEST PUSH2 0xEAE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15E JUMP JUMPDEST PUSH2 0x218 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x218 PUSH9 0x3635C9ADC5DEA00000 DUP2 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x1023 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0x105D JUMP JUMPDEST PUSH2 0x218 PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x173C JUMP JUMPDEST PUSH2 0x114B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 DUP10 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x2D9 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x2FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP13 DUP2 SLOAD DUP2 LT PUSH2 0x312 JUMPI PUSH2 0x312 PUSH2 0x17A7 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP4 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP5 PUSH1 0x2 ADD SLOAD DUP6 PUSH1 0x3 ADD SLOAD DUP7 PUSH1 0x4 ADD SLOAD DUP8 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP9 PUSH1 0x5 ADD SLOAD SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP10 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 POP JUMP JUMPDEST PUSH2 0x3D0 PUSH2 0x12B3 JUMP JUMPDEST DUP1 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x3E1 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x407 DUP3 CALLER PUSH2 0x12DD JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x437 JUMPI PUSH2 0x437 PUSH2 0x17A7 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x17BB JUMP JUMPDEST DUP2 SLOAD ISZERO PUSH2 0x5C4 JUMPI PUSH2 0x4A6 CALLER JUMPDEST DUP4 SLOAD DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH0 SWAP1 PUSH2 0x4BB SWAP1 DUP5 SWAP1 PUSH2 0x1822 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 DUP6 SWAP1 PUSH32 0x459D5AEF2C549903C1EEB1736F5728845D5CCF82537DDD5BF8035795EEE89263 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 DUP3 SSTORE CALLER JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x8FE70E917AD578CBB5B0779AA52EE3F23AFA39C5295542125059F2A4E98CBBFE DUP5 PUSH0 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD DUP7 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x557 SWAP4 SWAP3 SWAP2 SWAP1 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE DUP5 SWAP1 PUSH32 0xE9D4CED29DFD1B7392AA77B7EA3220D8318A5A65CD900F4E40E9D816D11D84F2 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP PUSH2 0x5D0 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x12B3 JUMP JUMPDEST DUP1 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x5EC JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x612 DUP3 CALLER PUSH2 0x12DD JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x642 JUMPI PUSH2 0x642 PUSH2 0x17A7 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 ADD SLOAD GT PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A4E6F7468696E6720746F20636C6169 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x6D PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F5 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x5 ADD SLOAD LT ISZERO PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1835 JUMP JUMPDEST DUP2 SLOAD ISZERO PUSH2 0x77D JUMPI PUSH2 0x726 CALLER PUSH2 0x492 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH0 SWAP1 PUSH2 0x73B SWAP1 DUP5 SWAP1 PUSH2 0x1822 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 DUP6 SWAP1 PUSH32 0x459D5AEF2C549903C1EEB1736F5728845D5CCF82537DDD5BF8035795EEE89263 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 DUP3 SSTORE JUMPDEST PUSH2 0x79B CALLER PUSH1 0x1 DUP1 DUP6 ADD SLOAD SWAP1 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0x1822 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 DUP6 SWAP1 PUSH32 0x4492FAB062412E7E4E5F46C9E919F1640652946A5E163AD6E6C1C03D87954D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP4 ADD SSTORE CALLER PUSH2 0x4FE JUMP JUMPDEST PUSH0 PUSH2 0x80F PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A456E642074696D65206D7573742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x652067726561746572207468616E2074696D655F6E6F77210000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x8B2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x14E7 JUMP JUMPDEST SWAP5 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A53746172742074696D65206D757374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206265206C657373207468616E20656E642074696D6521000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH0 PUSH2 0x946 DUP7 DUP7 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x962 DUP6 PUSH9 0x3635C9ADC5DEA00000 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x96C SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP11 DUP2 AND PUSH1 0x20 DUP5 ADD DUP2 DUP2 MSTORE DUP14 DUP5 AND SWAP6 DUP6 ADD SWAP6 DUP7 MSTORE DUP12 DUP4 AND PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH0 PUSH1 0x80 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0xA0 DUP9 ADD DUP11 DUP2 MSTORE PUSH1 0xC0 DUP10 ADD DUP4 DUP2 MSTORE PUSH1 0xE0 DUP11 ADD DUP16 DUP2 MSTORE PUSH2 0x100 DUP12 ADD SWAP8 DUP9 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE DUP3 DUP9 MSTORE SWAP13 MLOAD SWAP9 MLOAD SWAP9 DUP13 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP10 DUP13 AND DUP11 MUL OR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE PUSH1 0x7 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD SSTORE SWAP13 MLOAD SWAP7 MLOAD SWAP7 SWAP1 SWAP11 AND SWAP6 DUP10 AND SWAP1 SWAP7 MUL SWAP5 SWAP1 SWAP5 OR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF DUP12 ADD SSTORE SWAP1 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0 DUP11 ADD SSTORE MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD1 DUP10 ADD SSTORE SWAP1 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD2 DUP9 ADD SSTORE SWAP1 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD3 DUP8 ADD SSTORE SWAP1 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD4 SWAP1 SWAP6 ADD DUP1 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP6 SWAP1 SWAP3 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SSTORE SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND DUP3 MSTORE DUP12 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP11 DUP2 AND DUP3 DUP5 ADD MSTORE DUP10 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 PUSH32 0x7C89FF64FFBFC8006A5F9EF85541E2FC4F990A7906BA4920928FFD9C9B7B3A95 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG2 DUP4 ISZERO PUSH2 0xBFA JUMPI PUSH2 0xBBF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND CALLER ADDRESS DUP8 PUSH2 0x14FB JUMP JUMPDEST DUP1 PUSH32 0x6C07EE05DCF262F13ABF9D87B846EE789D2F90FE991D495ACD7D7FC109EE1F55 DUP6 PUSH1 0x40 MLOAD PUSH2 0xBF1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC0E PUSH2 0x14BB JUMP JUMPDEST PUSH2 0xC17 PUSH0 PUSH2 0x1534 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC21 PUSH2 0x12B3 JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xC32 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0xC4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC62 JUMPI PUSH2 0xC62 PUSH2 0x17A7 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO DUP1 ISZERO PUSH2 0xCBA JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT JUMPDEST PUSH2 0xD12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A506F6F6C206973206E6F7420616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x69766521 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0xD7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A7374616B655F616D6F756E74206D75 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x73742062652067726561746572207468616E203021 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0xD96 CALLER DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP7 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0xDA0 DUP5 CALLER PUSH2 0x12DD JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP6 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xDCD SWAP1 DUP5 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDE7 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD CALLER SWAP2 DUP8 SWAP2 PUSH32 0x8FE70E917AD578CBB5B0779AA52EE3F23AFA39C5295542125059F2A4E98CBBFE SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE DUP6 SWAP1 PUSH32 0xE9D4CED29DFD1B7392AA77B7EA3220D8318A5A65CD900F4E40E9D816D11D84F2 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0xEAA PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xEB6 PUSH2 0x14BB JUMP JUMPDEST DUP3 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xEC7 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0xEE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0xF02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xF16 JUMPI PUSH2 0xF16 PUSH2 0x17A7 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP3 DUP2 PUSH1 0x5 ADD SLOAD LT ISZERO PUSH2 0xF48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xF6B SWAP1 PUSH3 0x34BC00 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x1935 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO DUP1 PUSH2 0xF8D JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD ISZERO JUMPDEST PUSH2 0xF95 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xFAE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 PUSH2 0x1457 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x1822 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP7 SWAP1 PUSH32 0xB886382D42263E3C08A157DD29A33C435741F36625DBC3ACB6FB8C19BBF78247 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP1 PUSH2 0x101E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1822 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x102B PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1054 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x5D0 DUP2 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x1065 PUSH2 0x12B3 JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x1076 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x1092 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x10B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x10C5 JUMPI PUSH2 0x10C5 PUSH2 0x17A7 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH2 0x10F3 PUSH2 0x10DD CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP7 PUSH2 0x14FB JUMP JUMPDEST DUP3 DUP2 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1106 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP5 SWAP1 PUSH32 0x6C07EE05DCF262F13ABF9D87B846EE789D2F90FE991D495ACD7D7FC109EE1F55 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xEAA PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH0 DUP3 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x115D JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x1179 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP8 SWAP1 DUP2 LT PUSH2 0x11B2 JUMPI PUSH2 0x11B2 PUSH2 0x17A7 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x7 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x6 DUP2 ADD SLOAD SWAP1 SWAP3 POP PUSH2 0x11FF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x11FA TIMESTAMP JUMPDEST PUSH1 0x1 DUP7 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND PUSH2 0x1583 JUMP JUMPDEST PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x2 DUP5 ADD SLOAD SWAP2 SWAP3 POP SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1227 JUMPI POP PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 GT JUMPDEST ISZERO PUSH2 0x1274 JUMPI PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH2 0x124E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP6 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x1258 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1262 SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x1271 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP5 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x1822 JUMP JUMPDEST DUP6 SLOAD PUSH2 0x129A SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x12A4 SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xBFA SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x12D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x12F1 JUMPI PUSH2 0x12F1 PUSH2 0x17A7 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x7 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x6 DUP2 ADD SLOAD SWAP1 SWAP3 POP PUSH2 0x131E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x11FA TIMESTAMP PUSH2 0x11DB JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD SLOAD GT DUP1 ISZERO PUSH2 0x1343 JUMPI POP PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND GT JUMPDEST ISZERO PUSH2 0x139F JUMPI PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD PUSH2 0x136A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP5 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x137D SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1387 SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST DUP3 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1399 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1451 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x1445 JUMPI PUSH9 0x3635C9ADC5DEA00000 DUP2 PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x4 ADD SLOAD PUSH2 0x1417 SWAP2 SWAP1 PUSH2 0x1822 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1423 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x142D SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x14B6 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1592 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH0 DUP3 DUP3 XOR DUP3 DUP5 GT MUL DUP3 XOR JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1451 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x1484 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 XOR DUP3 DUP5 LT MUL DUP3 XOR PUSH2 0x14F2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x15B1 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x15C8 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x15D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1451 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x160E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x162B JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1641 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x164A DUP4 PUSH2 0x1615 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x162B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1683 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x168C DUP8 PUSH2 0x1615 JUMP JUMPDEST SWAP6 POP PUSH2 0x169A PUSH1 0x20 DUP9 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP5 POP PUSH2 0x16A8 PUSH1 0x40 DUP9 ADD PUSH2 0x1658 JUMP JUMPDEST SWAP4 POP PUSH2 0x16B6 PUSH1 0x60 DUP9 ADD PUSH2 0x1658 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1702 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x1712 PUSH1 0x20 DUP6 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1733 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14F2 DUP3 PUSH2 0x1615 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x174D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x175D PUSH1 0x20 DUP5 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A496E76616C696420506F6F6C204944 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A4561726C7920576974686472617761 PUSH1 0x40 DUP3 ADD MSTORE PUSH19 0x6C206973206E6F74207065726D697474656421 PUSH1 0x68 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x14F5 JUMPI PUSH2 0x14F5 PUSH2 0x180E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A496E73756666696369656E74206261 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x6C616E636521 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x14F5 JUMPI PUSH2 0x14F5 PUSH2 0x180E JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x14F5 JUMPI PUSH2 0x14F5 PUSH2 0x180E JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x18CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x14F5 JUMPI PUSH2 0x14F5 PUSH2 0x180E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E675374616B696E673A616D6F756E74206D75737420626520 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x67726561746572207468616E207A65726F21 PUSH1 0x70 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x14F5 JUMPI PUSH2 0x14F5 PUSH2 0x180E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 PUSH17 0xD657E21C71E0E678798406608AB1B8A3EE 0xD2 SWAP16 LOG4 PUSH9 0xD0BD13C5823D123743 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "358:10442:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2420:773;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;628:32:13;;;610:51;;697:32;;;;692:2;677:18;;670:60;-1:-1:-1;;;;;766:39:13;;;746:18;;;739:67;;;;842:39;;;837:2;822:18;;815:67;913:3;898:19;;891:35;;;;648:3;942:19;;935:35;1001:3;986:19;;979:35;1051:39;1045:3;1030:19;;1023:68;1122:3;1107:19;;1100:35;597:3;582:19;2420:773:12;;;;;;;;904:45;;942:7;904:45;;;;;-1:-1:-1;;;;;1308:39:13;;;1290:58;;1278:2;1263:18;904:45:12;1146:208:13;8839:945:12;;;;;;:::i;:::-;;:::i;:::-;;7435:1396;;;;;;:::i;:::-;;:::i;1034:65::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2044:25:13;;;2100:2;2085:18;;2078:34;;;;2128:18;;;2121:34;2032:2;2017:18;1034:65:12;1842:319:13;3424:1385:12;;;;;;:::i;:::-;;:::i;:::-;;;3142:25:13;;;3130:2;3115:18;3424:1385:12;2996:177:13;2293:101:0;;;:::i;5732:935:12:-;;;;;;:::i;:::-;;:::i;10210:585::-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;4100:51:13;;4088:2;4073:18;1638:85:0;3954:203:13;3203:102:12;;;:::i;956:40::-;;992:4;956:40;;2543:215:0;;;;;;:::i;:::-;;:::i;9792:410:12:-;;;;;;:::i;:::-;;:::i;6675:752::-;;;;;;:::i;:::-;;:::i;2420:773::-;2507:21;2543;2579:18;2612:16;2643:17;2675:16;2706:23;2744:24;2783:22;2474:7;1904:1;1894:7;:11;:37;;;;-1:-1:-1;1919:5:12;:12;1909:22;;1894:37;1886:83;;;;-1:-1:-1;;;1886:83:12;;;;;;;:::i;:::-;;;;;;;;;2823:21:::1;2847:5;2853:7;2847:14;;;;;;;;:::i;:::-;;;;;;;;;;;2823:38;;2888:4;:18;;;;;;;;;;-1:-1:-1::0;;;;;2888:18:12::1;2930:4;:18;;;;;;;;;;-1:-1:-1::0;;;;;2930:18:12::1;2964:4;:16;;;;;;;;;;-1:-1:-1::0;;;;;2964:16:12::1;2995:4;:14;;;;;;;;;;-1:-1:-1::0;;;;;2995:14:12::1;3024:4;:17;;;3056:4;:16;;;3087:4;:23;;;3125:4;:22;;;;;;;;;;-1:-1:-1::0;;;;;3125:22:12::1;3162:4;:22;;;2872:313;;;;;;;;;;;;;;;;;;;2420:773:::0;;;;;;;;;;;;:::o;8839:945::-;2500:21:8;:19;:21::i;:::-;8912:7:12::1;1904:1;1894:7;:11;:37;;;;-1:-1:-1::0;1919:5:12::1;:12:::0;1909:22;::::1;1894:37;1886:83;;;;-1:-1:-1::0;;;1886:83:12::1;;;;;;;:::i;:::-;8937:33:::2;8948:7:::0;735:10:6;8937::12::2;:33::i;:::-;735:10:6::0;8981:28:12::2;9012:20:::0;;;:6:::2;:20;::::0;;;;;;;:29;;;;;;;;9076:5:::2;:14:::0;;9012:29;;8981:28;9033:7;;9076:14;::::2;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;;9123;::::0;::::2;::::0;9076;;-1:-1:-1;;;;9123:14:12;::::2;-1:-1:-1::0;;;;;9123:14:12::2;3392:15:::0;-1:-1:-1;;;;;9109:28:12::2;;;9101:92;;;;-1:-1:-1::0;;;9101:92:12::2;;;;;;;:::i;:::-;9218:20:::0;;:24;9215:560:::2;;9268:67;735:10:6::0;9300:12:12::2;9314:20:::0;;9268:18;;-1:-1:-1;;;;;9268:18:12::2;::::0;:67;:31:::2;:67::i;:::-;9371:20:::0;;9350:17:::2;::::0;::::2;:41:::0;;9371:20:::2;::::0;9350:41:::2;::::0;9371:20;;9350:41:::2;:::i;:::-;::::0;;;-1:-1:-1;;9449:20:12;;9411:59:::2;::::0;3142:25:13;;;735:10:6;;9426:7:12;;9411:59:::2;::::0;3130:2:13;3115:18;9411:59:12::2;;;;;;;9508:1;9485:24:::0;;735:10:6;9551:12:12::2;-1:-1:-1::0;;;;;9529:108:12::2;9542:7;9529:108;9565:7;:20;;;9587:7;:21;;;9610:7;:26;;;9529:108;;;;;;;2044:25:13::0;;;2100:2;2085:18;;2078:34;;;;2143:2;2128:18;;2121:34;2032:2;2017:18;;1842:319;9529:108:12::2;;;;;;;;9678:17;::::0;::::2;::::0;9697:16:::2;::::0;::::2;::::0;9715:23:::2;::::0;::::2;::::0;9740:22:::2;::::0;::::2;::::0;9657:106:::2;::::0;;6106:25:13;;;6162:2;6147:18;;6140:34;;;;6190:18;;;6183:34;-1:-1:-1;;;;;9740:22:12::2;6248:2:13::0;6233:18;;6226:67;9669:7:12;;9657:106:::2;::::0;6093:3:13;6078:19;9657:106:12::2;;;;;;;9215:560;8926:858;;2531:1:8::1;2542:20:::0;1857:1;3068:21;;2888:208;2542:20;8839:945:12;:::o;7435:1396::-;2500:21:8;:19;:21::i;:::-;7500:7:12::1;1904:1;1894:7;:11;:37;;;;-1:-1:-1::0;1919:5:12::1;:12:::0;1909:22;::::1;1894:37;1886:83;;;;-1:-1:-1::0;;;1886:83:12::1;;;;;;;:::i;:::-;7525:33:::2;7536:7:::0;735:10:6;8937::12::2;:33::i;7525:::-;735:10:6::0;7569:28:12::2;7600:20:::0;;;:6:::2;:20;::::0;;;;;;;:29;;;;;;;;7664:5:::2;:14:::0;;7600:29;;7569:28;7621:7;;7664:14;::::2;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;;7711;::::0;::::2;::::0;7664;;-1:-1:-1;;;;7711:14:12;::::2;-1:-1:-1::0;;;;;7711:14:12::2;3392:15:::0;-1:-1:-1;;;;;7697:28:12::2;;;7689:92;;;;-1:-1:-1::0;;;7689:92:12::2;;;;;;;:::i;:::-;7825:1;7801:7;:21;;;:25;7793:71;;;::::0;-1:-1:-1;;;7793:71:12;;6506:2:13;7793:71:12::2;::::0;::::2;6488:21:13::0;6545:2;6525:18;;;6518:30;6584:34;6564:18;;;6557:62;-1:-1:-1;;;6635:18:13;;;6628:31;6676:19;;7793:71:12::2;6304:397:13::0;7793:71:12::2;7909:7;:21;;;7883:4;:22;;;:47;;7875:98;;;;-1:-1:-1::0;;;7875:98:12::2;;;;;;;:::i;:::-;7987:20:::0;;:24;7984:306:::2;;8037:67;735:10:6::0;8069:12:12::2;656:96:6::0;8037:67:12::2;8140:20:::0;;8119:17:::2;::::0;::::2;:41:::0;;8140:20:::2;::::0;8119:41:::2;::::0;8140:20;;8119:41:::2;:::i;:::-;::::0;;;-1:-1:-1;;8218:20:12;;8180:59:::2;::::0;3142:25:13;;;735:10:6;;8195:7:12;;8180:59:::2;::::0;3130:2:13;3115:18;8180:59:12::2;;;;;;;8277:1;8254:24:::0;;7984:306:::2;8302:68;735:10:6::0;8348:21:12::2;::::0;;::::2;::::0;8302:18;;::::2;::::0;-1:-1:-1;;;;;8302:18:12::2;::::0;:68;:31:::2;:68::i;:::-;8407:7;:21;;;8381:4;:22;;;:47;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;8478:21:12::2;::::0;::::2;::::0;8444:56:::2;::::0;3142:25:13;;;735:10:6;;8455:7:12;;8444:56:::2;::::0;3130:2:13;3115:18;8444:56:12::2;;;;;;;8535:1;8511:21;::::0;::::2;:25:::0;;;8547:26:::2;::::0;::::2;:30:::0;735:10:6;8615:12:12::2;656:96:6::0;3424:1385:12;3604:4;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;3634:22:12;::::1;3392:15:::0;-1:-1:-1;;;;;3634:22:12::1;;3626:91;;;::::0;-1:-1:-1;;;3626:91:12;;7315:2:13;3626:91:12::1;::::0;::::1;7297:21:13::0;7354:2;7334:18;;;7327:30;7393:34;7373:18;;;7366:62;7464:26;7444:18;;;7437:54;7508:19;;3626:91:12::1;7113:420:13::0;3626:91:12::1;3749:33;-1:-1:-1::0;;;;;3749:33:12;::::1;3392:15:::0;-1:-1:-1;;;;;3749:33:12::1;:8;:33::i;:::-;3728:55;;3816:9;-1:-1:-1::0;;;;;3802:23:12::1;:11;-1:-1:-1::0;;;;;3802:23:12::1;;3794:91;;;::::0;-1:-1:-1;;;3794:91:12;;7740:2:13;3794:91:12::1;::::0;::::1;7722:21:13::0;7779:2;7759:18;;;7752:30;7818:34;7798:18;;;7791:62;7889:25;7869:18;;;7862:53;7932:19;;3794:91:12::1;7538:419:13::0;3794:91:12::1;3901:16;3948:23;3960:11:::0;3948:9;:23:::1;:::i;:::-;-1:-1:-1::0;;;;;3920:52:12::1;:26;3933:13:::0;992:4:::1;3920:26;:::i;:::-;:52;;;;:::i;:::-;3994:403;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;3994:403:12;;::::1;::::0;;-1:-1:-1;;;;;3994:403:12;;::::1;;::::0;::::1;::::0;;;;;::::1;::::0;;;;;;;;::::1;::::0;;;;;;-1:-1:-1;3994:403:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3983:5:::1;:415:::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;::::1;-1:-1:-1::0;;;3983:415:12;;::::1;::::0;::::1;;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3983:415:12::1;::::0;;;::::1;::::0;;;::::1;::::0;;4424:12;3994:403;;-1:-1:-1;;;4424:16:12::1;::::0;3983:415;4424:16:::1;:::i;:::-;4456:88;::::0;;-1:-1:-1;;;;;8853:32:13;;;8835:51;;8922:32;;8917:2;8902:18;;8895:60;-1:-1:-1;;;;;8991:39:13;;;8971:18;;;8964:67;9067:39;;9062:2;9047:18;;9040:67;992:4:12::1;9138:3:13::0;9123:19;;9116:35;4456:88:12;;4409:31;;-1:-1:-1;4409:31:12;;4456:88:::1;::::0;;;;8822:3:13;4456:88:12;;::::1;4558:26:::0;;4555:222:::1;;4610:91;-1:-1:-1::0;;;;;4610:38:12;::::1;735:10:6::0;4671:4:12::1;4678:22:::0;4610:38:::1;:91::i;:::-;4733:7;4721:44;4742:22;4721:44;;;;3142:25:13::0;;3130:2;3115:18;;2996:177;4721:44:12::1;;;;;;;;4555:222;4794:7:::0;3424:1385;-1:-1:-1;;;;;;;;3424:1385:12:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5732:935:12:-;2500:21:8;:19;:21::i;:::-;5816:7:12::1;1904:1;1894:7;:11;:37;;;;-1:-1:-1::0;1919:5:12::1;:12:::0;1909:22;::::1;1894:37;1886:83;;;;-1:-1:-1::0;;;1886:83:12::1;;;;;;;:::i;:::-;5841:21:::2;5865:5;5871:7;5865:14;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;;5912:16:::0;;5865:14;;-1:-1:-1;;;;5912:16:12;::::2;-1:-1:-1::0;;;;;5912:16:12::2;3392:15:::0;-1:-1:-1;;;;;5898:30:12::2;;;:61;;;;-1:-1:-1::0;5945:14:12::2;::::0;::::2;::::0;-1:-1:-1;;;5945:14:12;::::2;-1:-1:-1::0;;;;;5945:14:12::2;3392:15:::0;-1:-1:-1;;;;;5932:27:12::2;;5898:61;5890:110;;;::::0;-1:-1:-1;;;5890:110:12;;9364:2:13;5890:110:12::2;::::0;::::2;9346:21:13::0;9403:2;9383:18;;;9376:30;9442:34;9422:18;;;9415:62;-1:-1:-1;;;9493:18:13;;;9486:34;9537:19;;5890:110:12::2;9162:400:13::0;5890:110:12::2;6034:1;6019:12;:16;6011:82;;;::::0;-1:-1:-1;;;6011:82:12;;9769:2:13;6011:82:12::2;::::0;::::2;9751:21:13::0;9808:2;9788:18;;;9781:30;9847:34;9827:18;;;9820:62;-1:-1:-1;;;9898:18:13;;;9891:51;9959:19;;6011:82:12::2;9567:417:13::0;6011:82:12::2;6106:78;735:10:6::0;6106:18:12;;-1:-1:-1;;;;;6106:18:12::2;::::0;6164:4:::2;6171:12:::0;6106:35:::2;:78::i;:::-;6196:33;6207:7:::0;735:10:6;8937::12::2;:33::i;6196:::-;735:10:6::0;6240:31:12::2;6274:20:::0;;;:6:::2;:20;::::0;;;;;;;:29;;;;;;;;6314:39;;6274:29;;6341:12;;6274:29;;6240:31;6314:39:::2;::::0;6341:12;;6314:39:::2;:::i;:::-;;;;;;;;6385:12;6364:4;:17;;;:33;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6449:23:12;;6474:24:::2;::::0;::::2;::::0;6500:29:::2;::::0;::::2;::::0;6413:117:::2;::::0;;2044:25:13;;;2100:2;2085:18;;2078:34;;;;2128:18;;;2121:34;6413:117:12;735:10:6;;6426:7:12;;6413:117:::2;::::0;;;;2032:2:13;6413:117:12;;::::2;6567:17;::::0;::::2;::::0;6586:16:::2;::::0;::::2;::::0;6604:23:::2;::::0;::::2;::::0;6629:22:::2;::::0;::::2;::::0;6546:106:::2;::::0;;6106:25:13;;;6162:2;6147:18;;6140:34;;;;6190:18;;;6183:34;-1:-1:-1;;;;;6629:22:12::2;6248:2:13::0;6233:18;;6226:67;6558:7:12;;6546:106:::2;::::0;6093:3:13;6078:19;6546:106:12::2;;;;;;;5830:837;;2531:1:8::1;2542:20:::0;1857:1;3068:21;;2888:208;2542:20;5732:935:12;;:::o;10210:585::-;1531:13:0;:11;:13::i;:::-;10307:7:12::1;1904:1;1894:7;:11;:37;;;;-1:-1:-1::0;1919:5:12::1;:12:::0;1909:22;::::1;1894:37;1886:83;;;;-1:-1:-1::0;;;1886:83:12::1;;;;;;;:::i;:::-;10350:1:::2;10341:6;:10;10332:74;;;;-1:-1:-1::0;;;10332:74:12::2;;;;;;;:::i;:::-;10417:21;10441:5;10447:7;10441:14;;;;;;;;:::i;:::-;;;;;;;;;;;10417:38;;10500:6;10474:4;:22;;;:32;;10466:83;;;;-1:-1:-1::0;;;10466:83:12::2;;;;;;;:::i;:::-;10582:14;::::0;::::2;::::0;:29:::2;::::0;942:7:::2;::::0;-1:-1:-1;;;10582:14:12;::::2;-1:-1:-1::0;;;;;10582:14:12::2;:29;:::i;:::-;-1:-1:-1::0;;;;;10568:43:12::2;3392:15:::0;-1:-1:-1;;;;;10568:43:12::2;;;:69;;;-1:-1:-1::0;10615:17:12::2;::::0;::::2;::::0;:22;10568:69:::2;10560:78;;;;;;10649:18;::::0;::::2;::::0;:43:::2;::::0;-1:-1:-1;;;;;10649:18:12::2;10681:2:::0;10685:6;10649:31:::2;:43::i;:::-;10729:6;10703:4;:22;;;:32;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10751:36:12::2;::::0;3142:25:13;;;-1:-1:-1;;;;;10751:36:12;::::2;::::0;10767:7;;10751:36:::2;::::0;3130:2:13;3115:18;10751:36:12::2;;;;;;;10321:474;1554:1:0::1;10210:585:12::0;;;:::o;3203:102::-;3281:5;:12;3251:4;;3281:16;;3296:1;;3281:16;:::i;:::-;3274:23;;3203:102;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;4100:51:13::0;4073:18;;2672:31:0::1;3954:203:13::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;9792:410:12:-:0;2500:21:8;:19;:21::i;:::-;9875:7:12::1;1904:1;1894:7;:11;:37;;;;-1:-1:-1::0;1919:5:12::1;:12:::0;1909:22;::::1;1894:37;1886:83;;;;-1:-1:-1::0;;;1886:83:12::1;;;;;;;:::i;:::-;9919:1:::2;9910:6;:10;9901:74;;;;-1:-1:-1::0;;;9901:74:12::2;;;;;;;:::i;:::-;9986:21;10010:5;10016:7;10010:14;;;;;;;;:::i;:::-;;;;;;;;;;;9986:38;;10035:72;10071:12;735:10:6::0;;656:96;10071:12:12::2;10035:18;::::0;::::2;::::0;-1:-1:-1;;;;;10035:18:12::2;::::0;10093:4:::2;10100:6:::0;10035:35:::2;:72::i;:::-;10144:6;10118:4;:22;;;:32;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10166:28:12::2;::::0;3142:25:13;;;10178:7:12;;10166:28:::2;::::0;3130:2:13;3115:18;10166:28:12::2;;;;;;;9890:312;2531:1:8::1;2542:20:::0;1857:1;3068:21;;2888:208;6675:752:12;6772:4;6755:7;1904:1;1894:7;:11;:37;;;;-1:-1:-1;1919:5:12;:12;1909:22;;1894:37;1886:83;;;;-1:-1:-1;;;1886:83:12;;;;;;;:::i;:::-;-1:-1:-1;;;;;6828:12:12;::::1;6794:31;6828:12:::0;;;:6:::1;:12;::::0;;;;;;;:21;;;;;;;;6884:5:::1;:14:::0;;6828:21;;6794:31;6841:7;;6884:14;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;6935:22;::::0;::::1;::::0;6884:14;;-1:-1:-1;6926:70:12::1;::::0;-1:-1:-1;;;;;6935:22:12::1;6959:36;3392:15:::0;6968:10:::1;6980:14;::::0;::::1;::::0;-1:-1:-1;;;;;6959:36:12;;::::1;::::0;-1:-1:-1;;;6980:14:12;;::::1;;6959:8;:36::i;:::-;6926:8;:70::i;:::-;7033:23;::::0;::::1;::::0;7071:17:::1;::::0;::::1;::::0;6909:87;;-1:-1:-1;7033:23:12;7071:21;;;;:59:::1;;-1:-1:-1::0;7108:22:12::1;::::0;::::1;::::0;-1:-1:-1;;;;;7108:22:12::1;7096:34:::0;::::1;7071:59;7067:219;;;7257:17;::::0;::::1;::::0;7240:16:::1;::::0;::::1;::::0;7216:22:::1;::::0;::::1;::::0;7204:34:::1;::::0;-1:-1:-1;;;;;7216:22:12::1;7204:9:::0;:34:::1;:::i;:::-;7203:53;;;;:::i;:::-;:71;;;;:::i;:::-;7177:4;:23;;;:97;;;;:::i;:::-;7156:118;;7067:219;992:4;7376:10;:29;;;7355:18;:50;;;;:::i;:::-;7330:23:::0;;:76:::1;::::0;;::::1;:::i;:::-;:89;;;;:::i;:::-;7303:10;:24;;;:116;;;;:::i;2575:307:8:-:0;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:8;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;4817:907:12:-;4890:21;4914:5;4920:7;4914:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;4974:22;;;;4914:14;;-1:-1:-1;4965:70:12;;-1:-1:-1;;;;;4974:22:12;4998:36;3392:15;5007:10;3313:103;4965:70;4939:97;;5071:1;5051:4;:17;;;:21;:59;;;;-1:-1:-1;5088:22:12;;;;-1:-1:-1;;;;;5088:22:12;;;5076:34;;;;5051:59;5047:199;;;5217:17;;;;5200:16;;;;5176:22;;;;5164:34;;-1:-1:-1;;;;;5176:22:12;5164:9;:34;:::i;:::-;-1:-1:-1;;;;;5163:53:12;;;;;:::i;:::-;:71;;;;:::i;:::-;5136:4;:23;;;:98;;;;;;;:::i;:::-;;;;-1:-1:-1;;5047:199:12;5256:22;;;:34;;-1:-1:-1;;5256:34:12;-1:-1:-1;;;;;5256:34:12;;;;;-1:-1:-1;;;;;5306:18:12;;;5303:414;;-1:-1:-1;;;;;5384:12:12;;5350:31;5384:12;;;:6;:12;;;;;;;;:21;;;;;;;;5423:23;;:27;5420:216;;992:4;5563:10;:29;;;5537:4;:23;;;:55;;;;:::i;:::-;5512:23;;:81;;;;:::i;:::-;:94;;;;:::i;:::-;5484:10;:24;;;:122;;;;;;;:::i;:::-;;;;-1:-1:-1;;5420:216:12;5682:23;;;;5650:29;;;;:55;5303:414;4879:845;;4817:907;;:::o;1219:160:5:-;1328:43;;-1:-1:-1;;;;;10950:32:13;;;1328:43:5;;;10932:51:13;10999:18;;;10992:34;;;1301:71:5;;1321:5;;1343:14;;;;;10905:18:13;;1328:43:5;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1328:43:5;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;4100:51:13;4073:18;;1901:40:0;3954:203:13;5435:111:10;5493:7;5312:5;;;5527;;;5311:36;5306:42;;5519:20;5512:27;;5435:111;;;;;:::o;1618:188:5:-;1745:53;;-1:-1:-1;;;;;11257:32:13;;;1745:53:5;;;11239:51:13;11326:32;;;11306:18;;;11299:60;11375:18;;;11368:34;;;1718:81:5;;1738:5;;1760:18;;;;;11212::13;;1745:53:5;11037:371:13;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;5617:111:10:-;5675:7;5312:5;;;5709;;;5311:36;5306:42;;5701:20;5071:294;8370:720:5;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:5;8910:8;8866:16;;-1:-1:-1;8942:15:5;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:5;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:5;;-1:-1:-1;;;;;4118:32:13;;9033:40:5;;;4100:51:13;4073:18;;9033:40:5;3954:203:13;14:226;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:13;;14:226;-1:-1:-1;14:226:13:o;1359:173::-;1427:20;;-1:-1:-1;;;;;1476:31:13;;1466:42;;1456:70;;1522:1;1519;1512:12;1456:70;1359:173;;;:::o;1537:300::-;1605:6;1613;1666:2;1654:9;1645:7;1641:23;1637:32;1634:52;;;1682:1;1679;1672:12;1634:52;1705:29;1724:9;1705:29;:::i;:::-;1695:39;1803:2;1788:18;;;;1775:32;;-1:-1:-1;;;1537:300:13:o;2166:179::-;2233:20;;-1:-1:-1;;;;;2282:38:13;;2272:49;;2262:77;;2335:1;2332;2325:12;2350:641;2452:6;2460;2468;2476;2484;2492;2545:3;2533:9;2524:7;2520:23;2516:33;2513:53;;;2562:1;2559;2552:12;2513:53;2585:29;2604:9;2585:29;:::i;:::-;2575:39;;2633:38;2667:2;2656:9;2652:18;2633:38;:::i;:::-;2623:48;;2690:37;2723:2;2712:9;2708:18;2690:37;:::i;:::-;2680:47;;2746:37;2779:2;2768:9;2764:18;2746:37;:::i;:::-;2350:641;;;;-1:-1:-1;2350:641:13;;2852:3;2837:19;;2824:33;;2954:3;2939:19;;;2926:33;;-1:-1:-1;2350:641:13;-1:-1:-1;;2350:641:13:o;3178:346::-;3246:6;3254;3307:2;3295:9;3286:7;3282:23;3278:32;3275:52;;;3323:1;3320;3313:12;3275:52;-1:-1:-1;;3368:23:13;;;3488:2;3473:18;;;3460:32;;-1:-1:-1;3178:346:13:o;3529:420::-;3606:6;3614;3622;3675:2;3663:9;3654:7;3650:23;3646:32;3643:52;;;3691:1;3688;3681:12;3643:52;3736:23;;;-1:-1:-1;3802:38:13;3836:2;3821:18;;3802:38;:::i;:::-;3529:420;;3792:48;;-1:-1:-1;;;3913:2:13;3898:18;;;;3885:32;;3529:420::o;4162:186::-;4221:6;4274:2;4262:9;4253:7;4249:23;4245:32;4242:52;;;4290:1;4287;4280:12;4242:52;4313:29;4332:9;4313:29;:::i;4353:300::-;4421:6;4429;4482:2;4470:9;4461:7;4457:23;4453:32;4450:52;;;4498:1;4495;4488:12;4450:52;4543:23;;;-1:-1:-1;4609:38:13;4643:2;4628:18;;4609:38;:::i;:::-;4599:48;;4353:300;;;;;:::o;4658:397::-;4860:2;4842:21;;;4899:2;4879:18;;;4872:30;4938:34;4933:2;4918:18;;4911:62;-1:-1:-1;;;5004:2:13;4989:18;;4982:31;5045:3;5030:19;;4658:397::o;5060:127::-;5121:10;5116:3;5112:20;5109:1;5102:31;5152:4;5149:1;5142:15;5176:4;5173:1;5166:15;5192:415;5394:2;5376:21;;;5433:2;5413:18;;;5406:30;5472:34;5467:2;5452:18;;5445:62;-1:-1:-1;;;5538:2:13;5523:18;;5516:49;5597:3;5582:19;;5192:415::o;5612:127::-;5673:10;5668:3;5664:20;5661:1;5654:31;5704:4;5701:1;5694:15;5728:4;5725:1;5718:15;5744:128;5811:9;;;5832:11;;;5829:37;;;5846:18;;:::i;6706:402::-;6908:2;6890:21;;;6947:2;6927:18;;;6920:30;6986:34;6981:2;6966:18;;6959:62;-1:-1:-1;;;7052:2:13;7037:18;;7030:36;7098:3;7083:19;;6706:402::o;7962:218::-;-1:-1:-1;;;;;8068:34:13;;;8032;;;8028:75;;8115:36;;8112:62;;;8154:18;;:::i;8185:168::-;8258:9;;;8289;;8306:15;;;8300:22;;8286:37;8276:71;;8327:18;;:::i;8358:217::-;8398:1;8424;8414:132;;8468:10;8463:3;8459:20;8456:1;8449:31;8503:4;8500:1;8493:15;8531:4;8528:1;8521:15;8414:132;-1:-1:-1;8560:9:13;;8358:217::o;9989:125::-;10054:9;;;10075:10;;;10072:36;;;10088:18;;:::i;10119:414::-;10321:2;10303:21;;;10360:2;10340:18;;;10333:30;10399:34;10394:2;10379:18;;10372:62;-1:-1:-1;;;10465:2:13;10450:18;;10443:48;10523:3;10508:19;;10119:414::o;10538:215::-;-1:-1:-1;;;;;10606:34:13;;;10642;;;10602:75;;10689:35;;10686:61;;;10727:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1307600",
								"executionCost": "128235",
								"totalCost": "1435835"
							},
							"external": {
								"CLAIM_PERIOD()": "261",
								"SCALE_FACTOR()": "216",
								"addRewards(uint256,uint256)": "infinite",
								"claim(uint256)": "infinite",
								"createPool(address,address,uint96,uint96,uint256,uint256)": "infinite",
								"getPool(uint256)": "24269",
								"getPoolsCount()": "2483",
								"getUserRewards(uint256,address)": "infinite",
								"owner()": "2366",
								"renounceOwnership()": "infinite",
								"stake(uint256,uint256)": "infinite",
								"stakes(address,uint256)": "6928",
								"transferOwnership(address)": "28377",
								"withdrawRewards(uint256,address,uint256)": "infinite",
								"withdrawStake(uint256)": "infinite"
							},
							"internal": {
								"time_now()": "infinite",
								"updatePool(uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 358,
									"end": 10800,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 10800,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 358,
									"end": 10800,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2001,
									"end": 2412,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 2001,
									"end": 2412,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2001,
									"end": 2412,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2001,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2001,
									"end": 2412,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2001,
									"end": 2412,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2001,
									"end": 2412,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2001,
									"end": 2412,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2001,
									"end": 2412,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2001,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 735,
									"end": 745,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 160,
									"end": 211,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 133,
									"end": 151,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 133,
									"end": 151,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2065,
									"end": 2403,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2403,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2059,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP12",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "DUP13",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP8",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP7",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP8",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP9",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "PUSH",
									"source": 12,
									"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
								},
								{
									"begin": 2054,
									"end": 2404,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP13",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP12",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "DUP13",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP9",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "PUSH",
									"source": 12,
									"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF"
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "PUSH",
									"source": 12,
									"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0"
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "PUSH",
									"source": 12,
									"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD1"
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "PUSH",
									"source": 12,
									"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD2"
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "PUSH",
									"source": 12,
									"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD3"
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "PUSH",
									"source": 12,
									"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD4"
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2054,
									"end": 2404,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2404,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 358,
									"end": 10800,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 358,
									"end": 10800,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 217,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 14,
									"end": 217,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 358,
									"end": 10800,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 358,
									"end": 10800,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 358,
									"end": 10800,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 358,
									"end": 10800,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 10800,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 358,
									"end": 10800,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 10800,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202370d657e21c71e0e678798406608ab1b8a3eed29fa468d0bd13c5823d12374364736f6c634300081e0033",
									".code": [
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "7B0472F0"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "CE4B5BBE"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "CE4B5BBE"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "FC41AA09"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "FDEEF425"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "7B0472F0"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "7DB7E3BF"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "B4AC6860"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "379607F5"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "379607F5"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "584B62A1"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "5D9D2318"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "68BCD8D"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "21241DFE"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "25D5971F"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 10800,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 2420,
											"end": 3193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2420,
											"end": 3193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 628,
											"end": 660,
											"name": "SWAP11",
											"source": 13
										},
										{
											"begin": 628,
											"end": 660,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 628,
											"end": 660,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 610,
											"end": 661,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 610,
											"end": 661,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 697,
											"end": 729,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 697,
											"end": 729,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 697,
											"end": 729,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 697,
											"end": 729,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 692,
											"end": 694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 677,
											"end": 695,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 677,
											"end": 695,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 670,
											"end": 730,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 766,
											"end": 805,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 766,
											"end": 805,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 766,
											"end": 805,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 746,
											"end": 764,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 746,
											"end": 764,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 746,
											"end": 764,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 739,
											"end": 806,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 739,
											"end": 806,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 739,
											"end": 806,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 739,
											"end": 806,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 842,
											"end": 881,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 842,
											"end": 881,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 842,
											"end": 881,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 837,
											"end": 839,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 822,
											"end": 840,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 822,
											"end": 840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 815,
											"end": 882,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 913,
											"end": 916,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 898,
											"end": 917,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 898,
											"end": 917,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 891,
											"end": 926,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 891,
											"end": 926,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 891,
											"end": 926,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 891,
											"end": 926,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 648,
											"end": 651,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 942,
											"end": 961,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 935,
											"end": 970,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1004,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 979,
											"end": 1014,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1090,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1030,
											"end": 1049,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1023,
											"end": 1091,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1125,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1107,
											"end": 1126,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1107,
											"end": 1126,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1100,
											"end": 1135,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 597,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 582,
											"end": 601,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 904,
											"end": 949,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 904,
											"end": 949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 904,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 942,
											"end": 949,
											"name": "PUSH",
											"source": 12,
											"value": "34BC00"
										},
										{
											"begin": 904,
											"end": 949,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 904,
											"end": 949,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 904,
											"end": 949,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 904,
											"end": 949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 904,
											"end": 949,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 949,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1347,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1308,
											"end": 1347,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1308,
											"end": 1347,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1348,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1348,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1278,
											"end": 1280,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 904,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1146,
											"end": 1354,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 8839,
											"end": 9784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 8839,
											"end": 9784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 7435,
											"end": 8831,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 7435,
											"end": 8831,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7435,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 7435,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 7435,
											"end": 8831,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 7435,
											"end": 8831,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7435,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 7435,
											"end": 8831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7435,
											"end": 8831,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 7435,
											"end": 8831,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7435,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 7435,
											"end": 8831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1034,
											"end": 1099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2044,
											"end": 2069,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2044,
											"end": 2069,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2044,
											"end": 2069,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2100,
											"end": 2102,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2112,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2112,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2112,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2112,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2128,
											"end": 2146,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2128,
											"end": 2146,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2128,
											"end": 2146,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2121,
											"end": 2155,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1034,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1842,
											"end": 2161,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 3424,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 3424,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3130,
											"end": 3132,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2996,
											"end": 3173,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5732,
											"end": 6667,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 5732,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5732,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 5732,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 5732,
											"end": 6667,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5732,
											"end": 6667,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5732,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 5732,
											"end": 6667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5732,
											"end": 6667,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 5732,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5732,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 5732,
											"end": 6667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10210,
											"end": 10795,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 10210,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10210,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 10210,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 10210,
											"end": 10795,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 10210,
											"end": 10795,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10210,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 10210,
											"end": 10795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10210,
											"end": 10795,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 10210,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10210,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 10210,
											"end": 10795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 4151,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4100,
											"end": 4151,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3954,
											"end": 4157,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3203,
											"end": 3305,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 3203,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3203,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 3203,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3203,
											"end": 3305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 956,
											"end": 996,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 956,
											"end": 996,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 956,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 992,
											"end": 996,
											"name": "PUSH",
											"source": 12,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 956,
											"end": 996,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 956,
											"end": 996,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 9792,
											"end": 10202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 9792,
											"end": 10202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6675,
											"end": 7427,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 6675,
											"end": 7427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6675,
											"end": 7427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 6675,
											"end": 7427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 6675,
											"end": 7427,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6675,
											"end": 7427,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6675,
											"end": 7427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 6675,
											"end": 7427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6675,
											"end": 7427,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 6675,
											"end": 7427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6675,
											"end": 7427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 6675,
											"end": 7427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2507,
											"end": 2528,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2564,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2628,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2660,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2691,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2729,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2768,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2805,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2481,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1901,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1894,
											"end": 1931,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 1924,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1931,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1894,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1886,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2823,
											"end": 2844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2853,
											"end": 2860,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 2847,
											"end": 2861,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2823,
											"end": 2861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2823,
											"end": 2861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2906,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2888,
											"end": 2906,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2906,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2888,
											"end": 2906,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2930,
											"end": 2934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2930,
											"end": 2948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2930,
											"end": 2948,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2930,
											"end": 2948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2948,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2930,
											"end": 2948,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2930,
											"end": 2948,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2930,
											"end": 2948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2948,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2930,
											"end": 2948,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2930,
											"end": 2948,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 2948,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2968,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 2999,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2995,
											"end": 3009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 2995,
											"end": 3009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3009,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2995,
											"end": 3009,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3009,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2995,
											"end": 3009,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3024,
											"end": 3028,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3024,
											"end": 3041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3024,
											"end": 3041,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3024,
											"end": 3041,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3060,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3056,
											"end": 3072,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3072,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3087,
											"end": 3091,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3087,
											"end": 3110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3087,
											"end": 3110,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3087,
											"end": 3110,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3125,
											"end": 3129,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3125,
											"end": 3147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3125,
											"end": 3147,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3125,
											"end": 3147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3125,
											"end": 3147,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3125,
											"end": 3147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3125,
											"end": 3147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3125,
											"end": 3147,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3125,
											"end": 3147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3125,
											"end": 3147,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3125,
											"end": 3147,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3166,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3162,
											"end": 3184,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3184,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 3185,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 3193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8912,
											"end": 8919,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1905,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1931,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1886,
											"end": 1969,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 8970,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 8948,
											"end": 8955,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8937,
											"end": 8947,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 8937,
											"end": 8970,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 8970,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 8937,
											"end": 8970,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8981,
											"end": 9009,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9018,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 9012,
											"end": 9032,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9081,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9076,
											"end": 9090,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8981,
											"end": 9009,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9033,
											"end": 9040,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9033,
											"end": 9040,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 9076,
											"end": 9090,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 9076,
											"end": 9090,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 9076,
											"end": 9090,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 9076,
											"end": 9090,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9076,
											"end": 9090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9076,
											"end": 9090,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 9076,
											"end": 9090,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9123,
											"end": 9137,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9123,
											"end": 9137,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9123,
											"end": 9137,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9123,
											"end": 9137,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9109,
											"end": 9137,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9109,
											"end": 9137,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9109,
											"end": 9137,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9101,
											"end": 9193,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 9101,
											"end": 9193,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9101,
											"end": 9193,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9101,
											"end": 9193,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9101,
											"end": 9193,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9101,
											"end": 9193,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9101,
											"end": 9193,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9101,
											"end": 9193,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9101,
											"end": 9193,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9101,
											"end": 9193,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9101,
											"end": 9193,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 9101,
											"end": 9193,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9101,
											"end": 9193,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 9101,
											"end": 9193,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9218,
											"end": 9238,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9218,
											"end": 9238,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9218,
											"end": 9242,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9215,
											"end": 9775,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 9215,
											"end": 9775,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9335,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9312,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 9300,
											"end": 9312,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9314,
											"end": 9334,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9314,
											"end": 9334,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9268,
											"end": 9286,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9335,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 9268,
											"end": 9335,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9335,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 9268,
											"end": 9335,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9371,
											"end": 9391,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9371,
											"end": 9391,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9350,
											"end": 9367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9350,
											"end": 9367,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9350,
											"end": 9367,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9350,
											"end": 9391,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9350,
											"end": 9391,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9371,
											"end": 9391,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9371,
											"end": 9391,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9350,
											"end": 9391,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 9350,
											"end": 9391,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9371,
											"end": 9391,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9371,
											"end": 9391,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9350,
											"end": 9391,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 9350,
											"end": 9391,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9350,
											"end": 9391,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 9350,
											"end": 9391,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9350,
											"end": 9391,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9350,
											"end": 9391,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9350,
											"end": 9391,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9449,
											"end": 9469,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9449,
											"end": 9469,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9411,
											"end": 9470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9411,
											"end": 9470,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9426,
											"end": 9433,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9426,
											"end": 9433,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9411,
											"end": 9470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "459D5AEF2C549903C1EEB1736F5728845D5CCF82537DDD5BF8035795EEE89263"
										},
										{
											"begin": 9411,
											"end": 9470,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3132,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9411,
											"end": 9470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9411,
											"end": 9470,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9411,
											"end": 9470,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9411,
											"end": 9470,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9411,
											"end": 9470,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9411,
											"end": 9470,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9411,
											"end": 9470,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 9508,
											"end": 9509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9485,
											"end": 9509,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9485,
											"end": 9509,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9551,
											"end": 9563,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 9551,
											"end": 9563,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9542,
											"end": 9549,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8FE70E917AD578CBB5B0779AA52EE3F23AFA39C5295542125059F2A4E98CBBFE"
										},
										{
											"begin": 9565,
											"end": 9572,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9565,
											"end": 9585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9565,
											"end": 9585,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9565,
											"end": 9585,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9587,
											"end": 9594,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9587,
											"end": 9608,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9587,
											"end": 9608,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9587,
											"end": 9608,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9610,
											"end": 9617,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9610,
											"end": 9636,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9610,
											"end": 9636,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9610,
											"end": 9636,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2044,
											"end": 2069,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2044,
											"end": 2069,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2044,
											"end": 2069,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2100,
											"end": 2102,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2112,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2112,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2112,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2112,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2145,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2146,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2128,
											"end": 2146,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2121,
											"end": 2155,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1842,
											"end": 2161,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9637,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 9678,
											"end": 9695,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9678,
											"end": 9695,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9678,
											"end": 9695,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9678,
											"end": 9695,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9697,
											"end": 9713,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 9697,
											"end": 9713,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9697,
											"end": 9713,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9697,
											"end": 9713,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9715,
											"end": 9738,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9715,
											"end": 9738,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9715,
											"end": 9738,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9715,
											"end": 9738,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9740,
											"end": 9762,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 9740,
											"end": 9762,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9740,
											"end": 9762,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9740,
											"end": 9762,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9657,
											"end": 9763,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9657,
											"end": 9763,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9657,
											"end": 9763,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6106,
											"end": 6131,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6106,
											"end": 6131,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6106,
											"end": 6131,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6162,
											"end": 6164,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6165,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6147,
											"end": 6165,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6174,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6174,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6174,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6190,
											"end": 6208,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6190,
											"end": 6208,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6190,
											"end": 6208,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6183,
											"end": 6217,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9740,
											"end": 9762,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6248,
											"end": 6250,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6233,
											"end": 6251,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6233,
											"end": 6251,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6226,
											"end": 6293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9669,
											"end": 9676,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9669,
											"end": 9676,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9657,
											"end": 9763,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "E9D4CED29DFD1B7392AA77B7EA3220D8318A5A65CD900F4E40E9D816D11D84F2"
										},
										{
											"begin": 9657,
											"end": 9763,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6093,
											"end": 6096,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6078,
											"end": 6097,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9657,
											"end": 9763,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9657,
											"end": 9763,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9657,
											"end": 9763,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9657,
											"end": 9763,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9657,
											"end": 9763,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9657,
											"end": 9763,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9657,
											"end": 9763,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 9215,
											"end": 9775,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 9215,
											"end": 9775,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8926,
											"end": 9784,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8926,
											"end": 9784,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8839,
											"end": 9784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8839,
											"end": 9784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7435,
											"end": 8831,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 7435,
											"end": 8831,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7500,
											"end": 7507,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1905,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1931,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1886,
											"end": 1969,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7558,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 7536,
											"end": 7543,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8937,
											"end": 8947,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 8937,
											"end": 8970,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7558,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 7525,
											"end": 7558,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7597,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7600,
											"end": 7620,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7620,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7620,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7606,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7600,
											"end": 7620,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7600,
											"end": 7620,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7620,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7620,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7620,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7600,
											"end": 7620,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7620,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7620,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7629,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7629,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7629,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7629,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7629,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7629,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7629,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7629,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7669,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7664,
											"end": 7678,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7629,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7629,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7597,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7621,
											"end": 7628,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7621,
											"end": 7628,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 7664,
											"end": 7678,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 7664,
											"end": 7678,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 7664,
											"end": 7678,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 7664,
											"end": 7678,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7664,
											"end": 7678,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7664,
											"end": 7678,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 7664,
											"end": 7678,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7711,
											"end": 7725,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7711,
											"end": 7725,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7711,
											"end": 7725,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7711,
											"end": 7725,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7678,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7711,
											"end": 7725,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7711,
											"end": 7725,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7711,
											"end": 7725,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7697,
											"end": 7725,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7697,
											"end": 7725,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7697,
											"end": 7725,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7781,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 7689,
											"end": 7781,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7781,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7689,
											"end": 7781,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7689,
											"end": 7781,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7781,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7781,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7689,
											"end": 7781,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7781,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7689,
											"end": 7781,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7781,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 7689,
											"end": 7781,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7781,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 7689,
											"end": 7781,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7825,
											"end": 7826,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7801,
											"end": 7808,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7801,
											"end": 7822,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7801,
											"end": 7822,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7801,
											"end": 7822,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7801,
											"end": 7826,
											"modifierDepth": 2,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7793,
											"end": 7864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 7793,
											"end": 7864,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7793,
											"end": 7864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7864,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7864,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7793,
											"end": 7864,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6506,
											"end": 6508,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7864,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7793,
											"end": 7864,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6488,
											"end": 6509,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 6547,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 6525,
											"end": 6543,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6525,
											"end": 6543,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6525,
											"end": 6543,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 6548,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6584,
											"end": 6618,
											"name": "PUSH",
											"source": 13,
											"value": "4D61726B6574696E675374616B696E673A4E6F7468696E6720746F20636C6169"
										},
										{
											"begin": 6564,
											"end": 6582,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6564,
											"end": 6582,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6564,
											"end": 6582,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6557,
											"end": 6619,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6635,
											"end": 6653,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6635,
											"end": 6653,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6635,
											"end": 6653,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6659,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 6695,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 6676,
											"end": 6695,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7793,
											"end": 7864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6304,
											"end": 6701,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7793,
											"end": 7864,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 7793,
											"end": 7864,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7916,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7930,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7909,
											"end": 7930,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7930,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 7887,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 7905,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 7883,
											"end": 7905,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 7905,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 7930,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 7930,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7875,
											"end": 7973,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 7875,
											"end": 7973,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7875,
											"end": 7973,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7875,
											"end": 7973,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7875,
											"end": 7973,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7875,
											"end": 7973,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7875,
											"end": 7973,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7875,
											"end": 7973,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7875,
											"end": 7973,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7875,
											"end": 7973,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7875,
											"end": 7973,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 7875,
											"end": 7973,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7875,
											"end": 7973,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 7875,
											"end": 7973,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7987,
											"end": 8007,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7987,
											"end": 8007,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7987,
											"end": 8011,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7984,
											"end": 8290,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 7984,
											"end": 8290,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8037,
											"end": 8104,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8069,
											"end": 8081,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8037,
											"end": 8104,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 8037,
											"end": 8104,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8140,
											"end": 8160,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8140,
											"end": 8160,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8119,
											"end": 8136,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8119,
											"end": 8136,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8119,
											"end": 8136,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8119,
											"end": 8160,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8119,
											"end": 8160,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8140,
											"end": 8160,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8140,
											"end": 8160,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8119,
											"end": 8160,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 8119,
											"end": 8160,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8140,
											"end": 8160,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8140,
											"end": 8160,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8119,
											"end": 8160,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 8119,
											"end": 8160,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8119,
											"end": 8160,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 8119,
											"end": 8160,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8119,
											"end": 8160,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8119,
											"end": 8160,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8119,
											"end": 8160,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8218,
											"end": 8238,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8218,
											"end": 8238,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8180,
											"end": 8239,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8180,
											"end": 8239,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8195,
											"end": 8202,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8195,
											"end": 8202,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8180,
											"end": 8239,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "459D5AEF2C549903C1EEB1736F5728845D5CCF82537DDD5BF8035795EEE89263"
										},
										{
											"begin": 8180,
											"end": 8239,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3132,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8180,
											"end": 8239,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8180,
											"end": 8239,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8180,
											"end": 8239,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8180,
											"end": 8239,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8180,
											"end": 8239,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8180,
											"end": 8239,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8180,
											"end": 8239,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 8277,
											"end": 8278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8254,
											"end": 8278,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8254,
											"end": 8278,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 7984,
											"end": 8290,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 7984,
											"end": 8290,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8370,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8348,
											"end": 8369,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8348,
											"end": 8369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8348,
											"end": 8369,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8348,
											"end": 8369,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8348,
											"end": 8369,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8320,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8320,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8320,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8320,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8302,
											"end": 8320,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8320,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8370,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8333,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 8302,
											"end": 8370,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8370,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 8302,
											"end": 8370,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8407,
											"end": 8414,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8407,
											"end": 8428,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8407,
											"end": 8428,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8407,
											"end": 8428,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8381,
											"end": 8385,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8381,
											"end": 8403,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 8381,
											"end": 8403,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8381,
											"end": 8403,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8381,
											"end": 8428,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8381,
											"end": 8428,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8381,
											"end": 8428,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8381,
											"end": 8428,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 8381,
											"end": 8428,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8381,
											"end": 8428,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8381,
											"end": 8428,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 8381,
											"end": 8428,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8381,
											"end": 8428,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 8381,
											"end": 8428,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8381,
											"end": 8428,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8381,
											"end": 8428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8381,
											"end": 8428,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8478,
											"end": 8499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8478,
											"end": 8499,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8478,
											"end": 8499,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8478,
											"end": 8499,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8444,
											"end": 8500,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8444,
											"end": 8500,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8455,
											"end": 8462,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8455,
											"end": 8462,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8444,
											"end": 8500,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4492FAB062412E7E4E5F46C9E919F1640652946A5E163AD6E6C1C03D87954D2"
										},
										{
											"begin": 8444,
											"end": 8500,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3132,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8500,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8444,
											"end": 8500,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8444,
											"end": 8500,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8444,
											"end": 8500,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8444,
											"end": 8500,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8444,
											"end": 8500,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8444,
											"end": 8500,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 8535,
											"end": 8536,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8511,
											"end": 8532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8511,
											"end": 8532,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8511,
											"end": 8532,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8511,
											"end": 8536,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8511,
											"end": 8536,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8511,
											"end": 8536,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8547,
											"end": 8573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8547,
											"end": 8573,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8547,
											"end": 8573,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8547,
											"end": 8577,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8615,
											"end": 8627,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3604,
											"end": 3608,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3634,
											"end": 3656,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3656,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3634,
											"end": 3656,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3656,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3626,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 3626,
											"end": 3717,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3626,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3626,
											"end": 3717,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3626,
											"end": 3717,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3626,
											"end": 3717,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7315,
											"end": 7317,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3626,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3626,
											"end": 3717,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3626,
											"end": 3717,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7297,
											"end": 7318,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7354,
											"end": 7356,
											"name": "PUSH",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 7334,
											"end": 7352,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7334,
											"end": 7352,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7334,
											"end": 7352,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7327,
											"end": 7357,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7393,
											"end": 7427,
											"name": "PUSH",
											"source": 13,
											"value": "4D61726B6574696E675374616B696E673A456E642074696D65206D7573742062"
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7366,
											"end": 7428,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7464,
											"end": 7490,
											"name": "PUSH",
											"source": 13,
											"value": "652067726561746572207468616E2074696D655F6E6F77210000000000000000"
										},
										{
											"begin": 7444,
											"end": 7462,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7444,
											"end": 7462,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7462,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7437,
											"end": 7491,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7508,
											"end": 7527,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 7508,
											"end": 7527,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3626,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7113,
											"end": 7533,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3626,
											"end": 3717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 3626,
											"end": 3717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3782,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3749,
											"end": 3782,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3782,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3749,
											"end": 3782,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3757,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 3749,
											"end": 3782,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3782,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 3749,
											"end": 3782,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3728,
											"end": 3783,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3728,
											"end": 3783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3816,
											"end": 3825,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3802,
											"end": 3825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3813,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3802,
											"end": 3825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3825,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3794,
											"end": 3885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 3794,
											"end": 3885,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3794,
											"end": 3885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3794,
											"end": 3885,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3794,
											"end": 3885,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3794,
											"end": 3885,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7740,
											"end": 7742,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3794,
											"end": 3885,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3794,
											"end": 3885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7722,
											"end": 7743,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7779,
											"end": 7781,
											"name": "PUSH",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 7759,
											"end": 7777,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7759,
											"end": 7777,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7777,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7752,
											"end": 7782,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7818,
											"end": 7852,
											"name": "PUSH",
											"source": 13,
											"value": "4D61726B6574696E675374616B696E673A53746172742074696D65206D757374"
										},
										{
											"begin": 7798,
											"end": 7816,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7798,
											"end": 7816,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7816,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 7853,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7889,
											"end": 7914,
											"name": "PUSH",
											"source": 13,
											"value": "206265206C657373207468616E20656E642074696D6521000000000000000000"
										},
										{
											"begin": 7869,
											"end": 7887,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7869,
											"end": 7887,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7869,
											"end": 7887,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7862,
											"end": 7915,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7932,
											"end": 7951,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 7932,
											"end": 7951,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 3885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7538,
											"end": 7957,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 3885,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 3794,
											"end": 3885,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 3960,
											"end": 3971,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3948,
											"end": 3957,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3948,
											"end": 3971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 3948,
											"end": 3971,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3948,
											"end": 3971,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 3948,
											"end": 3971,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3920,
											"end": 3972,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3920,
											"end": 3946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 3933,
											"end": 3946,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 992,
											"end": 996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 3920,
											"end": 3946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 3920,
											"end": 3946,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3920,
											"end": 3946,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 3920,
											"end": 3946,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3920,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 3920,
											"end": 3972,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3920,
											"end": 3972,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3920,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 3920,
											"end": 3972,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3920,
											"end": 3972,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 3920,
											"end": 3972,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP16",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP13",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "PUSH",
											"source": 12,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP13",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "PUSH",
											"source": 12,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF"
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "PUSH",
											"source": 12,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0"
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "PUSH",
											"source": 12,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD1"
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "PUSH",
											"source": 12,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD2"
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "PUSH",
											"source": 12,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD3"
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "PUSH",
											"source": 12,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD4"
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4424,
											"end": 4436,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4397,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4424,
											"end": 4440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 4424,
											"end": 4440,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4424,
											"end": 4440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 4424,
											"end": 4440,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4424,
											"end": 4440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 4424,
											"end": 4440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4456,
											"end": 4544,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4544,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8853,
											"end": 8885,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 8853,
											"end": 8885,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8853,
											"end": 8885,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8835,
											"end": 8886,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8835,
											"end": 8886,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8922,
											"end": 8954,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 8922,
											"end": 8954,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8917,
											"end": 8919,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8902,
											"end": 8920,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8902,
											"end": 8920,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8895,
											"end": 8955,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8991,
											"end": 9030,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 8991,
											"end": 9030,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8991,
											"end": 9030,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8971,
											"end": 8989,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8971,
											"end": 8989,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8971,
											"end": 8989,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8964,
											"end": 9031,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9067,
											"end": 9106,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 9067,
											"end": 9106,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9062,
											"end": 9064,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9040,
											"end": 9107,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 992,
											"end": 996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 9138,
											"end": 9141,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9123,
											"end": 9142,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9123,
											"end": 9142,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9116,
											"end": 9151,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4544,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4409,
											"end": 4440,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4409,
											"end": 4440,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4409,
											"end": 4440,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4409,
											"end": 4440,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7C89FF64FFBFC8006A5F9EF85541E2FC4F990A7906BA4920928FFD9C9B7B3A95"
										},
										{
											"begin": 4456,
											"end": 4544,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4544,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4544,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8822,
											"end": 8825,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 4456,
											"end": 4544,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4544,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4584,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4584,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4777,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 4555,
											"end": 4777,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4610,
											"end": 4701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4648,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4610,
											"end": 4648,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4671,
											"end": 4675,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 4678,
											"end": 4700,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4610,
											"end": 4648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 4610,
											"end": 4701,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4610,
											"end": 4701,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 4610,
											"end": 4701,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4733,
											"end": 4740,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6C07EE05DCF262F13ABF9D87B846EE789D2F90FE991D495ACD7D7FC109EE1F55"
										},
										{
											"begin": 4742,
											"end": 4764,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3130,
											"end": 3132,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2996,
											"end": 3173,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4777,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 4555,
											"end": 4777,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4794,
											"end": 4801,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 4809,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3424,
											"end": 4809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5732,
											"end": 6667,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 5732,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 5823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1905,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1931,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1886,
											"end": 1969,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5841,
											"end": 5862,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5865,
											"end": 5870,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5871,
											"end": 5878,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 5865,
											"end": 5879,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 5865,
											"end": 5879,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 5865,
											"end": 5879,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 5865,
											"end": 5879,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5912,
											"end": 5928,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5912,
											"end": 5928,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5912,
											"end": 5928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5912,
											"end": 5928,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5912,
											"end": 5928,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5898,
											"end": 5928,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5898,
											"end": 5928,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5898,
											"end": 5928,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5898,
											"end": 5959,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5898,
											"end": 5959,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5898,
											"end": 5959,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 5898,
											"end": 5959,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5945,
											"end": 5959,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5945,
											"end": 5959,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5945,
											"end": 5959,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5945,
											"end": 5959,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5945,
											"end": 5959,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5945,
											"end": 5959,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5945,
											"end": 5959,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5932,
											"end": 5959,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5932,
											"end": 5959,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5898,
											"end": 5959,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 5898,
											"end": 5959,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5890,
											"end": 6000,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 5890,
											"end": 6000,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5890,
											"end": 6000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5890,
											"end": 6000,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5890,
											"end": 6000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5890,
											"end": 6000,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9364,
											"end": 9366,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5890,
											"end": 6000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5890,
											"end": 6000,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5890,
											"end": 6000,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9346,
											"end": 9367,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9403,
											"end": 9405,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9376,
											"end": 9406,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9442,
											"end": 9476,
											"name": "PUSH",
											"source": 13,
											"value": "4D61726B6574696E675374616B696E673A506F6F6C206973206E6F7420616374"
										},
										{
											"begin": 9422,
											"end": 9440,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9422,
											"end": 9440,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9422,
											"end": 9440,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9415,
											"end": 9477,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69766521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9486,
											"end": 9520,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9537,
											"end": 9556,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 9537,
											"end": 9556,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5890,
											"end": 6000,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9162,
											"end": 9562,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5890,
											"end": 6000,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 5890,
											"end": 6000,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6034,
											"end": 6035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6031,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6019,
											"end": 6035,
											"modifierDepth": 2,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6011,
											"end": 6093,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 6011,
											"end": 6093,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6011,
											"end": 6093,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6011,
											"end": 6093,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6011,
											"end": 6093,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6011,
											"end": 6093,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9769,
											"end": 9771,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6011,
											"end": 6093,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6011,
											"end": 6093,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6011,
											"end": 6093,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9751,
											"end": 9772,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9808,
											"end": 9810,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9781,
											"end": 9811,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9847,
											"end": 9881,
											"name": "PUSH",
											"source": 13,
											"value": "4D61726B6574696E675374616B696E673A7374616B655F616D6F756E74206D75"
										},
										{
											"begin": 9827,
											"end": 9845,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9827,
											"end": 9845,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9827,
											"end": 9845,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9820,
											"end": 9882,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73742062652067726561746572207468616E203021"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9898,
											"end": 9916,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9898,
											"end": 9916,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9898,
											"end": 9916,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9891,
											"end": 9942,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9959,
											"end": 9978,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 9959,
											"end": 9978,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6011,
											"end": 6093,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9567,
											"end": 9984,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6011,
											"end": 6093,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 6011,
											"end": 6093,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6106,
											"end": 6184,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6106,
											"end": 6124,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6164,
											"end": 6168,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 6171,
											"end": 6183,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6106,
											"end": 6141,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 6106,
											"end": 6184,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6106,
											"end": 6184,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 6106,
											"end": 6184,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6196,
											"end": 6229,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 6207,
											"end": 6214,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8937,
											"end": 8947,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 8937,
											"end": 8970,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6196,
											"end": 6229,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 6196,
											"end": 6229,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6240,
											"end": 6271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6294,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6294,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6294,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6280,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6274,
											"end": 6294,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6274,
											"end": 6294,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6294,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6294,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6294,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6274,
											"end": 6294,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6294,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6294,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6303,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6303,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6303,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6303,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6303,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6303,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6303,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6303,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6353,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6353,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6303,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6303,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6341,
											"end": 6353,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6341,
											"end": 6353,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6303,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6303,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6240,
											"end": 6271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6353,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 6314,
											"end": 6353,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6341,
											"end": 6353,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6341,
											"end": 6353,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6353,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 6314,
											"end": 6353,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6353,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 6314,
											"end": 6353,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6353,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6353,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6353,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6353,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6353,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6353,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6353,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6385,
											"end": 6397,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6368,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6381,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6364,
											"end": 6381,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6381,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6364,
											"end": 6397,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6397,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6397,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6397,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 6364,
											"end": 6397,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6397,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6397,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 6364,
											"end": 6397,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6397,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 6364,
											"end": 6397,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6397,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6397,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6364,
											"end": 6397,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6449,
											"end": 6472,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6449,
											"end": 6472,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6474,
											"end": 6498,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6474,
											"end": 6498,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6474,
											"end": 6498,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6474,
											"end": 6498,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6500,
											"end": 6529,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6500,
											"end": 6529,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6500,
											"end": 6529,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6500,
											"end": 6529,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6530,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6413,
											"end": 6530,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6530,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2044,
											"end": 2069,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2044,
											"end": 2069,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2044,
											"end": 2069,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2100,
											"end": 2102,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2112,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2112,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2112,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2112,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2128,
											"end": 2146,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2128,
											"end": 2146,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2128,
											"end": 2146,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2121,
											"end": 2155,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6530,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6426,
											"end": 6433,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6426,
											"end": 6433,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6530,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8FE70E917AD578CBB5B0779AA52EE3F23AFA39C5295542125059F2A4E98CBBFE"
										},
										{
											"begin": 6413,
											"end": 6530,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6530,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6530,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6530,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6413,
											"end": 6530,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6530,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6530,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 6567,
											"end": 6584,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6567,
											"end": 6584,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6567,
											"end": 6584,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6567,
											"end": 6584,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6586,
											"end": 6602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6586,
											"end": 6602,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6586,
											"end": 6602,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6586,
											"end": 6602,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6604,
											"end": 6627,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6604,
											"end": 6627,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6604,
											"end": 6627,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6604,
											"end": 6627,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6629,
											"end": 6651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 6629,
											"end": 6651,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6629,
											"end": 6651,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6629,
											"end": 6651,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6546,
											"end": 6652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6546,
											"end": 6652,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6546,
											"end": 6652,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6106,
											"end": 6131,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6106,
											"end": 6131,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6106,
											"end": 6131,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6162,
											"end": 6164,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6165,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6147,
											"end": 6165,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6174,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6174,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6174,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6190,
											"end": 6208,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6190,
											"end": 6208,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6190,
											"end": 6208,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6183,
											"end": 6217,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6629,
											"end": 6651,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6248,
											"end": 6250,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6233,
											"end": 6251,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6233,
											"end": 6251,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6226,
											"end": 6293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 6565,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6558,
											"end": 6565,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6546,
											"end": 6652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "E9D4CED29DFD1B7392AA77B7EA3220D8318A5A65CD900F4E40E9D816D11D84F2"
										},
										{
											"begin": 6546,
											"end": 6652,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6093,
											"end": 6096,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6078,
											"end": 6097,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6546,
											"end": 6652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6546,
											"end": 6652,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6546,
											"end": 6652,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6546,
											"end": 6652,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6546,
											"end": 6652,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6546,
											"end": 6652,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6546,
											"end": 6652,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 5830,
											"end": 6667,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5830,
											"end": 6667,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 6667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5732,
											"end": 6667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5732,
											"end": 6667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10210,
											"end": 10795,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 10210,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10307,
											"end": 10314,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1905,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1931,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1886,
											"end": 1969,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10350,
											"end": 10351,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10341,
											"end": 10347,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10341,
											"end": 10351,
											"modifierDepth": 2,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10332,
											"end": 10406,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 10332,
											"end": 10406,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10332,
											"end": 10406,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10332,
											"end": 10406,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10332,
											"end": 10406,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10332,
											"end": 10406,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10332,
											"end": 10406,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10332,
											"end": 10406,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10332,
											"end": 10406,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10332,
											"end": 10406,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10332,
											"end": 10406,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 10332,
											"end": 10406,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10332,
											"end": 10406,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 10332,
											"end": 10406,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10438,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10441,
											"end": 10446,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10447,
											"end": 10454,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 10441,
											"end": 10455,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10455,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10455,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10455,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10500,
											"end": 10506,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10474,
											"end": 10478,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10474,
											"end": 10496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 10474,
											"end": 10496,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10474,
											"end": 10496,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10474,
											"end": 10506,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10474,
											"end": 10506,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10466,
											"end": 10549,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 10466,
											"end": 10549,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10466,
											"end": 10549,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10466,
											"end": 10549,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10466,
											"end": 10549,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10466,
											"end": 10549,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10466,
											"end": 10549,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10466,
											"end": 10549,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10466,
											"end": 10549,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10466,
											"end": 10549,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10466,
											"end": 10549,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 10466,
											"end": 10549,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10466,
											"end": 10549,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 10466,
											"end": 10549,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10582,
											"end": 10596,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10582,
											"end": 10596,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10582,
											"end": 10596,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10582,
											"end": 10596,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10582,
											"end": 10611,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 10582,
											"end": 10611,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 942,
											"end": 949,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "34BC00"
										},
										{
											"begin": 942,
											"end": 949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10582,
											"end": 10596,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10582,
											"end": 10596,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10582,
											"end": 10596,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10582,
											"end": 10611,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 10582,
											"end": 10611,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10582,
											"end": 10611,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 10582,
											"end": 10611,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10568,
											"end": 10611,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10568,
											"end": 10611,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10568,
											"end": 10611,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10568,
											"end": 10611,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10568,
											"end": 10637,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10568,
											"end": 10637,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 10568,
											"end": 10637,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10615,
											"end": 10632,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10615,
											"end": 10632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10632,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10632,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10637,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10568,
											"end": 10637,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 10568,
											"end": 10637,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10560,
											"end": 10638,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 10560,
											"end": 10638,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10560,
											"end": 10638,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10560,
											"end": 10638,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10560,
											"end": 10638,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10560,
											"end": 10638,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 10560,
											"end": 10638,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10649,
											"end": 10667,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10649,
											"end": 10667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10649,
											"end": 10667,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10649,
											"end": 10667,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10649,
											"end": 10692,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 10649,
											"end": 10692,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10649,
											"end": 10667,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10681,
											"end": 10683,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10685,
											"end": 10691,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10649,
											"end": 10680,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 10649,
											"end": 10692,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10649,
											"end": 10692,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 10649,
											"end": 10692,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10729,
											"end": 10735,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10703,
											"end": 10707,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10703,
											"end": 10725,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 10703,
											"end": 10725,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10703,
											"end": 10725,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10703,
											"end": 10735,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10703,
											"end": 10735,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10703,
											"end": 10735,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10703,
											"end": 10735,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 10703,
											"end": 10735,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10703,
											"end": 10735,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10703,
											"end": 10735,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 10703,
											"end": 10735,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10703,
											"end": 10735,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 10703,
											"end": 10735,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10703,
											"end": 10735,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10703,
											"end": 10735,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10703,
											"end": 10735,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10751,
											"end": 10787,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10751,
											"end": 10787,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10751,
											"end": 10787,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 10787,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 10787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10767,
											"end": 10774,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10767,
											"end": 10774,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 10787,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B886382D42263E3C08A157DD29A33C435741F36625DBC3ACB6FB8C19BBF78247"
										},
										{
											"begin": 10751,
											"end": 10787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3132,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10751,
											"end": 10787,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10751,
											"end": 10787,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 10787,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 10787,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 10787,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 10787,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 10787,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 10321,
											"end": 10795,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10210,
											"end": 10795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10210,
											"end": 10795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10210,
											"end": 10795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10210,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3203,
											"end": 3305,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3203,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3281,
											"end": 3286,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3281,
											"end": 3293,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3251,
											"end": 3255,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3255,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3297,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3296,
											"end": 3297,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 3281,
											"end": 3297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 3281,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3297,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3274,
											"end": 3297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3203,
											"end": 3305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3203,
											"end": 3305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 4151,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3954,
											"end": 4157,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9875,
											"end": 9882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1905,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1931,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1894,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1886,
											"end": 1969,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 1886,
											"end": 1969,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9919,
											"end": 9920,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9916,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9910,
											"end": 9920,
											"modifierDepth": 2,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9901,
											"end": 9975,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 9901,
											"end": 9975,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9901,
											"end": 9975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9901,
											"end": 9975,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9901,
											"end": 9975,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9901,
											"end": 9975,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9901,
											"end": 9975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9901,
											"end": 9975,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9901,
											"end": 9975,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9901,
											"end": 9975,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9901,
											"end": 9975,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 9901,
											"end": 9975,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9901,
											"end": 9975,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 9901,
											"end": 9975,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9986,
											"end": 10007,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10010,
											"end": 10015,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10016,
											"end": 10023,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 10010,
											"end": 10024,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10024,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9986,
											"end": 10024,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9986,
											"end": 10024,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10035,
											"end": 10107,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 10071,
											"end": 10083,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10071,
											"end": 10083,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 10071,
											"end": 10083,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10035,
											"end": 10053,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10035,
											"end": 10053,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10035,
											"end": 10053,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10035,
											"end": 10053,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10035,
											"end": 10053,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10035,
											"end": 10053,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10093,
											"end": 10097,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 10100,
											"end": 10106,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10035,
											"end": 10070,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 10035,
											"end": 10107,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10035,
											"end": 10107,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 10035,
											"end": 10107,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10144,
											"end": 10150,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10122,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 10118,
											"end": 10140,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10150,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10150,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10150,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10150,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 10118,
											"end": 10150,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10150,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10150,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 10118,
											"end": 10150,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10150,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 10118,
											"end": 10150,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10150,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10150,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10150,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10166,
											"end": 10194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10166,
											"end": 10194,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3167,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10178,
											"end": 10185,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10178,
											"end": 10185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10166,
											"end": 10194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "6C07EE05DCF262F13ABF9D87B846EE789D2F90FE991D495ACD7D7FC109EE1F55"
										},
										{
											"begin": 10166,
											"end": 10194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3132,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10166,
											"end": 10194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10166,
											"end": 10194,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10166,
											"end": 10194,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10166,
											"end": 10194,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10166,
											"end": 10194,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10166,
											"end": 10194,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10166,
											"end": 10194,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 9890,
											"end": 10202,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 7427,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 6675,
											"end": 7427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6772,
											"end": 6776,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 6762,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1901,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 1894,
											"end": 1931,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 1924,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1931,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1931,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 1894,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1886,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 1886,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6828,
											"end": 6840,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6794,
											"end": 6825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6840,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6840,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6840,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6828,
											"end": 6840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6828,
											"end": 6840,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6840,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6840,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6840,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6828,
											"end": 6840,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6840,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6840,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6849,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6849,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6849,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6849,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6849,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6849,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6849,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6849,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6849,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6849,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6794,
											"end": 6825,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6841,
											"end": 6848,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6841,
											"end": 6848,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 6884,
											"end": 6898,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 6884,
											"end": 6898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 6884,
											"end": 6898,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 6884,
											"end": 6898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6935,
											"end": 6957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 6935,
											"end": 6957,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6935,
											"end": 6957,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6935,
											"end": 6957,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6926,
											"end": 6996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 6926,
											"end": 6996,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6935,
											"end": 6957,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6959,
											"end": 6995,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 6968,
											"end": 6978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 6968,
											"end": 6978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6980,
											"end": 6994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6980,
											"end": 6994,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6980,
											"end": 6994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6980,
											"end": 6994,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6959,
											"end": 6995,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6959,
											"end": 6995,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6959,
											"end": 6995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6959,
											"end": 6995,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6980,
											"end": 6994,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6980,
											"end": 6994,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6980,
											"end": 6994,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 6980,
											"end": 6994,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6959,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 6959,
											"end": 6995,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6959,
											"end": 6995,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 6959,
											"end": 6995,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6926,
											"end": 6934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 6926,
											"end": 6996,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6926,
											"end": 6996,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 6926,
											"end": 6996,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7033,
											"end": 7056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7033,
											"end": 7056,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7033,
											"end": 7056,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7033,
											"end": 7056,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7071,
											"end": 7088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7071,
											"end": 7088,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7071,
											"end": 7088,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7071,
											"end": 7088,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6909,
											"end": 6996,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6909,
											"end": 6996,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7033,
											"end": 7056,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7071,
											"end": 7092,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7071,
											"end": 7092,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7071,
											"end": 7092,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7071,
											"end": 7092,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7071,
											"end": 7130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 7071,
											"end": 7130,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7108,
											"end": 7130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 7108,
											"end": 7130,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7108,
											"end": 7130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7108,
											"end": 7130,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7108,
											"end": 7130,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7130,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7130,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7071,
											"end": 7130,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 7071,
											"end": 7130,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7067,
											"end": 7286,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7067,
											"end": 7286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 7067,
											"end": 7286,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7257,
											"end": 7274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7257,
											"end": 7274,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7240,
											"end": 7256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7240,
											"end": 7256,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7240,
											"end": 7256,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7240,
											"end": 7256,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7216,
											"end": 7238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 7216,
											"end": 7238,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7216,
											"end": 7238,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7216,
											"end": 7238,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7204,
											"end": 7238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 7204,
											"end": 7238,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7216,
											"end": 7238,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7204,
											"end": 7213,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7204,
											"end": 7238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 7204,
											"end": 7238,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7204,
											"end": 7238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 7204,
											"end": 7238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 7203,
											"end": 7256,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7256,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 7203,
											"end": 7256,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7256,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 7203,
											"end": 7256,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 7203,
											"end": 7274,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 7203,
											"end": 7274,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7274,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 7203,
											"end": 7274,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7181,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7177,
											"end": 7200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7200,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 7177,
											"end": 7274,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 7177,
											"end": 7274,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7274,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 7177,
											"end": 7274,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7274,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7067,
											"end": 7286,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 7067,
											"end": 7286,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 992,
											"end": 996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 7376,
											"end": 7386,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7376,
											"end": 7405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7376,
											"end": 7405,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7376,
											"end": 7405,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7355,
											"end": 7373,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7355,
											"end": 7405,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 7355,
											"end": 7405,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7355,
											"end": 7405,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7355,
											"end": 7405,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 7355,
											"end": 7405,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7355,
											"end": 7405,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 7355,
											"end": 7405,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7330,
											"end": 7353,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7330,
											"end": 7353,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7330,
											"end": 7406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 7330,
											"end": 7406,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7330,
											"end": 7406,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7330,
											"end": 7406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 7330,
											"end": 7406,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7330,
											"end": 7406,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 7330,
											"end": 7406,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7330,
											"end": 7419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 7330,
											"end": 7419,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7330,
											"end": 7419,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7330,
											"end": 7419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 7330,
											"end": 7419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7330,
											"end": 7419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 7330,
											"end": 7419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7303,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7303,
											"end": 7327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7303,
											"end": 7327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7303,
											"end": 7327,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7303,
											"end": 7419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 7303,
											"end": 7419,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7303,
											"end": 7419,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7303,
											"end": 7419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 7303,
											"end": 7419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4817,
											"end": 5724,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 4817,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 4911,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4919,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4920,
											"end": 4927,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 4914,
											"end": 4928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4974,
											"end": 4996,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4974,
											"end": 4996,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4974,
											"end": 4996,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4974,
											"end": 4996,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4914,
											"end": 4928,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4965,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 4965,
											"end": 5035,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4974,
											"end": 4996,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4998,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 5007,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3313,
											"end": 3416,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4965,
											"end": 5035,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 4965,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4939,
											"end": 5036,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4939,
											"end": 5036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5071,
											"end": 5072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5055,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5068,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5051,
											"end": 5068,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5068,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5072,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5110,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5110,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 5051,
											"end": 5110,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5088,
											"end": 5110,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 5088,
											"end": 5110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5088,
											"end": 5110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5088,
											"end": 5110,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5088,
											"end": 5110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5088,
											"end": 5110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5088,
											"end": 5110,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5076,
											"end": 5110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5076,
											"end": 5110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5076,
											"end": 5110,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5076,
											"end": 5110,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5110,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 5051,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5047,
											"end": 5246,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5047,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 5047,
											"end": 5246,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5217,
											"end": 5234,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5217,
											"end": 5234,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5217,
											"end": 5234,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5217,
											"end": 5234,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5216,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 5200,
											"end": 5216,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5216,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5216,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5176,
											"end": 5198,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 5176,
											"end": 5198,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5176,
											"end": 5198,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5176,
											"end": 5198,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5164,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 5164,
											"end": 5198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5176,
											"end": 5198,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5164,
											"end": 5173,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5164,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 5164,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5164,
											"end": 5198,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 5164,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5163,
											"end": 5216,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5163,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 5163,
											"end": 5216,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5163,
											"end": 5216,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5163,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 5163,
											"end": 5216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5163,
											"end": 5216,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 5163,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5163,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 5163,
											"end": 5234,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5163,
											"end": 5234,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5163,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 5163,
											"end": 5234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5163,
											"end": 5234,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 5163,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5136,
											"end": 5140,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5136,
											"end": 5159,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5136,
											"end": 5159,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5136,
											"end": 5159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5234,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5136,
											"end": 5234,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5136,
											"end": 5234,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5136,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 5136,
											"end": 5234,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5136,
											"end": 5234,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5136,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 5136,
											"end": 5234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5136,
											"end": 5234,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 5136,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5136,
											"end": 5234,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5136,
											"end": 5234,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5136,
											"end": 5234,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5047,
											"end": 5246,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 5047,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5278,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 5256,
											"end": 5278,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5278,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5290,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5290,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5290,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5290,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5290,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5290,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5290,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5290,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5303,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 5303,
											"end": 5717,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5381,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5390,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5405,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5405,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5405,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5405,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5405,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5405,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5405,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5405,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5423,
											"end": 5446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5423,
											"end": 5446,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 5420,
											"end": 5636,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 992,
											"end": 996,
											"name": "PUSH",
											"source": 12,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 5563,
											"end": 5573,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5592,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5563,
											"end": 5592,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5592,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5537,
											"end": 5541,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5537,
											"end": 5560,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5560,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5537,
											"end": 5560,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5537,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 5537,
											"end": 5592,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5537,
											"end": 5592,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5537,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 5537,
											"end": 5592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5537,
											"end": 5592,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 5537,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5535,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5535,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 5512,
											"end": 5593,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5593,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 5512,
											"end": 5593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5593,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 5512,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 5512,
											"end": 5606,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5606,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 5512,
											"end": 5606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5606,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 5512,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5494,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5606,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5606,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5606,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 5484,
											"end": 5606,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5606,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 5484,
											"end": 5606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5606,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 5484,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5606,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5606,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5606,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5420,
											"end": 5636,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 5420,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5682,
											"end": 5705,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5682,
											"end": 5705,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5682,
											"end": 5705,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5682,
											"end": 5705,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5679,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5705,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5303,
											"end": 5717,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 5303,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4879,
											"end": 5724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4879,
											"end": 5724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4817,
											"end": 5724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4817,
											"end": 5724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4817,
											"end": 5724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10950,
											"end": 10982,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10950,
											"end": 10982,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10950,
											"end": 10982,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10932,
											"end": 10983,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10999,
											"end": 11017,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10999,
											"end": 11017,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10999,
											"end": 11017,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10992,
											"end": 11026,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10992,
											"end": 11026,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10992,
											"end": 11026,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10905,
											"end": 10923,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10905,
											"end": 10923,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 4151,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3954,
											"end": 4157,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5435,
											"end": 5546,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5435,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5493,
											"end": 5500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5317,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5312,
											"end": 5317,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5312,
											"end": 5317,
											"name": "XOR",
											"source": 10
										},
										{
											"begin": 5527,
											"end": 5532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5527,
											"end": 5532,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5527,
											"end": 5532,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5347,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5348,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5348,
											"name": "XOR",
											"source": 10
										},
										{
											"begin": 5519,
											"end": 5539,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 5519,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 5539,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 5539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5546,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 5435,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5546,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5546,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11257,
											"end": 11289,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11257,
											"end": 11289,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11257,
											"end": 11289,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11239,
											"end": 11290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11326,
											"end": 11358,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11326,
											"end": 11358,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11326,
											"end": 11358,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11299,
											"end": 11359,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11375,
											"end": 11393,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11375,
											"end": 11393,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11375,
											"end": 11393,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11368,
											"end": 11402,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11368,
											"end": 11402,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11368,
											"end": 11402,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 11037,
											"end": 11408,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5617,
											"end": 5728,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5617,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5675,
											"end": 5682,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5317,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5312,
											"end": 5317,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5312,
											"end": 5317,
											"name": "XOR",
											"source": 10
										},
										{
											"begin": 5709,
											"end": 5714,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5709,
											"end": 5714,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5709,
											"end": 5714,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5347,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5348,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5348,
											"name": "XOR",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4118,
											"end": 4150,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4118,
											"end": 4150,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4151,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3954,
											"end": 4157,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 240,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 14,
											"end": 240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 187,
											"end": 210,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 187,
											"end": 210,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 240,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1359,
											"end": 1532,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 1359,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 1447,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 1447,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1507,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1476,
											"end": 1507,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1508,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1508,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1456,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 1456,
											"end": 1526,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1520,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1524,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1456,
											"end": 1526,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 1456,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1359,
											"end": 1532,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1359,
											"end": 1532,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1359,
											"end": 1532,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1359,
											"end": 1532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1837,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1537,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1619,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1668,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1663,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1641,
											"end": 1664,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1637,
											"end": 1669,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1634,
											"end": 1686,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1634,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 1634,
											"end": 1686,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1682,
											"end": 1683,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1680,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1684,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1634,
											"end": 1686,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 1634,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 1705,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1734,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 1705,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1807,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1807,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1537,
											"end": 1837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2166,
											"end": 2345,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 2166,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2233,
											"end": 2253,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2233,
											"end": 2253,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2282,
											"end": 2320,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2282,
											"end": 2320,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2272,
											"end": 2321,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2272,
											"end": 2321,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2262,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 2262,
											"end": 2339,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2335,
											"end": 2336,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2337,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2350,
											"end": 2991,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 2350,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2452,
											"end": 2458,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2474,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2498,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2548,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 2533,
											"end": 2542,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2524,
											"end": 2531,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 2520,
											"end": 2543,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2516,
											"end": 2549,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2563,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2560,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 2604,
											"end": 2613,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 2585,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2575,
											"end": 2614,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2575,
											"end": 2614,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 2667,
											"end": 2669,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2656,
											"end": 2665,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 2633,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2671,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2690,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 2723,
											"end": 2725,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2721,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2708,
											"end": 2726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2690,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 2690,
											"end": 2727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2690,
											"end": 2727,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 2690,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2680,
											"end": 2727,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2680,
											"end": 2727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 2746,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2783,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 2746,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2350,
											"end": 2991,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2350,
											"end": 2991,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 2350,
											"end": 2991,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2350,
											"end": 2991,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2991,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2350,
											"end": 2991,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2855,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2837,
											"end": 2856,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2837,
											"end": 2856,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2857,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2857,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2954,
											"end": 2957,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 2939,
											"end": 2958,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2958,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2958,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2926,
											"end": 2959,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2926,
											"end": 2959,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2991,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3524,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 3178,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3246,
											"end": 3252,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3307,
											"end": 3309,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3295,
											"end": 3304,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3286,
											"end": 3293,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3282,
											"end": 3305,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3278,
											"end": 3310,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3275,
											"end": 3327,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3275,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 3275,
											"end": 3327,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3320,
											"end": 3321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3325,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3275,
											"end": 3327,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 3275,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3488,
											"end": 3490,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3492,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3492,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3178,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3529,
											"end": 3949,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 3529,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3620,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3628,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3677,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3663,
											"end": 3672,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3654,
											"end": 3661,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3673,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3646,
											"end": 3678,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3643,
											"end": 3695,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3643,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 3643,
											"end": 3695,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3691,
											"end": 3692,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3693,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3643,
											"end": 3695,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 3643,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3736,
											"end": 3759,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3736,
											"end": 3759,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3736,
											"end": 3759,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3802,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 3836,
											"end": 3838,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3821,
											"end": 3839,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3821,
											"end": 3839,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 3802,
											"end": 3840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 3840,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 3802,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3529,
											"end": 3949,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3529,
											"end": 3949,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3840,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3840,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3913,
											"end": 3915,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3917,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3917,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3529,
											"end": 3949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4162,
											"end": 4348,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 4162,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4221,
											"end": 4227,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4274,
											"end": 4276,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4262,
											"end": 4271,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4253,
											"end": 4260,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4249,
											"end": 4272,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4245,
											"end": 4277,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4294,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 4242,
											"end": 4294,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4291,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4288,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4292,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4294,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 4242,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4313,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 4332,
											"end": 4341,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4313,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 4313,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4353,
											"end": 4653,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 4353,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 4427,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4429,
											"end": 4435,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4482,
											"end": 4484,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4470,
											"end": 4479,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4461,
											"end": 4468,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4457,
											"end": 4480,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4485,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4502,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 4450,
											"end": 4502,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4498,
											"end": 4499,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4495,
											"end": 4496,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4488,
											"end": 4500,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4502,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 4450,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4543,
											"end": 4566,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4543,
											"end": 4566,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4543,
											"end": 4566,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4609,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 4643,
											"end": 4645,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4609,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 4609,
											"end": 4647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4609,
											"end": 4647,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 4609,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4647,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4353,
											"end": 4653,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4353,
											"end": 4653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4353,
											"end": 4653,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4353,
											"end": 4653,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4353,
											"end": 4653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4353,
											"end": 4653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 5055,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 4658,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4862,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4863,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4842,
											"end": 4863,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4842,
											"end": 4863,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 4901,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 4879,
											"end": 4897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4879,
											"end": 4897,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4879,
											"end": 4897,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4872,
											"end": 4902,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4938,
											"end": 4972,
											"name": "PUSH",
											"source": 13,
											"value": "4D61726B6574696E675374616B696E673A496E76616C696420506F6F6C204944"
										},
										{
											"begin": 4933,
											"end": 4935,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4918,
											"end": 4936,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4918,
											"end": 4936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4911,
											"end": 4973,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5004,
											"end": 5006,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 5013,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5048,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 5055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5187,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 5060,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5131,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 5116,
											"end": 5119,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5112,
											"end": 5132,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5152,
											"end": 5156,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 5149,
											"end": 5150,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5176,
											"end": 5180,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5173,
											"end": 5174,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5192,
											"end": 5607,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 5192,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5396,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5376,
											"end": 5397,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5376,
											"end": 5397,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5376,
											"end": 5397,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5435,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 5413,
											"end": 5431,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5413,
											"end": 5431,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5413,
											"end": 5431,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 5436,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5472,
											"end": 5506,
											"name": "PUSH",
											"source": 13,
											"value": "4D61726B6574696E675374616B696E673A4561726C7920576974686472617761"
										},
										{
											"begin": 5467,
											"end": 5469,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5452,
											"end": 5470,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5452,
											"end": 5470,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5445,
											"end": 5507,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C206973206E6F74207065726D697474656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5538,
											"end": 5540,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5516,
											"end": 5565,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5597,
											"end": 5600,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5192,
											"end": 5607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5612,
											"end": 5739,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 5612,
											"end": 5739,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5673,
											"end": 5683,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 5668,
											"end": 5671,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5664,
											"end": 5684,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5661,
											"end": 5662,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5654,
											"end": 5685,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5704,
											"end": 5708,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5701,
											"end": 5702,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5694,
											"end": 5709,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5728,
											"end": 5732,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5725,
											"end": 5726,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5718,
											"end": 5733,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 5872,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 5744,
											"end": 5872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 5820,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 5820,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 5820,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5832,
											"end": 5843,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5832,
											"end": 5843,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5832,
											"end": 5843,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5829,
											"end": 5866,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5829,
											"end": 5866,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 5829,
											"end": 5866,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5846,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 5846,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 5846,
											"end": 5864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6706,
											"end": 7108,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 6706,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6908,
											"end": 6910,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6890,
											"end": 6911,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6890,
											"end": 6911,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6890,
											"end": 6911,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6947,
											"end": 6949,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6920,
											"end": 6950,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6986,
											"end": 7020,
											"name": "PUSH",
											"source": 13,
											"value": "4D61726B6574696E675374616B696E673A496E73756666696369656E74206261"
										},
										{
											"begin": 6981,
											"end": 6983,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6966,
											"end": 6984,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6966,
											"end": 6984,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 7021,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C616E636521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7052,
											"end": 7054,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7037,
											"end": 7055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7037,
											"end": 7055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7030,
											"end": 7066,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7098,
											"end": 7101,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7083,
											"end": 7102,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7083,
											"end": 7102,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6706,
											"end": 7108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7962,
											"end": 8180,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 7962,
											"end": 8180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8068,
											"end": 8102,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8068,
											"end": 8102,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8068,
											"end": 8102,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8032,
											"end": 8066,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8032,
											"end": 8066,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8032,
											"end": 8066,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8028,
											"end": 8103,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8028,
											"end": 8103,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8115,
											"end": 8151,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8115,
											"end": 8151,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8112,
											"end": 8174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8112,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 8112,
											"end": 8174,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8154,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 8154,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 8154,
											"end": 8172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8185,
											"end": 8353,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 8185,
											"end": 8353,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8258,
											"end": 8267,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8258,
											"end": 8267,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8258,
											"end": 8267,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8289,
											"end": 8298,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8289,
											"end": 8298,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8306,
											"end": 8321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8306,
											"end": 8321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8306,
											"end": 8321,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 8300,
											"end": 8322,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8300,
											"end": 8322,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 8286,
											"end": 8323,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 8276,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 8276,
											"end": 8347,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 8327,
											"end": 8345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8358,
											"end": 8575,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 8358,
											"end": 8575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8398,
											"end": 8399,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8424,
											"end": 8425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8414,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 8414,
											"end": 8546,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8468,
											"end": 8478,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 8463,
											"end": 8466,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 8459,
											"end": 8479,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 8456,
											"end": 8457,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8449,
											"end": 8480,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8503,
											"end": 8507,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 8500,
											"end": 8501,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8493,
											"end": 8508,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8531,
											"end": 8535,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8528,
											"end": 8529,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8521,
											"end": 8536,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8414,
											"end": 8546,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 8414,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8569,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 8560,
											"end": 8569,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8358,
											"end": 8575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9989,
											"end": 10114,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 9989,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10054,
											"end": 10063,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10054,
											"end": 10063,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10054,
											"end": 10063,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10075,
											"end": 10085,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10075,
											"end": 10085,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10075,
											"end": 10085,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10072,
											"end": 10108,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10072,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 10072,
											"end": 10108,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10088,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 10088,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 10088,
											"end": 10106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10119,
											"end": 10533,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 10119,
											"end": 10533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10321,
											"end": 10323,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10303,
											"end": 10324,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10303,
											"end": 10324,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10303,
											"end": 10324,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10360,
											"end": 10362,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 10340,
											"end": 10358,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10340,
											"end": 10358,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10340,
											"end": 10358,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10333,
											"end": 10363,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10433,
											"name": "PUSH",
											"source": 13,
											"value": "4D61726B6574696E675374616B696E673A616D6F756E74206D75737420626520"
										},
										{
											"begin": 10394,
											"end": 10396,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10379,
											"end": 10397,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10379,
											"end": 10397,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10372,
											"end": 10434,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67726561746572207468616E207A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10465,
											"end": 10467,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10450,
											"end": 10468,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10450,
											"end": 10468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10443,
											"end": 10491,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10523,
											"end": 10526,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10508,
											"end": 10527,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10508,
											"end": 10527,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10119,
											"end": 10533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10538,
											"end": 10753,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 10538,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10606,
											"end": 10640,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10606,
											"end": 10640,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10606,
											"end": 10640,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10642,
											"end": 10676,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10642,
											"end": 10676,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10642,
											"end": 10676,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10602,
											"end": 10677,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10602,
											"end": 10677,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10689,
											"end": 10724,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10689,
											"end": 10724,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10686,
											"end": 10747,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10686,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 10686,
											"end": 10747,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 10727,
											"end": 10745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"contracts/MarketingStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CLAIM_PERIOD()": "21241dfe",
							"SCALE_FACTOR()": "ce4b5bbe",
							"addRewards(uint256,uint256)": "fc41aa09",
							"claim(uint256)": "379607f5",
							"createPool(address,address,uint96,uint96,uint256,uint256)": "5d9d2318",
							"getPool(uint256)": "068bcd8d",
							"getPoolsCount()": "b4ac6860",
							"getUserRewards(uint256,address)": "fdeef425",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stake(uint256,uint256)": "7b0472f0",
							"stakes(address,uint256)": "584b62a1",
							"transferOwnership(address)": "f2fde38b",
							"withdrawRewards(uint256,address,uint256)": "7db7e3bf",
							"withdrawStake(uint256)": "25d5971f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staking_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewards_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"start_epoch\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"end_epoch\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scale_factor\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward_rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward_rate_cumsum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"last_update_epoch\",\"type\":\"uint96\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward_rate_cumsum\",\"type\":\"uint256\"}],\"name\":\"StakeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_PERIOD\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SCALE_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staking_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewards_token\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"start_epoch\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"end_epoch\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"reward_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transfer_reward_amount\",\"type\":\"uint256\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"staking_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewards_token\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"start_epoch\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"end_epoch\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward_rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward_rate_cumsum\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"last_update_epoch\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"available_rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward_rate_cumsum\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MarketingStaking.sol\":\"MarketingStaking\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/MarketingStaking.sol\":{\"keccak256\":\"0x47e733215d6927c20494d18267756e2c68b318130f1cb35cb6d119a9e65a38ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://960538a0805057ca7a55becec399eced893c257acc9194e33a32fe535fdabea9\",\"dweb:/ipfs/QmUUrh5aMCR4bfmwv1paajH3iGwgx21uduRRijrNHFZiPZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/MarketingStaking.sol:MarketingStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 872,
								"contract": "contracts/MarketingStaking.sol:MarketingStaking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 4381,
								"contract": "contracts/MarketingStaking.sol:MarketingStaking",
								"label": "pools",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(PoolInfo)4364_storage)dyn_storage"
							},
							{
								"astId": 4388,
								"contract": "contracts/MarketingStaking.sol:MarketingStaking",
								"label": "stakes",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(StakeDetails)4371_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)4364_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)4364_storage",
								"encoding": "dynamic_array",
								"label": "struct MarketingStaking.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)315": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(StakeDetails)4371_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct MarketingStaking.StakeDetails))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(StakeDetails)4371_storage)"
							},
							"t_mapping(t_uint256,t_struct(StakeDetails)4371_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct MarketingStaking.StakeDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeDetails)4371_storage"
							},
							"t_struct(PoolInfo)4364_storage": {
								"encoding": "inplace",
								"label": "struct MarketingStaking.PoolInfo",
								"members": [
									{
										"astId": 4346,
										"contract": "contracts/MarketingStaking.sol:MarketingStaking",
										"label": "staking_token",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)315"
									},
									{
										"astId": 4348,
										"contract": "contracts/MarketingStaking.sol:MarketingStaking",
										"label": "start_epoch",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									},
									{
										"astId": 4351,
										"contract": "contracts/MarketingStaking.sol:MarketingStaking",
										"label": "rewards_token",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(IERC20)315"
									},
									{
										"astId": 4353,
										"contract": "contracts/MarketingStaking.sol:MarketingStaking",
										"label": "end_epoch",
										"offset": 20,
										"slot": "1",
										"type": "t_uint96"
									},
									{
										"astId": 4355,
										"contract": "contracts/MarketingStaking.sol:MarketingStaking",
										"label": "stake_amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 4357,
										"contract": "contracts/MarketingStaking.sol:MarketingStaking",
										"label": "reward_rate",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 4359,
										"contract": "contracts/MarketingStaking.sol:MarketingStaking",
										"label": "reward_rate_cumsum",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 4361,
										"contract": "contracts/MarketingStaking.sol:MarketingStaking",
										"label": "available_rewards",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 4363,
										"contract": "contracts/MarketingStaking.sol:MarketingStaking",
										"label": "last_update_epoch",
										"offset": 0,
										"slot": "6",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(StakeDetails)4371_storage": {
								"encoding": "inplace",
								"label": "struct MarketingStaking.StakeDetails",
								"members": [
									{
										"astId": 4366,
										"contract": "contracts/MarketingStaking.sol:MarketingStaking",
										"label": "stake_amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 4368,
										"contract": "contracts/MarketingStaking.sol:MarketingStaking",
										"label": "reward_amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 4370,
										"contract": "contracts/MarketingStaking.sol:MarketingStaking",
										"label": "reward_rate_cumsum",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 810,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 809,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 809,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								809
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							942
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								942,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							942
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 943,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 315,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 315,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 315,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 315,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 315,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 315,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							779
						]
					},
					"id": 780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 327,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 336,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 351,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 353,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 349,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 347,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 779,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 779,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 404,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 406,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 402,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 400,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 411,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 390,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 389,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 779,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 432,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 434,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 435,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 428,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 440,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 416,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 415,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 779,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 466,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 468,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 444,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 779,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 514,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															485
														],
														"declarations": [
															{
																"constant": false,
																"id": 485,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 514,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 484,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 494,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 490,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 488,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 492,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 496,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 505,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 504,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 499,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 500,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 501,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 481,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 498,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 503,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 508,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 509,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 510,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 506,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 513,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 475,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 779,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 531,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 533,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 535,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 529,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 539,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 540,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 538,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 547,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 549,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 522,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 550,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 551,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 545,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 543,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 557,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 518,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 315,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 779,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 576,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 590,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 592,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 588,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 603,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 602,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 598,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 567,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 596,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 595,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 601,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 583,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 581,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 586,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 565,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 779,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 621,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 637,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 638,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 639,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 650,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 649,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 645,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 643,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 642,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 648,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 627,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 629,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 626,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 779,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 666,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 682,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 678,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 693,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 692,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 688,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 657,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 686,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 685,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 691,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 672,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 673,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 674,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 671,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 676,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 655,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 779,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 706,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 709,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 700,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 711,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 723,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 717,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 715,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 730,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 728,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 727,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 733,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 698,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 779,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 748,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 741,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 759,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 770,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 764,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 741,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 763,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 762,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 774,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 747,
												"id": 776,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 739,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 315,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 779,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 780,
							"src": "698:9376:5",
							"usedErrors": [
								327,
								336
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							809
						]
					},
					"id": 810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 809,
							"linearizedBaseContracts": [
								809
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 787,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 786,
												"id": 789,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 809,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 796,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 795,
												"id": 798,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 809,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 804,
												"id": 806,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 809,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 810,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							861
						]
					},
					"id": 862,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 811,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 812,
								"nodeType": "StructuredDocumentation",
								"src": "125:489:7",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 861,
							"linearizedBaseContracts": [
								861
							],
							"name": "Panic",
							"nameLocation": "665:5:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "677:36:7",
										"text": "@dev generic / unspecified error"
									},
									"id": 816,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "744:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "718:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 814,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 815,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "764:37:7",
										"text": "@dev used by the assert() builtin"
									},
									"id": 820,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "832:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "806:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 818,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 819,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "841:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "851:41:7",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 824,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "923:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "897:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 822,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 823,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "950:35:7",
										"text": "@dev division or modulo by zero"
									},
									"id": 828,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "1016:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "990:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 826,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 827,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "1045:30:7",
										"text": "@dev enum conversion error"
									},
									"id": 832,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1106:21:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "1080:54:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 830,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 831,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "1140:36:7",
										"text": "@dev invalid encoding in storage"
									},
									"id": 836,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1207:22:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "1181:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 834,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 835,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1232:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "1242:24:7",
										"text": "@dev empty array pop"
									},
									"id": 840,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1297:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "1271:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 838,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 839,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1315:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "1325:35:7",
										"text": "@dev array out of bounds access"
									},
									"id": 844,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1391:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "1365:52:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 842,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 843,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1423:65:7",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 848,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1519:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "1493:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 846,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 847,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1536:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1546:42:7",
										"text": "@dev calling invalid internal function"
									},
									"id": 852,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1619:25:7",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "1593:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 850,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 851,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "1819:151:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1854:110:7",
													"nodeType": "YulBlock",
													"src": "1854:110:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1875:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1881:10:7",
																		"nodeType": "YulLiteral",
																		"src": "1881:10:7",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1868:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:7"
																},
																"nativeSrc": "1868:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1868:24:7"
															},
															"nativeSrc": "1868:24:7",
															"nodeType": "YulExpressionStatement",
															"src": "1868:24:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1912:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:7",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nativeSrc": "1918:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:7"
																},
																"nativeSrc": "1905:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1905:18:7"
															},
															"nativeSrc": "1905:18:7",
															"nodeType": "YulExpressionStatement",
															"src": "1905:18:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1943:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:7",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1936:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:7"
																},
																"nativeSrc": "1936:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1936:18:7"
															},
															"nativeSrc": "1936:18:7",
															"nodeType": "YulExpressionStatement",
															"src": "1936:18:7"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 855,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 858,
												"nodeType": "InlineAssembly",
												"src": "1829:135:7"
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "1658:113:7",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1785:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1799:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1791:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:14:7"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:7"
									},
									"scope": 861,
									"src": "1776:194:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 862,
							"src": "657:1315:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1874:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							930
						]
					},
					"id": 931,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 863,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 864,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:8",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 930,
							"linearizedBaseContracts": [
								930
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 867,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 930,
									"src": "1818:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 865,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 866,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 870,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 930,
									"src": "1864:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 868,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 869,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 872,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 930,
									"src": "1907:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 871,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:8",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 875,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:8"
									},
									"src": "1994:37:8"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "2051:38:8",
										"statements": [
											{
												"expression": {
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 878,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "2061:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 879,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "2071:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:8"
											}
										]
									},
									"id": 883,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:8"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:8"
									},
									"scope": 930,
									"src": "2037:52:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "2490:79:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 886,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "2500:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:8"
											},
											{
												"id": 889,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 890,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "2542:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:8"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:8",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 894,
									"name": "nonReentrant",
									"nameLocation": "2475:12:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:8"
									},
									"src": "2466:103:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "2614:268:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 897,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "2702:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 898,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "2713:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "2698:86:8",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "2722:62:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 900,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "2743:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "2736:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "2858:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "2868:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:8"
											}
										]
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:8"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:8"
									},
									"scope": 930,
									"src": "2575:307:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "2926:170:8",
										"statements": [
											{
												"expression": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 913,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "3068:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 914,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "3078:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:8"
											}
										]
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:8"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:8"
									},
									"scope": 930,
									"src": "2888:208:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "3339:42:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 924,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "3356:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 925,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "3367:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 923,
												"id": 927,
												"nodeType": "Return",
												"src": "3349:25:8"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:8",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:8"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "3333:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:8"
									},
									"scope": 930,
									"src": "3275:106:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 931,
							"src": "1030:2353:8",
							"usedErrors": [
								875
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 932,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 933,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC165",
							"nameLocation": "432:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "818:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 935,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:9"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "861:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:9"
									},
									"scope": 942,
									"src": "791:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "422:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2563
						],
						"Panic": [
							861
						],
						"SafeCast": [
							4328
						]
					},
					"id": 2564,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2564,
							"sourceUnit": 862,
							"src": "129:35:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 861,
										"src": "137:5:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 948,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2564,
							"sourceUnit": 4329,
							"src": "165:40:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 947,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4328,
										"src": "173:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 949,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2563,
							"linearizedBaseContracts": [
								2563
							],
							"name": "Math",
							"nameLocation": "289:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 954,
									"members": [
										{
											"id": 950,
											"name": "Floor",
											"nameLocation": "324:5:10",
											"nodeType": "EnumValue",
											"src": "324:5:10"
										},
										{
											"id": 951,
											"name": "Ceil",
											"nameLocation": "367:4:10",
											"nodeType": "EnumValue",
											"src": "367:4:10"
										},
										{
											"id": 952,
											"name": "Trunc",
											"nameLocation": "409:5:10",
											"nodeType": "EnumValue",
											"src": "409:5:10"
										},
										{
											"id": 953,
											"name": "Expand",
											"nameLocation": "439:6:10",
											"nodeType": "EnumValue",
											"src": "439:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:10",
									"nodeType": "EnumDefinition",
									"src": "300:169:10"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "731:112:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "766:71:10",
													"nodeType": "YulBlock",
													"src": "766:71:10",
													"statements": [
														{
															"nativeSrc": "780:16:10",
															"nodeType": "YulAssignment",
															"src": "780:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "791:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "791:1:10"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "794:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "794:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "787:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "787:3:10"
																},
																"nativeSrc": "787:9:10",
																"nodeType": "YulFunctionCall",
																"src": "787:9:10"
															},
															"variableNames": [
																{
																	"name": "low",
																	"nativeSrc": "780:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "780:3:10"
																}
															]
														},
														{
															"nativeSrc": "809:18:10",
															"nodeType": "YulAssignment",
															"src": "809:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "low",
																		"nativeSrc": "820:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "820:3:10"
																	},
																	{
																		"name": "a",
																		"nativeSrc": "825:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "825:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "817:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "817:2:10"
																},
																"nativeSrc": "817:10:10",
																"nodeType": "YulFunctionCall",
																"src": "817:10:10"
															},
															"variableNames": [
																{
																	"name": "high",
																	"nativeSrc": "809:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "809:4:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 957,
														"isOffset": false,
														"isSlot": false,
														"src": "791:1:10",
														"valueSize": 1
													},
													{
														"declaration": 957,
														"isOffset": false,
														"isSlot": false,
														"src": "825:1:10",
														"valueSize": 1
													},
													{
														"declaration": 959,
														"isOffset": false,
														"isSlot": false,
														"src": "794:1:10",
														"valueSize": 1
													},
													{
														"declaration": 962,
														"isOffset": false,
														"isSlot": false,
														"src": "809:4:10",
														"valueSize": 1
													},
													{
														"declaration": 964,
														"isOffset": false,
														"isSlot": false,
														"src": "780:3:10",
														"valueSize": 1
													},
													{
														"declaration": 964,
														"isOffset": false,
														"isSlot": false,
														"src": "820:3:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 966,
												"nodeType": "InlineAssembly",
												"src": "741:96:10"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "475:163:10",
										"text": " @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add512",
									"nameLocation": "652:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "667:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "659:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "678:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "670:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:22:10"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "high",
												"nameLocation": "712:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "704:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "low",
												"nameLocation": "726:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "718:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:27:10"
									},
									"scope": 2563,
									"src": "643:200:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "1115:462:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1437:134:10",
													"nodeType": "YulBlock",
													"src": "1437:134:10",
													"statements": [
														{
															"nativeSrc": "1451:30:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1451:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "1468:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "1468:1:10"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "1471:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "1471:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1478:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1478:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1474:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1474:3:10"
																		},
																		"nativeSrc": "1474:6:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1474:6:10"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nativeSrc": "1461:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1461:6:10"
																},
																"nativeSrc": "1461:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1461:20:10"
															},
															"variables": [
																{
																	"name": "mm",
																	"nativeSrc": "1455:2:10",
																	"nodeType": "YulTypedName",
																	"src": "1455:2:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1494:16:10",
															"nodeType": "YulAssignment",
															"src": "1494:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "1505:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "1505:1:10"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "1508:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "1508:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1501:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1501:3:10"
																},
																"nativeSrc": "1501:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1501:9:10"
															},
															"variableNames": [
																{
																	"name": "low",
																	"nativeSrc": "1494:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:10"
																}
															]
														},
														{
															"nativeSrc": "1523:38:10",
															"nodeType": "YulAssignment",
															"src": "1523:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nativeSrc": "1539:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "1539:2:10"
																			},
																			{
																				"name": "low",
																				"nativeSrc": "1543:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1543:3:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1535:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1535:3:10"
																		},
																		"nativeSrc": "1535:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:12:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nativeSrc": "1552:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "1552:2:10"
																			},
																			{
																				"name": "low",
																				"nativeSrc": "1556:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1556:3:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1549:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1549:2:10"
																		},
																		"nativeSrc": "1549:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1549:11:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1531:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1531:3:10"
																},
																"nativeSrc": "1531:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1531:30:10"
															},
															"variableNames": [
																{
																	"name": "high",
																	"nativeSrc": "1523:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1523:4:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 971,
														"isOffset": false,
														"isSlot": false,
														"src": "1468:1:10",
														"valueSize": 1
													},
													{
														"declaration": 971,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:1:10",
														"valueSize": 1
													},
													{
														"declaration": 973,
														"isOffset": false,
														"isSlot": false,
														"src": "1471:1:10",
														"valueSize": 1
													},
													{
														"declaration": 973,
														"isOffset": false,
														"isSlot": false,
														"src": "1508:1:10",
														"valueSize": 1
													},
													{
														"declaration": 976,
														"isOffset": false,
														"isSlot": false,
														"src": "1523:4:10",
														"valueSize": 1
													},
													{
														"declaration": 978,
														"isOffset": false,
														"isSlot": false,
														"src": "1494:3:10",
														"valueSize": 1
													},
													{
														"declaration": 978,
														"isOffset": false,
														"isSlot": false,
														"src": "1543:3:10",
														"valueSize": 1
													},
													{
														"declaration": 978,
														"isOffset": false,
														"isSlot": false,
														"src": "1556:3:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 980,
												"nodeType": "InlineAssembly",
												"src": "1412:159:10"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "849:173:10",
										"text": " @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul512",
									"nameLocation": "1036:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1051:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1043:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1062:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1054:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:22:10"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "high",
												"nameLocation": "1096:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1088:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "low",
												"nameLocation": "1110:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1102:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:27:10"
									},
									"scope": 2563,
									"src": "1027:550:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "1784:149:10",
										"statements": [
											{
												"id": 1015,
												"nodeType": "UncheckedBlock",
												"src": "1794:133:10",
												"statements": [
													{
														"assignments": [
															995
														],
														"declarations": [
															{
																"constant": false,
																"id": 995,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1826:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1015,
																"src": "1818:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 994,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1818:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 999,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 996,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "1830:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 997,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "1834:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1830:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1818:17:10"
													},
													{
														"expression": {
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1000,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "1849:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1001,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "1859:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1002,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "1864:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1859:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1849:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1005,
														"nodeType": "ExpressionStatement",
														"src": "1849:16:10"
													},
													{
														"expression": {
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1006,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "1879:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1007,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "1888:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1010,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 990,
																			"src": "1908:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1008,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4328,
																			"src": "1892:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1901:6:10",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4327,
																		"src": "1892:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1892:24:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1888:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1879:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1014,
														"nodeType": "ExpressionStatement",
														"src": "1879:37:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "1583:105:10",
										"text": " @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "1702:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1717:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1709:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1728:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1720:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:22:10"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1759:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1754:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 989,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1754:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1776:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1768:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:30:10"
									},
									"scope": 2563,
									"src": "1693:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "2143:149:10",
										"statements": [
											{
												"id": 1050,
												"nodeType": "UncheckedBlock",
												"src": "2153:133:10",
												"statements": [
													{
														"assignments": [
															1030
														],
														"declarations": [
															{
																"constant": false,
																"id": 1030,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "2185:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1050,
																"src": "2177:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1029,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2177:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1034,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1031,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "2189:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1032,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "2193:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2189:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2177:17:10"
													},
													{
														"expression": {
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1035,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "2208:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1036,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "2218:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1037,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "2223:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2218:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2208:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1040,
														"nodeType": "ExpressionStatement",
														"src": "2208:16:10"
													},
													{
														"expression": {
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1041,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "2238:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1042,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "2247:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1045,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1025,
																			"src": "2267:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1043,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4328,
																			"src": "2251:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2260:6:10",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4327,
																		"src": "2251:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2251:24:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2247:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2238:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1049,
														"nodeType": "ExpressionStatement",
														"src": "2238:37:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1939:108:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "2061:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2076:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2068:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2068:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2087:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2079:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2079:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2067:22:10"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2118:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2113:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2113:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2135:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2127:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:30:10"
									},
									"scope": 2563,
									"src": "2052:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "2505:391:10",
										"statements": [
											{
												"id": 1080,
												"nodeType": "UncheckedBlock",
												"src": "2515:375:10",
												"statements": [
													{
														"assignments": [
															1065
														],
														"declarations": [
															{
																"constant": false,
																"id": 1065,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "2547:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1080,
																"src": "2539:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1064,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2539:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1069,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1066,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "2551:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1067,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "2555:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2551:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2539:17:10"
													},
													{
														"AST": {
															"nativeSrc": "2595:188:10",
															"nodeType": "YulBlock",
															"src": "2595:188:10",
															"statements": [
																{
																	"nativeSrc": "2727:42:10",
																	"nodeType": "YulAssignment",
																	"src": "2727:42:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "c",
																								"nativeSrc": "2748:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "2748:1:10"
																							},
																							{
																								"name": "a",
																								"nativeSrc": "2751:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "2751:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2744:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2744:3:10"
																						},
																						"nativeSrc": "2744:9:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2744:9:10"
																					},
																					{
																						"name": "b",
																						"nativeSrc": "2755:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "2755:1:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2741:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "2741:2:10"
																				},
																				"nativeSrc": "2741:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2741:16:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "a",
																						"nativeSrc": "2766:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "2766:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2759:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "2759:6:10"
																				},
																				"nativeSrc": "2759:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2759:9:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2738:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2738:2:10"
																		},
																		"nativeSrc": "2738:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2738:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "success",
																			"nativeSrc": "2727:7:10",
																			"nodeType": "YulIdentifier",
																			"src": "2727:7:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1055,
																"isOffset": false,
																"isSlot": false,
																"src": "2751:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1055,
																"isOffset": false,
																"isSlot": false,
																"src": "2766:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1057,
																"isOffset": false,
																"isSlot": false,
																"src": "2755:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1065,
																"isOffset": false,
																"isSlot": false,
																"src": "2748:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1060,
																"isOffset": false,
																"isSlot": false,
																"src": "2727:7:10",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1070,
														"nodeType": "InlineAssembly",
														"src": "2570:213:10"
													},
													{
														"expression": {
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1071,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "2842:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1072,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "2851:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1075,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "2871:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1073,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4328,
																			"src": "2855:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2864:6:10",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4327,
																		"src": "2855:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2855:24:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2851:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2842:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1079,
														"nodeType": "ExpressionStatement",
														"src": "2842:37:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "2298:111:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "2423:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2438:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2430:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2449:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2441:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2429:22:10"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2480:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2475:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1059,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2475:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2497:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2489:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:30:10"
									},
									"scope": 2563,
									"src": "2414:482:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "3111:231:10",
										"statements": [
											{
												"id": 1101,
												"nodeType": "UncheckedBlock",
												"src": "3121:215:10",
												"statements": [
													{
														"expression": {
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1094,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "3145:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1095,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "3155:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3159:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3155:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3145:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1099,
														"nodeType": "ExpressionStatement",
														"src": "3145:15:10"
													},
													{
														"AST": {
															"nativeSrc": "3199:127:10",
															"nodeType": "YulBlock",
															"src": "3199:127:10",
															"statements": [
																{
																	"nativeSrc": "3293:19:10",
																	"nodeType": "YulAssignment",
																	"src": "3293:19:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "3307:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "3307:1:10"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "3310:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "3310:1:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3303:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3303:3:10"
																		},
																		"nativeSrc": "3303:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3303:9:10"
																	},
																	"variableNames": [
																		{
																			"name": "result",
																			"nativeSrc": "3293:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3293:6:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1085,
																"isOffset": false,
																"isSlot": false,
																"src": "3307:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1087,
																"isOffset": false,
																"isSlot": false,
																"src": "3310:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1092,
																"isOffset": false,
																"isSlot": false,
																"src": "3293:6:10",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1100,
														"nodeType": "InlineAssembly",
														"src": "3174:152:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "2902:113:10",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "3029:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3044:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "3036:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3036:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3055:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "3047:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3047:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3035:22:10"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "3086:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "3081:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1089,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3081:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3103:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "3095:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3095:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3080:30:10"
									},
									"scope": 2563,
									"src": "3020:322:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "3567:231:10",
										"statements": [
											{
												"id": 1122,
												"nodeType": "UncheckedBlock",
												"src": "3577:215:10",
												"statements": [
													{
														"expression": {
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1115,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "3601:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1116,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "3611:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3615:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3611:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3601:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1120,
														"nodeType": "ExpressionStatement",
														"src": "3601:15:10"
													},
													{
														"AST": {
															"nativeSrc": "3655:127:10",
															"nodeType": "YulBlock",
															"src": "3655:127:10",
															"statements": [
																{
																	"nativeSrc": "3749:19:10",
																	"nodeType": "YulAssignment",
																	"src": "3749:19:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "3763:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "3763:1:10"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "3766:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "3766:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mod",
																			"nativeSrc": "3759:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3759:3:10"
																		},
																		"nativeSrc": "3759:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3759:9:10"
																	},
																	"variableNames": [
																		{
																			"name": "result",
																			"nativeSrc": "3749:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3749:6:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1106,
																"isOffset": false,
																"isSlot": false,
																"src": "3763:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1108,
																"isOffset": false,
																"isSlot": false,
																"src": "3766:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1113,
																"isOffset": false,
																"isSlot": false,
																"src": "3749:6:10",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1121,
														"nodeType": "InlineAssembly",
														"src": "3630:152:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "3348:123:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "3485:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3500:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3492:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3511:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3503:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:22:10"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "3542:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3537:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3537:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3559:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3551:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:30:10"
									},
									"scope": 2563,
									"src": "3476:322:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "3989:122:10",
										"statements": [
											{
												"assignments": [
													1135,
													1137
												],
												"declarations": [
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4005:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1153,
														"src": "4000:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1134,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4000:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1137,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4022:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1153,
														"src": "4014:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4014:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"initialValue": {
													"arguments": [
														{
															"id": 1139,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "4039:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1140,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "4042:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1138,
														"name": "tryAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "4032:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4032:12:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3999:45:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1144,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "4069:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1145,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "4078:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4091:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1147,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4091:7:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1146,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "4086:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4086:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4100:3:10",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "4086:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1143,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "4061:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4061:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1133,
												"id": 1152,
												"nodeType": "Return",
												"src": "4054:50:10"
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "3804:103:10",
										"text": " @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saturatingAdd",
									"nameLocation": "3921:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "3935:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3935:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3954:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "3946:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3934:22:10"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "3980:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3980:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3979:9:10"
									},
									"scope": 2563,
									"src": "3912:199:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "4294:73:10",
										"statements": [
											{
												"assignments": [
													null,
													1165
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4315:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1173,
														"src": "4307:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1164,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4307:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1170,
												"initialValue": {
													"arguments": [
														{
															"id": 1167,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "4332:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1168,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "4335:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1166,
														"name": "trySub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "4325:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4325:12:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4304:33:10"
											},
											{
												"expression": {
													"id": 1171,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1165,
													"src": "4354:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1163,
												"id": 1172,
												"nodeType": "Return",
												"src": "4347:13:10"
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "4117:95:10",
										"text": " @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saturatingSub",
									"nameLocation": "4226:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4248:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "4240:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4240:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4259:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "4251:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4251:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4239:22:10"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "4285:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4285:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4284:9:10"
									},
									"scope": 2563,
									"src": "4217:150:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "4564:122:10",
										"statements": [
											{
												"assignments": [
													1185,
													1187
												],
												"declarations": [
													{
														"constant": false,
														"id": 1185,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4580:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1203,
														"src": "4575:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1184,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4575:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4597:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1203,
														"src": "4589:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1186,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4589:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1192,
												"initialValue": {
													"arguments": [
														{
															"id": 1189,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "4614:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1190,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4617:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1188,
														"name": "tryMul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "4607:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4607:12:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4574:45:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1194,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "4644:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1195,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "4653:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4666:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1197,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4666:7:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1196,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "4661:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4661:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4675:3:10",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "4661:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1193,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "4636:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4636:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1183,
												"id": 1202,
												"nodeType": "Return",
												"src": "4629:50:10"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "4373:109:10",
										"text": " @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saturatingMul",
									"nameLocation": "4496:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4518:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "4510:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4510:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4529:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "4521:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4521:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4509:22:10"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "4555:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4555:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4554:9:10"
									},
									"scope": 2563,
									"src": "4487:199:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "5158:207:10",
										"statements": [
											{
												"id": 1229,
												"nodeType": "UncheckedBlock",
												"src": "5168:191:10",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1216,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "5306:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1219,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1217,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1209,
																						"src": "5312:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 1218,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1211,
																						"src": "5316:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5312:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1220,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5311:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1223,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1207,
																					"src": "5337:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 1221,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4328,
																					"src": "5321:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 1222,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5330:6:10",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4327,
																				"src": "5321:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5321:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5311:36:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1226,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5310:38:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5306:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1215,
														"id": 1228,
														"nodeType": "Return",
														"src": "5299:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "4692:374:10",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "5080:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "5093:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5088:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5088:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5112:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5104:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5104:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5123:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5115:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5115:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5087:38:10"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5149:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5148:9:10"
									},
									"scope": 2563,
									"src": "5071:294:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "5502:44:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1242,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1234,
																"src": "5527:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1236,
																"src": "5531:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5527:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1245,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "5534:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1246,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "5537:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "5519:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5519:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1240,
												"id": 1248,
												"nodeType": "Return",
												"src": "5512:27:10"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "5371:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "5444:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5456:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "5448:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5448:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5467:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "5459:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5459:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5447:22:10"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "5493:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5493:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5492:9:10"
									},
									"scope": 2563,
									"src": "5435:111:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "5684:44:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1261,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "5709:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1262,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "5713:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5709:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1264,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "5716:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1265,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "5719:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1260,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "5701:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5701:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1259,
												"id": 1267,
												"nodeType": "Return",
												"src": "5694:27:10"
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "5552:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "5626:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5638:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "5630:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5649:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "5641:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5641:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:22:10"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "5675:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:9:10"
									},
									"scope": 2563,
									"src": "5617:111:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "5912:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1279,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "5967:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1280,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "5971:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5967:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1282,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5966:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1283,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1272,
																		"src": "5977:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1284,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "5981:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5977:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1286,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5976:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5986:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "5976:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5966:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1290,
												"nodeType": "Return",
												"src": "5959:28:10"
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "5734:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "5850:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5866:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "5858:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5858:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5877:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "5869:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5869:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5857:22:10"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "5903:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5903:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5902:9:10"
									},
									"scope": 2563,
									"src": "5841:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "6286:633:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1302,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "6300:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6305:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6300:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "IfStatement",
												"src": "6296:150:10",
												"trueBody": {
													"id": 1312,
													"nodeType": "Block",
													"src": "6308:138:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1308,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "6412:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6418:16:10",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 828,
																		"src": "6412:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1305,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "6400:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6406:5:10",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 860,
																	"src": "6400:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6400:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1311,
															"nodeType": "ExpressionStatement",
															"src": "6400:35:10"
														}
													]
												}
											},
											{
												"id": 1331,
												"nodeType": "UncheckedBlock",
												"src": "6829:84:10",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1316,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "6876:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6880:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6876:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1314,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4328,
																		"src": "6860:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6869:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4327,
																	"src": "6860:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6860:22:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1322,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1320,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1295,
																							"src": "6887:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1321,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6891:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "6887:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1323,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6886:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1324,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1297,
																				"src": "6896:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6886:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6900:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "6886:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1328,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6885:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6860:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1301,
														"id": 1330,
														"nodeType": "Return",
														"src": "6853:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "6000:210:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "6224:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6240:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "6232:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6232:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6251:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "6243:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6243:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:22:10"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "6277:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6277:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6276:9:10"
									},
									"scope": 2563,
									"src": "6215:704:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "7340:3585:10",
										"statements": [
											{
												"id": 1467,
												"nodeType": "UncheckedBlock",
												"src": "7350:3569:10",
												"statements": [
													{
														"assignments": [
															1346,
															1348
														],
														"declarations": [
															{
																"constant": false,
																"id": 1346,
																"mutability": "mutable",
																"name": "high",
																"nameLocation": "7383:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 1467,
																"src": "7375:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1345,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7375:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1348,
																"mutability": "mutable",
																"name": "low",
																"nameLocation": "7397:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1467,
																"src": "7389:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1347,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7389:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1353,
														"initialValue": {
															"arguments": [
																{
																	"id": 1350,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "7411:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1351,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "7414:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1349,
																"name": "mul512",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "7404:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7404:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7374:42:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1354,
																"name": "high",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "7498:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7506:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7498:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1362,
														"nodeType": "IfStatement",
														"src": "7494:365:10",
														"trueBody": {
															"id": 1361,
															"nodeType": "Block",
															"src": "7509:350:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1357,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1348,
																			"src": "7827:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1358,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1340,
																			"src": "7833:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7827:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1344,
																	"id": 1360,
																	"nodeType": "Return",
																	"src": "7820:24:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1363,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1340,
																"src": "7969:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1364,
																"name": "high",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "7984:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7969:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1381,
														"nodeType": "IfStatement",
														"src": "7965:142:10",
														"trueBody": {
															"id": 1380,
															"nodeType": "Block",
															"src": "7990:117:10",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1372,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1370,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1340,
																							"src": "8028:11:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1371,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8043:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "8028:16:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 1373,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 861,
																							"src": "8046:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1374,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "8052:16:10",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 828,
																						"src": "8046:22:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 1375,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 861,
																							"src": "8070:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1376,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "8076:14:10",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 824,
																						"src": "8070:20:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1369,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1231,
																					"src": "8020:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1377,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8020:71:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1366,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 861,
																				"src": "8008:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8014:5:10",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 860,
																			"src": "8008:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8008:84:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1379,
																	"nodeType": "ExpressionStatement",
																	"src": "8008:84:10"
																}
															]
														}
													},
													{
														"assignments": [
															1383
														],
														"declarations": [
															{
																"constant": false,
																"id": 1383,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "8367:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 1467,
																"src": "8359:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1382,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8359:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1384,
														"nodeType": "VariableDeclarationStatement",
														"src": "8359:17:10"
													},
													{
														"AST": {
															"nativeSrc": "8415:283:10",
															"nodeType": "YulBlock",
															"src": "8415:283:10",
															"statements": [
																{
																	"nativeSrc": "8484:38:10",
																	"nodeType": "YulAssignment",
																	"src": "8484:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "8504:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "8504:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "8507:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "8507:1:10"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "8510:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "8510:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "8497:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8497:6:10"
																		},
																		"nativeSrc": "8497:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8497:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "8484:9:10",
																			"nodeType": "YulIdentifier",
																			"src": "8484:9:10"
																		}
																	]
																},
																{
																	"nativeSrc": "8604:37:10",
																	"nodeType": "YulAssignment",
																	"src": "8604:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "high",
																				"nativeSrc": "8616:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8616:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "8625:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8625:9:10"
																					},
																					{
																						"name": "low",
																						"nativeSrc": "8636:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "8636:3:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "8622:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "8622:2:10"
																				},
																				"nativeSrc": "8622:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8622:18:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8612:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8612:3:10"
																		},
																		"nativeSrc": "8612:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8612:29:10"
																	},
																	"variableNames": [
																		{
																			"name": "high",
																			"nativeSrc": "8604:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "8604:4:10"
																		}
																	]
																},
																{
																	"nativeSrc": "8658:26:10",
																	"nodeType": "YulAssignment",
																	"src": "8658:26:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "low",
																				"nativeSrc": "8669:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8669:3:10"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "8674:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8674:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8665:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8665:3:10"
																		},
																		"nativeSrc": "8665:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8665:19:10"
																	},
																	"variableNames": [
																		{
																			"name": "low",
																			"nativeSrc": "8658:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8658:3:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1340,
																"isOffset": false,
																"isSlot": false,
																"src": "8510:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1346,
																"isOffset": false,
																"isSlot": false,
																"src": "8604:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1346,
																"isOffset": false,
																"isSlot": false,
																"src": "8616:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1348,
																"isOffset": false,
																"isSlot": false,
																"src": "8636:3:10",
																"valueSize": 1
															},
															{
																"declaration": 1348,
																"isOffset": false,
																"isSlot": false,
																"src": "8658:3:10",
																"valueSize": 1
															},
															{
																"declaration": 1348,
																"isOffset": false,
																"isSlot": false,
																"src": "8669:3:10",
																"valueSize": 1
															},
															{
																"declaration": 1383,
																"isOffset": false,
																"isSlot": false,
																"src": "8484:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1383,
																"isOffset": false,
																"isSlot": false,
																"src": "8625:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1383,
																"isOffset": false,
																"isSlot": false,
																"src": "8674:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1336,
																"isOffset": false,
																"isSlot": false,
																"src": "8504:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1338,
																"isOffset": false,
																"isSlot": false,
																"src": "8507:1:10",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1385,
														"nodeType": "InlineAssembly",
														"src": "8390:308:10"
													},
													{
														"assignments": [
															1387
														],
														"declarations": [
															{
																"constant": false,
																"id": 1387,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "8910:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 1467,
																"src": "8902:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1386,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8902:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1394,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1388,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1340,
																"src": "8917:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8932:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1390,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1340,
																			"src": "8936:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8932:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1392,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8931:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8917:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8902:46:10"
													},
													{
														"AST": {
															"nativeSrc": "8987:359:10",
															"nodeType": "YulBlock",
															"src": "8987:359:10",
															"statements": [
																{
																	"nativeSrc": "9052:37:10",
																	"nodeType": "YulAssignment",
																	"src": "9052:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "9071:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "9071:11:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "9084:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9084:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9067:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9067:3:10"
																		},
																		"nativeSrc": "9067:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9067:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "9052:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "9052:11:10"
																		}
																	]
																},
																{
																	"nativeSrc": "9153:21:10",
																	"nodeType": "YulAssignment",
																	"src": "9153:21:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "low",
																				"nativeSrc": "9164:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "9164:3:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "9169:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9169:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9160:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:10"
																		},
																		"nativeSrc": "9160:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9160:14:10"
																	},
																	"variableNames": [
																		{
																			"name": "low",
																			"nativeSrc": "9153:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9153:3:10"
																		}
																	]
																},
																{
																	"nativeSrc": "9293:39:10",
																	"nodeType": "YulAssignment",
																	"src": "9293:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9313:1:10",
																								"nodeType": "YulLiteral",
																								"src": "9313:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "9316:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "9316:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "9309:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "9309:3:10"
																						},
																						"nativeSrc": "9309:12:10",
																						"nodeType": "YulFunctionCall",
																						"src": "9309:12:10"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "9323:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "9323:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "9305:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9305:3:10"
																				},
																				"nativeSrc": "9305:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9305:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9330:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9330:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9301:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9301:3:10"
																		},
																		"nativeSrc": "9301:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9301:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "9293:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "9293:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1340,
																"isOffset": false,
																"isSlot": false,
																"src": "9052:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1340,
																"isOffset": false,
																"isSlot": false,
																"src": "9071:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1348,
																"isOffset": false,
																"isSlot": false,
																"src": "9153:3:10",
																"valueSize": 1
															},
															{
																"declaration": 1348,
																"isOffset": false,
																"isSlot": false,
																"src": "9164:3:10",
																"valueSize": 1
															},
															{
																"declaration": 1387,
																"isOffset": false,
																"isSlot": false,
																"src": "9084:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1387,
																"isOffset": false,
																"isSlot": false,
																"src": "9169:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1387,
																"isOffset": false,
																"isSlot": false,
																"src": "9293:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1387,
																"isOffset": false,
																"isSlot": false,
																"src": "9316:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1387,
																"isOffset": false,
																"isSlot": false,
																"src": "9323:4:10",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1395,
														"nodeType": "InlineAssembly",
														"src": "8962:384:10"
													},
													{
														"expression": {
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1396,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "9409:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1397,
																	"name": "high",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "9416:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1398,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1387,
																	"src": "9423:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9416:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9409:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1401,
														"nodeType": "ExpressionStatement",
														"src": "9409:18:10"
													},
													{
														"assignments": [
															1403
														],
														"declarations": [
															{
																"constant": false,
																"id": 1403,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "9770:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 1467,
																"src": "9762:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1402,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9762:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1410,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9781:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1405,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1340,
																			"src": "9785:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9781:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1407,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9780:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9800:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "9780:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9762:39:10"
													},
													{
														"expression": {
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1411,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "10018:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10029:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1413,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "10033:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1414,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "10047:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10033:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10029:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10018:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1418,
														"nodeType": "ExpressionStatement",
														"src": "10018:36:10"
													},
													{
														"expression": {
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1419,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "10088:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10099:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1421,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "10103:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1422,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "10117:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10103:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10099:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10088:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1426,
														"nodeType": "ExpressionStatement",
														"src": "10088:36:10"
													},
													{
														"expression": {
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1427,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "10160:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10171:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1429,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "10175:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1430,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "10189:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10175:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10171:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10160:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1434,
														"nodeType": "ExpressionStatement",
														"src": "10160:36:10"
													},
													{
														"expression": {
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1435,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "10231:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10242:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1437,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "10246:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1438,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "10260:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10246:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10242:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10231:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1442,
														"nodeType": "ExpressionStatement",
														"src": "10231:36:10"
													},
													{
														"expression": {
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1443,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "10304:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10315:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1445,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "10319:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1446,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "10333:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10319:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10315:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10304:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1450,
														"nodeType": "ExpressionStatement",
														"src": "10304:36:10"
													},
													{
														"expression": {
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1451,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "10378:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10389:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1453,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "10393:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1454,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "10407:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10393:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10389:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10378:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1458,
														"nodeType": "ExpressionStatement",
														"src": "10378:36:10"
													},
													{
														"expression": {
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1459,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "10859:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1460,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "10868:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1461,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "10874:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10868:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10859:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1464,
														"nodeType": "ExpressionStatement",
														"src": "10859:22:10"
													},
													{
														"expression": {
															"id": 1465,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "10902:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1344,
														"id": 1466,
														"nodeType": "Return",
														"src": "10895:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "6925:312:10",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "7251:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7266:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "7258:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7258:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7277:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "7269:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7269:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "7288:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "7280:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7280:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7257:43:10"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "7332:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "7324:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7324:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7323:16:10"
									},
									"scope": 2563,
									"src": "7242:3683:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "11164:128:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1485,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "11188:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1486,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "11191:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1487,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "11194:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1484,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1469,
																1506
															],
															"referencedDeclaration": 1469,
															"src": "11181:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11181:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1492,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "11242:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$954",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$954",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 1491,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2562,
																		"src": "11225:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11225:26:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1495,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1472,
																				"src": "11262:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1496,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1474,
																				"src": "11265:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1497,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1476,
																				"src": "11268:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1494,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "11255:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11255:25:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11283:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11255:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "11225:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 1489,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4328,
																"src": "11209:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11218:6:10",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4327,
															"src": "11209:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11209:76:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11181:104:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1483,
												"id": 1504,
												"nodeType": "Return",
												"src": "11174:111:10"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "10931:118:10",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "11063:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11078:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "11070:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11070:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11089:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "11081:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11081:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "11100:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "11092:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11092:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11122:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "11113:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$954",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1478,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1477,
														"name": "Rounding",
														"nameLocations": [
															"11113:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 954,
														"src": "11113:8:10"
													},
													"referencedDeclaration": 954,
													"src": "11113:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$954",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11069:62:10"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "11155:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11155:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11154:9:10"
									},
									"scope": 2563,
									"src": "11054:238:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "11500:245:10",
										"statements": [
											{
												"id": 1554,
												"nodeType": "UncheckedBlock",
												"src": "11510:229:10",
												"statements": [
													{
														"assignments": [
															1519,
															1521
														],
														"declarations": [
															{
																"constant": false,
																"id": 1519,
																"mutability": "mutable",
																"name": "high",
																"nameLocation": "11543:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 1554,
																"src": "11535:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1518,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11535:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1521,
																"mutability": "mutable",
																"name": "low",
																"nameLocation": "11557:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1554,
																"src": "11549:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1520,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11549:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1526,
														"initialValue": {
															"arguments": [
																{
																	"id": 1523,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "11571:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1524,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1511,
																	"src": "11574:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1522,
																"name": "mul512",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "11564:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
																}
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11564:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11534:42:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1527,
																"name": "high",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "11594:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11602:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 1529,
																	"name": "n",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1513,
																	"src": "11607:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "11602:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11594:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1540,
														"nodeType": "IfStatement",
														"src": "11590:86:10",
														"trueBody": {
															"id": 1539,
															"nodeType": "Block",
															"src": "11610:66:10",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1535,
																					"name": "Panic",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 861,
																					"src": "11640:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																						"typeString": "type(library Panic)"
																					}
																				},
																				"id": 1536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "11646:14:10",
																				"memberName": "UNDER_OVERFLOW",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 824,
																				"src": "11640:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1532,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 861,
																				"src": "11628:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 1534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11634:5:10",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 860,
																			"src": "11628:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11628:33:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1538,
																	"nodeType": "ExpressionStatement",
																	"src": "11628:33:10"
																}
															]
														}
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1541,
																			"name": "high",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1519,
																			"src": "11697:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					},
																					"id": 1544,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "323536",
																						"id": 1542,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11706:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"value": "256"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1543,
																						"name": "n",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1513,
																						"src": "11712:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "11706:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"id": 1545,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11705:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "11697:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1547,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11696:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "|",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1548,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1521,
																			"src": "11719:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"id": 1549,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1513,
																			"src": "11726:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "11719:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11718:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11696:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1517,
														"id": 1553,
														"nodeType": "Return",
														"src": "11689:39:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "11298:111:10",
										"text": " @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."
									},
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulShr",
									"nameLocation": "11423:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11438:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "11430:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11430:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11449:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "11441:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11441:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "11458:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "11452:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1512,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11452:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11429:31:10"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "11492:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "11484:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:16:10"
									},
									"scope": 2563,
									"src": "11414:331:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "11963:113:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1572,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "11987:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1573,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1561,
																"src": "11990:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1574,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "11993:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1571,
															"name": "mulShr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1556,
																1595
															],
															"referencedDeclaration": 1556,
															"src": "11980:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11980:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1579,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1566,
																			"src": "12031:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$954",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$954",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 1578,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2562,
																		"src": "12014:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12014:26:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1582,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1559,
																				"src": "12051:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1583,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1561,
																				"src": "12054:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1584,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12057:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 1585,
																					"name": "n",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1563,
																					"src": "12062:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "12057:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1581,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "12044:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12044:20:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12067:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "12044:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "12014:54:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 1576,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4328,
																"src": "11998:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12007:6:10",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4327,
															"src": "11998:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11998:71:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11980:89:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1570,
												"id": 1593,
												"nodeType": "Return",
												"src": "11973:96:10"
											}
										]
									},
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "11751:109:10",
										"text": " @dev Calculates x * y >> n with full precision, following the selected rounding direction."
									},
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulShr",
									"nameLocation": "11874:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11889:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "11881:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11881:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11900:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "11892:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11892:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "11909:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "11903:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1562,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11903:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11921:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "11912:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$954",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1565,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1564,
														"name": "Rounding",
														"nameLocations": [
															"11912:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 954,
														"src": "11912:8:10"
													},
													"referencedDeclaration": 954,
													"src": "11912:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$954",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11880:50:10"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "11954:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11954:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11953:9:10"
									},
									"scope": 2563,
									"src": "11865:211:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "12710:1849:10",
										"statements": [
											{
												"id": 1690,
												"nodeType": "UncheckedBlock",
												"src": "12720:1833:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1605,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1600,
																"src": "12748:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12753:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12748:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1610,
														"nodeType": "IfStatement",
														"src": "12744:20:10",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12763:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1604,
															"id": 1609,
															"nodeType": "Return",
															"src": "12756:8:10"
														}
													},
													{
														"assignments": [
															1612
														],
														"declarations": [
															{
																"constant": false,
																"id": 1612,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "13243:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 1690,
																"src": "13235:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1611,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13235:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1616,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1613,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1598,
																"src": "13255:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1614,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1600,
																"src": "13259:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13255:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13235:25:10"
													},
													{
														"assignments": [
															1618
														],
														"declarations": [
															{
																"constant": false,
																"id": 1618,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "13282:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1690,
																"src": "13274:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1617,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13274:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1620,
														"initialValue": {
															"id": 1619,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "13288:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13274:15:10"
													},
													{
														"assignments": [
															1622
														],
														"declarations": [
															{
																"constant": false,
																"id": 1622,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "13432:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1690,
																"src": "13425:8:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1621,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13425:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1624,
														"initialValue": {
															"hexValue": "30",
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13436:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13425:12:10"
													},
													{
														"assignments": [
															1626
														],
														"declarations": [
															{
																"constant": false,
																"id": 1626,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "13458:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1690,
																"src": "13451:8:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1625,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13451:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1628,
														"initialValue": {
															"hexValue": "31",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13462:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13451:12:10"
													},
													{
														"body": {
															"id": 1665,
															"nodeType": "Block",
															"src": "13501:882:10",
															"statements": [
																{
																	"assignments": [
																		1633
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1633,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "13527:8:10",
																			"nodeType": "VariableDeclaration",
																			"scope": 1665,
																			"src": "13519:16:10",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1632,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "13519:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1637,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1634,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1618,
																			"src": "13538:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1635,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1612,
																			"src": "13544:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13538:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "13519:34:10"
																},
																{
																	"expression": {
																		"id": 1648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1638,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1618,
																					"src": "13573:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1639,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1612,
																					"src": "13578:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1640,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "13572:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1641,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1612,
																					"src": "13678:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1646,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1642,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1618,
																						"src": "13923:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1645,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1643,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1612,
																							"src": "13929:9:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1644,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1633,
																							"src": "13941:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "13929:20:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13923:26:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1647,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "13591:376:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "13572:395:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1649,
																	"nodeType": "ExpressionStatement",
																	"src": "13572:395:10"
																},
																{
																	"expression": {
																		"id": 1663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1650,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1622,
																					"src": "13987:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 1651,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1626,
																					"src": "13990:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1652,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "13986:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1653,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1626,
																					"src": "14072:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 1661,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1654,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1622,
																						"src": "14326:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 1660,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1655,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1626,
																							"src": "14330:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 1658,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1633,
																									"src": "14341:8:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1657,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "14334:6:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 1656,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "14334:6:10",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1659,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14334:16:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "14330:20:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "14326:24:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1662,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "13995:373:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "13986:382:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1664,
																	"nodeType": "ExpressionStatement",
																	"src": "13986:382:10"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1629,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "13485:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13498:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13485:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1666,
														"nodeType": "WhileStatement",
														"src": "13478:905:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1667,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1618,
																"src": "14401:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14408:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "14401:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1672,
														"nodeType": "IfStatement",
														"src": "14397:22:10",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14418:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1604,
															"id": 1671,
															"nodeType": "Return",
															"src": "14411:8:10"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1674,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "14470:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14474:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "14470:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1677,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1600,
																		"src": "14477:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "14489:2:10",
																				"subExpression": {
																					"id": 1680,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1622,
																					"src": "14490:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14481:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1678,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "14481:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14481:11:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14477:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1686,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1622,
																			"src": "14502:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14494:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1684,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "14494:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14494:10:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1673,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "14462:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14462:43:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1604,
														"id": 1689,
														"nodeType": "Return",
														"src": "14455:50:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1596,
										"nodeType": "StructuredDocumentation",
										"src": "12082:553:10",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "12649:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12664:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "12656:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12656:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "12675:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "12667:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12667:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12655:22:10"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "12701:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12701:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12700:9:10"
									},
									"scope": 2563,
									"src": "12640:1919:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "15159:82:10",
										"statements": [
											{
												"id": 1711,
												"nodeType": "UncheckedBlock",
												"src": "15169:66:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1704,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "15212:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1705,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "15215:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15219:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "15215:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1708,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "15222:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1702,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2563,
																	"src": "15200:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$2563_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15205:6:10",
																"memberName": "modExp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1749,
																"src": "15200:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																}
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15200:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1701,
														"id": 1710,
														"nodeType": "Return",
														"src": "15193:31:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "14565:514:10",
										"text": " @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invModPrime",
									"nameLocation": "15093:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "15113:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "15105:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15105:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "15124:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "15116:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15116:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15104:22:10"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "15150:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15150:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15149:9:10"
									},
									"scope": 2563,
									"src": "15084:157:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "16011:174:10",
										"statements": [
											{
												"assignments": [
													1726,
													1728
												],
												"declarations": [
													{
														"constant": false,
														"id": 1726,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16027:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1748,
														"src": "16022:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1725,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16022:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1728,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16044:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1748,
														"src": "16036:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1727,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16036:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"arguments": [
														{
															"id": 1730,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "16064:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1731,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "16067:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1732,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "16070:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1729,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1773,
															1855
														],
														"referencedDeclaration": 1773,
														"src": "16054:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16054:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16021:51:10"
											},
											{
												"condition": {
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16086:8:10",
													"subExpression": {
														"id": 1735,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "16087:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1745,
												"nodeType": "IfStatement",
												"src": "16082:74:10",
												"trueBody": {
													"id": 1744,
													"nodeType": "Block",
													"src": "16096:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1740,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "16122:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16128:16:10",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 828,
																		"src": "16122:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1737,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "16110:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16116:5:10",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 860,
																	"src": "16110:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16110:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1743,
															"nodeType": "ExpressionStatement",
															"src": "16110:35:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1746,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1728,
													"src": "16172:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1724,
												"id": 1747,
												"nodeType": "Return",
												"src": "16165:13:10"
											}
										]
									},
									"documentation": {
										"id": 1714,
										"nodeType": "StructuredDocumentation",
										"src": "15247:678:10",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "15939:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "15954:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "15946:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15946:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "15965:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "15957:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15957:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "15976:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "15968:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15968:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15945:33:10"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "16002:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16002:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16001:9:10"
									},
									"scope": 2563,
									"src": "15930:255:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "17039:1493:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1763,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "17053:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17058:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17053:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1770,
												"nodeType": "IfStatement",
												"src": "17049:29:10",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17069:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17076:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1768,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17068:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1762,
													"id": 1769,
													"nodeType": "Return",
													"src": "17061:17:10"
												}
											},
											{
												"AST": {
													"nativeSrc": "17113:1413:10",
													"nodeType": "YulBlock",
													"src": "17113:1413:10",
													"statements": [
														{
															"nativeSrc": "17127:22:10",
															"nodeType": "YulVariableDeclaration",
															"src": "17127:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17144:4:10",
																		"nodeType": "YulLiteral",
																		"src": "17144:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17138:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "17138:5:10"
																},
																"nativeSrc": "17138:11:10",
																"nodeType": "YulFunctionCall",
																"src": "17138:11:10"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "17131:3:10",
																	"nodeType": "YulTypedName",
																	"src": "17131:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "18057:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18057:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18062:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18062:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18050:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18050:6:10"
																},
																"nativeSrc": "18050:17:10",
																"nodeType": "YulFunctionCall",
																"src": "18050:17:10"
															},
															"nativeSrc": "18050:17:10",
															"nodeType": "YulExpressionStatement",
															"src": "18050:17:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18091:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "18091:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18096:4:10",
																				"nodeType": "YulLiteral",
																				"src": "18096:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18087:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18087:3:10"
																		},
																		"nativeSrc": "18087:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18087:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18103:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18103:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18080:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18080:6:10"
																},
																"nativeSrc": "18080:28:10",
																"nodeType": "YulFunctionCall",
																"src": "18080:28:10"
															},
															"nativeSrc": "18080:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "18080:28:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18132:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "18132:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18137:4:10",
																				"nodeType": "YulLiteral",
																				"src": "18137:4:10",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18128:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18128:3:10"
																		},
																		"nativeSrc": "18128:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18128:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18144:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18144:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18121:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18121:6:10"
																},
																"nativeSrc": "18121:28:10",
																"nodeType": "YulFunctionCall",
																"src": "18121:28:10"
															},
															"nativeSrc": "18121:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "18121:28:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18173:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "18173:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18178:4:10",
																				"nodeType": "YulLiteral",
																				"src": "18178:4:10",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18169:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18169:3:10"
																		},
																		"nativeSrc": "18169:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18169:14:10"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "18185:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18185:1:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18162:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18162:6:10"
																},
																"nativeSrc": "18162:25:10",
																"nodeType": "YulFunctionCall",
																"src": "18162:25:10"
															},
															"nativeSrc": "18162:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "18162:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18211:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "18211:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18216:4:10",
																				"nodeType": "YulLiteral",
																				"src": "18216:4:10",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18207:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18207:3:10"
																		},
																		"nativeSrc": "18207:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18207:14:10"
																	},
																	{
																		"name": "e",
																		"nativeSrc": "18223:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18223:1:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18200:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18200:6:10"
																},
																"nativeSrc": "18200:25:10",
																"nodeType": "YulFunctionCall",
																"src": "18200:25:10"
															},
															"nativeSrc": "18200:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "18200:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18249:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "18249:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18254:4:10",
																				"nodeType": "YulLiteral",
																				"src": "18254:4:10",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18245:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18245:3:10"
																		},
																		"nativeSrc": "18245:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18245:14:10"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "18261:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18261:1:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18238:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18238:6:10"
																},
																"nativeSrc": "18238:25:10",
																"nodeType": "YulFunctionCall",
																"src": "18238:25:10"
															},
															"nativeSrc": "18238:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "18238:25:10"
														},
														{
															"nativeSrc": "18425:57:10",
															"nodeType": "YulAssignment",
															"src": "18425:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "18447:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18447:3:10"
																		},
																		"nativeSrc": "18447:5:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18447:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18454:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18454:4:10",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "18460:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18460:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18465:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18465:4:10",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18471:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18471:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18477:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18477:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "18436:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "18436:10:10"
																},
																"nativeSrc": "18436:46:10",
																"nodeType": "YulFunctionCall",
																"src": "18436:46:10"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "18425:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "18425:7:10"
																}
															]
														},
														{
															"nativeSrc": "18495:21:10",
															"nodeType": "YulAssignment",
															"src": "18495:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18511:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18511:4:10",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18505:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "18505:5:10"
																},
																"nativeSrc": "18505:11:10",
																"nodeType": "YulFunctionCall",
																"src": "18505:11:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18495:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18495:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1752,
														"isOffset": false,
														"isSlot": false,
														"src": "18185:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1754,
														"isOffset": false,
														"isSlot": false,
														"src": "18223:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1756,
														"isOffset": false,
														"isSlot": false,
														"src": "18261:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1761,
														"isOffset": false,
														"isSlot": false,
														"src": "18495:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1759,
														"isOffset": false,
														"isSlot": false,
														"src": "18425:7:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1771,
												"nodeType": "InlineAssembly",
												"src": "17088:1438:10"
											}
										]
									},
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "16191:738:10",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "16943:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16961:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "16953:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16953:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16972:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "16964:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16983:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "16975:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16975:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16952:33:10"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "17014:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "17009:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17009:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17031:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "17023:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17023:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17008:30:10"
									},
									"scope": 2563,
									"src": "16934:1598:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "18729:179:10",
										"statements": [
											{
												"assignments": [
													1786,
													1788
												],
												"declarations": [
													{
														"constant": false,
														"id": 1786,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "18745:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1808,
														"src": "18740:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1785,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18740:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1788,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18767:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1808,
														"src": "18754:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1787,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18754:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1794,
												"initialValue": {
													"arguments": [
														{
															"id": 1790,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "18787:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1791,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1778,
															"src": "18790:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1792,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1780,
															"src": "18793:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1789,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1773,
															1855
														],
														"referencedDeclaration": 1855,
														"src": "18777:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18777:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18739:56:10"
											},
											{
												"condition": {
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18809:8:10",
													"subExpression": {
														"id": 1795,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "18810:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1805,
												"nodeType": "IfStatement",
												"src": "18805:74:10",
												"trueBody": {
													"id": 1804,
													"nodeType": "Block",
													"src": "18819:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1800,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "18845:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "18851:16:10",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 828,
																		"src": "18845:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1797,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "18833:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$861_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18839:5:10",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 860,
																	"src": "18833:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18833:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1803,
															"nodeType": "ExpressionStatement",
															"src": "18833:35:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1806,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1788,
													"src": "18895:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1784,
												"id": 1807,
												"nodeType": "Return",
												"src": "18888:13:10"
											}
										]
									},
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "18538:85:10",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "18637:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18657:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "18644:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1775,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18644:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "18673:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "18660:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1777,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18660:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "18689:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "18676:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1779,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18676:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18643:48:10"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "18715:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18715:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18714:14:10"
									},
									"scope": 2563,
									"src": "18628:280:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "19162:771:10",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1824,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "19187:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1823,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1888,
														"src": "19176:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19176:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1833,
												"nodeType": "IfStatement",
												"src": "19172:47:10",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19199:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19216:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "19206:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 1827,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "19210:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19206:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 1831,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "19198:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 1822,
													"id": 1832,
													"nodeType": "Return",
													"src": "19191:28:10"
												}
											},
											{
												"assignments": [
													1835
												],
												"declarations": [
													{
														"constant": false,
														"id": 1835,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "19238:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1854,
														"src": "19230:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1834,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19230:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1838,
												"initialValue": {
													"expression": {
														"id": 1836,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "19245:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "19247:6:10",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "19245:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19230:23:10"
											},
											{
												"expression": {
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1839,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "19335:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1842,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1812,
																	"src": "19361:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19363:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "19361:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1844,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1814,
																	"src": "19371:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19373:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "19371:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1846,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "19381:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1847,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1812,
																"src": "19387:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1848,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1814,
																"src": "19390:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1849,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "19393:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1840,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "19344:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "19348:12:10",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "19344:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 1850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19344:51:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "19335:60:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "19335:60:10"
											},
											{
												"AST": {
													"nativeSrc": "19431:496:10",
													"nodeType": "YulBlock",
													"src": "19431:496:10",
													"statements": [
														{
															"nativeSrc": "19445:32:10",
															"nodeType": "YulVariableDeclaration",
															"src": "19445:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "19464:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19464:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19472:4:10",
																		"nodeType": "YulLiteral",
																		"src": "19472:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19460:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19460:3:10"
																},
																"nativeSrc": "19460:17:10",
																"nodeType": "YulFunctionCall",
																"src": "19460:17:10"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "19449:7:10",
																	"nodeType": "YulTypedName",
																	"src": "19449:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19567:73:10",
															"nodeType": "YulAssignment",
															"src": "19567:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "19589:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19589:3:10"
																		},
																		"nativeSrc": "19589:5:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19589:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19596:4:10",
																		"nodeType": "YulLiteral",
																		"src": "19596:4:10",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "19602:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "19602:7:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "19617:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19617:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "19611:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "19611:5:10"
																		},
																		"nativeSrc": "19611:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19611:13:10"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "19626:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "19626:7:10"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "19635:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19635:4:10"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "19578:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "19578:10:10"
																},
																"nativeSrc": "19578:62:10",
																"nodeType": "YulFunctionCall",
																"src": "19578:62:10"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "19567:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "19567:7:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "19796:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19796:6:10"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "19804:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19804:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19789:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19789:6:10"
																},
																"nativeSrc": "19789:20:10",
																"nodeType": "YulFunctionCall",
																"src": "19789:20:10"
															},
															"nativeSrc": "19789:20:10",
															"nodeType": "YulExpressionStatement",
															"src": "19789:20:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19892:4:10",
																		"nodeType": "YulLiteral",
																		"src": "19892:4:10",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "19902:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "19902:7:10"
																			},
																			{
																				"name": "mLen",
																				"nativeSrc": "19911:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19911:4:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19898:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19898:3:10"
																		},
																		"nativeSrc": "19898:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19898:18:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19885:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19885:6:10"
																},
																"nativeSrc": "19885:32:10",
																"nodeType": "YulFunctionCall",
																"src": "19885:32:10"
															},
															"nativeSrc": "19885:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "19885:32:10"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1835,
														"isOffset": false,
														"isSlot": false,
														"src": "19635:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1835,
														"isOffset": false,
														"isSlot": false,
														"src": "19804:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1835,
														"isOffset": false,
														"isSlot": false,
														"src": "19911:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "19464:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "19617:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1821,
														"isOffset": false,
														"isSlot": false,
														"src": "19796:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "19567:7:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1853,
												"nodeType": "InlineAssembly",
												"src": "19406:521:10"
											}
										]
									},
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "18914:88:10",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "19016:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "19048:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "19035:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1811,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19035:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "19072:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "19059:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19059:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "19096:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "19083:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1815,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19083:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19025:78:10"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "19132:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "19127:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1818,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19127:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "19154:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "19141:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1820,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19141:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19126:35:10"
									},
									"scope": 2563,
									"src": "19007:926:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1887,
										"nodeType": "Block",
										"src": "20088:176:10",
										"statements": [
											{
												"body": {
													"id": 1883,
													"nodeType": "Block",
													"src": "20145:92:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1874,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1858,
																		"src": "20163:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1876,
																	"indexExpression": {
																		"id": 1875,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "20173:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20163:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20179:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "20163:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1882,
															"nodeType": "IfStatement",
															"src": "20159:68:10",
															"trueBody": {
																"id": 1881,
																"nodeType": "Block",
																"src": "20182:45:10",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 1879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20207:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 1862,
																		"id": 1880,
																		"nodeType": "Return",
																		"src": "20200:12:10"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1867,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "20118:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1868,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "20122:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20132:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "20122:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20118:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1884,
												"initializationExpression": {
													"assignments": [
														1864
													],
													"declarations": [
														{
															"constant": false,
															"id": 1864,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "20111:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1884,
															"src": "20103:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1863,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "20103:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1866,
													"initialValue": {
														"hexValue": "30",
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20115:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "20103:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "20140:3:10",
														"subExpression": {
															"id": 1871,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "20142:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1873,
													"nodeType": "ExpressionStatement",
													"src": "20140:3:10"
												},
												"nodeType": "ForStatement",
												"src": "20098:139:10"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20253:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1862,
												"id": 1886,
												"nodeType": "Return",
												"src": "20246:11:10"
											}
										]
									},
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "19939:72:10",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 1888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "20025:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "20049:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "20036:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1857,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20036:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20035:24:10"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "20082:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20082:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20081:6:10"
									},
									"scope": 2563,
									"src": "20016:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2106,
										"nodeType": "Block",
										"src": "20624:5124:10",
										"statements": [
											{
												"id": 2105,
												"nodeType": "UncheckedBlock",
												"src": "20634:5108:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1896,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1891,
																"src": "20728:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20733:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "20728:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1902,
														"nodeType": "IfStatement",
														"src": "20724:53:10",
														"trueBody": {
															"id": 1901,
															"nodeType": "Block",
															"src": "20736:41:10",
															"statements": [
																{
																	"expression": {
																		"id": 1899,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1891,
																		"src": "20761:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1895,
																	"id": 1900,
																	"nodeType": "Return",
																	"src": "20754:8:10"
																}
															]
														}
													},
													{
														"assignments": [
															1904
														],
														"declarations": [
															{
																"constant": false,
																"id": 1904,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "21712:2:10",
																"nodeType": "VariableDeclaration",
																"scope": 2105,
																"src": "21704:10:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1903,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21704:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1906,
														"initialValue": {
															"id": 1905,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1891,
															"src": "21717:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21704:14:10"
													},
													{
														"assignments": [
															1908
														],
														"declarations": [
															{
																"constant": false,
																"id": 1908,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "21740:2:10",
																"nodeType": "VariableDeclaration",
																"scope": 2105,
																"src": "21732:10:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1907,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21732:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1910,
														"initialValue": {
															"hexValue": "31",
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21745:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21732:14:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1911,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "21765:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 1914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21772:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 1913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21777:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21772:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 1915,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21771:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "21765:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1926,
														"nodeType": "IfStatement",
														"src": "21761:92:10",
														"trueBody": {
															"id": 1925,
															"nodeType": "Block",
															"src": "21783:70:10",
															"statements": [
																{
																	"expression": {
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1917,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "21801:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21808:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21801:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1920,
																	"nodeType": "ExpressionStatement",
																	"src": "21801:10:10"
																},
																{
																	"expression": {
																		"id": 1923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1921,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "21829:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21836:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21829:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1924,
																	"nodeType": "ExpressionStatement",
																	"src": "21829:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1927,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "21870:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21877:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 1929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21882:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21877:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 1931,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21876:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "21870:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1942,
														"nodeType": "IfStatement",
														"src": "21866:90:10",
														"trueBody": {
															"id": 1941,
															"nodeType": "Block",
															"src": "21887:69:10",
															"statements": [
																{
																	"expression": {
																		"id": 1935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1933,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "21905:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21912:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21905:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1936,
																	"nodeType": "ExpressionStatement",
																	"src": "21905:9:10"
																},
																{
																	"expression": {
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1937,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "21932:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21939:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21932:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1940,
																	"nodeType": "ExpressionStatement",
																	"src": "21932:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1943,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "21973:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 1946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21980:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 1945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21985:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21980:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 1947,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21979:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "21973:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1958,
														"nodeType": "IfStatement",
														"src": "21969:90:10",
														"trueBody": {
															"id": 1957,
															"nodeType": "Block",
															"src": "21990:69:10",
															"statements": [
																{
																	"expression": {
																		"id": 1951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1949,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "22008:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22015:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22008:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1952,
																	"nodeType": "ExpressionStatement",
																	"src": "22008:9:10"
																},
																{
																	"expression": {
																		"id": 1955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1953,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "22035:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22042:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22035:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1956,
																	"nodeType": "ExpressionStatement",
																	"src": "22035:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1959,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "22076:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22083:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 1961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22088:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22083:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 1963,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22082:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "22076:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1974,
														"nodeType": "IfStatement",
														"src": "22072:89:10",
														"trueBody": {
															"id": 1973,
															"nodeType": "Block",
															"src": "22093:68:10",
															"statements": [
																{
																	"expression": {
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1965,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "22111:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22118:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22111:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1968,
																	"nodeType": "ExpressionStatement",
																	"src": "22111:9:10"
																},
																{
																	"expression": {
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1969,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "22138:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22145:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22138:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1972,
																	"nodeType": "ExpressionStatement",
																	"src": "22138:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1975,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "22178:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22185:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 1977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22190:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22185:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 1979,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22184:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "22178:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1990,
														"nodeType": "IfStatement",
														"src": "22174:87:10",
														"trueBody": {
															"id": 1989,
															"nodeType": "Block",
															"src": "22194:67:10",
															"statements": [
																{
																	"expression": {
																		"id": 1983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1981,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "22212:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22219:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22212:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1984,
																	"nodeType": "ExpressionStatement",
																	"src": "22212:8:10"
																},
																{
																	"expression": {
																		"id": 1987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1985,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "22238:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22245:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22238:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1988,
																	"nodeType": "ExpressionStatement",
																	"src": "22238:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1991,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "22278:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 1994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22285:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 1993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22290:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22285:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 1995,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22284:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "22278:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2006,
														"nodeType": "IfStatement",
														"src": "22274:87:10",
														"trueBody": {
															"id": 2005,
															"nodeType": "Block",
															"src": "22294:67:10",
															"statements": [
																{
																	"expression": {
																		"id": 1999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1997,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "22312:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22319:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22312:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2000,
																	"nodeType": "ExpressionStatement",
																	"src": "22312:8:10"
																},
																{
																	"expression": {
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2001,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "22338:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22345:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22338:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2004,
																	"nodeType": "ExpressionStatement",
																	"src": "22338:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2007,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "22378:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 2010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22385:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 2009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22390:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22385:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 2011,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22384:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "22378:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2018,
														"nodeType": "IfStatement",
														"src": "22374:61:10",
														"trueBody": {
															"id": 2017,
															"nodeType": "Block",
															"src": "22394:41:10",
															"statements": [
																{
																	"expression": {
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2013,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "22412:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22419:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22412:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2016,
																	"nodeType": "ExpressionStatement",
																	"src": "22412:8:10"
																}
															]
														}
													},
													{
														"expression": {
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2019,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "22855:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 2020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22861:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2021,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "22865:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22861:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2023,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22860:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22872:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22860:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22855:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2027,
														"nodeType": "ExpressionStatement",
														"src": "22855:18:10"
													},
													{
														"expression": {
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2028,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "24760:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2029,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "24766:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2030,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "24771:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2031,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1908,
																					"src": "24775:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24771:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24766:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2034,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24765:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24782:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24765:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24760:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2038,
														"nodeType": "ExpressionStatement",
														"src": "24760:23:10"
													},
													{
														"expression": {
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2039,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "24869:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2040,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "24875:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2041,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "24880:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2042,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1908,
																					"src": "24884:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24880:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24875:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2045,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24874:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24891:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24874:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24869:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2049,
														"nodeType": "ExpressionStatement",
														"src": "24869:23:10"
													},
													{
														"expression": {
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2050,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "24980:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2051,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "24986:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2052,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "24991:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2053,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1908,
																					"src": "24995:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24991:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24986:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2056,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24985:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25002:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24985:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24980:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2060,
														"nodeType": "ExpressionStatement",
														"src": "24980:23:10"
													},
													{
														"expression": {
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2061,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "25089:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2062,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "25095:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2063,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "25100:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2064,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1908,
																					"src": "25104:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25100:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25095:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2067,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25094:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25111:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25094:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25089:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2071,
														"nodeType": "ExpressionStatement",
														"src": "25089:23:10"
													},
													{
														"expression": {
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2072,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "25199:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2073,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "25205:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2074,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "25210:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2075,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1908,
																					"src": "25214:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25210:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25205:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2078,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25204:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25221:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25204:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25199:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2082,
														"nodeType": "ExpressionStatement",
														"src": "25199:23:10"
													},
													{
														"expression": {
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2083,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "25309:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2084,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "25315:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2085,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "25320:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2086,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1908,
																					"src": "25324:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25320:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25315:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2089,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25314:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25331:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25314:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25309:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2093,
														"nodeType": "ExpressionStatement",
														"src": "25309:23:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2094,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "25698:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2097,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "25719:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2098,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1891,
																				"src": "25724:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2099,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "25728:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25724:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "25719:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2095,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4328,
																		"src": "25703:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25712:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4327,
																	"src": "25703:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25703:28:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25698:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1895,
														"id": 2104,
														"nodeType": "Return",
														"src": "25691:40:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "20270:292:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 2107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "20576:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20589:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "20581:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20581:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20580:11:10"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "20615:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20614:9:10"
									},
									"scope": 2563,
									"src": "20567:5181:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "25921:171:10",
										"statements": [
											{
												"id": 2139,
												"nodeType": "UncheckedBlock",
												"src": "25931:155:10",
												"statements": [
													{
														"assignments": [
															2119
														],
														"declarations": [
															{
																"constant": false,
																"id": 2119,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25963:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2139,
																"src": "25955:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2118,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25955:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2123,
														"initialValue": {
															"arguments": [
																{
																	"id": 2121,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "25977:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2120,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2107,
																	2141
																],
																"referencedDeclaration": 2107,
																"src": "25972:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25972:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25955:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2124,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2119,
																"src": "26000:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2128,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2113,
																					"src": "26042:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2127,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2562,
																				"src": "26025:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26025:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2132,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2130,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2119,
																					"src": "26055:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2131,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2119,
																					"src": "26064:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26055:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2133,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2110,
																				"src": "26073:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26055:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26025:49:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2125,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4328,
																		"src": "26009:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26018:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4327,
																	"src": "26009:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26009:66:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26000:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2117,
														"id": 2138,
														"nodeType": "Return",
														"src": "25993:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2108,
										"nodeType": "StructuredDocumentation",
										"src": "25754:86:10",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "25854:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25867:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "25859:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25859:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25879:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "25870:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$954",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2112,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2111,
														"name": "Rounding",
														"nameLocations": [
															"25870:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 954,
														"src": "25870:8:10"
													},
													"referencedDeclaration": 954,
													"src": "25870:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$954",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25858:30:10"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "25912:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25912:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25911:9:10"
									},
									"scope": 2563,
									"src": "25845:247:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2231,
										"nodeType": "Block",
										"src": "26281:2334:10",
										"statements": [
											{
												"expression": {
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2149,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "26363:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2152,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "26383:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666666666666666666666666666666666666666666666666666",
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26387:34:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1455"
																		},
																		"value": "0xffffffffffffffffffffffffffffffff"
																	},
																	"src": "26383:38:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2150,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "26367:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26376:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "26367:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26367:55:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "37",
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26426:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"src": "26367:60:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26363:64:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2159,
												"nodeType": "ExpressionStatement",
												"src": "26363:64:10"
											},
											{
												"expression": {
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2160,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "26503:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2163,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2144,
																					"src": "26525:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2164,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2147,
																					"src": "26530:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26525:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2166,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26524:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666666666666666666666666666",
																		"id": 2167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26535:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551615_by_1",
																			"typeString": "int_const 18446744073709551615"
																		},
																		"value": "0xffffffffffffffff"
																	},
																	"src": "26524:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2161,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "26508:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26517:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "26508:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26508:46:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "36",
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26558:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "26508:51:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26503:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2173,
												"nodeType": "ExpressionStatement",
												"src": "26503:56:10"
											},
											{
												"expression": {
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2174,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "26634:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2177,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2144,
																					"src": "26656:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2178,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2147,
																					"src": "26661:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26656:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2180,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26655:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666",
																		"id": 2181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26666:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967295_by_1",
																			"typeString": "int_const 4294967295"
																		},
																		"value": "0xffffffff"
																	},
																	"src": "26655:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2175,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "26639:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26648:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "26639:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26639:38:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "35",
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26681:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"src": "26639:43:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26634:48:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2187,
												"nodeType": "ExpressionStatement",
												"src": "26634:48:10"
											},
											{
												"expression": {
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2188,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "26757:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2191,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2144,
																					"src": "26779:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2192,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2147,
																					"src": "26784:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26779:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2194,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26778:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666",
																		"id": 2195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26789:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65535_by_1",
																			"typeString": "int_const 65535"
																		},
																		"value": "0xffff"
																	},
																	"src": "26778:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2189,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "26762:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26771:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "26762:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26762:34:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "34",
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26800:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "26762:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26757:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2201,
												"nodeType": "ExpressionStatement",
												"src": "26757:44:10"
											},
											{
												"expression": {
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2202,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "26874:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2205,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2144,
																					"src": "26896:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2206,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2147,
																					"src": "26901:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26896:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2208,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26895:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666",
																		"id": 2209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26906:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_255_by_1",
																			"typeString": "int_const 255"
																		},
																		"value": "0xff"
																	},
																	"src": "26895:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2203,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "26879:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26888:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "26879:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26879:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "33",
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26915:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"src": "26879:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26874:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2215,
												"nodeType": "ExpressionStatement",
												"src": "26874:42:10"
											},
											{
												"expression": {
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2216,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "26988:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2219,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2144,
																					"src": "27010:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2220,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2147,
																					"src": "27015:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "27010:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2222,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "27009:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866",
																		"id": 2223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27020:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "0xf"
																	},
																	"src": "27009:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2217,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "26993:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27002:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "26993:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26993:31:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "32",
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27028:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "26993:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26988:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2229,
												"nodeType": "ExpressionStatement",
												"src": "26988:41:10"
											},
											{
												"AST": {
													"nativeSrc": "28490:119:10",
													"nodeType": "YulBlock",
													"src": "28490:119:10",
													"statements": [
														{
															"nativeSrc": "28504:95:10",
															"nodeType": "YulAssignment",
															"src": "28504:95:10",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "28512:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "28512:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "28524:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "28524:1:10"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "28527:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "28527:1:10"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "28520:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "28520:3:10"
																				},
																				"nativeSrc": "28520:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "28520:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28531:66:10",
																				"nodeType": "YulLiteral",
																				"src": "28531:66:10",
																				"type": "",
																				"value": "0x0000010102020202030303030303030300000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "byte",
																			"nativeSrc": "28515:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "28515:4:10"
																		},
																		"nativeSrc": "28515:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28515:83:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "28509:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "28509:2:10"
																},
																"nativeSrc": "28509:90:10",
																"nodeType": "YulFunctionCall",
																"src": "28509:90:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "28504:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "28504:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2147,
														"isOffset": false,
														"isSlot": false,
														"src": "28504:1:10",
														"valueSize": 1
													},
													{
														"declaration": 2147,
														"isOffset": false,
														"isSlot": false,
														"src": "28512:1:10",
														"valueSize": 1
													},
													{
														"declaration": 2147,
														"isOffset": false,
														"isSlot": false,
														"src": "28524:1:10",
														"valueSize": 1
													},
													{
														"declaration": 2144,
														"isOffset": false,
														"isSlot": false,
														"src": "28527:1:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2230,
												"nodeType": "InlineAssembly",
												"src": "28465:144:10"
											}
										]
									},
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "26098:119:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "26231:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "26244:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "26236:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26236:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26235:11:10"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "26278:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "26270:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26270:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26269:11:10"
									},
									"scope": 2563,
									"src": "26222:2393:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2265,
										"nodeType": "Block",
										"src": "28848:175:10",
										"statements": [
											{
												"id": 2264,
												"nodeType": "UncheckedBlock",
												"src": "28858:159:10",
												"statements": [
													{
														"assignments": [
															2244
														],
														"declarations": [
															{
																"constant": false,
																"id": 2244,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "28890:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2264,
																"src": "28882:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2243,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28882:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2248,
														"initialValue": {
															"arguments": [
																{
																	"id": 2246,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2235,
																	"src": "28904:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2245,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2232,
																	2266
																],
																"referencedDeclaration": 2232,
																"src": "28899:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28899:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "28882:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2249,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2244,
																"src": "28931:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2253,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2238,
																					"src": "28973:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2252,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2562,
																				"src": "28956:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28956:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2255,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28986:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 2256,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2244,
																					"src": "28991:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28986:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2258,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2235,
																				"src": "29000:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28986:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "28956:49:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2250,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4328,
																		"src": "28940:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "28949:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4327,
																	"src": "28940:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28940:66:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28931:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2242,
														"id": 2263,
														"nodeType": "Return",
														"src": "28924:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2233,
										"nodeType": "StructuredDocumentation",
										"src": "28621:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "28777:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28790:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "28782:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28782:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28806:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "28797:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$954",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2236,
														"name": "Rounding",
														"nameLocations": [
															"28797:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 954,
														"src": "28797:8:10"
													},
													"referencedDeclaration": 954,
													"src": "28797:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$954",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28781:34:10"
									},
									"returnParameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "28839:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28839:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28838:9:10"
									},
									"scope": 2563,
									"src": "28768:255:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2394,
										"nodeType": "Block",
										"src": "29216:854:10",
										"statements": [
											{
												"assignments": [
													2275
												],
												"declarations": [
													{
														"constant": false,
														"id": 2275,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "29234:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2394,
														"src": "29226:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2274,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29226:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2277,
												"initialValue": {
													"hexValue": "30",
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29243:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29226:18:10"
											},
											{
												"id": 2391,
												"nodeType": "UncheckedBlock",
												"src": "29254:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2278,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "29282:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29291:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29297:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "29291:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "29282:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2294,
														"nodeType": "IfStatement",
														"src": "29278:103:10",
														"trueBody": {
															"id": 2293,
															"nodeType": "Block",
															"src": "29301:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2283,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "29319:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29328:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29334:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "29328:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "29319:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2288,
																	"nodeType": "ExpressionStatement",
																	"src": "29319:17:10"
																},
																{
																	"expression": {
																		"id": 2291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2289,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2275,
																			"src": "29354:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29364:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "29354:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2292,
																	"nodeType": "ExpressionStatement",
																	"src": "29354:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2295,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "29398:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29407:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29413:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "29407:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "29398:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2311,
														"nodeType": "IfStatement",
														"src": "29394:103:10",
														"trueBody": {
															"id": 2310,
															"nodeType": "Block",
															"src": "29417:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2300,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "29435:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29444:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2302,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29450:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "29444:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "29435:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2305,
																	"nodeType": "ExpressionStatement",
																	"src": "29435:17:10"
																},
																{
																	"expression": {
																		"id": 2308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2306,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2275,
																			"src": "29470:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29480:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "29470:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2309,
																	"nodeType": "ExpressionStatement",
																	"src": "29470:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2312,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "29514:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29523:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29529:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "29523:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "29514:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2328,
														"nodeType": "IfStatement",
														"src": "29510:103:10",
														"trueBody": {
															"id": 2327,
															"nodeType": "Block",
															"src": "29533:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2317,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "29551:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29560:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29566:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "29560:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "29551:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2322,
																	"nodeType": "ExpressionStatement",
																	"src": "29551:17:10"
																},
																{
																	"expression": {
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2323,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2275,
																			"src": "29586:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29596:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "29586:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2326,
																	"nodeType": "ExpressionStatement",
																	"src": "29586:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "29630:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29639:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29645:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "29639:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "29630:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2345,
														"nodeType": "IfStatement",
														"src": "29626:100:10",
														"trueBody": {
															"id": 2344,
															"nodeType": "Block",
															"src": "29648:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2334,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "29666:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2335,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29675:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29681:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "29675:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "29666:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2339,
																	"nodeType": "ExpressionStatement",
																	"src": "29666:16:10"
																},
																{
																	"expression": {
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2340,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2275,
																			"src": "29700:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29710:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "29700:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2343,
																	"nodeType": "ExpressionStatement",
																	"src": "29700:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2346,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "29743:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29752:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29758:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "29752:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "29743:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2362,
														"nodeType": "IfStatement",
														"src": "29739:100:10",
														"trueBody": {
															"id": 2361,
															"nodeType": "Block",
															"src": "29761:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2351,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "29779:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2352,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29788:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29794:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "29788:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "29779:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2356,
																	"nodeType": "ExpressionStatement",
																	"src": "29779:16:10"
																},
																{
																	"expression": {
																		"id": 2359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2357,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2275,
																			"src": "29813:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29823:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "29813:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2360,
																	"nodeType": "ExpressionStatement",
																	"src": "29813:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2363,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "29856:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29865:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29871:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "29865:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "29856:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2379,
														"nodeType": "IfStatement",
														"src": "29852:100:10",
														"trueBody": {
															"id": 2378,
															"nodeType": "Block",
															"src": "29874:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2368,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "29892:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29901:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29907:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "29901:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "29892:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2373,
																	"nodeType": "ExpressionStatement",
																	"src": "29892:16:10"
																},
																{
																	"expression": {
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2374,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2275,
																			"src": "29926:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29936:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "29926:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2377,
																	"nodeType": "ExpressionStatement",
																	"src": "29926:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2380,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "29969:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29978:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29984:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "29978:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "29969:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2390,
														"nodeType": "IfStatement",
														"src": "29965:66:10",
														"trueBody": {
															"id": 2389,
															"nodeType": "Block",
															"src": "29987:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2385,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2275,
																			"src": "30005:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30015:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "30005:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2388,
																	"nodeType": "ExpressionStatement",
																	"src": "30005:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2392,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2275,
													"src": "30057:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2273,
												"id": 2393,
												"nodeType": "Return",
												"src": "30050:13:10"
											}
										]
									},
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "29029:120:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "29163:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29177:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "29169:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29169:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29168:15:10"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "29207:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29207:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29206:9:10"
									},
									"scope": 2563,
									"src": "29154:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2428,
										"nodeType": "Block",
										"src": "30305:177:10",
										"statements": [
											{
												"id": 2427,
												"nodeType": "UncheckedBlock",
												"src": "30315:161:10",
												"statements": [
													{
														"assignments": [
															2407
														],
														"declarations": [
															{
																"constant": false,
																"id": 2407,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "30347:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2427,
																"src": "30339:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2406,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "30339:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2411,
														"initialValue": {
															"arguments": [
																{
																	"id": 2409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2398,
																	"src": "30362:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2408,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2395,
																	2429
																],
																"referencedDeclaration": 2395,
																"src": "30356:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30356:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "30339:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2412,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2407,
																"src": "30389:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2416,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2401,
																					"src": "30431:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2415,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2562,
																				"src": "30414:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30414:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2418,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30444:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 2419,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2407,
																					"src": "30450:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "30444:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2421,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2398,
																				"src": "30459:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30444:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "30414:50:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2413,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4328,
																		"src": "30398:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "30407:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4327,
																	"src": "30398:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30398:67:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30389:76:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2405,
														"id": 2426,
														"nodeType": "Return",
														"src": "30382:83:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2396,
										"nodeType": "StructuredDocumentation",
										"src": "30076:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "30233:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30247:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "30239:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30239:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "30263:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "30254:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$954",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2400,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2399,
														"name": "Rounding",
														"nameLocations": [
															"30254:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 954,
														"src": "30254:8:10"
													},
													"referencedDeclaration": 954,
													"src": "30254:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$954",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30238:34:10"
									},
									"returnParameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "30296:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30296:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30295:9:10"
									},
									"scope": 2563,
									"src": "30224:258:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2505,
										"nodeType": "Block",
										"src": "30800:675:10",
										"statements": [
											{
												"expression": {
													"id": 2446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2437,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2435,
														"src": "30882:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2440,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2432,
																		"src": "30902:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666666666666666666666666666666666666666666666666666",
																		"id": 2441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30906:34:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1455"
																		},
																		"value": "0xffffffffffffffffffffffffffffffff"
																	},
																	"src": "30902:38:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2438,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "30886:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30895:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "30886:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30886:55:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "37",
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30945:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"src": "30886:60:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30882:64:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2447,
												"nodeType": "ExpressionStatement",
												"src": "30882:64:10"
											},
											{
												"expression": {
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2448,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2435,
														"src": "31022:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2451,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2432,
																					"src": "31044:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2452,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2435,
																					"src": "31049:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31044:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2454,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31043:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666666666666666666666666666",
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31054:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551615_by_1",
																			"typeString": "int_const 18446744073709551615"
																		},
																		"value": "0xffffffffffffffff"
																	},
																	"src": "31043:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2449,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "31027:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31036:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "31027:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31027:46:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "36",
															"id": 2458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31077:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "31027:51:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31022:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2461,
												"nodeType": "ExpressionStatement",
												"src": "31022:56:10"
											},
											{
												"expression": {
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2462,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2435,
														"src": "31153:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2465,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2432,
																					"src": "31175:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2466,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2435,
																					"src": "31180:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31175:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2468,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31174:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666",
																		"id": 2469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31185:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967295_by_1",
																			"typeString": "int_const 4294967295"
																		},
																		"value": "0xffffffff"
																	},
																	"src": "31174:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2463,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "31158:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31167:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "31158:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31158:38:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "35",
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31200:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"src": "31158:43:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31153:48:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2475,
												"nodeType": "ExpressionStatement",
												"src": "31153:48:10"
											},
											{
												"expression": {
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2476,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2435,
														"src": "31276:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2479,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2432,
																					"src": "31298:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2480,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2435,
																					"src": "31303:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31298:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2482,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31297:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666",
																		"id": 2483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31308:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65535_by_1",
																			"typeString": "int_const 65535"
																		},
																		"value": "0xffff"
																	},
																	"src": "31297:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2477,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4328,
																	"src": "31281:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31290:6:10",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4327,
																"src": "31281:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31281:34:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "34",
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31319:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "31281:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31276:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2489,
												"nodeType": "ExpressionStatement",
												"src": "31276:44:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2490,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "31426:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 2491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31431:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "31426:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2493,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31425:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2496,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2432,
																				"src": "31453:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"id": 2497,
																				"name": "r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2435,
																				"src": "31458:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31453:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2499,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31452:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30786666",
																	"id": 2500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31463:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "0xff"
																},
																"src": "31452:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 2494,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4328,
																"src": "31436:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31445:6:10",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4327,
															"src": "31436:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 2502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31436:32:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31425:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2436,
												"id": 2504,
												"nodeType": "Return",
												"src": "31418:50:10"
											}
										]
									},
									"documentation": {
										"id": 2430,
										"nodeType": "StructuredDocumentation",
										"src": "30488:246:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "30748:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "30763:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2506,
												"src": "30755:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30755:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30754:11:10"
									},
									"returnParameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "30797:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2506,
												"src": "30789:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30789:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30788:11:10"
									},
									"scope": 2563,
									"src": "30739:736:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2542,
										"nodeType": "Block",
										"src": "31712:184:10",
										"statements": [
											{
												"id": 2541,
												"nodeType": "UncheckedBlock",
												"src": "31722:168:10",
												"statements": [
													{
														"assignments": [
															2518
														],
														"declarations": [
															{
																"constant": false,
																"id": 2518,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "31754:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2541,
																"src": "31746:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2517,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31746:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2522,
														"initialValue": {
															"arguments": [
																{
																	"id": 2520,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2509,
																	"src": "31770:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2519,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2506,
																	2543
																],
																"referencedDeclaration": 2506,
																"src": "31763:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31763:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31746:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2523,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2518,
																"src": "31797:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2527,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2512,
																					"src": "31839:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$954",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2526,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2562,
																				"src": "31822:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31822:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2529,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "31852:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2532,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2530,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2518,
																								"src": "31858:6:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 2531,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "31868:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "31858:11:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2533,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "31857:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31852:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2535,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2509,
																				"src": "31873:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31852:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "31822:56:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2524,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4328,
																		"src": "31806:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4328_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31815:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4327,
																	"src": "31806:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31806:73:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31797:82:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2516,
														"id": 2540,
														"nodeType": "Return",
														"src": "31790:89:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2507,
										"nodeType": "StructuredDocumentation",
										"src": "31481:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "31639:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31654:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "31646:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31646:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "31670:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "31661:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$954",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2511,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2510,
														"name": "Rounding",
														"nameLocations": [
															"31661:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 954,
														"src": "31661:8:10"
													},
													"referencedDeclaration": 954,
													"src": "31661:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$954",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31645:34:10"
									},
									"returnParameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "31703:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31703:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31702:9:10"
									},
									"scope": 2563,
									"src": "31630:266:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2561,
										"nodeType": "Block",
										"src": "32094:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2554,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2547,
																	"src": "32117:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$954",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$954",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32111:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2552,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "32111:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32111:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32129:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "32111:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32134:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "32111:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2551,
												"id": 2560,
												"nodeType": "Return",
												"src": "32104:31:10"
											}
										]
									},
									"documentation": {
										"id": 2544,
										"nodeType": "StructuredDocumentation",
										"src": "31902:113:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "32029:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "32055:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "32046:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$954",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2546,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2545,
														"name": "Rounding",
														"nameLocations": [
															"32046:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 954,
														"src": "32046:8:10"
													},
													"referencedDeclaration": 954,
													"src": "32046:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$954",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32045:19:10"
									},
									"returnParameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "32088:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32088:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32087:6:10"
									},
									"scope": 2563,
									"src": "32020:122:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2564,
							"src": "281:31863:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:32042:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							4328
						]
					},
					"id": 4329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2565,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2566,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:11",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 4328,
							"linearizedBaseContracts": [
								4328
							],
							"name": "SafeCast",
							"nameLocation": "777:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2567,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:11",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 2573,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "902:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2568,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "914:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:11"
									},
									"src": "865:64:11"
								},
								{
									"documentation": {
										"id": 2574,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:11",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 2578,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2576,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2578,
												"src": "1049:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2575,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:11"
									},
									"src": "1015:48:11"
								},
								{
									"documentation": {
										"id": 2579,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:11",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 2585,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "1177:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2580,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "1189:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2582,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:11"
									},
									"src": "1141:62:11"
								},
								{
									"documentation": {
										"id": 2586,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:11",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 2590,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "1323:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:11"
									},
									"src": "1289:49:11"
								},
								{
									"body": {
										"id": 2617,
										"nodeType": "Block",
										"src": "1695:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2598,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2593,
														"src": "1709:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 2600,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 2599,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 2603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2611,
												"nodeType": "IfStatement",
												"src": "1705:105:11",
												"trueBody": {
													"id": 2610,
													"nodeType": "Block",
													"src": "1736:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 2607,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2593,
																		"src": "1793:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2605,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "1757:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2609,
															"nodeType": "RevertStatement",
															"src": "1750:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2614,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2593,
															"src": "1834:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 2612,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 2597,
												"id": 2616,
												"nodeType": "Return",
												"src": "1819:21:11"
											}
										]
									},
									"documentation": {
										"id": 2591,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:11",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 2618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "1648:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:11"
									},
									"returnParameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "1686:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 2595,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:11"
									},
									"scope": 4328,
									"src": "1629:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2645,
										"nodeType": "Block",
										"src": "2204:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2626,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2621,
														"src": "2218:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 2628,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 2627,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 2631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2639,
												"nodeType": "IfStatement",
												"src": "2214:105:11",
												"trueBody": {
													"id": 2638,
													"nodeType": "Block",
													"src": "2245:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 2634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 2635,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "2302:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2633,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "2266:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2637,
															"nodeType": "RevertStatement",
															"src": "2259:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2642,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2621,
															"src": "2343:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 2640,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 2625,
												"id": 2644,
												"nodeType": "Return",
												"src": "2328:21:11"
											}
										]
									},
									"documentation": {
										"id": 2619,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:11",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 2646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "2157:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:11"
									},
									"returnParameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "2195:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 2623,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:11"
									},
									"scope": 4328,
									"src": "2138:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2673,
										"nodeType": "Block",
										"src": "2713:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2654,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2649,
														"src": "2727:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 2656,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 2655,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 2659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2667,
												"nodeType": "IfStatement",
												"src": "2723:105:11",
												"trueBody": {
													"id": 2666,
													"nodeType": "Block",
													"src": "2754:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 2662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 2663,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2649,
																		"src": "2811:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2661,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "2775:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2665,
															"nodeType": "RevertStatement",
															"src": "2768:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2670,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2649,
															"src": "2852:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 2668,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 2653,
												"id": 2672,
												"nodeType": "Return",
												"src": "2837:21:11"
											}
										]
									},
									"documentation": {
										"id": 2647,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:11",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 2674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "2666:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:11"
									},
									"returnParameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "2704:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 2651,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:11"
									},
									"scope": 4328,
									"src": "2647:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2701,
										"nodeType": "Block",
										"src": "3222:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2682,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2677,
														"src": "3236:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 2684,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 2683,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 2687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2695,
												"nodeType": "IfStatement",
												"src": "3232:105:11",
												"trueBody": {
													"id": 2694,
													"nodeType": "Block",
													"src": "3263:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 2690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 2691,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2677,
																		"src": "3320:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2689,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "3284:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2693,
															"nodeType": "RevertStatement",
															"src": "3277:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2698,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2677,
															"src": "3361:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 2696,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 2681,
												"id": 2700,
												"nodeType": "Return",
												"src": "3346:21:11"
											}
										]
									},
									"documentation": {
										"id": 2675,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:11",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 2702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "3175:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:11"
									},
									"returnParameters": {
										"id": 2681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "3213:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2679,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:11"
									},
									"scope": 4328,
									"src": "3156:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2729,
										"nodeType": "Block",
										"src": "3731:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2710,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2705,
														"src": "3745:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 2712,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 2711,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 2715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2723,
												"nodeType": "IfStatement",
												"src": "3741:105:11",
												"trueBody": {
													"id": 2722,
													"nodeType": "Block",
													"src": "3772:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 2718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 2719,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2705,
																		"src": "3829:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2717,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "3793:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2721,
															"nodeType": "RevertStatement",
															"src": "3786:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2726,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "3870:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 2724,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 2709,
												"id": 2728,
												"nodeType": "Return",
												"src": "3855:21:11"
											}
										]
									},
									"documentation": {
										"id": 2703,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:11",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 2730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "3684:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:11"
									},
									"returnParameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "3722:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 2707,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:11"
									},
									"scope": 4328,
									"src": "3665:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2757,
										"nodeType": "Block",
										"src": "4240:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2738,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2733,
														"src": "4254:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 2740,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 2739,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2751,
												"nodeType": "IfStatement",
												"src": "4250:105:11",
												"trueBody": {
													"id": 2750,
													"nodeType": "Block",
													"src": "4281:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 2746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 2747,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2733,
																		"src": "4338:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2745,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "4302:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2749,
															"nodeType": "RevertStatement",
															"src": "4295:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2754,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2733,
															"src": "4379:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 2752,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 2737,
												"id": 2756,
												"nodeType": "Return",
												"src": "4364:21:11"
											}
										]
									},
									"documentation": {
										"id": 2731,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:11",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 2758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2733,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "4193:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:11"
									},
									"returnParameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "4231:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 2735,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:11"
									},
									"scope": 4328,
									"src": "4174:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2785,
										"nodeType": "Block",
										"src": "4749:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2766,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2761,
														"src": "4763:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 2768,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 2767,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 2771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2779,
												"nodeType": "IfStatement",
												"src": "4759:105:11",
												"trueBody": {
													"id": 2778,
													"nodeType": "Block",
													"src": "4790:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 2774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 2775,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2761,
																		"src": "4847:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2773,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "4811:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2777,
															"nodeType": "RevertStatement",
															"src": "4804:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2782,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2761,
															"src": "4888:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 2780,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 2765,
												"id": 2784,
												"nodeType": "Return",
												"src": "4873:21:11"
											}
										]
									},
									"documentation": {
										"id": 2759,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:11",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 2786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "4702:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:11"
									},
									"returnParameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2786,
												"src": "4740:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 2763,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:11"
									},
									"scope": 4328,
									"src": "4683:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2813,
										"nodeType": "Block",
										"src": "5258:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2794,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2789,
														"src": "5272:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 2796,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 2795,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 2799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2807,
												"nodeType": "IfStatement",
												"src": "5268:105:11",
												"trueBody": {
													"id": 2806,
													"nodeType": "Block",
													"src": "5299:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 2802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 2803,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "5356:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2801,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "5320:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2805,
															"nodeType": "RevertStatement",
															"src": "5313:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2810,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2789,
															"src": "5397:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 2808,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 2793,
												"id": 2812,
												"nodeType": "Return",
												"src": "5382:21:11"
											}
										]
									},
									"documentation": {
										"id": 2787,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:11",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 2814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "5211:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:11"
									},
									"returnParameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "5249:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 2791,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:11"
									},
									"scope": 4328,
									"src": "5192:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2841,
										"nodeType": "Block",
										"src": "5767:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2822,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2817,
														"src": "5781:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 2824,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 2823,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 2827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2835,
												"nodeType": "IfStatement",
												"src": "5777:105:11",
												"trueBody": {
													"id": 2834,
													"nodeType": "Block",
													"src": "5808:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 2830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 2831,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2817,
																		"src": "5865:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2829,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "5829:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2833,
															"nodeType": "RevertStatement",
															"src": "5822:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2838,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2817,
															"src": "5906:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 2836,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 2821,
												"id": 2840,
												"nodeType": "Return",
												"src": "5891:21:11"
											}
										]
									},
									"documentation": {
										"id": 2815,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:11",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 2842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "5720:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:11"
									},
									"returnParameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "5758:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 2819,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:11"
									},
									"scope": 4328,
									"src": "5701:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2869,
										"nodeType": "Block",
										"src": "6276:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2850,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2845,
														"src": "6290:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 2852,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 2851,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 2855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2863,
												"nodeType": "IfStatement",
												"src": "6286:105:11",
												"trueBody": {
													"id": 2862,
													"nodeType": "Block",
													"src": "6317:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 2858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 2859,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2845,
																		"src": "6374:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2857,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "6338:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2861,
															"nodeType": "RevertStatement",
															"src": "6331:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2845,
															"src": "6415:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 2864,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 2849,
												"id": 2868,
												"nodeType": "Return",
												"src": "6400:21:11"
											}
										]
									},
									"documentation": {
										"id": 2843,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:11",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 2870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "6229:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:11"
									},
									"returnParameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "6267:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 2847,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:11"
									},
									"scope": 4328,
									"src": "6210:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2897,
										"nodeType": "Block",
										"src": "6785:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2878,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2873,
														"src": "6799:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 2880,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 2879,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 2883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2891,
												"nodeType": "IfStatement",
												"src": "6795:105:11",
												"trueBody": {
													"id": 2890,
													"nodeType": "Block",
													"src": "6826:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 2886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 2887,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2873,
																		"src": "6883:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2885,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "6847:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2889,
															"nodeType": "RevertStatement",
															"src": "6840:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2894,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2873,
															"src": "6924:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 2892,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 2877,
												"id": 2896,
												"nodeType": "Return",
												"src": "6909:21:11"
											}
										]
									},
									"documentation": {
										"id": 2871,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:11",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 2898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "6738:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:11"
									},
									"returnParameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "6776:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 2875,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:11"
									},
									"scope": 4328,
									"src": "6719:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2925,
										"nodeType": "Block",
										"src": "7294:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2906,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2901,
														"src": "7308:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2908,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 2907,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 2911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2919,
												"nodeType": "IfStatement",
												"src": "7304:105:11",
												"trueBody": {
													"id": 2918,
													"nodeType": "Block",
													"src": "7335:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 2914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 2915,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2901,
																		"src": "7392:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2913,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "7356:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2917,
															"nodeType": "RevertStatement",
															"src": "7349:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2922,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2901,
															"src": "7433:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 2920,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 2905,
												"id": 2924,
												"nodeType": "Return",
												"src": "7418:21:11"
											}
										]
									},
									"documentation": {
										"id": 2899,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:11",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 2926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "7247:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:11"
									},
									"returnParameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "7285:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2903,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:11"
									},
									"scope": 4328,
									"src": "7228:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2953,
										"nodeType": "Block",
										"src": "7803:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2934,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2929,
														"src": "7817:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 2936,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 2935,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 2939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2947,
												"nodeType": "IfStatement",
												"src": "7813:105:11",
												"trueBody": {
													"id": 2946,
													"nodeType": "Block",
													"src": "7844:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 2942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 2943,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2929,
																		"src": "7901:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2941,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "7865:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2945,
															"nodeType": "RevertStatement",
															"src": "7858:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2950,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2929,
															"src": "7942:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 2948,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 2933,
												"id": 2952,
												"nodeType": "Return",
												"src": "7927:21:11"
											}
										]
									},
									"documentation": {
										"id": 2927,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:11",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 2954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "7756:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:11"
									},
									"returnParameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "7794:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 2931,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:11"
									},
									"scope": 4328,
									"src": "7737:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2981,
										"nodeType": "Block",
										"src": "8312:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2962,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2957,
														"src": "8326:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 2964,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 2963,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 2967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2975,
												"nodeType": "IfStatement",
												"src": "8322:105:11",
												"trueBody": {
													"id": 2974,
													"nodeType": "Block",
													"src": "8353:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 2970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 2971,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2957,
																		"src": "8410:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2969,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "8374:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2973,
															"nodeType": "RevertStatement",
															"src": "8367:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2978,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2957,
															"src": "8451:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 2976,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 2961,
												"id": 2980,
												"nodeType": "Return",
												"src": "8436:21:11"
											}
										]
									},
									"documentation": {
										"id": 2955,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:11",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 2982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "8265:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:11"
									},
									"returnParameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "8303:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 2959,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:11"
									},
									"scope": 4328,
									"src": "8246:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3009,
										"nodeType": "Block",
										"src": "8821:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2990,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2985,
														"src": "8835:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 2992,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 2991,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 2995,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3003,
												"nodeType": "IfStatement",
												"src": "8831:105:11",
												"trueBody": {
													"id": 3002,
													"nodeType": "Block",
													"src": "8862:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 2998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 2999,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2985,
																		"src": "8919:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2997,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "8883:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3001,
															"nodeType": "RevertStatement",
															"src": "8876:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3006,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2985,
															"src": "8960:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 3004,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 2989,
												"id": 3008,
												"nodeType": "Return",
												"src": "8945:21:11"
											}
										]
									},
									"documentation": {
										"id": 2983,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:11",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2985,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "8774:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:11"
									},
									"returnParameters": {
										"id": 2989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "8812:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 2987,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:11"
									},
									"scope": 4328,
									"src": "8755:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3037,
										"nodeType": "Block",
										"src": "9330:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3018,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3013,
														"src": "9344:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 3020,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 3019,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 3023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3031,
												"nodeType": "IfStatement",
												"src": "9340:105:11",
												"trueBody": {
													"id": 3030,
													"nodeType": "Block",
													"src": "9371:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3027,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3013,
																		"src": "9428:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3025,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "9392:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3029,
															"nodeType": "RevertStatement",
															"src": "9385:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3034,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3013,
															"src": "9469:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 3032,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 3017,
												"id": 3036,
												"nodeType": "Return",
												"src": "9454:21:11"
											}
										]
									},
									"documentation": {
										"id": 3011,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:11",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3013,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "9283:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:11"
									},
									"returnParameters": {
										"id": 3017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "9321:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3015,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:11"
									},
									"scope": 4328,
									"src": "9264:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3065,
										"nodeType": "Block",
										"src": "9839:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3046,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3041,
														"src": "9853:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 3048,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 3047,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 3051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3059,
												"nodeType": "IfStatement",
												"src": "9849:105:11",
												"trueBody": {
													"id": 3058,
													"nodeType": "Block",
													"src": "9880:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3055,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3041,
																		"src": "9937:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3053,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "9901:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3057,
															"nodeType": "RevertStatement",
															"src": "9894:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3062,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3041,
															"src": "9978:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 3060,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 3045,
												"id": 3064,
												"nodeType": "Return",
												"src": "9963:21:11"
											}
										]
									},
									"documentation": {
										"id": 3039,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:11",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "9792:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:11"
									},
									"returnParameters": {
										"id": 3045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "9830:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 3043,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:11"
									},
									"scope": 4328,
									"src": "9773:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3093,
										"nodeType": "Block",
										"src": "10348:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3074,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3069,
														"src": "10362:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 3076,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 3075,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 3079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3087,
												"nodeType": "IfStatement",
												"src": "10358:105:11",
												"trueBody": {
													"id": 3086,
													"nodeType": "Block",
													"src": "10389:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3083,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3069,
																		"src": "10446:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3081,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "10410:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3085,
															"nodeType": "RevertStatement",
															"src": "10403:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3090,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3069,
															"src": "10487:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 3088,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 3073,
												"id": 3092,
												"nodeType": "Return",
												"src": "10472:21:11"
											}
										]
									},
									"documentation": {
										"id": 3067,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:11",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "10301:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:11"
									},
									"returnParameters": {
										"id": 3073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "10339:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 3071,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:11"
									},
									"scope": 4328,
									"src": "10282:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3121,
										"nodeType": "Block",
										"src": "10857:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3102,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3097,
														"src": "10871:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 3104,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 3103,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 3107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3115,
												"nodeType": "IfStatement",
												"src": "10867:105:11",
												"trueBody": {
													"id": 3114,
													"nodeType": "Block",
													"src": "10898:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3111,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3097,
																		"src": "10955:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3109,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "10919:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3113,
															"nodeType": "RevertStatement",
															"src": "10912:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3118,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3097,
															"src": "10996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 3116,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 3101,
												"id": 3120,
												"nodeType": "Return",
												"src": "10981:21:11"
											}
										]
									},
									"documentation": {
										"id": 3095,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:11",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3097,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "10810:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:11"
									},
									"returnParameters": {
										"id": 3101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "10848:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 3099,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:11"
									},
									"scope": 4328,
									"src": "10791:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3149,
										"nodeType": "Block",
										"src": "11360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3130,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3125,
														"src": "11374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 3132,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 3131,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 3135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3143,
												"nodeType": "IfStatement",
												"src": "11370:103:11",
												"trueBody": {
													"id": 3142,
													"nodeType": "Block",
													"src": "11400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3139,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3125,
																		"src": "11456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3137,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "11421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3141,
															"nodeType": "RevertStatement",
															"src": "11414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3146,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3125,
															"src": "11496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 3144,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 3129,
												"id": 3148,
												"nodeType": "Return",
												"src": "11482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3123,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:11",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 3150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "11314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:11"
									},
									"returnParameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "11352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3127,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:11"
									},
									"scope": 4328,
									"src": "11296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3177,
										"nodeType": "Block",
										"src": "11860:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3158,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3153,
														"src": "11874:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 3160,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 3159,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 3163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3171,
												"nodeType": "IfStatement",
												"src": "11870:103:11",
												"trueBody": {
													"id": 3170,
													"nodeType": "Block",
													"src": "11900:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 3166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 3167,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3153,
																		"src": "11956:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3165,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "11921:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3169,
															"nodeType": "RevertStatement",
															"src": "11914:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3174,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3153,
															"src": "11996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 3172,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 3157,
												"id": 3176,
												"nodeType": "Return",
												"src": "11982:20:11"
											}
										]
									},
									"documentation": {
										"id": 3151,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:11",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 3178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "11814:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:11"
									},
									"returnParameters": {
										"id": 3157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "11852:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 3155,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:11"
									},
									"scope": 4328,
									"src": "11796:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3205,
										"nodeType": "Block",
										"src": "12360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3186,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3181,
														"src": "12374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 3188,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 3187,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 3191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3199,
												"nodeType": "IfStatement",
												"src": "12370:103:11",
												"trueBody": {
													"id": 3198,
													"nodeType": "Block",
													"src": "12400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 3194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 3195,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3181,
																		"src": "12456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3193,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "12421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3197,
															"nodeType": "RevertStatement",
															"src": "12414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3202,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3181,
															"src": "12496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 3200,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 3185,
												"id": 3204,
												"nodeType": "Return",
												"src": "12482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3179,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:11",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 3206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3181,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3206,
												"src": "12314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:11"
									},
									"returnParameters": {
										"id": 3185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3206,
												"src": "12352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 3183,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:11"
									},
									"scope": 4328,
									"src": "12296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3233,
										"nodeType": "Block",
										"src": "12860:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3214,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3209,
														"src": "12874:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 3216,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 3215,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 3219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3227,
												"nodeType": "IfStatement",
												"src": "12870:103:11",
												"trueBody": {
													"id": 3226,
													"nodeType": "Block",
													"src": "12900:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 3222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 3223,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3209,
																		"src": "12956:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3221,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "12921:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3225,
															"nodeType": "RevertStatement",
															"src": "12914:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3230,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3209,
															"src": "12996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 3228,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 3213,
												"id": 3232,
												"nodeType": "Return",
												"src": "12982:20:11"
											}
										]
									},
									"documentation": {
										"id": 3207,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:11",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 3234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "12814:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:11"
									},
									"returnParameters": {
										"id": 3213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "12852:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 3211,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:11"
									},
									"scope": 4328,
									"src": "12796:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3261,
										"nodeType": "Block",
										"src": "13360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3242,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3237,
														"src": "13374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 3244,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 3243,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 3247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3255,
												"nodeType": "IfStatement",
												"src": "13370:103:11",
												"trueBody": {
													"id": 3254,
													"nodeType": "Block",
													"src": "13400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 3250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 3251,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3237,
																		"src": "13456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3249,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "13421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3253,
															"nodeType": "RevertStatement",
															"src": "13414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3258,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3237,
															"src": "13496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 3256,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 3241,
												"id": 3260,
												"nodeType": "Return",
												"src": "13482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3235,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:11",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 3262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3237,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "13314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:11"
									},
									"returnParameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "13352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3239,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:11"
									},
									"scope": 4328,
									"src": "13296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3289,
										"nodeType": "Block",
										"src": "13860:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3270,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3265,
														"src": "13874:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 3272,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 3271,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 3275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3283,
												"nodeType": "IfStatement",
												"src": "13870:103:11",
												"trueBody": {
													"id": 3282,
													"nodeType": "Block",
													"src": "13900:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 3278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 3279,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3265,
																		"src": "13956:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3277,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "13921:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3281,
															"nodeType": "RevertStatement",
															"src": "13914:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3265,
															"src": "13996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 3284,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 3269,
												"id": 3288,
												"nodeType": "Return",
												"src": "13982:20:11"
											}
										]
									},
									"documentation": {
										"id": 3263,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:11",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 3290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "13814:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:11"
									},
									"returnParameters": {
										"id": 3269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "13852:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 3267,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:11"
									},
									"scope": 4328,
									"src": "13796:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3317,
										"nodeType": "Block",
										"src": "14360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3298,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3293,
														"src": "14374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 3300,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 3299,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 3303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3311,
												"nodeType": "IfStatement",
												"src": "14370:103:11",
												"trueBody": {
													"id": 3310,
													"nodeType": "Block",
													"src": "14400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 3306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 3307,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3293,
																		"src": "14456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3305,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "14421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3309,
															"nodeType": "RevertStatement",
															"src": "14414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3314,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3293,
															"src": "14496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 3312,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 3297,
												"id": 3316,
												"nodeType": "Return",
												"src": "14482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3291,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:11",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 3318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3293,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "14314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:11"
									},
									"returnParameters": {
										"id": 3297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3318,
												"src": "14352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 3295,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:11"
									},
									"scope": 4328,
									"src": "14296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3345,
										"nodeType": "Block",
										"src": "14860:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3326,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3321,
														"src": "14874:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 3328,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 3327,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 3331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3339,
												"nodeType": "IfStatement",
												"src": "14870:103:11",
												"trueBody": {
													"id": 3338,
													"nodeType": "Block",
													"src": "14900:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 3334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 3335,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3321,
																		"src": "14956:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3333,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "14921:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3337,
															"nodeType": "RevertStatement",
															"src": "14914:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3342,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3321,
															"src": "14996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 3340,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 3325,
												"id": 3344,
												"nodeType": "Return",
												"src": "14982:20:11"
											}
										]
									},
									"documentation": {
										"id": 3319,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:11",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 3346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3346,
												"src": "14814:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:11"
									},
									"returnParameters": {
										"id": 3325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3346,
												"src": "14852:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 3323,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:11"
									},
									"scope": 4328,
									"src": "14796:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3373,
										"nodeType": "Block",
										"src": "15360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3354,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3349,
														"src": "15374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 3356,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 3355,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 3359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3367,
												"nodeType": "IfStatement",
												"src": "15370:103:11",
												"trueBody": {
													"id": 3366,
													"nodeType": "Block",
													"src": "15400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 3362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 3363,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3349,
																		"src": "15456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3361,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "15421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3365,
															"nodeType": "RevertStatement",
															"src": "15414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3370,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3349,
															"src": "15496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 3368,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 3353,
												"id": 3372,
												"nodeType": "Return",
												"src": "15482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3347,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:11",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 3374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3349,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3374,
												"src": "15314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:11"
									},
									"returnParameters": {
										"id": 3353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3374,
												"src": "15352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3351,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:11"
									},
									"scope": 4328,
									"src": "15296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3401,
										"nodeType": "Block",
										"src": "15860:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3382,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3377,
														"src": "15874:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 3384,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 3383,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 3387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3395,
												"nodeType": "IfStatement",
												"src": "15870:103:11",
												"trueBody": {
													"id": 3394,
													"nodeType": "Block",
													"src": "15900:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 3390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 3391,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3377,
																		"src": "15956:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3389,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "15921:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3393,
															"nodeType": "RevertStatement",
															"src": "15914:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3398,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3377,
															"src": "15996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 3396,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 3381,
												"id": 3400,
												"nodeType": "Return",
												"src": "15982:20:11"
											}
										]
									},
									"documentation": {
										"id": 3375,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:11",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 3402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3377,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3402,
												"src": "15814:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:11"
									},
									"returnParameters": {
										"id": 3381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3402,
												"src": "15852:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 3379,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:11"
									},
									"scope": 4328,
									"src": "15796:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3429,
										"nodeType": "Block",
										"src": "16360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3410,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3405,
														"src": "16374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 3412,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 3411,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 3415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3423,
												"nodeType": "IfStatement",
												"src": "16370:103:11",
												"trueBody": {
													"id": 3422,
													"nodeType": "Block",
													"src": "16400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 3418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 3419,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3405,
																		"src": "16456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3417,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "16421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3421,
															"nodeType": "RevertStatement",
															"src": "16414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3426,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3405,
															"src": "16496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 3424,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 3409,
												"id": 3428,
												"nodeType": "Return",
												"src": "16482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3403,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:11",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 3430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3430,
												"src": "16314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:11"
									},
									"returnParameters": {
										"id": 3409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3430,
												"src": "16352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3407,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:11"
									},
									"scope": 4328,
									"src": "16296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3457,
										"nodeType": "Block",
										"src": "16854:146:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3438,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3433,
														"src": "16868:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3440,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 3439,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 3443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3451,
												"nodeType": "IfStatement",
												"src": "16864:101:11",
												"trueBody": {
													"id": 3450,
													"nodeType": "Block",
													"src": "16893:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 3446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 3447,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3433,
																		"src": "16948:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3445,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "16914:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3449,
															"nodeType": "RevertStatement",
															"src": "16907:47:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3433,
															"src": "16987:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 3452,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:11",
															"typeDescriptions": {}
														}
													},
													"id": 3455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 3437,
												"id": 3456,
												"nodeType": "Return",
												"src": "16974:19:11"
											}
										]
									},
									"documentation": {
										"id": 3431,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:11",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 3458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3433,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "16809:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:11"
									},
									"returnParameters": {
										"id": 3437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "16847:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3435,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:11"
									},
									"scope": 4328,
									"src": "16792:208:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3480,
										"nodeType": "Block",
										"src": "17236:128:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3466,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3461,
														"src": "17250:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 3467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3474,
												"nodeType": "IfStatement",
												"src": "17246:81:11",
												"trueBody": {
													"id": 3473,
													"nodeType": "Block",
													"src": "17261:66:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3470,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3461,
																		"src": "17310:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3469,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2578,
																	"src": "17282:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 3471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3472,
															"nodeType": "RevertStatement",
															"src": "17275:41:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3477,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3461,
															"src": "17351:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3465,
												"id": 3479,
												"nodeType": "Return",
												"src": "17336:21:11"
											}
										]
									},
									"documentation": {
										"id": 3459,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:11",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 3481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "17190:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3460,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:11"
									},
									"returnParameters": {
										"id": 3465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "17227:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:11"
									},
									"scope": 4328,
									"src": "17171:193:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3506,
										"nodeType": "Block",
										"src": "17761:150:11",
										"statements": [
											{
												"expression": {
													"id": 3494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3489,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3487,
														"src": "17771:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3492,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3484,
																"src": "17791:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 3490,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 3495,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3496,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3487,
														"src": "17811:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3497,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3484,
														"src": "17825:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3505,
												"nodeType": "IfStatement",
												"src": "17807:98:11",
												"trueBody": {
													"id": 3504,
													"nodeType": "Block",
													"src": "17832:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 3500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 3501,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3484,
																		"src": "17888:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3499,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "17853:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3503,
															"nodeType": "RevertStatement",
															"src": "17846:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3482,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:11",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 3507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3507,
												"src": "17705:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3483,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:11"
									},
									"returnParameters": {
										"id": 3488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3487,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3507,
												"src": "17742:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 3486,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:11"
									},
									"scope": 4328,
									"src": "17687:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3532,
										"nodeType": "Block",
										"src": "18308:150:11",
										"statements": [
											{
												"expression": {
													"id": 3520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3515,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3513,
														"src": "18318:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3518,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3510,
																"src": "18338:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 3516,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 3521,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3522,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3513,
														"src": "18358:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3523,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3510,
														"src": "18372:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3531,
												"nodeType": "IfStatement",
												"src": "18354:98:11",
												"trueBody": {
													"id": 3530,
													"nodeType": "Block",
													"src": "18379:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 3526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 3527,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3510,
																		"src": "18435:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3525,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "18400:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3529,
															"nodeType": "RevertStatement",
															"src": "18393:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3508,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:11",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 3533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3533,
												"src": "18252:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3509,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:11"
									},
									"returnParameters": {
										"id": 3514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3513,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3533,
												"src": "18289:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 3512,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:11"
									},
									"scope": 4328,
									"src": "18234:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3558,
										"nodeType": "Block",
										"src": "18855:150:11",
										"statements": [
											{
												"expression": {
													"id": 3546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3541,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3539,
														"src": "18865:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3544,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3536,
																"src": "18885:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 3542,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 3547,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3548,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3539,
														"src": "18905:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3549,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3536,
														"src": "18919:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3557,
												"nodeType": "IfStatement",
												"src": "18901:98:11",
												"trueBody": {
													"id": 3556,
													"nodeType": "Block",
													"src": "18926:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 3552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 3553,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3536,
																		"src": "18982:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3551,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "18947:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3555,
															"nodeType": "RevertStatement",
															"src": "18940:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3534,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:11",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 3559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3559,
												"src": "18799:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3535,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:11"
									},
									"returnParameters": {
										"id": 3540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3539,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3559,
												"src": "18836:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 3538,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:11"
									},
									"scope": 4328,
									"src": "18781:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3584,
										"nodeType": "Block",
										"src": "19402:150:11",
										"statements": [
											{
												"expression": {
													"id": 3572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3567,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3565,
														"src": "19412:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3570,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3562,
																"src": "19432:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 3568,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 3573,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3574,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3565,
														"src": "19452:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3575,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3562,
														"src": "19466:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3583,
												"nodeType": "IfStatement",
												"src": "19448:98:11",
												"trueBody": {
													"id": 3582,
													"nodeType": "Block",
													"src": "19473:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 3578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 3579,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3562,
																		"src": "19529:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3577,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "19494:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3581,
															"nodeType": "RevertStatement",
															"src": "19487:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3560,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:11",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 3585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3562,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "19346:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3561,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:11"
									},
									"returnParameters": {
										"id": 3566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3565,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "19383:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 3564,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:11"
									},
									"scope": 4328,
									"src": "19328:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3610,
										"nodeType": "Block",
										"src": "19949:150:11",
										"statements": [
											{
												"expression": {
													"id": 3598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3593,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3591,
														"src": "19959:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3596,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3588,
																"src": "19979:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 3594,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 3599,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3600,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3591,
														"src": "19999:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3601,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3588,
														"src": "20013:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3609,
												"nodeType": "IfStatement",
												"src": "19995:98:11",
												"trueBody": {
													"id": 3608,
													"nodeType": "Block",
													"src": "20020:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 3604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 3605,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3588,
																		"src": "20076:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3603,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "20041:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3607,
															"nodeType": "RevertStatement",
															"src": "20034:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3586,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:11",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 3611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3611,
												"src": "19893:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3587,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:11"
									},
									"returnParameters": {
										"id": 3592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3591,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3611,
												"src": "19930:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 3590,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:11"
									},
									"scope": 4328,
									"src": "19875:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3636,
										"nodeType": "Block",
										"src": "20496:150:11",
										"statements": [
											{
												"expression": {
													"id": 3624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3619,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3617,
														"src": "20506:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3622,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3614,
																"src": "20526:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 3620,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 3625,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3626,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3617,
														"src": "20546:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3627,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3614,
														"src": "20560:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3635,
												"nodeType": "IfStatement",
												"src": "20542:98:11",
												"trueBody": {
													"id": 3634,
													"nodeType": "Block",
													"src": "20567:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 3630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 3631,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3614,
																		"src": "20623:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3629,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "20588:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3633,
															"nodeType": "RevertStatement",
															"src": "20581:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3612,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:11",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 3637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3614,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3637,
												"src": "20440:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3613,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:11"
									},
									"returnParameters": {
										"id": 3618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3617,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3637,
												"src": "20477:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 3616,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:11"
									},
									"scope": 4328,
									"src": "20422:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3662,
										"nodeType": "Block",
										"src": "21043:150:11",
										"statements": [
											{
												"expression": {
													"id": 3650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3645,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3643,
														"src": "21053:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3648,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3640,
																"src": "21073:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 3646,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 3651,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3652,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3643,
														"src": "21093:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3653,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3640,
														"src": "21107:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3661,
												"nodeType": "IfStatement",
												"src": "21089:98:11",
												"trueBody": {
													"id": 3660,
													"nodeType": "Block",
													"src": "21114:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 3656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 3657,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3640,
																		"src": "21170:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3655,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "21135:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3659,
															"nodeType": "RevertStatement",
															"src": "21128:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3638,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:11",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 3663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3640,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3663,
												"src": "20987:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3639,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:11"
									},
									"returnParameters": {
										"id": 3644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3643,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3663,
												"src": "21024:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 3642,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:11"
									},
									"scope": 4328,
									"src": "20969:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3688,
										"nodeType": "Block",
										"src": "21590:150:11",
										"statements": [
											{
												"expression": {
													"id": 3676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3671,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3669,
														"src": "21600:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3674,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3666,
																"src": "21620:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 3672,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 3677,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3678,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3669,
														"src": "21640:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3679,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3666,
														"src": "21654:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3687,
												"nodeType": "IfStatement",
												"src": "21636:98:11",
												"trueBody": {
													"id": 3686,
													"nodeType": "Block",
													"src": "21661:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 3682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 3683,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3666,
																		"src": "21717:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3681,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "21682:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3685,
															"nodeType": "RevertStatement",
															"src": "21675:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3664,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:11",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 3689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3666,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3689,
												"src": "21534:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3665,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:11"
									},
									"returnParameters": {
										"id": 3670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3669,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3689,
												"src": "21571:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 3668,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:11"
									},
									"scope": 4328,
									"src": "21516:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3714,
										"nodeType": "Block",
										"src": "22137:150:11",
										"statements": [
											{
												"expression": {
													"id": 3702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3697,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3695,
														"src": "22147:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3700,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3692,
																"src": "22167:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 3698,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 3703,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3704,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3695,
														"src": "22187:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3705,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3692,
														"src": "22201:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3713,
												"nodeType": "IfStatement",
												"src": "22183:98:11",
												"trueBody": {
													"id": 3712,
													"nodeType": "Block",
													"src": "22208:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 3708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 3709,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3692,
																		"src": "22264:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3707,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "22229:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3711,
															"nodeType": "RevertStatement",
															"src": "22222:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3690,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:11",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 3715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3692,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3715,
												"src": "22081:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3691,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:11"
									},
									"returnParameters": {
										"id": 3696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3695,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3715,
												"src": "22118:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 3694,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:11"
									},
									"scope": 4328,
									"src": "22063:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3740,
										"nodeType": "Block",
										"src": "22684:150:11",
										"statements": [
											{
												"expression": {
													"id": 3728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3723,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3721,
														"src": "22694:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3726,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3718,
																"src": "22714:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 3724,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 3729,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3730,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3721,
														"src": "22734:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3731,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3718,
														"src": "22748:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3739,
												"nodeType": "IfStatement",
												"src": "22730:98:11",
												"trueBody": {
													"id": 3738,
													"nodeType": "Block",
													"src": "22755:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 3734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 3735,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3718,
																		"src": "22811:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3733,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "22776:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3737,
															"nodeType": "RevertStatement",
															"src": "22769:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3716,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:11",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 3741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3718,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3741,
												"src": "22628:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3717,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:11"
									},
									"returnParameters": {
										"id": 3722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3721,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3741,
												"src": "22665:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 3720,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:11"
									},
									"scope": 4328,
									"src": "22610:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3766,
										"nodeType": "Block",
										"src": "23231:150:11",
										"statements": [
											{
												"expression": {
													"id": 3754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3749,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3747,
														"src": "23241:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3752,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3744,
																"src": "23261:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 3750,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 3755,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3756,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3747,
														"src": "23281:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3757,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3744,
														"src": "23295:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3765,
												"nodeType": "IfStatement",
												"src": "23277:98:11",
												"trueBody": {
													"id": 3764,
													"nodeType": "Block",
													"src": "23302:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 3760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 3761,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3744,
																		"src": "23358:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3759,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "23323:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3763,
															"nodeType": "RevertStatement",
															"src": "23316:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3742,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:11",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 3767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3767,
												"src": "23175:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3743,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:11"
									},
									"returnParameters": {
										"id": 3748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3747,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3767,
												"src": "23212:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 3746,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:11"
									},
									"scope": 4328,
									"src": "23157:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3792,
										"nodeType": "Block",
										"src": "23778:150:11",
										"statements": [
											{
												"expression": {
													"id": 3780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3775,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3773,
														"src": "23788:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3778,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3770,
																"src": "23808:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 3776,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 3781,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3782,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3773,
														"src": "23828:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3783,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3770,
														"src": "23842:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3791,
												"nodeType": "IfStatement",
												"src": "23824:98:11",
												"trueBody": {
													"id": 3790,
													"nodeType": "Block",
													"src": "23849:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 3786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 3787,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3770,
																		"src": "23905:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3785,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "23870:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3789,
															"nodeType": "RevertStatement",
															"src": "23863:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3768,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:11",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 3793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3770,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3793,
												"src": "23722:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3769,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:11"
									},
									"returnParameters": {
										"id": 3774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3773,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3793,
												"src": "23759:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 3772,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:11"
									},
									"scope": 4328,
									"src": "23704:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3818,
										"nodeType": "Block",
										"src": "24325:150:11",
										"statements": [
											{
												"expression": {
													"id": 3806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3801,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3799,
														"src": "24335:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3804,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3796,
																"src": "24355:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 3802,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 3807,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3808,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3799,
														"src": "24375:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3809,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3796,
														"src": "24389:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3817,
												"nodeType": "IfStatement",
												"src": "24371:98:11",
												"trueBody": {
													"id": 3816,
													"nodeType": "Block",
													"src": "24396:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 3812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 3813,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3796,
																		"src": "24452:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3811,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "24417:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3815,
															"nodeType": "RevertStatement",
															"src": "24410:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3794,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:11",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 3819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3796,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3819,
												"src": "24269:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3795,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:11"
									},
									"returnParameters": {
										"id": 3800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3799,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3819,
												"src": "24306:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 3798,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:11"
									},
									"scope": 4328,
									"src": "24251:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3844,
										"nodeType": "Block",
										"src": "24872:150:11",
										"statements": [
											{
												"expression": {
													"id": 3832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3827,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3825,
														"src": "24882:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3830,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3822,
																"src": "24902:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 3828,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 3833,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3834,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3825,
														"src": "24922:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3835,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3822,
														"src": "24936:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3843,
												"nodeType": "IfStatement",
												"src": "24918:98:11",
												"trueBody": {
													"id": 3842,
													"nodeType": "Block",
													"src": "24943:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 3838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 3839,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3822,
																		"src": "24999:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3837,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "24964:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3841,
															"nodeType": "RevertStatement",
															"src": "24957:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3820,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:11",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 3845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3845,
												"src": "24816:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3821,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:11"
									},
									"returnParameters": {
										"id": 3826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3825,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3845,
												"src": "24853:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 3824,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:11"
									},
									"scope": 4328,
									"src": "24798:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3870,
										"nodeType": "Block",
										"src": "25419:150:11",
										"statements": [
											{
												"expression": {
													"id": 3858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3853,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3851,
														"src": "25429:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3856,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3848,
																"src": "25449:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 3854,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 3859,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3860,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3851,
														"src": "25469:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3861,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3848,
														"src": "25483:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3869,
												"nodeType": "IfStatement",
												"src": "25465:98:11",
												"trueBody": {
													"id": 3868,
													"nodeType": "Block",
													"src": "25490:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 3864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 3865,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3848,
																		"src": "25546:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3863,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "25511:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3867,
															"nodeType": "RevertStatement",
															"src": "25504:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3846,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:11",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3848,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3871,
												"src": "25363:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3847,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:11"
									},
									"returnParameters": {
										"id": 3852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3851,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3871,
												"src": "25400:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 3850,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:11"
									},
									"scope": 4328,
									"src": "25345:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3896,
										"nodeType": "Block",
										"src": "25966:150:11",
										"statements": [
											{
												"expression": {
													"id": 3884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3879,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3877,
														"src": "25976:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3882,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3874,
																"src": "25996:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 3880,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 3885,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3886,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3877,
														"src": "26016:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3887,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3874,
														"src": "26030:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3895,
												"nodeType": "IfStatement",
												"src": "26012:98:11",
												"trueBody": {
													"id": 3894,
													"nodeType": "Block",
													"src": "26037:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3891,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3874,
																		"src": "26093:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3889,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "26058:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3893,
															"nodeType": "RevertStatement",
															"src": "26051:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3872,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:11",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3897,
												"src": "25910:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3873,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:11"
									},
									"returnParameters": {
										"id": 3878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3877,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3897,
												"src": "25947:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3876,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:11"
									},
									"scope": 4328,
									"src": "25892:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3922,
										"nodeType": "Block",
										"src": "26513:150:11",
										"statements": [
											{
												"expression": {
													"id": 3910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3905,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3903,
														"src": "26523:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3908,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3900,
																"src": "26543:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 3906,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 3911,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3912,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3903,
														"src": "26563:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3913,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3900,
														"src": "26577:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3921,
												"nodeType": "IfStatement",
												"src": "26559:98:11",
												"trueBody": {
													"id": 3920,
													"nodeType": "Block",
													"src": "26584:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3917,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3900,
																		"src": "26640:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3915,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "26605:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3919,
															"nodeType": "RevertStatement",
															"src": "26598:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3898,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:11",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3900,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3923,
												"src": "26457:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3899,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:11"
									},
									"returnParameters": {
										"id": 3904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3903,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3923,
												"src": "26494:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 3902,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:11"
									},
									"scope": 4328,
									"src": "26439:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3948,
										"nodeType": "Block",
										"src": "27060:150:11",
										"statements": [
											{
												"expression": {
													"id": 3936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3931,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3929,
														"src": "27070:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3934,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3926,
																"src": "27090:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 3932,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 3937,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3938,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3929,
														"src": "27110:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3939,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3926,
														"src": "27124:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3947,
												"nodeType": "IfStatement",
												"src": "27106:98:11",
												"trueBody": {
													"id": 3946,
													"nodeType": "Block",
													"src": "27131:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3943,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3926,
																		"src": "27187:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3941,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "27152:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3945,
															"nodeType": "RevertStatement",
															"src": "27145:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3924,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:11",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3926,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3949,
												"src": "27004:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3925,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:11"
									},
									"returnParameters": {
										"id": 3930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3929,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3949,
												"src": "27041:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 3928,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:11"
									},
									"scope": 4328,
									"src": "26986:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3974,
										"nodeType": "Block",
										"src": "27607:150:11",
										"statements": [
											{
												"expression": {
													"id": 3962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3957,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3955,
														"src": "27617:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3960,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3952,
																"src": "27637:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 3958,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 3963,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3964,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3955,
														"src": "27657:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3965,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3952,
														"src": "27671:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3973,
												"nodeType": "IfStatement",
												"src": "27653:98:11",
												"trueBody": {
													"id": 3972,
													"nodeType": "Block",
													"src": "27678:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3969,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3952,
																		"src": "27734:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3967,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "27699:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3971,
															"nodeType": "RevertStatement",
															"src": "27692:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3950,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:11",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3952,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3975,
												"src": "27551:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3951,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:11"
									},
									"returnParameters": {
										"id": 3956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3955,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3975,
												"src": "27588:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 3954,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:11"
									},
									"scope": 4328,
									"src": "27533:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4000,
										"nodeType": "Block",
										"src": "28147:148:11",
										"statements": [
											{
												"expression": {
													"id": 3988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3983,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3981,
														"src": "28157:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3986,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3978,
																"src": "28176:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 3984,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 3987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 3989,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3990,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3981,
														"src": "28196:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3991,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3978,
														"src": "28210:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3999,
												"nodeType": "IfStatement",
												"src": "28192:97:11",
												"trueBody": {
													"id": 3998,
													"nodeType": "Block",
													"src": "28217:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3995,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3978,
																		"src": "28272:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3993,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "28238:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3997,
															"nodeType": "RevertStatement",
															"src": "28231:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3976,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:11",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 4001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3978,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4001,
												"src": "28092:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3977,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:11"
									},
									"returnParameters": {
										"id": 3982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3981,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4001,
												"src": "28129:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 3980,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:11"
									},
									"scope": 4328,
									"src": "28075:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4026,
										"nodeType": "Block",
										"src": "28685:148:11",
										"statements": [
											{
												"expression": {
													"id": 4014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4009,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4007,
														"src": "28695:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4012,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4004,
																"src": "28714:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 4010,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 4015,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4016,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4007,
														"src": "28734:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4017,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4004,
														"src": "28748:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4025,
												"nodeType": "IfStatement",
												"src": "28730:97:11",
												"trueBody": {
													"id": 4024,
													"nodeType": "Block",
													"src": "28755:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 4020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 4021,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4004,
																		"src": "28810:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4019,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "28776:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4023,
															"nodeType": "RevertStatement",
															"src": "28769:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4002,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:11",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 4027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4004,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4027,
												"src": "28630:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4003,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:11"
									},
									"returnParameters": {
										"id": 4008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4007,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4027,
												"src": "28667:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 4006,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:11"
									},
									"scope": 4328,
									"src": "28613:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4052,
										"nodeType": "Block",
										"src": "29223:148:11",
										"statements": [
											{
												"expression": {
													"id": 4040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4035,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4033,
														"src": "29233:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4038,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4030,
																"src": "29252:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 4036,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 4041,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4042,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4033,
														"src": "29272:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4043,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4030,
														"src": "29286:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4051,
												"nodeType": "IfStatement",
												"src": "29268:97:11",
												"trueBody": {
													"id": 4050,
													"nodeType": "Block",
													"src": "29293:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 4046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 4047,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4030,
																		"src": "29348:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4045,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "29314:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4049,
															"nodeType": "RevertStatement",
															"src": "29307:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4028,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:11",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 4053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4030,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4053,
												"src": "29168:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4029,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:11"
									},
									"returnParameters": {
										"id": 4034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4033,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4053,
												"src": "29205:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 4032,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:11"
									},
									"scope": 4328,
									"src": "29151:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4078,
										"nodeType": "Block",
										"src": "29761:148:11",
										"statements": [
											{
												"expression": {
													"id": 4066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4061,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4059,
														"src": "29771:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4064,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4056,
																"src": "29790:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 4062,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 4067,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4068,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4059,
														"src": "29810:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4069,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4056,
														"src": "29824:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4077,
												"nodeType": "IfStatement",
												"src": "29806:97:11",
												"trueBody": {
													"id": 4076,
													"nodeType": "Block",
													"src": "29831:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 4072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 4073,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4056,
																		"src": "29886:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4071,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "29852:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4075,
															"nodeType": "RevertStatement",
															"src": "29845:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4054,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:11",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 4079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4056,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4079,
												"src": "29706:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4055,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:11"
									},
									"returnParameters": {
										"id": 4060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4059,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4079,
												"src": "29743:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 4058,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:11"
									},
									"scope": 4328,
									"src": "29689:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4104,
										"nodeType": "Block",
										"src": "30299:148:11",
										"statements": [
											{
												"expression": {
													"id": 4092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4087,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4085,
														"src": "30309:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4090,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4082,
																"src": "30328:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 4088,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 4093,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4094,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4085,
														"src": "30348:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4095,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4082,
														"src": "30362:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4103,
												"nodeType": "IfStatement",
												"src": "30344:97:11",
												"trueBody": {
													"id": 4102,
													"nodeType": "Block",
													"src": "30369:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 4098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 4099,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4082,
																		"src": "30424:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4097,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "30390:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4101,
															"nodeType": "RevertStatement",
															"src": "30383:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4080,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:11",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 4105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4082,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4105,
												"src": "30244:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4081,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:11"
									},
									"returnParameters": {
										"id": 4086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4085,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4105,
												"src": "30281:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 4084,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:11"
									},
									"scope": 4328,
									"src": "30227:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4130,
										"nodeType": "Block",
										"src": "30837:148:11",
										"statements": [
											{
												"expression": {
													"id": 4118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4113,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4111,
														"src": "30847:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4116,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4108,
																"src": "30866:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 4114,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 4119,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4120,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4111,
														"src": "30886:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4121,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4108,
														"src": "30900:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4129,
												"nodeType": "IfStatement",
												"src": "30882:97:11",
												"trueBody": {
													"id": 4128,
													"nodeType": "Block",
													"src": "30907:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 4124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 4125,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4108,
																		"src": "30962:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4123,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "30928:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4127,
															"nodeType": "RevertStatement",
															"src": "30921:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4106,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:11",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 4131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4108,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4131,
												"src": "30782:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4107,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:11"
									},
									"returnParameters": {
										"id": 4112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4111,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4131,
												"src": "30819:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 4110,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:11"
									},
									"scope": 4328,
									"src": "30765:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4156,
										"nodeType": "Block",
										"src": "31375:148:11",
										"statements": [
											{
												"expression": {
													"id": 4144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4139,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4137,
														"src": "31385:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4142,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4134,
																"src": "31404:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 4140,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 4145,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4146,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4137,
														"src": "31424:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4147,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4134,
														"src": "31438:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4155,
												"nodeType": "IfStatement",
												"src": "31420:97:11",
												"trueBody": {
													"id": 4154,
													"nodeType": "Block",
													"src": "31445:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 4150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 4151,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4134,
																		"src": "31500:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4149,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "31466:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4153,
															"nodeType": "RevertStatement",
															"src": "31459:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4132,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:11",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 4157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4134,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4157,
												"src": "31320:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4133,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:11"
									},
									"returnParameters": {
										"id": 4138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4137,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4157,
												"src": "31357:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 4136,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:11"
									},
									"scope": 4328,
									"src": "31303:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4182,
										"nodeType": "Block",
										"src": "31913:148:11",
										"statements": [
											{
												"expression": {
													"id": 4170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4165,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4163,
														"src": "31923:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4168,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4160,
																"src": "31942:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 4166,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 4171,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4172,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4163,
														"src": "31962:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4173,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4160,
														"src": "31976:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4181,
												"nodeType": "IfStatement",
												"src": "31958:97:11",
												"trueBody": {
													"id": 4180,
													"nodeType": "Block",
													"src": "31983:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 4176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 4177,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4160,
																		"src": "32038:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4175,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "32004:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4179,
															"nodeType": "RevertStatement",
															"src": "31997:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4158,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:11",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 4183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4160,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4183,
												"src": "31858:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4159,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:11"
									},
									"returnParameters": {
										"id": 4164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4163,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4183,
												"src": "31895:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 4162,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:11"
									},
									"scope": 4328,
									"src": "31841:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4208,
										"nodeType": "Block",
										"src": "32451:148:11",
										"statements": [
											{
												"expression": {
													"id": 4196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4191,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4189,
														"src": "32461:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4194,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4186,
																"src": "32480:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 4192,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 4197,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4198,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4189,
														"src": "32500:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4199,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4186,
														"src": "32514:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4207,
												"nodeType": "IfStatement",
												"src": "32496:97:11",
												"trueBody": {
													"id": 4206,
													"nodeType": "Block",
													"src": "32521:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 4202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 4203,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4186,
																		"src": "32576:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4201,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "32542:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4205,
															"nodeType": "RevertStatement",
															"src": "32535:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4184,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:11",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 4209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4186,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4209,
												"src": "32396:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4185,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:11"
									},
									"returnParameters": {
										"id": 4190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4189,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4209,
												"src": "32433:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 4188,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:11"
									},
									"scope": 4328,
									"src": "32379:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4234,
										"nodeType": "Block",
										"src": "32989:148:11",
										"statements": [
											{
												"expression": {
													"id": 4222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4217,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4215,
														"src": "32999:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4220,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4212,
																"src": "33018:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 4218,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 4223,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4224,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4215,
														"src": "33038:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4225,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4212,
														"src": "33052:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4233,
												"nodeType": "IfStatement",
												"src": "33034:97:11",
												"trueBody": {
													"id": 4232,
													"nodeType": "Block",
													"src": "33059:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 4228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 4229,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4212,
																		"src": "33114:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4227,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "33080:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4231,
															"nodeType": "RevertStatement",
															"src": "33073:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4210,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:11",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 4235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4235,
												"src": "32934:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4211,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:11"
									},
									"returnParameters": {
										"id": 4216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4215,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4235,
												"src": "32971:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4214,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:11"
									},
									"scope": 4328,
									"src": "32917:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4260,
										"nodeType": "Block",
										"src": "33527:148:11",
										"statements": [
											{
												"expression": {
													"id": 4248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4243,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4241,
														"src": "33537:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4246,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4238,
																"src": "33556:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 4244,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 4249,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4250,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4241,
														"src": "33576:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4251,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4238,
														"src": "33590:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4259,
												"nodeType": "IfStatement",
												"src": "33572:97:11",
												"trueBody": {
													"id": 4258,
													"nodeType": "Block",
													"src": "33597:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 4254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 4255,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4238,
																		"src": "33652:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4253,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "33618:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4257,
															"nodeType": "RevertStatement",
															"src": "33611:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4236,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:11",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 4261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4261,
												"src": "33472:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4237,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:11"
									},
									"returnParameters": {
										"id": 4242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4241,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4261,
												"src": "33509:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 4240,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:11"
									},
									"scope": 4328,
									"src": "33455:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4286,
										"nodeType": "Block",
										"src": "34058:146:11",
										"statements": [
											{
												"expression": {
													"id": 4274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4269,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4267,
														"src": "34068:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4272,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4264,
																"src": "34086:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 4270,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:11",
																"typeDescriptions": {}
															}
														},
														"id": 4273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 4275,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4276,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4267,
														"src": "34106:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4277,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4264,
														"src": "34120:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4285,
												"nodeType": "IfStatement",
												"src": "34102:96:11",
												"trueBody": {
													"id": 4284,
													"nodeType": "Block",
													"src": "34127:71:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 4280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 4281,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4264,
																		"src": "34181:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4279,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "34148:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4283,
															"nodeType": "RevertStatement",
															"src": "34141:46:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4262,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:11",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 4287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4264,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4287,
												"src": "34004:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4263,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:11"
									},
									"returnParameters": {
										"id": 4268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4267,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4287,
												"src": "34041:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 4266,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:11"
									},
									"scope": 4328,
									"src": "33988:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4316,
										"nodeType": "Block",
										"src": "34444:250:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4295,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4290,
														"src": "34557:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 4300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 4299,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:11",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 4298,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 4301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 4302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:11",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 4296,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 4303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4310,
												"nodeType": "IfStatement",
												"src": "34553:105:11",
												"trueBody": {
													"id": 4309,
													"nodeType": "Block",
													"src": "34592:66:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 4306,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4290,
																		"src": "34641:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4305,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "34613:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 4307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4308,
															"nodeType": "RevertStatement",
															"src": "34606:41:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4313,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4290,
															"src": "34681:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 4311,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 4314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4294,
												"id": 4315,
												"nodeType": "Return",
												"src": "34667:20:11"
											}
										]
									},
									"documentation": {
										"id": 4288,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:11",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 4317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4290,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4317,
												"src": "34398:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:11"
									},
									"returnParameters": {
										"id": 4294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4317,
												"src": "34436:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4292,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:11"
									},
									"scope": 4328,
									"src": "34380:314:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4326,
										"nodeType": "Block",
										"src": "34853:87:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:11",
													"nodeType": "YulBlock",
													"src": "34888:46:11",
													"statements": [
														{
															"nativeSrc": "34902:22:11",
															"nodeType": "YulAssignment",
															"src": "34902:22:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:11"
																		},
																		"nativeSrc": "34914:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:11"
																},
																"nativeSrc": "34907:17:11",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:11"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:11"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 4320,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:11",
														"valueSize": 1
													},
													{
														"declaration": 4323,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4325,
												"nodeType": "InlineAssembly",
												"src": "34863:71:11"
											}
										]
									},
									"documentation": {
										"id": 4318,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:11",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 4327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4320,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 4327,
												"src": "34811:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:11"
									},
									"returnParameters": {
										"id": 4324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4323,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 4327,
												"src": "34842:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:11"
									},
									"scope": 4328,
									"src": "34795:145:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4329,
							"src": "769:34173:11",
							"usedErrors": [
								2573,
								2578,
								2585,
								2590
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:11"
				},
				"id": 11
			},
			"contracts/MarketingStaking.sol": {
				"ast": {
					"absolutePath": "contracts/MarketingStaking.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"MarketingStaking": [
							5412
						],
						"Math": [
							2563
						],
						"Ownable": [
							147
						],
						"Panic": [
							861
						],
						"ReentrancyGuard": [
							930
						],
						"SafeCast": [
							4328
						],
						"SafeERC20": [
							779
						]
					},
					"id": 5413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 4331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5413,
							"sourceUnit": 148,
							"src": "61:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 4332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5413,
							"sourceUnit": 2564,
							"src": "115:53:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 4333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5413,
							"sourceUnit": 316,
							"src": "170:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 4334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5413,
							"sourceUnit": 780,
							"src": "228:65:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 4335,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5413,
							"sourceUnit": 931,
							"src": "295:59:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4336,
										"name": "Ownable",
										"nameLocations": [
											"387:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "387:7:12"
									},
									"id": 4337,
									"nodeType": "InheritanceSpecifier",
									"src": "387:7:12"
								},
								{
									"baseName": {
										"id": 4338,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"396:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 930,
										"src": "396:15:12"
									},
									"id": 4339,
									"nodeType": "InheritanceSpecifier",
									"src": "396:15:12"
								}
							],
							"canonicalName": "MarketingStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 5412,
							"linearizedBaseContracts": [
								5412,
								930,
								147,
								809
							],
							"name": "MarketingStaking",
							"nameLocation": "367:16:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 4343,
									"libraryName": {
										"id": 4340,
										"name": "SafeERC20",
										"nameLocations": [
											"426:9:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 779,
										"src": "426:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "420:27:12",
									"typeName": {
										"id": 4342,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4341,
											"name": "IERC20",
											"nameLocations": [
												"440:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "440:6:12"
										},
										"referencedDeclaration": 315,
										"src": "440:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "MarketingStaking.PoolInfo",
									"id": 4364,
									"members": [
										{
											"constant": false,
											"id": 4346,
											"mutability": "mutable",
											"name": "staking_token",
											"nameLocation": "492:13:12",
											"nodeType": "VariableDeclaration",
											"scope": 4364,
											"src": "485:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$315",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 4345,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 4344,
													"name": "IERC20",
													"nameLocations": [
														"485:6:12"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 315,
													"src": "485:6:12"
												},
												"referencedDeclaration": 315,
												"src": "485:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4348,
											"mutability": "mutable",
											"name": "start_epoch",
											"nameLocation": "523:11:12",
											"nodeType": "VariableDeclaration",
											"scope": 4364,
											"src": "516:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 4347,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "516:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4351,
											"mutability": "mutable",
											"name": "rewards_token",
											"nameLocation": "552:13:12",
											"nodeType": "VariableDeclaration",
											"scope": 4364,
											"src": "545:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$315",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 4350,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 4349,
													"name": "IERC20",
													"nameLocations": [
														"545:6:12"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 315,
													"src": "545:6:12"
												},
												"referencedDeclaration": 315,
												"src": "545:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4353,
											"mutability": "mutable",
											"name": "end_epoch",
											"nameLocation": "583:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 4364,
											"src": "576:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 4352,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "576:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4355,
											"mutability": "mutable",
											"name": "stake_amount",
											"nameLocation": "615:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 4364,
											"src": "610:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4354,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "610:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4357,
											"mutability": "mutable",
											"name": "reward_rate",
											"nameLocation": "643:11:12",
											"nodeType": "VariableDeclaration",
											"scope": 4364,
											"src": "638:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4356,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "638:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4359,
											"mutability": "mutable",
											"name": "reward_rate_cumsum",
											"nameLocation": "670:18:12",
											"nodeType": "VariableDeclaration",
											"scope": 4364,
											"src": "665:23:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4358,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "665:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4361,
											"mutability": "mutable",
											"name": "available_rewards",
											"nameLocation": "704:17:12",
											"nodeType": "VariableDeclaration",
											"scope": 4364,
											"src": "699:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4360,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "699:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4363,
											"mutability": "mutable",
											"name": "last_update_epoch",
											"nameLocation": "739:17:12",
											"nodeType": "VariableDeclaration",
											"scope": 4364,
											"src": "732:24:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 4362,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "732:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "460:8:12",
									"nodeType": "StructDefinition",
									"scope": 5412,
									"src": "453:311:12",
									"visibility": "public"
								},
								{
									"canonicalName": "MarketingStaking.StakeDetails",
									"id": 4371,
									"members": [
										{
											"constant": false,
											"id": 4366,
											"mutability": "mutable",
											"name": "stake_amount",
											"nameLocation": "813:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 4371,
											"src": "808:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4365,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "808:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4368,
											"mutability": "mutable",
											"name": "reward_amount",
											"nameLocation": "841:13:12",
											"nodeType": "VariableDeclaration",
											"scope": 4371,
											"src": "836:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4367,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "836:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4370,
											"mutability": "mutable",
											"name": "reward_rate_cumsum",
											"nameLocation": "870:18:12",
											"nodeType": "VariableDeclaration",
											"scope": 4371,
											"src": "865:23:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4369,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "865:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeDetails",
									"nameLocation": "779:12:12",
									"nodeType": "StructDefinition",
									"scope": 5412,
									"src": "772:124:12",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "21241dfe",
									"id": 4374,
									"mutability": "constant",
									"name": "CLAIM_PERIOD",
									"nameLocation": "927:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 5412,
									"src": "904:45:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint96",
										"typeString": "uint96"
									},
									"typeName": {
										"id": 4372,
										"name": "uint96",
										"nodeType": "ElementaryTypeName",
										"src": "904:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint96",
											"typeString": "uint96"
										}
									},
									"value": {
										"hexValue": "3430",
										"id": 4373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "942:7:12",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3456000_by_1",
											"typeString": "int_const 3456000"
										},
										"value": "40"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ce4b5bbe",
									"id": 4377,
									"mutability": "constant",
									"name": "SCALE_FACTOR",
									"nameLocation": "977:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 5412,
									"src": "956:40:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4375,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "956:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653231",
										"id": 4376,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "992:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										},
										"value": "1e21"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 4381,
									"mutability": "mutable",
									"name": "pools",
									"nameLocation": "1022:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 5412,
									"src": "1003:24:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage",
										"typeString": "struct MarketingStaking.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 4379,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 4378,
												"name": "PoolInfo",
												"nameLocations": [
													"1003:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4364,
												"src": "1003:8:12"
											},
											"referencedDeclaration": 4364,
											"src": "1003:8:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
												"typeString": "struct MarketingStaking.PoolInfo"
											}
										},
										"id": 4380,
										"nodeType": "ArrayTypeName",
										"src": "1003:10:12",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage_ptr",
											"typeString": "struct MarketingStaking.PoolInfo[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "584b62a1",
									"id": 4388,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "1093:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 5412,
									"src": "1034:65:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_StakeDetails_$4371_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct MarketingStaking.StakeDetails))"
									},
									"typeName": {
										"id": 4387,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4382,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1043:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1034:51:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_StakeDetails_$4371_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct MarketingStaking.StakeDetails))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 4386,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 4383,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1063:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1054:30:12",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$4371_storage_$",
												"typeString": "mapping(uint256 => struct MarketingStaking.StakeDetails)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 4385,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 4384,
													"name": "StakeDetails",
													"nameLocations": [
														"1071:12:12"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 4371,
													"src": "1071:12:12"
												},
												"referencedDeclaration": 4371,
												"src": "1071:12:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
													"typeString": "struct MarketingStaking.StakeDetails"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6c07ee05dcf262f13abf9d87b846ee789d2f90fe991d495acd7d7fc109ee1f55",
									"id": 4394,
									"name": "RewardAdded",
									"nameLocation": "1114:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4390,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "1139:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 4394,
												"src": "1126:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4389,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1126:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4392,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1153:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 4394,
												"src": "1148:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4391,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1148:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1125:35:12"
									},
									"src": "1108:53:12"
								},
								{
									"anonymous": false,
									"eventSelector": "b886382d42263e3c08a157dd29a33c435741f36625dbc3acb6fb8c19bbf78247",
									"id": 4402,
									"name": "RewardWithdrawn",
									"nameLocation": "1173:15:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4396,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "1202:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 4402,
												"src": "1189:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4395,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1189:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4398,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1227:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 4402,
												"src": "1211:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4400,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1236:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 4402,
												"src": "1231:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4399,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1231:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:55:12"
									},
									"src": "1167:77:12"
								},
								{
									"anonymous": false,
									"eventSelector": "7c89ff64ffbfc8006a5f9ef85541e2fc4f990a7906ba4920928ffd9c9b7b3a95",
									"id": 4416,
									"name": "PoolCreated",
									"nameLocation": "1256:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4404,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "1281:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 4416,
												"src": "1268:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4403,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4406,
												"indexed": false,
												"mutability": "mutable",
												"name": "staking_token",
												"nameLocation": "1298:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 4416,
												"src": "1290:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4408,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewards_token",
												"nameLocation": "1321:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 4416,
												"src": "1313:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1313:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4410,
												"indexed": false,
												"mutability": "mutable",
												"name": "start_epoch",
												"nameLocation": "1343:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 4416,
												"src": "1336:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 4409,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1336:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4412,
												"indexed": false,
												"mutability": "mutable",
												"name": "end_epoch",
												"nameLocation": "1363:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 4416,
												"src": "1356:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 4411,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1356:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4414,
												"indexed": false,
												"mutability": "mutable",
												"name": "scale_factor",
												"nameLocation": "1379:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 4416,
												"src": "1374:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4413,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1374:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:125:12"
									},
									"src": "1250:143:12"
								},
								{
									"anonymous": false,
									"eventSelector": "e9d4ced29dfd1b7392aa77b7ea3220d8318a5a65cd900f4e40e9d816d11d84f2",
									"id": 4428,
									"name": "PoolUpdated",
									"nameLocation": "1405:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4418,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "1430:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 4428,
												"src": "1417:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4417,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1417:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4420,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "1444:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 4428,
												"src": "1439:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4419,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1439:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4422,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward_rate",
												"nameLocation": "1463:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 4428,
												"src": "1458:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4421,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1458:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4424,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward_rate_cumsum",
												"nameLocation": "1481:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 4428,
												"src": "1476:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4423,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1476:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4426,
												"indexed": false,
												"mutability": "mutable",
												"name": "last_update_epoch",
												"nameLocation": "1508:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 4428,
												"src": "1501:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 4425,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1501:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1416:110:12"
									},
									"src": "1399:128:12"
								},
								{
									"anonymous": false,
									"eventSelector": "8fe70e917ad578cbb5b0779aa52ee3f23afa39c5295542125059f2a4e98cbbfe",
									"id": 4440,
									"name": "StakeUpdated",
									"nameLocation": "1539:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4430,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "1565:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 4440,
												"src": "1552:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4429,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1552:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4432,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1590:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 4440,
												"src": "1574:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4434,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "1601:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 4440,
												"src": "1596:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4433,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1596:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4436,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward_amount",
												"nameLocation": "1620:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 4440,
												"src": "1615:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4435,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1615:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4438,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward_rate_cumsum",
												"nameLocation": "1640:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 4440,
												"src": "1635:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4437,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1635:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1551:108:12"
									},
									"src": "1533:127:12"
								},
								{
									"anonymous": false,
									"eventSelector": "459d5aef2c549903c1eeb1736f5728845d5ccf82537ddd5bf8035795eee89263",
									"id": 4448,
									"name": "StakeWithdrawn",
									"nameLocation": "1672:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4442,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "1700:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 4448,
												"src": "1687:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4441,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1687:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4444,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1725:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 4448,
												"src": "1709:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4446,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1736:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 4448,
												"src": "1731:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4445,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1731:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1686:57:12"
									},
									"src": "1666:78:12"
								},
								{
									"anonymous": false,
									"eventSelector": "04492fab062412e7e4e5f46c9e919f1640652946a5e163ad6e6c1c03d87954d2",
									"id": 4456,
									"name": "RewardPaid",
									"nameLocation": "1756:10:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4450,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "1780:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 4456,
												"src": "1767:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4449,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1767:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4452,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1805:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 4456,
												"src": "1789:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4454,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1816:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 4456,
												"src": "1811:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:57:12"
									},
									"src": "1750:74:12"
								},
								{
									"body": {
										"id": 4473,
										"nodeType": "Block",
										"src": "1875:114:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 4468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4461,
																	"name": "pool_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4458,
																	"src": "1894:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 4462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1904:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1894:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4464,
																	"name": "pool_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4458,
																	"src": "1909:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 4465,
																		"name": "pools",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4381,
																		"src": "1919:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage",
																			"typeString": "struct MarketingStaking.PoolInfo storage ref[] storage ref"
																		}
																	},
																	"id": 4466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1925:6:12",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1919:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1909:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1894:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e675374616b696e673a496e76616c696420506f6f6c20494421",
															"id": 4469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1933:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2ffeb4d6a6e18c53bdbb1e26a888925e88a2c474bd647fcf899e8c6ee5114207",
																"typeString": "literal_string \"MarketingStaking:Invalid Pool ID!\""
															},
															"value": "MarketingStaking:Invalid Pool ID!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2ffeb4d6a6e18c53bdbb1e26a888925e88a2c474bd647fcf899e8c6ee5114207",
																"typeString": "literal_string \"MarketingStaking:Invalid Pool ID!\""
															}
														],
														"id": 4460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1886:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1886:83:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4471,
												"nodeType": "ExpressionStatement",
												"src": "1886:83:12"
											},
											{
												"id": 4472,
												"nodeType": "PlaceholderStatement",
												"src": "1980:1:12"
											}
										]
									},
									"id": 4474,
									"name": "validate_pool",
									"nameLocation": "1841:13:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4458,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "1860:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 4474,
												"src": "1855:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4457,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1855:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1854:14:12"
									},
									"src": "1832:157:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4507,
										"nodeType": "Block",
										"src": "2042:370:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 4488,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2119:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 4487,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2111:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 4486,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2111:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2111:10:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 4485,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "2104:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 4490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2104:18:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 4494,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2167:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 4493,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2159:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 4492,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2159:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2159:10:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 4491,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "2152:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 4496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2152:18:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 4497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2198:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 4498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2225:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 4499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2255:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 4500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2284:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 4501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2320:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 4502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2355:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 4503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2390:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 4484,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4364,
																"src": "2065:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$4364_storage_ptr_$",
																	"typeString": "type(struct MarketingStaking.PoolInfo storage pointer)"
																}
															},
															"id": 4504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"2089:13:12",
																"2137:13:12",
																"2185:11:12",
																"2214:9:12",
																"2241:12:12",
																"2271:11:12",
																"2300:18:12",
																"2336:17:12",
																"2371:17:12"
															],
															"names": [
																"staking_token",
																"rewards_token",
																"start_epoch",
																"end_epoch",
																"stake_amount",
																"reward_rate",
																"reward_rate_cumsum",
																"last_update_epoch",
																"available_rewards"
															],
															"nodeType": "FunctionCall",
															"src": "2065:338:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$4364_memory_ptr",
																"typeString": "struct MarketingStaking.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$4364_memory_ptr",
																"typeString": "struct MarketingStaking.PoolInfo memory"
															}
														],
														"expression": {
															"id": 4481,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4381,
															"src": "2054:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage",
																"typeString": "struct MarketingStaking.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 4483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2060:4:12",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2054:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$4364_storage_$returns$__$attached_to$_t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct MarketingStaking.PoolInfo storage ref[] storage pointer,struct MarketingStaking.PoolInfo storage ref)"
														}
													},
													"id": 4505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2054:350:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4506,
												"nodeType": "ExpressionStatement",
												"src": "2054:350:12"
											}
										]
									},
									"id": 4508,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 4477,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "2023:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 4478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2023:12:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 4479,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 4476,
												"name": "Ownable",
												"nameLocations": [
													"2015:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2015:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2015:21:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2012:2:12"
									},
									"returnParameters": {
										"id": 4480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:12"
									},
									"scope": 5412,
									"src": "2001:411:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4567,
										"nodeType": "Block",
										"src": "2812:381:12",
										"statements": [
											{
												"assignments": [
													4536
												],
												"declarations": [
													{
														"constant": false,
														"id": 4536,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "2840:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 4567,
														"src": "2823:21:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
															"typeString": "struct MarketingStaking.PoolInfo"
														},
														"typeName": {
															"id": 4535,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4534,
																"name": "PoolInfo",
																"nameLocations": [
																	"2823:8:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4364,
																"src": "2823:8:12"
															},
															"referencedDeclaration": 4364,
															"src": "2823:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																"typeString": "struct MarketingStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4540,
												"initialValue": {
													"baseExpression": {
														"id": 4537,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4381,
														"src": "2847:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage",
															"typeString": "struct MarketingStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 4539,
													"indexExpression": {
														"id": 4538,
														"name": "pool_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4510,
														"src": "2853:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2847:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$4364_storage",
														"typeString": "struct MarketingStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:38:12"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 4543,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4536,
																		"src": "2888:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																			"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 4544,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2893:13:12",
																	"memberName": "staking_token",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4346,
																	"src": "2888:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 4542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2880:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2880:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 4545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2880:27:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 4548,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4536,
																		"src": "2930:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																			"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 4549,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2935:13:12",
																	"memberName": "rewards_token",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4351,
																	"src": "2930:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 4547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2922:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4546,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2922:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 4550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2922:27:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4551,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4536,
																"src": "2964:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4552,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2969:11:12",
															"memberName": "start_epoch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4348,
															"src": "2964:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"expression": {
																"id": 4553,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4536,
																"src": "2995:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4554,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3000:9:12",
															"memberName": "end_epoch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4353,
															"src": "2995:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"expression": {
																"id": 4555,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4536,
																"src": "3024:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4556,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3029:12:12",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4355,
															"src": "3024:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4557,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4536,
																"src": "3056:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4558,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3061:11:12",
															"memberName": "reward_rate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4357,
															"src": "3056:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4559,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4536,
																"src": "3087:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4560,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3092:18:12",
															"memberName": "reward_rate_cumsum",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4359,
															"src": "3087:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4561,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4536,
																"src": "3125:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4562,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3130:17:12",
															"memberName": "last_update_epoch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4363,
															"src": "3125:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"expression": {
																"id": 4563,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4536,
																"src": "3162:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4564,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3167:17:12",
															"memberName": "available_rewards",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4361,
															"src": "3162:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 4565,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2879:306:12",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint96_$_t_uint96_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint96_$_t_uint256_$",
														"typeString": "tuple(address,address,uint96,uint96,uint256,uint256,uint256,uint96,uint256)"
													}
												},
												"functionReturnParameters": 4533,
												"id": 4566,
												"nodeType": "Return",
												"src": "2872:313:12"
											}
										]
									},
									"functionSelector": "068bcd8d",
									"id": 4568,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 4513,
													"name": "pool_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4510,
													"src": "2474:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 4514,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4512,
												"name": "validate_pool",
												"nameLocations": [
													"2460:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4474,
												"src": "2460:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2460:22:12"
										}
									],
									"name": "getPool",
									"nameLocation": "2429:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4510,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "2442:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 4568,
												"src": "2437:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4509,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2437:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2436:14:12"
									},
									"returnParameters": {
										"id": 4533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4516,
												"mutability": "mutable",
												"name": "staking_token",
												"nameLocation": "2515:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 4568,
												"src": "2507:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4518,
												"mutability": "mutable",
												"name": "rewards_token",
												"nameLocation": "2551:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 4568,
												"src": "2543:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2543:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4520,
												"mutability": "mutable",
												"name": "start_epoch",
												"nameLocation": "2586:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 4568,
												"src": "2579:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 4519,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2579:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4522,
												"mutability": "mutable",
												"name": "end_epoch",
												"nameLocation": "2619:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 4568,
												"src": "2612:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 4521,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2612:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4524,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "2648:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 4568,
												"src": "2643:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4523,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2643:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4526,
												"mutability": "mutable",
												"name": "reward_rate",
												"nameLocation": "2680:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 4568,
												"src": "2675:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4525,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2675:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4528,
												"mutability": "mutable",
												"name": "reward_rate_cumsum",
												"nameLocation": "2711:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 4568,
												"src": "2706:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4527,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2706:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4530,
												"mutability": "mutable",
												"name": "last_update_epoch",
												"nameLocation": "2751:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 4568,
												"src": "2744:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 4529,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2744:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4532,
												"mutability": "mutable",
												"name": "available_rewards",
												"nameLocation": "2788:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 4568,
												"src": "2783:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4531,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2783:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:300:12"
									},
									"scope": 5412,
									"src": "2420:773:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4578,
										"nodeType": "Block",
										"src": "3263:42:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4573,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4381,
															"src": "3281:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage",
																"typeString": "struct MarketingStaking.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 4574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3287:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3281:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 4575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3296:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3281:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4572,
												"id": 4577,
												"nodeType": "Return",
												"src": "3274:23:12"
											}
										]
									},
									"functionSelector": "b4ac6860",
									"id": 4579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsCount",
									"nameLocation": "3212:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3225:2:12"
									},
									"returnParameters": {
										"id": 4572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4579,
												"src": "3251:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4570,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3251:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3250:6:12"
									},
									"scope": 5412,
									"src": "3203:102:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4590,
										"nodeType": "Block",
										"src": "3367:49:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4586,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3392:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 4587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3398:9:12",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3392:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3385:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 4584,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "3385:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 4588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3385:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 4583,
												"id": 4589,
												"nodeType": "Return",
												"src": "3378:30:12"
											}
										]
									},
									"id": 4591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "time_now",
									"nameLocation": "3322:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3330:2:12"
									},
									"returnParameters": {
										"id": 4583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4591,
												"src": "3354:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 4581,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3354:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:8:12"
									},
									"scope": 5412,
									"src": "3313:103:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 4709,
										"nodeType": "Block",
										"src": "3615:1194:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 4614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 4611,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4591,
																	"src": "3634:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 4612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3634:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 4613,
																"name": "end_epoch",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4599,
																"src": "3647:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "3634:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e675374616b696e673a456e642074696d65206d7573742062652067726561746572207468616e2074696d655f6e6f7721",
															"id": 4615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3658:58:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c75e03f9b44f14ed5ce8359be3379649f6c328e6dab2912e90239799cefdf367",
																"typeString": "literal_string \"MarketingStaking:End time must be greater than time_now!\""
															},
															"value": "MarketingStaking:End time must be greater than time_now!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c75e03f9b44f14ed5ce8359be3379649f6c328e6dab2912e90239799cefdf367",
																"typeString": "literal_string \"MarketingStaking:End time must be greater than time_now!\""
															}
														],
														"id": 4610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3626:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3626:91:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4617,
												"nodeType": "ExpressionStatement",
												"src": "3626:91:12"
											},
											{
												"expression": {
													"id": 4628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4618,
														"name": "start_epoch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4597,
														"src": "3728:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 4623,
																		"name": "start_epoch",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4597,
																		"src": "3758:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 4624,
																			"name": "time_now",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4591,
																			"src": "3771:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																				"typeString": "function () view returns (uint96)"
																			}
																		},
																		"id": 4625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3771:10:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"id": 4621,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2563,
																		"src": "3749:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2563_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 4622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3754:3:12",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1250,
																	"src": "3749:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 4626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3749:33:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3742:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint96_$",
																"typeString": "type(uint96)"
															},
															"typeName": {
																"id": 4619,
																"name": "uint96",
																"nodeType": "ElementaryTypeName",
																"src": "3742:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3742:41:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "3728:55:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 4629,
												"nodeType": "ExpressionStatement",
												"src": "3728:55:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 4633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4631,
																"name": "start_epoch",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4597,
																"src": "3802:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 4632,
																"name": "end_epoch",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4599,
																"src": "3816:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "3802:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e675374616b696e673a53746172742074696d65206d757374206265206c657373207468616e20656e642074696d6521",
															"id": 4634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3827:57:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_42908245c450f80f818d9000a6ee4b3b82113f201550c2dc613cb5413b32f2ba",
																"typeString": "literal_string \"MarketingStaking:Start time must be less than end time!\""
															},
															"value": "MarketingStaking:Start time must be less than end time!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_42908245c450f80f818d9000a6ee4b3b82113f201550c2dc613cb5413b32f2ba",
																"typeString": "literal_string \"MarketingStaking:Start time must be less than end time!\""
															}
														],
														"id": 4630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3794:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3794:91:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4636,
												"nodeType": "ExpressionStatement",
												"src": "3794:91:12"
											},
											{
												"assignments": [
													4638
												],
												"declarations": [
													{
														"constant": false,
														"id": 4638,
														"mutability": "mutable",
														"name": "reward_rate",
														"nameLocation": "3906:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 4709,
														"src": "3901:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4637,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3901:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4647,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4639,
															"name": "SCALE_FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4377,
															"src": "3920:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 4640,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4601,
															"src": "3933:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3920:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 4644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4642,
																	"name": "end_epoch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4599,
																	"src": "3948:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 4643,
																	"name": "start_epoch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4597,
																	"src": "3960:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "3948:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															}
														],
														"id": 4645,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3947:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "3920:52:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3901:71:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 4653,
																			"name": "staking_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4593,
																			"src": "4040:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 4652,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "4033:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 4654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4033:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 4656,
																			"name": "rewards_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4595,
																			"src": "4091:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 4655,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "4084:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 4657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4084:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 4658,
																	"name": "start_epoch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4597,
																	"src": "4133:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																{
																	"id": 4659,
																	"name": "end_epoch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4599,
																	"src": "4170:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 4660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4208:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"id": 4661,
																	"name": "reward_rate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4638,
																	"src": "4237:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 4662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4283:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"id": 4663,
																	"name": "start_epoch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4597,
																	"src": "4318:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																{
																	"id": 4664,
																	"name": "transfer_reward_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4603,
																	"src": "4363:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 4651,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4364,
																"src": "3994:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$4364_storage_ptr_$",
																	"typeString": "type(struct MarketingStaking.PoolInfo storage pointer)"
																}
															},
															"id": 4665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"4018:13:12",
																"4069:13:12",
																"4120:11:12",
																"4159:9:12",
																"4194:12:12",
																"4224:11:12",
																"4263:18:12",
																"4299:17:12",
																"4344:17:12"
															],
															"names": [
																"staking_token",
																"rewards_token",
																"start_epoch",
																"end_epoch",
																"stake_amount",
																"reward_rate",
																"reward_rate_cumsum",
																"last_update_epoch",
																"available_rewards"
															],
															"nodeType": "FunctionCall",
															"src": "3994:403:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$4364_memory_ptr",
																"typeString": "struct MarketingStaking.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$4364_memory_ptr",
																"typeString": "struct MarketingStaking.PoolInfo memory"
															}
														],
														"expression": {
															"id": 4648,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4381,
															"src": "3983:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage",
																"typeString": "struct MarketingStaking.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 4650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3989:4:12",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3983:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$4364_storage_$returns$__$attached_to$_t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct MarketingStaking.PoolInfo storage ref[] storage pointer,struct MarketingStaking.PoolInfo storage ref)"
														}
													},
													"id": 4666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3983:415:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4667,
												"nodeType": "ExpressionStatement",
												"src": "3983:415:12"
											},
											{
												"assignments": [
													4669
												],
												"declarations": [
													{
														"constant": false,
														"id": 4669,
														"mutability": "mutable",
														"name": "pool_id",
														"nameLocation": "4414:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 4709,
														"src": "4409:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4668,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4409:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4674,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4670,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4381,
															"src": "4424:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage",
																"typeString": "struct MarketingStaking.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 4671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4430:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4424:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 4672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4439:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4424:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4409:31:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4676,
															"name": "pool_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4669,
															"src": "4468:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4677,
															"name": "staking_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4593,
															"src": "4477:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4678,
															"name": "rewards_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4595,
															"src": "4492:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4679,
															"name": "start_epoch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4597,
															"src": "4507:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 4680,
															"name": "end_epoch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4599,
															"src": "4520:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 4681,
															"name": "SCALE_FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4377,
															"src": "4531:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4675,
														"name": "PoolCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4416,
														"src": "4456:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint96_$_t_uint96_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,address,uint96,uint96,uint256)"
														}
													},
													"id": 4682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4456:88:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4683,
												"nodeType": "EmitStatement",
												"src": "4451:93:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4684,
														"name": "transfer_reward_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4603,
														"src": "4558:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 4685,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4583:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4558:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4706,
												"nodeType": "IfStatement",
												"src": "4555:222:12",
												"trueBody": {
													"id": 4705,
													"nodeType": "Block",
													"src": "4595:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 4691,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "4649:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 4692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4649:12:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 4695,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4671:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MarketingStaking_$5412",
																					"typeString": "contract MarketingStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MarketingStaking_$5412",
																					"typeString": "contract MarketingStaking"
																				}
																			],
																			"id": 4694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4663:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 4693,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4663:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 4696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4663:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 4697,
																		"name": "transfer_reward_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4603,
																		"src": "4678:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 4688,
																				"name": "rewards_token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4595,
																				"src": "4617:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 4687,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "4610:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 4689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4610:21:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 4690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4632:16:12",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 387,
																	"src": "4610:38:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 4698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4610:91:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4699,
															"nodeType": "ExpressionStatement",
															"src": "4610:91:12"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 4701,
																		"name": "pool_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4669,
																		"src": "4733:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 4702,
																		"name": "transfer_reward_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4603,
																		"src": "4742:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4700,
																	"name": "RewardAdded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4394,
																	"src": "4721:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 4703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4721:44:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4704,
															"nodeType": "EmitStatement",
															"src": "4716:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 4707,
													"name": "pool_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4669,
													"src": "4794:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4609,
												"id": 4708,
												"nodeType": "Return",
												"src": "4787:14:12"
											}
										]
									},
									"functionSelector": "5d9d2318",
									"id": 4710,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4606,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4605,
												"name": "onlyOwner",
												"nameLocations": [
													"3586:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3586:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3586:9:12"
										}
									],
									"name": "createPool",
									"nameLocation": "3433:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4593,
												"mutability": "mutable",
												"name": "staking_token",
												"nameLocation": "3452:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 4710,
												"src": "3444:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4595,
												"mutability": "mutable",
												"name": "rewards_token",
												"nameLocation": "3475:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 4710,
												"src": "3467:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3467:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4597,
												"mutability": "mutable",
												"name": "start_epoch",
												"nameLocation": "3497:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 4710,
												"src": "3490:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 4596,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3490:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4599,
												"mutability": "mutable",
												"name": "end_epoch",
												"nameLocation": "3517:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 4710,
												"src": "3510:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 4598,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3510:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4601,
												"mutability": "mutable",
												"name": "reward_amount",
												"nameLocation": "3533:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 4710,
												"src": "3528:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4600,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3528:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4603,
												"mutability": "mutable",
												"name": "transfer_reward_amount",
												"nameLocation": "3553:22:12",
												"nodeType": "VariableDeclaration",
												"scope": 4710,
												"src": "3548:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4602,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3548:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3443:133:12"
									},
									"returnParameters": {
										"id": 4609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4710,
												"src": "3604:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4607,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3604:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3603:6:12"
									},
									"scope": 5412,
									"src": "3424:1385:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4821,
										"nodeType": "Block",
										"src": "4879:845:12",
										"statements": [
											{
												"assignments": [
													4719
												],
												"declarations": [
													{
														"constant": false,
														"id": 4719,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4907:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 4821,
														"src": "4890:21:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
															"typeString": "struct MarketingStaking.PoolInfo"
														},
														"typeName": {
															"id": 4718,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4717,
																"name": "PoolInfo",
																"nameLocations": [
																	"4890:8:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4364,
																"src": "4890:8:12"
															},
															"referencedDeclaration": 4364,
															"src": "4890:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																"typeString": "struct MarketingStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4723,
												"initialValue": {
													"baseExpression": {
														"id": 4720,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4381,
														"src": "4914:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage",
															"typeString": "struct MarketingStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 4722,
													"indexExpression": {
														"id": 4721,
														"name": "pool_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4712,
														"src": "4920:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4914:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$4364_storage",
														"typeString": "struct MarketingStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4890:38:12"
											},
											{
												"assignments": [
													4725
												],
												"declarations": [
													{
														"constant": false,
														"id": 4725,
														"mutability": "mutable",
														"name": "new_epoch",
														"nameLocation": "4946:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 4821,
														"src": "4939:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 4724,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "4939:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4741,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 4730,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4719,
																		"src": "4974:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																			"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 4731,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4979:17:12",
																	"memberName": "last_update_epoch",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4363,
																	"src": "4974:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 4734,
																				"name": "time_now",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4591,
																				"src": "5007:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																					"typeString": "function () view returns (uint96)"
																				}
																			},
																			"id": 4735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5007:10:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		{
																			"expression": {
																				"id": 4736,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4719,
																				"src": "5019:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																					"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																				}
																			},
																			"id": 4737,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5024:9:12",
																			"memberName": "end_epoch",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4353,
																			"src": "5019:14:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"expression": {
																			"id": 4732,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "4998:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$2563_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 4733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5003:3:12",
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1269,
																		"src": "4998:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 4738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4998:36:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 4728,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2563,
																	"src": "4965:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$2563_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 4729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4970:3:12",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1250,
																"src": "4965:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 4739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4965:70:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4958:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 4726,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "4958:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 4740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4958:78:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4939:97:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 4750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 4742,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4719,
																"src": "5051:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4743,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5056:12:12",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4355,
															"src": "5051:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 4744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5071:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5051:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"id": 4749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4746,
															"name": "new_epoch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4725,
															"src": "5076:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 4747,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4719,
																"src": "5088:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4748,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5093:17:12",
															"memberName": "last_update_epoch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4363,
															"src": "5088:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"src": "5076:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5051:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4768,
												"nodeType": "IfStatement",
												"src": "5047:199:12",
												"trueBody": {
													"id": 4767,
													"nodeType": "Block",
													"src": "5121:125:12",
													"statements": [
														{
															"expression": {
																"id": 4765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 4751,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4719,
																		"src": "5136:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																			"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 4753,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5141:18:12",
																	"memberName": "reward_rate_cumsum",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4359,
																	"src": "5136:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					"id": 4757,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 4754,
																						"name": "new_epoch",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4725,
																						"src": "5164:9:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint96",
																							"typeString": "uint96"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"expression": {
																							"id": 4755,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4719,
																							"src": "5176:4:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																								"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																							}
																						},
																						"id": 4756,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5181:17:12",
																						"memberName": "last_update_epoch",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 4363,
																						"src": "5176:22:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint96",
																							"typeString": "uint96"
																						}
																					},
																					"src": "5164:34:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"id": 4758,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5163:36:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"id": 4759,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4719,
																				"src": "5200:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																					"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																				}
																			},
																			"id": 4760,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5205:11:12",
																			"memberName": "reward_rate",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4357,
																			"src": "5200:16:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5163:53:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"expression": {
																			"id": 4762,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4719,
																			"src": "5217:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																				"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 4763,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5222:12:12",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4355,
																		"src": "5217:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5163:71:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5136:98:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4766,
															"nodeType": "ExpressionStatement",
															"src": "5136:98:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 4773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4769,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4719,
															"src": "5256:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																"typeString": "struct MarketingStaking.PoolInfo storage pointer"
															}
														},
														"id": 4771,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5261:17:12",
														"memberName": "last_update_epoch",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4363,
														"src": "5256:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4772,
														"name": "new_epoch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4725,
														"src": "5281:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "5256:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 4774,
												"nodeType": "ExpressionStatement",
												"src": "5256:34:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4775,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4714,
														"src": "5306:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 4778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5322:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 4777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5314:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4776,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5314:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 4779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5314:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5306:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4820,
												"nodeType": "IfStatement",
												"src": "5303:414:12",
												"trueBody": {
													"id": 4819,
													"nodeType": "Block",
													"src": "5335:382:12",
													"statements": [
														{
															"assignments": [
																4783
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4783,
																	"mutability": "mutable",
																	"name": "user_stake",
																	"nameLocation": "5371:10:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 4819,
																	"src": "5350:31:12",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																		"typeString": "struct MarketingStaking.StakeDetails"
																	},
																	"typeName": {
																		"id": 4782,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 4781,
																			"name": "StakeDetails",
																			"nameLocations": [
																				"5350:12:12"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 4371,
																			"src": "5350:12:12"
																		},
																		"referencedDeclaration": 4371,
																		"src": "5350:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																			"typeString": "struct MarketingStaking.StakeDetails"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4789,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4784,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4388,
																		"src": "5384:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_StakeDetails_$4371_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct MarketingStaking.StakeDetails storage ref))"
																		}
																	},
																	"id": 4786,
																	"indexExpression": {
																		"id": 4785,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4714,
																		"src": "5391:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5384:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$4371_storage_$",
																		"typeString": "mapping(uint256 => struct MarketingStaking.StakeDetails storage ref)"
																	}
																},
																"id": 4788,
																"indexExpression": {
																	"id": 4787,
																	"name": "pool_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4712,
																	"src": "5397:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5384:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$4371_storage",
																	"typeString": "struct MarketingStaking.StakeDetails storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5350:55:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 4790,
																		"name": "user_stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4783,
																		"src": "5423:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																			"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																		}
																	},
																	"id": 4791,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5434:12:12",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4366,
																	"src": "5423:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 4792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5449:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5423:27:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4811,
															"nodeType": "IfStatement",
															"src": "5420:216:12",
															"trueBody": {
																"id": 4810,
																"nodeType": "Block",
																"src": "5465:171:12",
																"statements": [
																	{
																		"expression": {
																			"id": 4808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 4794,
																					"name": "user_stake",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4783,
																					"src": "5484:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																						"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																					}
																				},
																				"id": 4796,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "5495:13:12",
																				"memberName": "reward_amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4368,
																				"src": "5484:24:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 4807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 4805,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 4797,
																							"name": "user_stake",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4783,
																							"src": "5512:10:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																								"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																							}
																						},
																						"id": 4798,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5523:12:12",
																						"memberName": "stake_amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 4366,
																						"src": "5512:23:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 4803,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"id": 4799,
																										"name": "pool",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4719,
																										"src": "5537:4:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																											"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																										}
																									},
																									"id": 4800,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "5542:18:12",
																									"memberName": "reward_rate_cumsum",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 4359,
																									"src": "5537:23:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"expression": {
																										"id": 4801,
																										"name": "user_stake",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4783,
																										"src": "5563:10:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																											"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																										}
																									},
																									"id": 4802,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "5574:18:12",
																									"memberName": "reward_rate_cumsum",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 4370,
																									"src": "5563:29:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "5537:55:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 4804,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "5536:57:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5512:81:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 4806,
																					"name": "SCALE_FACTOR",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4377,
																					"src": "5594:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5512:94:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5484:122:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 4809,
																		"nodeType": "ExpressionStatement",
																		"src": "5484:122:12"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 4817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 4812,
																		"name": "user_stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4783,
																		"src": "5650:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																			"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																		}
																	},
																	"id": 4814,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5661:18:12",
																	"memberName": "reward_rate_cumsum",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4370,
																	"src": "5650:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 4815,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4719,
																		"src": "5682:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																			"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 4816,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5687:18:12",
																	"memberName": "reward_rate_cumsum",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4359,
																	"src": "5682:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5650:55:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4818,
															"nodeType": "ExpressionStatement",
															"src": "5650:55:12"
														}
													]
												}
											}
										]
									},
									"id": 4822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "4826:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4712,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "4842:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 4822,
												"src": "4837:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4711,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4837:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4714,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4859:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 4822,
												"src": "4851:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4851:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4836:28:12"
									},
									"returnParameters": {
										"id": 4716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4879:0:12"
									},
									"scope": 5412,
									"src": "4817:907:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4929,
										"nodeType": "Block",
										"src": "5830:837:12",
										"statements": [
											{
												"assignments": [
													4836
												],
												"declarations": [
													{
														"constant": false,
														"id": 4836,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5858:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 4929,
														"src": "5841:21:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
															"typeString": "struct MarketingStaking.PoolInfo"
														},
														"typeName": {
															"id": 4835,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4834,
																"name": "PoolInfo",
																"nameLocations": [
																	"5841:8:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4364,
																"src": "5841:8:12"
															},
															"referencedDeclaration": 4364,
															"src": "5841:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																"typeString": "struct MarketingStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4840,
												"initialValue": {
													"baseExpression": {
														"id": 4837,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4381,
														"src": "5865:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage",
															"typeString": "struct MarketingStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 4839,
													"indexExpression": {
														"id": 4838,
														"name": "pool_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4824,
														"src": "5871:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5865:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$4364_storage",
														"typeString": "struct MarketingStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5841:38:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 4852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 4846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 4842,
																		"name": "time_now",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4591,
																		"src": "5898:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																			"typeString": "function () view returns (uint96)"
																		}
																	},
																	"id": 4843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5898:10:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"id": 4844,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4836,
																		"src": "5912:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																			"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 4845,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5917:11:12",
																	"memberName": "start_epoch",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4348,
																	"src": "5912:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "5898:30:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 4851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 4847,
																		"name": "time_now",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4591,
																		"src": "5932:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																			"typeString": "function () view returns (uint96)"
																		}
																	},
																	"id": 4848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5932:10:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 4849,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4836,
																		"src": "5945:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																			"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 4850,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5950:9:12",
																	"memberName": "end_epoch",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4353,
																	"src": "5945:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "5932:27:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5898:61:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e675374616b696e673a506f6f6c206973206e6f742061637469766521",
															"id": 4853,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5961:38:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0549e760046a4449575c3a7b4e24b7bb5b43ca1711440b99a696ac6d0735289",
																"typeString": "literal_string \"MarketingStaking:Pool is not active!\""
															},
															"value": "MarketingStaking:Pool is not active!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0549e760046a4449575c3a7b4e24b7bb5b43ca1711440b99a696ac6d0735289",
																"typeString": "literal_string \"MarketingStaking:Pool is not active!\""
															}
														],
														"id": 4841,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5890:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5890:110:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4855,
												"nodeType": "ExpressionStatement",
												"src": "5890:110:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4857,
																"name": "stake_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4826,
																"src": "6019:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 4858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6034:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6019:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e675374616b696e673a7374616b655f616d6f756e74206d7573742062652067726561746572207468616e203021",
															"id": 4860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6037:55:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36ba13c2aa6092f52775d769340484f347ee40a294ff19b7999ca5c4fd4b67b0",
																"typeString": "literal_string \"MarketingStaking:stake_amount must be greater than 0!\""
															},
															"value": "MarketingStaking:stake_amount must be greater than 0!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36ba13c2aa6092f52775d769340484f347ee40a294ff19b7999ca5c4fd4b67b0",
																"typeString": "literal_string \"MarketingStaking:stake_amount must be greater than 0!\""
															}
														],
														"id": 4856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6011:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6011:82:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4862,
												"nodeType": "ExpressionStatement",
												"src": "6011:82:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 4868,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6142:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 4869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6142:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4872,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6164:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MarketingStaking_$5412",
																		"typeString": "contract MarketingStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MarketingStaking_$5412",
																		"typeString": "contract MarketingStaking"
																	}
																],
																"id": 4871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6156:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4870,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6156:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 4873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6156:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4874,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4826,
															"src": "6171:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 4863,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4836,
																"src": "6106:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4866,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6111:13:12",
															"memberName": "staking_token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4346,
															"src": "6106:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 4867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6125:16:12",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "6106:35:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 4875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6106:78:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4876,
												"nodeType": "ExpressionStatement",
												"src": "6106:78:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4878,
															"name": "pool_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4824,
															"src": "6207:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 4879,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6216:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 4880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6216:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4877,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4822,
														"src": "6196:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 4881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6196:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4882,
												"nodeType": "ExpressionStatement",
												"src": "6196:33:12"
											},
											{
												"assignments": [
													4885
												],
												"declarations": [
													{
														"constant": false,
														"id": 4885,
														"mutability": "mutable",
														"name": "user_stake",
														"nameLocation": "6261:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 4929,
														"src": "6240:31:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
															"typeString": "struct MarketingStaking.StakeDetails"
														},
														"typeName": {
															"id": 4884,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4883,
																"name": "StakeDetails",
																"nameLocations": [
																	"6240:12:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4371,
																"src": "6240:12:12"
															},
															"referencedDeclaration": 4371,
															"src": "6240:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																"typeString": "struct MarketingStaking.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4892,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 4886,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4388,
															"src": "6274:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_StakeDetails_$4371_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct MarketingStaking.StakeDetails storage ref))"
															}
														},
														"id": 4889,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 4887,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6281:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 4888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6281:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6274:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$4371_storage_$",
															"typeString": "mapping(uint256 => struct MarketingStaking.StakeDetails storage ref)"
														}
													},
													"id": 4891,
													"indexExpression": {
														"id": 4890,
														"name": "pool_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4824,
														"src": "6295:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6274:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$4371_storage",
														"typeString": "struct MarketingStaking.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6240:63:12"
											},
											{
												"expression": {
													"id": 4897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4893,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4885,
															"src": "6314:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																"typeString": "struct MarketingStaking.StakeDetails storage pointer"
															}
														},
														"id": 4895,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6325:12:12",
														"memberName": "stake_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4366,
														"src": "6314:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4896,
														"name": "stake_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4826,
														"src": "6341:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6314:39:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4898,
												"nodeType": "ExpressionStatement",
												"src": "6314:39:12"
											},
											{
												"expression": {
													"id": 4903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4899,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4836,
															"src": "6364:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																"typeString": "struct MarketingStaking.PoolInfo storage pointer"
															}
														},
														"id": 4901,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6369:12:12",
														"memberName": "stake_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4355,
														"src": "6364:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4902,
														"name": "stake_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4826,
														"src": "6385:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6364:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4904,
												"nodeType": "ExpressionStatement",
												"src": "6364:33:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4906,
															"name": "pool_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4824,
															"src": "6426:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 4907,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6435:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 4908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6435:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4909,
																"name": "user_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4885,
																"src": "6449:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																	"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																}
															},
															"id": 4910,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6460:12:12",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4366,
															"src": "6449:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4911,
																"name": "user_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4885,
																"src": "6474:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																	"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																}
															},
															"id": 4912,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6485:13:12",
															"memberName": "reward_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4368,
															"src": "6474:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4913,
																"name": "user_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4885,
																"src": "6500:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																	"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																}
															},
															"id": 4914,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6511:18:12",
															"memberName": "reward_rate_cumsum",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4370,
															"src": "6500:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4905,
														"name": "StakeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4440,
														"src": "6413:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256,uint256)"
														}
													},
													"id": 4915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6413:117:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4916,
												"nodeType": "EmitStatement",
												"src": "6408:122:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4918,
															"name": "pool_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4824,
															"src": "6558:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4919,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4836,
																"src": "6567:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4920,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6572:12:12",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4355,
															"src": "6567:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4921,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4836,
																"src": "6586:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4922,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6591:11:12",
															"memberName": "reward_rate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4357,
															"src": "6586:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4923,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4836,
																"src": "6604:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4924,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6609:18:12",
															"memberName": "reward_rate_cumsum",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4359,
															"src": "6604:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4925,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4836,
																"src": "6629:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4926,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6634:17:12",
															"memberName": "last_update_epoch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4363,
															"src": "6629:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 4917,
														"name": "PoolUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4428,
														"src": "6546:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint96_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256,uint96)"
														}
													},
													"id": 4927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6546:106:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4928,
												"nodeType": "EmitStatement",
												"src": "6541:111:12"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 4930,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4829,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4828,
												"name": "nonReentrant",
												"nameLocations": [
													"5789:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 894,
												"src": "5789:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5789:12:12"
										},
										{
											"arguments": [
												{
													"id": 4831,
													"name": "pool_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4824,
													"src": "5816:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 4832,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4830,
												"name": "validate_pool",
												"nameLocations": [
													"5802:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4474,
												"src": "5802:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5802:22:12"
										}
									],
									"name": "stake",
									"nameLocation": "5741:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4824,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "5752:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 4930,
												"src": "5747:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4823,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5747:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4826,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "5766:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 4930,
												"src": "5761:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4825,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5761:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5746:33:12"
									},
									"returnParameters": {
										"id": 4833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5830:0:12"
									},
									"scope": 5412,
									"src": "5732:935:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5020,
										"nodeType": "Block",
										"src": "6783:644:12",
										"statements": [
											{
												"assignments": [
													4944
												],
												"declarations": [
													{
														"constant": false,
														"id": 4944,
														"mutability": "mutable",
														"name": "user_stake",
														"nameLocation": "6815:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 5020,
														"src": "6794:31:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
															"typeString": "struct MarketingStaking.StakeDetails"
														},
														"typeName": {
															"id": 4943,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4942,
																"name": "StakeDetails",
																"nameLocations": [
																	"6794:12:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4371,
																"src": "6794:12:12"
															},
															"referencedDeclaration": 4371,
															"src": "6794:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																"typeString": "struct MarketingStaking.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4950,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 4945,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4388,
															"src": "6828:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_StakeDetails_$4371_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct MarketingStaking.StakeDetails storage ref))"
															}
														},
														"id": 4947,
														"indexExpression": {
															"id": 4946,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4934,
															"src": "6835:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6828:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$4371_storage_$",
															"typeString": "mapping(uint256 => struct MarketingStaking.StakeDetails storage ref)"
														}
													},
													"id": 4949,
													"indexExpression": {
														"id": 4948,
														"name": "pool_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4932,
														"src": "6841:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6828:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$4371_storage",
														"typeString": "struct MarketingStaking.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6794:55:12"
											},
											{
												"assignments": [
													4953
												],
												"declarations": [
													{
														"constant": false,
														"id": 4953,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "6877:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 5020,
														"src": "6860:21:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
															"typeString": "struct MarketingStaking.PoolInfo"
														},
														"typeName": {
															"id": 4952,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4951,
																"name": "PoolInfo",
																"nameLocations": [
																	"6860:8:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4364,
																"src": "6860:8:12"
															},
															"referencedDeclaration": 4364,
															"src": "6860:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																"typeString": "struct MarketingStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4957,
												"initialValue": {
													"baseExpression": {
														"id": 4954,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4381,
														"src": "6884:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage",
															"typeString": "struct MarketingStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 4956,
													"indexExpression": {
														"id": 4955,
														"name": "pool_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4932,
														"src": "6890:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6884:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$4364_storage",
														"typeString": "struct MarketingStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6860:38:12"
											},
											{
												"assignments": [
													4959
												],
												"declarations": [
													{
														"constant": false,
														"id": 4959,
														"mutability": "mutable",
														"name": "epoch_now",
														"nameLocation": "6914:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 5020,
														"src": "6909:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4958,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6909:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4972,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 4962,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4953,
																"src": "6935:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4963,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6940:17:12",
															"memberName": "last_update_epoch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4363,
															"src": "6935:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 4966,
																		"name": "time_now",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4591,
																		"src": "6968:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																			"typeString": "function () view returns (uint96)"
																		}
																	},
																	"id": 4967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6968:10:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																{
																	"expression": {
																		"id": 4968,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4953,
																		"src": "6980:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																			"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 4969,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6985:9:12",
																	"memberName": "end_epoch",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4353,
																	"src": "6980:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																],
																"expression": {
																	"id": 4964,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2563,
																	"src": "6959:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$2563_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 4965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6964:3:12",
																"memberName": "min",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1269,
																"src": "6959:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 4970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6959:36:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4960,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "6926:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$2563_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 4961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6931:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1250,
														"src": "6926:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 4971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6926:70:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6909:87:12"
											},
											{
												"assignments": [
													4974
												],
												"declarations": [
													{
														"constant": false,
														"id": 4974,
														"mutability": "mutable",
														"name": "reward_rate_cumsum",
														"nameLocation": "7012:18:12",
														"nodeType": "VariableDeclaration",
														"scope": 5020,
														"src": "7007:23:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4973,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7007:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4977,
												"initialValue": {
													"expression": {
														"id": 4975,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4953,
														"src": "7033:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
															"typeString": "struct MarketingStaking.PoolInfo storage pointer"
														}
													},
													"id": 4976,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7038:18:12",
													"memberName": "reward_rate_cumsum",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4359,
													"src": "7033:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7007:49:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 4986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 4978,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4953,
																"src": "7071:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4979,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7076:12:12",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4355,
															"src": "7071:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 4980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7091:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7071:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4982,
															"name": "epoch_now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4959,
															"src": "7096:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 4983,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4953,
																"src": "7108:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 4984,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7113:17:12",
															"memberName": "last_update_epoch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4363,
															"src": "7108:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"src": "7096:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7071:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5005,
												"nodeType": "IfStatement",
												"src": "7067:219:12",
												"trueBody": {
													"id": 5004,
													"nodeType": "Block",
													"src": "7141:145:12",
													"statements": [
														{
															"expression": {
																"id": 5002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4987,
																	"name": "reward_rate_cumsum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4974,
																	"src": "7156:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 5001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 4988,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4953,
																			"src": "7177:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																				"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 4989,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7182:18:12",
																		"memberName": "reward_rate_cumsum",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4359,
																		"src": "7177:23:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 5000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 4993,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 4990,
																							"name": "epoch_now",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4959,
																							"src": "7204:9:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"expression": {
																								"id": 4991,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4953,
																								"src": "7216:4:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																									"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																								}
																							},
																							"id": 4992,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7221:17:12",
																							"memberName": "last_update_epoch",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 4363,
																							"src": "7216:22:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint96",
																								"typeString": "uint96"
																							}
																						},
																						"src": "7204:34:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 4994,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "7203:36:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"expression": {
																					"id": 4995,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4953,
																					"src": "7240:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																						"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																					}
																				},
																				"id": 4996,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7245:11:12",
																				"memberName": "reward_rate",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4357,
																				"src": "7240:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7203:53:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"expression": {
																				"id": 4998,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4953,
																				"src": "7257:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																					"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																				}
																			},
																			"id": 4999,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7262:12:12",
																			"memberName": "stake_amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4355,
																			"src": "7257:17:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7203:71:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7177:97:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7156:118:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 5003,
															"nodeType": "ExpressionStatement",
															"src": "7156:118:12"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 5006,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4944,
															"src": "7303:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																"typeString": "struct MarketingStaking.StakeDetails storage pointer"
															}
														},
														"id": 5007,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7314:13:12",
														"memberName": "reward_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4368,
														"src": "7303:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 5017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 5008,
																	"name": "user_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4944,
																	"src": "7330:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																		"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																	}
																},
																"id": 5009,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7341:12:12",
																"memberName": "stake_amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4366,
																"src": "7330:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 5013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 5010,
																			"name": "reward_rate_cumsum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4974,
																			"src": "7355:18:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"id": 5011,
																				"name": "user_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4944,
																				"src": "7376:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																					"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																				}
																			},
																			"id": 5012,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7387:18:12",
																			"memberName": "reward_rate_cumsum",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4370,
																			"src": "7376:29:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7355:50:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 5014,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7354:52:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7330:76:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 5016,
															"name": "SCALE_FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4377,
															"src": "7407:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7330:89:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7303:116:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4941,
												"id": 5019,
												"nodeType": "Return",
												"src": "7296:123:12"
											}
										]
									},
									"functionSelector": "fdeef425",
									"id": 5021,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 4937,
													"name": "pool_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4932,
													"src": "6755:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 4938,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4936,
												"name": "validate_pool",
												"nameLocations": [
													"6741:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4474,
												"src": "6741:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6741:22:12"
										}
									],
									"name": "getUserRewards",
									"nameLocation": "6684:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4932,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "6704:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 5021,
												"src": "6699:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4931,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6699:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4934,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6721:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 5021,
												"src": "6713:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6713:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6698:28:12"
									},
									"returnParameters": {
										"id": 4941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5021,
												"src": "6772:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4939,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6772:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6771:6:12"
									},
									"scope": 5412,
									"src": "6675:752:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5180,
										"nodeType": "Block",
										"src": "7514:1317:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 5032,
															"name": "pool_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5023,
															"src": "7536:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 5033,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "7545:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 5034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7545:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 5031,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4822,
														"src": "7525:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 5035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7525:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5036,
												"nodeType": "ExpressionStatement",
												"src": "7525:33:12"
											},
											{
												"assignments": [
													5039
												],
												"declarations": [
													{
														"constant": false,
														"id": 5039,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "7590:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 5180,
														"src": "7569:28:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
															"typeString": "struct MarketingStaking.StakeDetails"
														},
														"typeName": {
															"id": 5038,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 5037,
																"name": "StakeDetails",
																"nameLocations": [
																	"7569:12:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4371,
																"src": "7569:12:12"
															},
															"referencedDeclaration": 4371,
															"src": "7569:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																"typeString": "struct MarketingStaking.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5046,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 5040,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4388,
															"src": "7600:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_StakeDetails_$4371_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct MarketingStaking.StakeDetails storage ref))"
															}
														},
														"id": 5043,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 5041,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "7607:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 5042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7607:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7600:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$4371_storage_$",
															"typeString": "mapping(uint256 => struct MarketingStaking.StakeDetails storage ref)"
														}
													},
													"id": 5045,
													"indexExpression": {
														"id": 5044,
														"name": "pool_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5023,
														"src": "7621:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7600:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$4371_storage",
														"typeString": "struct MarketingStaking.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7569:60:12"
											},
											{
												"assignments": [
													5049
												],
												"declarations": [
													{
														"constant": false,
														"id": 5049,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "7657:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 5180,
														"src": "7640:21:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
															"typeString": "struct MarketingStaking.PoolInfo"
														},
														"typeName": {
															"id": 5048,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 5047,
																"name": "PoolInfo",
																"nameLocations": [
																	"7640:8:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4364,
																"src": "7640:8:12"
															},
															"referencedDeclaration": 4364,
															"src": "7640:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																"typeString": "struct MarketingStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5053,
												"initialValue": {
													"baseExpression": {
														"id": 5050,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4381,
														"src": "7664:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage",
															"typeString": "struct MarketingStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 5052,
													"indexExpression": {
														"id": 5051,
														"name": "pool_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5023,
														"src": "7670:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7664:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$4364_storage",
														"typeString": "struct MarketingStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7640:38:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 5059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 5055,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4591,
																	"src": "7697:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 5056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7697:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 5057,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5049,
																	"src": "7711:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																		"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																	}
																},
																"id": 5058,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7716:9:12",
																"memberName": "end_epoch",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4353,
																"src": "7711:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "7697:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e675374616b696e673a4561726c79205769746864726177616c206973206e6f74207065726d697474656421",
															"id": 5060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7727:53:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44b7b0a7f318941981ae615ca206c281a67717329a5dc47e2eb5c5286b628868",
																"typeString": "literal_string \"MarketingStaking:Early Withdrawal is not permitted!\""
															},
															"value": "MarketingStaking:Early Withdrawal is not permitted!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44b7b0a7f318941981ae615ca206c281a67717329a5dc47e2eb5c5286b628868",
																"typeString": "literal_string \"MarketingStaking:Early Withdrawal is not permitted!\""
															}
														],
														"id": 5054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7689:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7689:92:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5062,
												"nodeType": "ExpressionStatement",
												"src": "7689:92:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 5064,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5039,
																	"src": "7801:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																		"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																	}
																},
																"id": 5065,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7809:13:12",
																"memberName": "reward_amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4368,
																"src": "7801:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 5066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7825:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7801:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e675374616b696e673a4e6f7468696e6720746f20636c61696d",
															"id": 5068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7828:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3435391364d3c746d0b75b7b53feb547a8b3de93813fde01f437a139cf16310",
																"typeString": "literal_string \"MarketingStaking:Nothing to claim\""
															},
															"value": "MarketingStaking:Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3435391364d3c746d0b75b7b53feb547a8b3de93813fde01f437a139cf16310",
																"typeString": "literal_string \"MarketingStaking:Nothing to claim\""
															}
														],
														"id": 5063,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:71:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5070,
												"nodeType": "ExpressionStatement",
												"src": "7793:71:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 5072,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5049,
																	"src": "7883:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																		"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																	}
																},
																"id": 5073,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7888:17:12",
																"memberName": "available_rewards",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4361,
																"src": "7883:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 5074,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5039,
																	"src": "7909:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																		"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																	}
																},
																"id": 5075,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7917:13:12",
																"memberName": "reward_amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4368,
																"src": "7909:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7883:47:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e675374616b696e673a496e73756666696369656e742062616c616e636521",
															"id": 5077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7932:40:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fb492bde4633503501151572865f95cf285b0b8399d0e32d0b44e16616b3bc6",
																"typeString": "literal_string \"MarketingStaking:Insufficient balance!\""
															},
															"value": "MarketingStaking:Insufficient balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fb492bde4633503501151572865f95cf285b0b8399d0e32d0b44e16616b3bc6",
																"typeString": "literal_string \"MarketingStaking:Insufficient balance!\""
															}
														],
														"id": 5071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7875:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7875:98:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5079,
												"nodeType": "ExpressionStatement",
												"src": "7875:98:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 5080,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5039,
															"src": "7987:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																"typeString": "struct MarketingStaking.StakeDetails storage pointer"
															}
														},
														"id": 5081,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7995:12:12",
														"memberName": "stake_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4366,
														"src": "7987:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 5082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8010:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7987:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5117,
												"nodeType": "IfStatement",
												"src": "7984:306:12",
												"trueBody": {
													"id": 5116,
													"nodeType": "Block",
													"src": "8022:268:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 5089,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "8069:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 5090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8069:12:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 5091,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5039,
																			"src": "8083:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																				"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																			}
																		},
																		"id": 5092,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8091:12:12",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4366,
																		"src": "8083:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 5084,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5049,
																			"src": "8037:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																				"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 5087,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8042:13:12",
																		"memberName": "staking_token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4346,
																		"src": "8037:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 5088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8056:12:12",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 360,
																	"src": "8037:31:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 5093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8037:67:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5094,
															"nodeType": "ExpressionStatement",
															"src": "8037:67:12"
														},
														{
															"expression": {
																"id": 5100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 5095,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5049,
																		"src": "8119:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																			"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 5097,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8124:12:12",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4355,
																	"src": "8119:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"expression": {
																		"id": 5098,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5039,
																		"src": "8140:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																			"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																		}
																	},
																	"id": 5099,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8148:12:12",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4366,
																	"src": "8140:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8119:41:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 5101,
															"nodeType": "ExpressionStatement",
															"src": "8119:41:12"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 5103,
																		"name": "pool_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5023,
																		"src": "8195:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 5104,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "8204:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 5105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8204:12:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 5106,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5039,
																			"src": "8218:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																				"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																			}
																		},
																		"id": 5107,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8226:12:12",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4366,
																		"src": "8218:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 5102,
																	"name": "StakeWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4448,
																	"src": "8180:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,address,uint256)"
																	}
																},
																"id": 5108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8180:59:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5109,
															"nodeType": "EmitStatement",
															"src": "8175:64:12"
														},
														{
															"expression": {
																"id": 5114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 5110,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5039,
																		"src": "8254:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																			"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																		}
																	},
																	"id": 5112,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8262:12:12",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4366,
																	"src": "8254:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 5113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8277:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8254:24:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 5115,
															"nodeType": "ExpressionStatement",
															"src": "8254:24:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 5123,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "8334:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 5124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 5125,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5039,
																"src": "8348:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																	"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																}
															},
															"id": 5126,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8356:13:12",
															"memberName": "reward_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4368,
															"src": "8348:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 5118,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5049,
																"src": "8302:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 5121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8307:13:12",
															"memberName": "rewards_token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4351,
															"src": "8302:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 5122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8321:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "8302:31:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 5127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8302:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5128,
												"nodeType": "ExpressionStatement",
												"src": "8302:68:12"
											},
											{
												"expression": {
													"id": 5134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 5129,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5049,
															"src": "8381:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																"typeString": "struct MarketingStaking.PoolInfo storage pointer"
															}
														},
														"id": 5131,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8386:17:12",
														"memberName": "available_rewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4361,
														"src": "8381:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 5132,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5039,
															"src": "8407:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																"typeString": "struct MarketingStaking.StakeDetails storage pointer"
															}
														},
														"id": 5133,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8415:13:12",
														"memberName": "reward_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4368,
														"src": "8407:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8381:47:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5135,
												"nodeType": "ExpressionStatement",
												"src": "8381:47:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5137,
															"name": "pool_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5023,
															"src": "8455:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 5138,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "8464:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 5139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8464:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 5140,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5039,
																"src": "8478:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																	"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																}
															},
															"id": 5141,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8486:13:12",
															"memberName": "reward_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4368,
															"src": "8478:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5136,
														"name": "RewardPaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4456,
														"src": "8444:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 5142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8444:56:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5143,
												"nodeType": "EmitStatement",
												"src": "8439:61:12"
											},
											{
												"expression": {
													"id": 5148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 5144,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5039,
															"src": "8511:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																"typeString": "struct MarketingStaking.StakeDetails storage pointer"
															}
														},
														"id": 5146,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8519:13:12",
														"memberName": "reward_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4368,
														"src": "8511:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 5147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8535:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8511:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5149,
												"nodeType": "ExpressionStatement",
												"src": "8511:25:12"
											},
											{
												"expression": {
													"id": 5154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 5150,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5039,
															"src": "8547:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																"typeString": "struct MarketingStaking.StakeDetails storage pointer"
															}
														},
														"id": 5152,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8555:18:12",
														"memberName": "reward_rate_cumsum",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4370,
														"src": "8547:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 5153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8576:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8547:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5155,
												"nodeType": "ExpressionStatement",
												"src": "8547:30:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5157,
															"name": "pool_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5023,
															"src": "8606:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 5158,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "8615:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 5159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8615:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 5160,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5039,
																"src": "8629:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																	"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																}
															},
															"id": 5161,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8637:12:12",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4366,
															"src": "8629:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 5162,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5039,
																"src": "8651:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																	"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																}
															},
															"id": 5163,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8659:13:12",
															"memberName": "reward_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4368,
															"src": "8651:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 5164,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5039,
																"src": "8674:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																	"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																}
															},
															"id": 5165,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8682:18:12",
															"memberName": "reward_rate_cumsum",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4370,
															"src": "8674:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5156,
														"name": "StakeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4440,
														"src": "8593:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256,uint256)"
														}
													},
													"id": 5166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8593:108:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5167,
												"nodeType": "EmitStatement",
												"src": "8588:113:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5169,
															"name": "pool_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5023,
															"src": "8729:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 5170,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5049,
																"src": "8738:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 5171,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8743:12:12",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4355,
															"src": "8738:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 5172,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5049,
																"src": "8757:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 5173,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8762:11:12",
															"memberName": "reward_rate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4357,
															"src": "8757:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 5174,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5049,
																"src": "8775:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 5175,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8780:18:12",
															"memberName": "reward_rate_cumsum",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4359,
															"src": "8775:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 5176,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5049,
																"src": "8800:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 5177,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8805:17:12",
															"memberName": "last_update_epoch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4363,
															"src": "8800:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 5168,
														"name": "PoolUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4428,
														"src": "8717:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint96_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256,uint96)"
														}
													},
													"id": 5178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8717:106:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5179,
												"nodeType": "EmitStatement",
												"src": "8712:111:12"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 5181,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5026,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5025,
												"name": "nonReentrant",
												"nameLocations": [
													"7473:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 894,
												"src": "7473:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7473:12:12"
										},
										{
											"arguments": [
												{
													"id": 5028,
													"name": "pool_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5023,
													"src": "7500:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 5029,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5027,
												"name": "validate_pool",
												"nameLocations": [
													"7486:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4474,
												"src": "7486:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7486:22:12"
										}
									],
									"name": "claim",
									"nameLocation": "7444:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5023,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "7455:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 5181,
												"src": "7450:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5022,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7450:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7449:14:12"
									},
									"returnParameters": {
										"id": 5030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:12"
									},
									"scope": 5412,
									"src": "7435:1396:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5285,
										"nodeType": "Block",
										"src": "8926:858:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 5192,
															"name": "pool_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5183,
															"src": "8948:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 5193,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "8957:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 5194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8957:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 5191,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4822,
														"src": "8937:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 5195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8937:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5196,
												"nodeType": "ExpressionStatement",
												"src": "8937:33:12"
											},
											{
												"assignments": [
													5199
												],
												"declarations": [
													{
														"constant": false,
														"id": 5199,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "9002:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 5285,
														"src": "8981:28:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
															"typeString": "struct MarketingStaking.StakeDetails"
														},
														"typeName": {
															"id": 5198,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 5197,
																"name": "StakeDetails",
																"nameLocations": [
																	"8981:12:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4371,
																"src": "8981:12:12"
															},
															"referencedDeclaration": 4371,
															"src": "8981:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																"typeString": "struct MarketingStaking.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5206,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 5200,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4388,
															"src": "9012:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_StakeDetails_$4371_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct MarketingStaking.StakeDetails storage ref))"
															}
														},
														"id": 5203,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 5201,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "9019:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 5202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9019:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9012:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$4371_storage_$",
															"typeString": "mapping(uint256 => struct MarketingStaking.StakeDetails storage ref)"
														}
													},
													"id": 5205,
													"indexExpression": {
														"id": 5204,
														"name": "pool_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5183,
														"src": "9033:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9012:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$4371_storage",
														"typeString": "struct MarketingStaking.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8981:60:12"
											},
											{
												"assignments": [
													5209
												],
												"declarations": [
													{
														"constant": false,
														"id": 5209,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "9069:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 5285,
														"src": "9052:21:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
															"typeString": "struct MarketingStaking.PoolInfo"
														},
														"typeName": {
															"id": 5208,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 5207,
																"name": "PoolInfo",
																"nameLocations": [
																	"9052:8:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4364,
																"src": "9052:8:12"
															},
															"referencedDeclaration": 4364,
															"src": "9052:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																"typeString": "struct MarketingStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5213,
												"initialValue": {
													"baseExpression": {
														"id": 5210,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4381,
														"src": "9076:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage",
															"typeString": "struct MarketingStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 5212,
													"indexExpression": {
														"id": 5211,
														"name": "pool_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5183,
														"src": "9082:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9076:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$4364_storage",
														"typeString": "struct MarketingStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9052:38:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 5219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 5215,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4591,
																	"src": "9109:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 5216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9109:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 5217,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5209,
																	"src": "9123:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																		"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																	}
																},
																"id": 5218,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9128:9:12",
																"memberName": "end_epoch",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4353,
																"src": "9123:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "9109:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e675374616b696e673a4561726c79205769746864726177616c206973206e6f74207065726d697474656421",
															"id": 5220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9139:53:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44b7b0a7f318941981ae615ca206c281a67717329a5dc47e2eb5c5286b628868",
																"typeString": "literal_string \"MarketingStaking:Early Withdrawal is not permitted!\""
															},
															"value": "MarketingStaking:Early Withdrawal is not permitted!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44b7b0a7f318941981ae615ca206c281a67717329a5dc47e2eb5c5286b628868",
																"typeString": "literal_string \"MarketingStaking:Early Withdrawal is not permitted!\""
															}
														],
														"id": 5214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9101:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9101:92:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5222,
												"nodeType": "ExpressionStatement",
												"src": "9101:92:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 5223,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5199,
															"src": "9218:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																"typeString": "struct MarketingStaking.StakeDetails storage pointer"
															}
														},
														"id": 5224,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9226:12:12",
														"memberName": "stake_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4366,
														"src": "9218:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 5225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9241:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9218:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5284,
												"nodeType": "IfStatement",
												"src": "9215:560:12",
												"trueBody": {
													"id": 5283,
													"nodeType": "Block",
													"src": "9253:522:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 5232,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "9300:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 5233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9300:12:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 5234,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5199,
																			"src": "9314:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																				"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																			}
																		},
																		"id": 5235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9322:12:12",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4366,
																		"src": "9314:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 5227,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5209,
																			"src": "9268:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																				"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 5230,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9273:13:12",
																		"memberName": "staking_token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4346,
																		"src": "9268:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 5231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9287:12:12",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 360,
																	"src": "9268:31:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 5236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9268:67:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5237,
															"nodeType": "ExpressionStatement",
															"src": "9268:67:12"
														},
														{
															"expression": {
																"id": 5243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 5238,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5209,
																		"src": "9350:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																			"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 5240,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9355:12:12",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4355,
																	"src": "9350:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"expression": {
																		"id": 5241,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5199,
																		"src": "9371:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																			"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																		}
																	},
																	"id": 5242,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9379:12:12",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4366,
																	"src": "9371:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9350:41:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 5244,
															"nodeType": "ExpressionStatement",
															"src": "9350:41:12"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 5246,
																		"name": "pool_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5183,
																		"src": "9426:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 5247,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "9435:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 5248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9435:12:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 5249,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5199,
																			"src": "9449:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																				"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																			}
																		},
																		"id": 5250,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9457:12:12",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4366,
																		"src": "9449:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 5245,
																	"name": "StakeWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4448,
																	"src": "9411:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,address,uint256)"
																	}
																},
																"id": 5251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9411:59:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5252,
															"nodeType": "EmitStatement",
															"src": "9406:64:12"
														},
														{
															"expression": {
																"id": 5257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 5253,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5199,
																		"src": "9485:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																			"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																		}
																	},
																	"id": 5255,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9493:12:12",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4366,
																	"src": "9485:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 5256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9508:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9485:24:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 5258,
															"nodeType": "ExpressionStatement",
															"src": "9485:24:12"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 5260,
																		"name": "pool_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5183,
																		"src": "9542:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 5261,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "9551:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 5262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9551:12:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 5263,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5199,
																			"src": "9565:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																				"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																			}
																		},
																		"id": 5264,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9573:12:12",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4366,
																		"src": "9565:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 5265,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5199,
																			"src": "9587:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																				"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																			}
																		},
																		"id": 5266,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9595:13:12",
																		"memberName": "reward_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4368,
																		"src": "9587:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 5267,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5199,
																			"src": "9610:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeDetails_$4371_storage_ptr",
																				"typeString": "struct MarketingStaking.StakeDetails storage pointer"
																			}
																		},
																		"id": 5268,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9618:18:12",
																		"memberName": "reward_rate_cumsum",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4370,
																		"src": "9610:26:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 5259,
																	"name": "StakeUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4440,
																	"src": "9529:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,address,uint256,uint256,uint256)"
																	}
																},
																"id": 5269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9529:108:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5270,
															"nodeType": "EmitStatement",
															"src": "9524:113:12"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 5272,
																		"name": "pool_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5183,
																		"src": "9669:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 5273,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5209,
																			"src": "9678:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																				"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 5274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9683:12:12",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4355,
																		"src": "9678:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 5275,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5209,
																			"src": "9697:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																				"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 5276,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9702:11:12",
																		"memberName": "reward_rate",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4357,
																		"src": "9697:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 5277,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5209,
																			"src": "9715:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																				"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 5278,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9720:18:12",
																		"memberName": "reward_rate_cumsum",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4359,
																		"src": "9715:23:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 5279,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5209,
																			"src": "9740:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																				"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 5280,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9745:17:12",
																		"memberName": "last_update_epoch",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4363,
																		"src": "9740:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"id": 5271,
																	"name": "PoolUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4428,
																	"src": "9657:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint96_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256,uint256,uint96)"
																	}
																},
																"id": 5281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9657:106:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5282,
															"nodeType": "EmitStatement",
															"src": "9652:111:12"
														}
													]
												}
											}
										]
									},
									"functionSelector": "25d5971f",
									"id": 5286,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5185,
												"name": "nonReentrant",
												"nameLocations": [
													"8885:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 894,
												"src": "8885:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "8885:12:12"
										},
										{
											"arguments": [
												{
													"id": 5188,
													"name": "pool_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5183,
													"src": "8912:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 5189,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5187,
												"name": "validate_pool",
												"nameLocations": [
													"8898:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4474,
												"src": "8898:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "8898:22:12"
										}
									],
									"name": "withdrawStake",
									"nameLocation": "8848:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5183,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "8867:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 5286,
												"src": "8862:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5182,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8862:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8861:14:12"
									},
									"returnParameters": {
										"id": 5190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8926:0:12"
									},
									"scope": 5412,
									"src": "8839:945:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5337,
										"nodeType": "Block",
										"src": "9890:312:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5299,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5290,
																"src": "9910:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 5300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9919:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9910:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e675374616b696e673a616d6f756e74206d7573742062652067726561746572207468616e207a65726f21",
															"id": 5302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9922:52:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb2ec3ad1b16139b199a6192b421b7a409e15b7e840d7a712143f257a9526abb",
																"typeString": "literal_string \"MarketingStaking:amount must be greater than zero!\""
															},
															"value": "MarketingStaking:amount must be greater than zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb2ec3ad1b16139b199a6192b421b7a409e15b7e840d7a712143f257a9526abb",
																"typeString": "literal_string \"MarketingStaking:amount must be greater than zero!\""
															}
														],
														"id": 5298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9901:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9901:74:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5304,
												"nodeType": "ExpressionStatement",
												"src": "9901:74:12"
											},
											{
												"assignments": [
													5307
												],
												"declarations": [
													{
														"constant": false,
														"id": 5307,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "10003:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 5337,
														"src": "9986:21:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
															"typeString": "struct MarketingStaking.PoolInfo"
														},
														"typeName": {
															"id": 5306,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 5305,
																"name": "PoolInfo",
																"nameLocations": [
																	"9986:8:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4364,
																"src": "9986:8:12"
															},
															"referencedDeclaration": 4364,
															"src": "9986:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																"typeString": "struct MarketingStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5311,
												"initialValue": {
													"baseExpression": {
														"id": 5308,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4381,
														"src": "10010:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage",
															"typeString": "struct MarketingStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 5310,
													"indexExpression": {
														"id": 5309,
														"name": "pool_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5288,
														"src": "10016:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10010:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$4364_storage",
														"typeString": "struct MarketingStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9986:38:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 5317,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "10071:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 5318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10071:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 5321,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10093:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MarketingStaking_$5412",
																		"typeString": "contract MarketingStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MarketingStaking_$5412",
																		"typeString": "contract MarketingStaking"
																	}
																],
																"id": 5320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10085:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 5319,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10085:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 5322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10085:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5323,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5290,
															"src": "10100:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 5312,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5307,
																"src": "10035:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 5315,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10040:13:12",
															"memberName": "rewards_token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4351,
															"src": "10035:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 5316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10054:16:12",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "10035:35:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 5324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10035:72:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5325,
												"nodeType": "ExpressionStatement",
												"src": "10035:72:12"
											},
											{
												"expression": {
													"id": 5330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 5326,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5307,
															"src": "10118:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																"typeString": "struct MarketingStaking.PoolInfo storage pointer"
															}
														},
														"id": 5328,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10123:17:12",
														"memberName": "available_rewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4361,
														"src": "10118:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 5329,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5290,
														"src": "10144:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10118:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5331,
												"nodeType": "ExpressionStatement",
												"src": "10118:32:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5333,
															"name": "pool_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5288,
															"src": "10178:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 5334,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5290,
															"src": "10187:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5332,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4394,
														"src": "10166:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 5335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10166:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5336,
												"nodeType": "EmitStatement",
												"src": "10161:33:12"
											}
										]
									},
									"functionSelector": "fc41aa09",
									"id": 5338,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5293,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5292,
												"name": "nonReentrant",
												"nameLocations": [
													"9848:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 894,
												"src": "9848:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "9848:12:12"
										},
										{
											"arguments": [
												{
													"id": 5295,
													"name": "pool_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5288,
													"src": "9875:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 5296,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5294,
												"name": "validate_pool",
												"nameLocations": [
													"9861:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4474,
												"src": "9861:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "9861:22:12"
										}
									],
									"name": "addRewards",
									"nameLocation": "9801:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5288,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "9817:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 5338,
												"src": "9812:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5287,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9812:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5290,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9831:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 5338,
												"src": "9826:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5289,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9826:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9811:27:12"
									},
									"returnParameters": {
										"id": 5297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9890:0:12"
									},
									"scope": 5412,
									"src": "9792:410:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5410,
										"nodeType": "Block",
										"src": "10321:474:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5353,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5344,
																"src": "10341:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 5354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10350:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10341:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e675374616b696e673a616d6f756e74206d7573742062652067726561746572207468616e207a65726f21",
															"id": 5356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10353:52:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb2ec3ad1b16139b199a6192b421b7a409e15b7e840d7a712143f257a9526abb",
																"typeString": "literal_string \"MarketingStaking:amount must be greater than zero!\""
															},
															"value": "MarketingStaking:amount must be greater than zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb2ec3ad1b16139b199a6192b421b7a409e15b7e840d7a712143f257a9526abb",
																"typeString": "literal_string \"MarketingStaking:amount must be greater than zero!\""
															}
														],
														"id": 5352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10332:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10332:74:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5358,
												"nodeType": "ExpressionStatement",
												"src": "10332:74:12"
											},
											{
												"assignments": [
													5361
												],
												"declarations": [
													{
														"constant": false,
														"id": 5361,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "10434:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 5410,
														"src": "10417:21:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
															"typeString": "struct MarketingStaking.PoolInfo"
														},
														"typeName": {
															"id": 5360,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 5359,
																"name": "PoolInfo",
																"nameLocations": [
																	"10417:8:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4364,
																"src": "10417:8:12"
															},
															"referencedDeclaration": 4364,
															"src": "10417:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																"typeString": "struct MarketingStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5365,
												"initialValue": {
													"baseExpression": {
														"id": 5362,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4381,
														"src": "10441:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$4364_storage_$dyn_storage",
															"typeString": "struct MarketingStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 5364,
													"indexExpression": {
														"id": 5363,
														"name": "pool_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5340,
														"src": "10447:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10441:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$4364_storage",
														"typeString": "struct MarketingStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10417:38:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 5367,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5361,
																	"src": "10474:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																		"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																	}
																},
																"id": 5368,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10479:17:12",
																"memberName": "available_rewards",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4361,
																"src": "10474:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 5369,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5344,
																"src": "10500:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10474:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e675374616b696e673a496e73756666696369656e742062616c616e636521",
															"id": 5371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10508:40:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fb492bde4633503501151572865f95cf285b0b8399d0e32d0b44e16616b3bc6",
																"typeString": "literal_string \"MarketingStaking:Insufficient balance!\""
															},
															"value": "MarketingStaking:Insufficient balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fb492bde4633503501151572865f95cf285b0b8399d0e32d0b44e16616b3bc6",
																"typeString": "literal_string \"MarketingStaking:Insufficient balance!\""
															}
														],
														"id": 5366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10466:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10466:83:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5373,
												"nodeType": "ExpressionStatement",
												"src": "10466:83:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 5386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 5381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 5375,
																		"name": "time_now",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4591,
																		"src": "10568:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																			"typeString": "function () view returns (uint96)"
																		}
																	},
																	"id": 5376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10568:10:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"id": 5380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 5377,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5361,
																			"src": "10582:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																				"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																			}
																		},
																		"id": 5378,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10587:9:12",
																		"memberName": "end_epoch",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4353,
																		"src": "10582:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 5379,
																		"name": "CLAIM_PERIOD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4374,
																		"src": "10599:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"src": "10582:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "10568:43:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 5385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 5382,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5361,
																		"src": "10615:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																			"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 5383,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10620:12:12",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4355,
																	"src": "10615:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 5384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10636:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10615:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10568:69:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 5374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10560:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 5387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10560:78:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5388,
												"nodeType": "ExpressionStatement",
												"src": "10560:78:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5394,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5342,
															"src": "10681:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5395,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5344,
															"src": "10685:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 5389,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5361,
																"src": "10649:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																	"typeString": "struct MarketingStaking.PoolInfo storage pointer"
																}
															},
															"id": 5392,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10654:13:12",
															"memberName": "rewards_token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4351,
															"src": "10649:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 5393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10668:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "10649:31:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 5396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10649:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5397,
												"nodeType": "ExpressionStatement",
												"src": "10649:43:12"
											},
											{
												"expression": {
													"id": 5402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 5398,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5361,
															"src": "10703:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$4364_storage_ptr",
																"typeString": "struct MarketingStaking.PoolInfo storage pointer"
															}
														},
														"id": 5400,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10708:17:12",
														"memberName": "available_rewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4361,
														"src": "10703:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 5401,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5344,
														"src": "10729:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10703:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5403,
												"nodeType": "ExpressionStatement",
												"src": "10703:32:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5405,
															"name": "pool_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5340,
															"src": "10767:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 5406,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5342,
															"src": "10776:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5407,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5344,
															"src": "10780:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5404,
														"name": "RewardWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4402,
														"src": "10751:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 5408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10751:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5409,
												"nodeType": "EmitStatement",
												"src": "10746:41:12"
											}
										]
									},
									"functionSelector": "7db7e3bf",
									"id": 5411,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5347,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5346,
												"name": "onlyOwner",
												"nameLocations": [
													"10283:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "10283:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "10283:9:12"
										},
										{
											"arguments": [
												{
													"id": 5349,
													"name": "pool_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5340,
													"src": "10307:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 5350,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5348,
												"name": "validate_pool",
												"nameLocations": [
													"10293:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4474,
												"src": "10293:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "10293:22:12"
										}
									],
									"name": "withdrawRewards",
									"nameLocation": "10219:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5340,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "10240:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 5411,
												"src": "10235:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5339,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10235:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10257:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 5411,
												"src": "10249:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10249:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5344,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10266:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 5411,
												"src": "10261:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5343,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10261:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10234:39:12"
									},
									"returnParameters": {
										"id": 5351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10321:0:12"
									},
									"scope": 5412,
									"src": "10210:585:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 5413,
							"src": "358:10442:12",
							"usedErrors": [
								13,
								18,
								327,
								875
							],
							"usedEvents": [
								24,
								4394,
								4402,
								4416,
								4428,
								4440,
								4448,
								4456
							]
						}
					],
					"src": "33:10769:12"
				},
				"id": 12
			}
		}
	}
}