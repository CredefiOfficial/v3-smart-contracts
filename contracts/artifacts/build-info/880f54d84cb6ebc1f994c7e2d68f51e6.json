{
	"id": "880f54d84cb6ebc1f994c7e2d68f51e6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LPStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"./oracle_utils/LPValue.sol\";\r\nimport \"./interface/ICREDIWhale.sol\";\r\nimport \"./interface/IPriceData.sol\";\r\n\r\ncontract LPStaking is Ownable, LPValue, ReentrancyGuard\r\n{\r\n    using SafeERC20 for IERC20;\r\n    struct PoolInfo\r\n    {\r\n        address staking_token;\r\n        uint96 maturity;\r\n        address rewards_token;\r\n        uint96 apy; // 100 = 1% , 0 --> paused\r\n        address price_oracle;\r\n        uint96 whales_bonus_apy;\r\n    }\r\n\r\n    struct StakeDetails\r\n    {\r\n        uint pool_id;\r\n        address owner;\r\n        uint96 maturity;\r\n        uint stake_amount;\r\n        uint reward_amount;\r\n        uint required_CREDI;\r\n    }\r\n\r\n    uint96 constant public CLAIM_PERIOD = 40 days;\r\n    ICREDIWhale immutable public CREDI_WHALE_ORACLE;\r\n\r\n    PoolInfo[] private pools;\r\n    mapping (uint => StakeDetails) private stakes;\r\n    uint private stakes_count = 1;\r\n    mapping (address => uint) public pending_payments;\r\n\r\n    event RewardAdded(address indexed token, uint amount);\r\n    event RewardWithdrawn(address indexed token, address indexed to, uint amount);\r\n    event PoolCreated(uint indexed pool_id, address indexed staking_token, address indexed rewards_token, address price_oracle, uint96 maturity, uint96 apy, uint96 whales_bonus_apy);\r\n    event APYChanged(uint indexed pool_id, uint96 apy);\r\n    event BonusAPYChanged(uint indexed pool_id, uint96 whales_bonus_apy); \r\n    event Staked(address indexed owner, uint stake_id, uint indexed pool_id, uint96 maturity, uint stake_amount, uint rewards_amount, uint required_CREDI);\r\n    event StakeWithdrawn(uint indexed pool_id, uint stake_id);\r\n    event RewardPaid(uint indexed pool_id, uint stake_id);\r\n    event RewardVoided(uint indexed pool_id, uint stake_id);\r\n\r\n    modifier validate_pool(uint pool_id) \r\n    {\r\n        require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\");\r\n        _;\r\n    }\r\n\r\n    modifier validate_stake(uint stake_id) \r\n    {\r\n        require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _whale_oracle_addr) Ownable(_msgSender())\r\n    {\r\n        CREDI_WHALE_ORACLE = ICREDIWhale(_whale_oracle_addr);\r\n        pools.push(PoolInfo({\r\n            staking_token: address(0),\r\n            maturity: 0,\r\n            rewards_token: address(0),\r\n            apy: 0,\r\n            price_oracle: address(0),\r\n            whales_bonus_apy: 0\r\n        }));\r\n    }\r\n\r\n    function getPool(uint pool_id) external validate_pool(pool_id) view \r\n        returns (address staking_token,\r\n            address rewards_token,\r\n            address price_oracle,\r\n            uint96 maturity,\r\n            uint96 apy,\r\n            uint96 whales_bonus_apy)\r\n    {\r\n        return (pools[pool_id].staking_token,\r\n            pools[pool_id].rewards_token,\r\n            pools[pool_id].price_oracle,\r\n            pools[pool_id].maturity,\r\n            pools[pool_id].apy,\r\n            pools[pool_id].whales_bonus_apy);\r\n    }\r\n   \r\n    function getStake(uint stake_id) external validate_stake(stake_id) view \r\n        returns (address owner,\r\n        uint pool_id,\r\n        uint96 maturity,\r\n        uint stake_amount,\r\n        uint reward_amount,\r\n        uint required_CREDI)\r\n    {\r\n        return (stakes[stake_id].owner,\r\n            stakes[stake_id].pool_id,\r\n            stakes[stake_id].maturity,\r\n            stakes[stake_id].stake_amount,\r\n            stakes[stake_id].reward_amount,\r\n            stakes[stake_id].required_CREDI);\r\n    }\r\n\r\n    function getPoolsCount() external view returns (uint) \r\n    {\r\n        return pools.length - 1;\r\n    }\r\n\r\n    function time_now() private view returns(uint96)\r\n    {\r\n        return uint96(block.timestamp);\r\n    }\r\n\r\n    function createPool(address staking_token, address rewards_token, address price_oracle, uint reward_amount, uint96 maturity, uint96 apy, uint96 whales_bonus_apy) external onlyOwner returns(uint)\r\n    {\r\n        require(maturity > 0, \"LPStaking:maturity must be greater than 0\");\r\n        require(IPriceData(price_oracle).quoteToken() == rewards_token, \"LPStaking:rewards_token must be equal to price_oracle quote token\");\r\n        pools.push(PoolInfo({\r\n            staking_token: staking_token,\r\n            maturity: maturity,\r\n            rewards_token: rewards_token,\r\n            apy: apy,\r\n            price_oracle: price_oracle,\r\n            whales_bonus_apy: whales_bonus_apy\r\n        }));\r\n        uint pool_id = pools.length - 1;\r\n        emit PoolCreated(pool_id, staking_token, rewards_token, price_oracle, maturity, apy, whales_bonus_apy);\r\n        if(reward_amount > 0)\r\n            addRewards(rewards_token, reward_amount);\r\n        return pool_id;\r\n    }\r\n\r\n    function stake(uint pool_id, uint stake_amount, bytes calldata token0_price_data, bytes calldata token1_price_data) external nonReentrant validate_pool(pool_id)\r\n    {\r\n        require(stake_amount > 0,\"LPStaking:stake_amount must be greater than zero!\");\r\n        PoolInfo storage pool = pools[pool_id];\r\n        require(pool.apy > 0, \"LPStaking:Pool is paused!\");\r\n        IERC20(pool.staking_token).safeTransferFrom(_msgSender(), address(this), stake_amount); \r\n        uint stake_value = lp_value(pool.staking_token, stake_amount, pool.price_oracle, token0_price_data, token1_price_data);\r\n        uint reward_amount = stake_value*pool.apy/10000*pool.maturity/(365 days);\r\n        uint required_CREDI = 0;\r\n        if(CREDI_WHALE_ORACLE.isWhale(_msgSender()))\r\n        {\r\n            required_CREDI = CREDI_WHALE_ORACLE.whaleThreshold();\r\n            reward_amount += stake_value*pool.whales_bonus_apy/10000*pool.maturity/(365 days);\r\n        }\r\n\r\n        uint96 maturity = time_now() + pool.maturity;\r\n        stakes[stakes_count] = StakeDetails({\r\n            owner: _msgSender(),\r\n            pool_id: pool_id,\r\n            maturity: maturity,\r\n            stake_amount: stake_amount,\r\n            reward_amount: reward_amount,\r\n            required_CREDI: required_CREDI\r\n        });\r\n        pending_payments[pool.rewards_token] += reward_amount;\r\n        emit Staked(_msgSender(), stakes_count, pool_id, maturity, stake_amount, reward_amount, required_CREDI);\r\n        stakes_count++; \r\n    }\r\n\r\n    function claim(uint stake_id) external nonReentrant validate_stake(stake_id)\r\n    {      \r\n        StakeDetails storage details = stakes[stake_id];\r\n        require(details.owner == _msgSender(), \"LPStaking:Caller is not the owner\");\r\n        PoolInfo storage pool = pools[details.pool_id];\r\n        require(time_now() >= details.maturity, \"LPStaking:Early Withdrawal is not permitted!\"); \r\n        require(details.reward_amount > 0, \"LPStaking:Nothing to claim\");\r\n        if(details.stake_amount > 0)\r\n        {\r\n            IERC20(pool.staking_token).safeTransfer(_msgSender(), details.stake_amount);\r\n            details.stake_amount = 0;\r\n        }\r\n\r\n        IERC20(pool.rewards_token).safeTransfer(_msgSender(), details.reward_amount);\r\n        pending_payments[pool.rewards_token] -= details.reward_amount;\r\n        details.reward_amount = 0; \r\n        emit StakeWithdrawn(details.pool_id, stake_id);\r\n        emit RewardPaid(details.pool_id, stake_id); \r\n    }\r\n\r\n    function voidReward(uint stake_id) external onlyOwner validate_stake(stake_id)\r\n    {\r\n        StakeDetails storage details = stakes[stake_id];\r\n        require(time_now() >= details.maturity + CLAIM_PERIOD); \r\n        PoolInfo storage pool = pools[details.pool_id];\r\n        pending_payments[pool.rewards_token] -= details.reward_amount;\r\n        details.reward_amount = 0;\r\n        emit RewardVoided(details.pool_id, stake_id);\r\n    }\r\n\r\n    function withdrawStake(uint stake_id) external nonReentrant validate_stake(stake_id)\r\n    {\r\n        StakeDetails storage details = stakes[stake_id];\r\n        require(details.owner == _msgSender(), \"LPStaking:Caller is not the owner\");\r\n        PoolInfo memory pool = pools[details.pool_id];\r\n        require(time_now() >= details.maturity, \"LPStaking:Early Withdrawal is not permitted!\"); \r\n        \r\n        if(details.stake_amount > 0)\r\n        {\r\n            IERC20(pool.staking_token).safeTransfer(_msgSender(), details.stake_amount);\r\n            details.stake_amount = 0;\r\n            emit StakeWithdrawn(details.pool_id, stake_id);\r\n        }  \r\n    }\r\n\r\n    function addRewards(address rewards_token, uint amount) public \r\n    {\r\n        require (amount > 0, \"LPStaking:amount must be greater than zero!\");\r\n        IERC20(rewards_token).safeTransferFrom(_msgSender(), address(this), amount);\r\n        emit RewardAdded(rewards_token, amount);\r\n    }\r\n\r\n    function withdrawRewards(address rewards_token, address to, uint amount) external onlyOwner\r\n    {\r\n        require(IERC20(rewards_token).balanceOf(address(this)) >= amount + pending_payments[rewards_token], \"Insufficient balance!\");\r\n        IERC20(rewards_token).safeTransfer(to, amount);\r\n        emit RewardWithdrawn(rewards_token, to, amount);\r\n    }\r\n\r\n    function setAPY(uint pool_id, uint96 apy) external onlyOwner validate_pool(pool_id)\r\n    {\r\n        require(apy <= 100000, \"LPStaking:max apy is 1000%\");\r\n        pools[pool_id].apy = apy;\r\n        emit APYChanged(pool_id, apy);\r\n    }\r\n\r\n    function setBonusAPY(uint pool_id, uint96 whales_bonus_apy) external onlyOwner validate_pool(pool_id)\r\n    {\r\n        require(whales_bonus_apy <= 100000, \"LPStaking:max bonus apy is 1000%\");\r\n        pools[pool_id].whales_bonus_apy = whales_bonus_apy;\r\n        emit BonusAPYChanged(pool_id, whales_bonus_apy);\r\n    }\r\n\r\n}\r\n"
			},
			"contracts/interface/IPriceData.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IPriceData\r\n{\r\n    function readPrice(address base_addr, uint8 target_decimals, bytes calldata offchain_data) external view returns(uint);\r\n   \r\n    function usePrice(address base_addr, uint8 target_decimals, bytes calldata offchain_data) external returns(uint);\r\n   \r\n    function readAbsoluteCollateralValue(address base_addr, uint base_amount, uint8 base_decimals, bytes calldata offchain_data) external view returns(uint);\r\n   \r\n    function useAbsoluteCollateralValue(address base_addr, uint base_amount, uint8 base_decimals, bytes calldata offchain_data) external returns(uint);\r\n  \r\n    function readQuoteAmountToCollateralAmount(address base_addr, uint8 base_decimals, uint quote_amount, bytes calldata offchain_data) external view returns(uint);\r\n    \r\n    function useQuoteAmountToCollateralAmount(address base_addr, uint8 base_decimals, uint quote_amount, bytes calldata offchain_data) external returns(uint);\r\n    \r\n    function readRelativeCollateralValue(address base_addr, uint8 result_decimals, uint base_amount, uint8 base_decimals, uint quote_amount, bytes calldata offchain_data) external view returns(uint);\r\n   \r\n    function useRelativeCollateralValue(address base_addr, uint8 result_decimals, uint base_amount, uint8 base_decimals, uint quote_amount, bytes calldata offchain_data) external returns(uint);\r\n   \r\n    function readCollateralValues(address base_addr, uint8 result_decimals, uint base_amount, uint8 base_decimals, uint quote_amount, bytes calldata offchain_data) external view returns(uint absolute_value, uint relative_value);\r\n   \r\n    function useCollateralValues(address base_addr, uint8 result_decimals, uint base_amount, uint8 base_decimals, uint quote_amount, bytes calldata offchain_data) external returns(uint absolute_value, uint relative_value);\r\n     \r\n    function setOracles(address base_addr, address[] calldata mul, address[] calldata div) external;\r\n   \r\n    function setSigner(address signer, bool state) external;\r\n\r\n    function quoteToken() external view returns(address); \r\n   \r\n}\r\n"
			},
			"contracts/interface/ICREDIWhale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface ICREDIWhale \r\n{\r\n    function isWhale(address user_address) external view returns (bool);\r\n    function whaleThreshold() external view returns (uint); \r\n}"
			},
			"contracts/oracle_utils/LPValue.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\r\nimport \"../interface/IPriceData.sol\";\r\nimport \"../interface/IERC20_Decimals.sol\";\r\n\r\nabstract contract LPValue\r\n{\r\n    function token_value(address token_addr, uint amount, address oracle_addr, bytes calldata price_data) private returns(uint)\r\n    {\r\n        return IPriceData(oracle_addr).useAbsoluteCollateralValue(token_addr, amount, IERC20_Decimals(token_addr).decimals(), price_data);\r\n    }\r\n\r\n    function token_balances(uint lp_balance, uint lp_supply, uint112 reserve0, uint112 reserve1) private pure returns (uint, uint)\r\n    {\r\n        uint token0_balance = reserve0*lp_balance/lp_supply;\r\n        uint token1_balance = reserve1*lp_balance/lp_supply;\r\n        return (token0_balance, token1_balance);\r\n    }\r\n\r\n    function lp_value(address lp_addr, uint lp_amount, address oracle_addr, bytes calldata token0_price_data, bytes calldata token1_price_data) internal returns (uint)\r\n    {\r\n        IUniswapV2Pair pair = IUniswapV2Pair(lp_addr);\r\n        (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\r\n        (uint token0_balance, uint token1_balance) = token_balances(lp_amount, pair.totalSupply(), reserve0, reserve1);\r\n        return  token_value(pair.token0(), token0_balance, oracle_addr, token0_price_data) \r\n                +token_value(pair.token1(), token1_balance, oracle_addr, token1_price_data);\r\n    }\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/interface/IERC20_Decimals.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IERC20_Decimals \r\n{\r\n    function decimals() external view returns (uint8);   \r\n}\r\n"
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 500
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122074d80e8729fc834685b24b56dc8e4523cd0c95cfed21a674e80b6d3aeedcedd564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122074d80e8729fc834685b24b56dc8e4523cd0c95cfed21a674e80b6d3aeedcedd564736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xD80E8729FC834685B24B56DC8E4523CD0C95CFED21 0xA6 PUSH21 0xE80B6D3AEEDCEDD564736F6C634300081E00330000 ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122074d80e8729fc834685b24b56dc8e4523cd0c95cfed21a674e80b6d3aeedcedd564736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xD80E8729FC834685B24B56DC8E4523CD0C95CFED21 0xA6 PUSH21 0xE80B6D3AEEDCEDD564736F6C634300081E00330000 ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122074d80e8729fc834685b24b56dc8e4523cd0c95cfed21a674e80b6d3aeedcedd564736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
								"contracts/LPStaking.sol",
								"contracts/interface/ICREDIWhale.sol",
								"contracts/interface/IERC20_Decimals.sol",
								"contracts/interface/IPriceData.sol",
								"contracts/oracle_utils/LPValue.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LPStaking.sol": {
				"LPStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_whale_oracle_addr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "apy",
									"type": "uint96"
								}
							],
							"name": "APYChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "whales_bonus_apy",
									"type": "uint96"
								}
							],
							"name": "BonusAPYChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "staking_token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "rewards_token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "price_oracle",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "maturity",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "apy",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "whales_bonus_apy",
									"type": "uint96"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "RewardVoided",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "StakeWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "maturity",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewards_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "required_CREDI",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CLAIM_PERIOD",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CREDI_WHALE_ORACLE",
							"outputs": [
								{
									"internalType": "contract ICREDIWhale",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "rewards_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staking_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewards_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "price_oracle",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "reward_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint96",
									"name": "maturity",
									"type": "uint96"
								},
								{
									"internalType": "uint96",
									"name": "apy",
									"type": "uint96"
								},
								{
									"internalType": "uint96",
									"name": "whales_bonus_apy",
									"type": "uint96"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "staking_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewards_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "price_oracle",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "maturity",
									"type": "uint96"
								},
								{
									"internalType": "uint96",
									"name": "apy",
									"type": "uint96"
								},
								{
									"internalType": "uint96",
									"name": "whales_bonus_apy",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolsCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "getStake",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"internalType": "uint96",
									"name": "maturity",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "required_CREDI",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "pending_payments",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"internalType": "uint96",
									"name": "apy",
									"type": "uint96"
								}
							],
							"name": "setAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"internalType": "uint96",
									"name": "whales_bonus_apy",
									"type": "uint96"
								}
							],
							"name": "setBonusAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pool_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "token0_price_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "token1_price_data",
									"type": "bytes"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "voidReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "rewards_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LPStaking.sol\":418:9848  contract LPStaking is Ownable, LPValue, ReentrancyGuard... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/LPStaking.sol\":1175:1176  1 */\n  0x01\n    /* \"contracts/LPStaking.sol\":1147:1176  uint private stakes_count = 1 */\n  0x04\n  sstore\n    /* \"contracts/LPStaking.sol\":2368:2750  constructor(address _whale_oracle_addr) Ownable(_msgSender())... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_13:\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup1\n  dup1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/LPStaking.sol\":2446:2498  CREDI_WHALE_ORACLE = ICREDIWhale(_whale_oracle_addr) */\n  swap2\n  dup3\n  and\n  0x80\n  swap1\n  dup2\n  mstore\n    /* \"contracts/LPStaking.sol\":2520:2741  PoolInfo({... */\n  0x40\n  dup1\n  mload\n  0xc0\n  dup2\n  add\n  dup3\n  mstore\n  0x00\n  dup1\n  dup3\n  mstore\n  0x20\n  dup3\n  add\n  dup2\n  dup2\n  mstore\n  swap3\n  dup3\n  add\n  dup2\n  dup2\n  mstore\n  0x60\n  dup4\n  add\n  dup3\n  dup2\n  mstore\n  swap5\n  dup4\n  add\n  dup3\n  dup2\n  mstore\n  0xa0\n  dup5\n  add\n  dup4\n  dup2\n  mstore\n    /* \"contracts/LPStaking.sol\":2509:2514  pools */\n  0x02\n    /* \"contracts/LPStaking.sol\":2509:2742  pools.push(PoolInfo({... */\n  dup1\n  sload\n  swap9\n  dup10\n  add\n  dup2\n  sstore\n  swap1\n  swap4\n  mstore\n  swap3\n  mload\n  swap4\n  mload\n  swap4\n  dup8\n  and\n  shl(0xa0, 0x01)\n  sub(shl(0x60, 0x01), 0x01)\n  swap6\n  dup7\n  and\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  or\n  0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace\n  0x03\n  swap1\n  swap9\n  mul\n  swap8\n  dup9\n  add\n  sstore\n  swap1\n  mload\n  swap5\n  mload\n  swap5\n  dup8\n  and\n  swap5\n  dup5\n  and\n  dup2\n  mul\n  swap5\n  swap1\n  swap5\n  or\n  0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf\n  dup7\n  add\n  sstore\n  swap1\n  mload\n  swap1\n  mload\n  swap5\n  and\n  swap4\n  and\n  mul\n  swap2\n  swap1\n  swap2\n  or\n  0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0\n  swap1\n  swap2\n  add\n  sstore\n    /* \"contracts/LPStaking.sol\":418:9848  contract LPStaking is Ownable, LPValue, ReentrancyGuard... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  0x00\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_23:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  0x00\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_24:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:512   */\ntag_21:\n    /* \"contracts/LPStaking.sol\":418:9848  contract LPStaking is Ownable, LPValue, ReentrancyGuard... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x1be098a259116bb01f030c85677666e5a5cc1ac00ee0d8dd61762f3f467db074\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/LPStaking.sol\":418:9848  contract LPStaking is Ownable, LPValue, ReentrancyGuard... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa9fc507b\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa9fc507b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb4ac6860\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xcc5c56dc\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xce325bf8\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_22:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x74ee6b62\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x954821b6\n      eq\n      tag_15\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      dup1\n      0x25d5971f\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x25d5971f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3b5dd047\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4f44daa9\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x69ca431b\n      eq\n      tag_11\n      jumpi\n      revert(0x00, 0x00)\n    tag_23:\n      dup1\n      0x215784\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x039ba6b7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x068bcd8d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x21241dfe\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/LPStaking.sol\":7511:7947  function voidReward(uint stake_id) external onlyOwner validate_stake(stake_id)... */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/LPStaking.sol\":9284:9519  function setAPY(uint pool_id, uint96 apy) external onlyOwner validate_pool(pool_id)... */\n    tag_4:\n      tag_24\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"contracts/LPStaking.sol\":2758:3295  function getPool(uint pool_id) external validate_pool(pool_id) view ... */\n    tag_5:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1031:1086   */\n      swap8\n      dup9\n      and\n        /* \"#utility.yul\":1013:1087   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1123:1178   */\n      swap6\n      dup8\n      and\n        /* \"#utility.yul\":1118:1120   */\n      0x20\n        /* \"#utility.yul\":1103:1121   */\n      dup8\n      add\n        /* \"#utility.yul\":1096:1179   */\n      mstore\n        /* \"#utility.yul\":1215:1270   */\n      swap4\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":1195:1213   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":1188:1271   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":1307:1346   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1302:1304   */\n      0x60\n        /* \"#utility.yul\":1287:1305   */\n      dup5\n      add\n        /* \"#utility.yul\":1280:1347   */\n      mstore\n        /* \"#utility.yul\":1384:1423   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1378:1381   */\n      0x80\n        /* \"#utility.yul\":1363:1382   */\n      dup4\n      add\n        /* \"#utility.yul\":1356:1424   */\n      mstore\n        /* \"#utility.yul\":1461:1500   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1455:1458   */\n      0xa0\n        /* \"#utility.yul\":1440:1459   */\n      dup3\n      add\n        /* \"#utility.yul\":1433:1501   */\n      mstore\n        /* \"#utility.yul\":1000:1003   */\n      0xc0\n        /* \"#utility.yul\":985:1004   */\n      add\n        /* \"contracts/LPStaking.sol\":2758:3295  function getPool(uint pool_id) external validate_pool(pool_id) view ... */\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LPStaking.sol\":956:1001  uint96 constant public CLAIM_PERIOD = 40 days */\n    tag_6:\n      tag_37\n        /* \"contracts/LPStaking.sol\":994:1001  40 days */\n      0x34bc00\n        /* \"contracts/LPStaking.sol\":956:1001  uint96 constant public CLAIM_PERIOD = 40 days */\n      dup2\n      jump\n    tag_37:\n      mload(0x40)\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":1674:1713   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1656:1714   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1644:1646   */\n      0x20\n        /* \"#utility.yul\":1629:1647   */\n      add\n        /* \"contracts/LPStaking.sol\":956:1001  uint96 constant public CLAIM_PERIOD = 40 days */\n      tag_35\n        /* \"#utility.yul\":1512:1720   */\n      jump\n        /* \"contracts/LPStaking.sol\":7955:8614  function withdrawStake(uint stake_id) external nonReentrant validate_stake(stake_id)... */\n    tag_7:\n      tag_24\n      tag_42\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n        /* \"contracts/LPStaking.sol\":6534:7503  function claim(uint stake_id) external nonReentrant validate_stake(stake_id)... */\n    tag_8:\n      tag_24\n      tag_45\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"contracts/LPStaking.sol\":5024:6526  function stake(uint pool_id, uint stake_amount, bytes calldata token0_price_data, bytes calldata token1_price_data) external nonReentrant validate_pool(pool_id)... */\n    tag_9:\n      tag_24\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"contracts/LPStaking.sol\":9527:9843  function setBonusAPY(uint pool_id, uint96 whales_bonus_apy) external onlyOwner validate_pool(pool_id)... */\n    tag_10:\n      tag_24\n      tag_52\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/LPStaking.sol\":4046:5016  function createPool(address staking_token, address rewards_token, address price_oracle, uint reward_amount, uint96 maturity, uint96 apy, uint96 whales_bonus_apy) external onlyOwner returns(uint)... */\n    tag_11:\n      tag_54\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n        /* \"#utility.yul\":4208:4233   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4196:4198   */\n      0x20\n        /* \"#utility.yul\":4181:4199   */\n      add\n        /* \"contracts/LPStaking.sol\":4046:5016  function createPool(address staking_token, address rewards_token, address price_oracle, uint reward_amount, uint96 maturity, uint96 apy, uint96 whales_bonus_apy) external onlyOwner returns(uint)... */\n      tag_35\n        /* \"#utility.yul\":4062:4239   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_24\n      tag_61\n      jump\t// in\n        /* \"contracts/LPStaking.sol\":8921:9276  function withdrawRewards(address rewards_token, address to, uint amount) external onlyOwner... */\n    tag_13:\n      tag_24\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_66:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4921:4976   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4903:4977   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4891:4893   */\n      0x20\n        /* \"#utility.yul\":4876:4894   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_35\n        /* \"#utility.yul\":4757:4983   */\n      jump\n        /* \"contracts/LPStaking.sol\":1183:1232  mapping (address => uint) public pending_payments */\n    tag_15:\n      tag_54\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/LPStaking.sol\":8622:8913  function addRewards(address rewards_token, uint amount) public ... */\n    tag_16:\n      tag_24\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n        /* \"contracts/LPStaking.sol\":3825:3927  function getPoolsCount() external view returns (uint) ... */\n    tag_17:\n      tag_54\n      tag_80\n      jump\t// in\n        /* \"contracts/LPStaking.sol\":1008:1055  ICREDIWhale immutable public CREDI_WHALE_ORACLE */\n    tag_18:\n      tag_66\n      immutable(\"0x1be098a259116bb01f030c85677666e5a5cc1ac00ee0d8dd61762f3f467db074\")\n      dup2\n      jump\n        /* \"contracts/LPStaking.sol\":3306:3817  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n    tag_19:\n      tag_86\n      tag_87\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6166:6221   */\n      swap1\n      swap8\n      and\n        /* \"#utility.yul\":6148:6222   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6253:6255   */\n      0x20\n        /* \"#utility.yul\":6238:6256   */\n      dup8\n      add\n        /* \"#utility.yul\":6231:6265   */\n      swap6\n      swap1\n      swap6\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":6301:6340   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":6281:6299   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":6274:6341   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":6372:6374   */\n      0x60\n        /* \"#utility.yul\":6357:6375   */\n      dup5\n      add\n        /* \"#utility.yul\":6350:6384   */\n      mstore\n        /* \"#utility.yul\":6415:6418   */\n      0x80\n        /* \"#utility.yul\":6400:6419   */\n      dup4\n      add\n        /* \"#utility.yul\":6393:6428   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6459:6462   */\n      0xa0\n        /* \"#utility.yul\":6444:6463   */\n      dup3\n      add\n        /* \"#utility.yul\":6437:6472   */\n      mstore\n        /* \"#utility.yul\":6135:6138   */\n      0xc0\n        /* \"#utility.yul\":6120:6139   */\n      add\n        /* \"contracts/LPStaking.sol\":3306:3817  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n      tag_35\n        /* \"#utility.yul\":5863:6478   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_24\n      tag_92\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"contracts/LPStaking.sol\":7511:7947  function voidReward(uint stake_id) external onlyOwner validate_stake(stake_id)... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_95:\n        /* \"contracts/LPStaking.sol\":7580:7588  stake_id */\n      dup1\n        /* \"contracts/LPStaking.sol\":2280:2281  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":2269:2277  stake_id */\n      dup2\n        /* \"contracts/LPStaking.sol\":2269:2281  stake_id > 0 */\n      gt\n        /* \"contracts/LPStaking.sol\":2269:2308  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_98\n      jumpi\n      pop\n        /* \"contracts/LPStaking.sol\":2296:2308  stakes_count */\n      sload(0x04)\n        /* \"contracts/LPStaking.sol\":2285:2293  stake_id */\n      dup2\n        /* \"contracts/LPStaking.sol\":2285:2308  stake_id < stakes_count */\n      lt\n        /* \"contracts/LPStaking.sol\":2269:2308  stake_id > 0 && stake_id < stakes_count */\n    tag_98:\n        /* \"contracts/LPStaking.sol\":2261:2340  require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6685:6687   */\n      0x20\n        /* \"contracts/LPStaking.sol\":2261:2340  require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6667:6688   */\n      mstore\n        /* \"#utility.yul\":6724:6726   */\n      0x1b\n        /* \"#utility.yul\":6704:6722   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6697:6727   */\n      mstore\n        /* \"#utility.yul\":6763:6792   */\n      0x4c505374616b696e673a496e76616c6964205374616b65204944210000000000\n        /* \"#utility.yul\":6743:6761   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6736:6793   */\n      mstore\n        /* \"#utility.yul\":6810:6828   */\n      0x64\n      add\n        /* \"contracts/LPStaking.sol\":2261:2340  require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/LPStaking.sol\":7606:7634  StakeDetails storage details */\n      0x00\n        /* \"contracts/LPStaking.sol\":7637:7653  stakes[stake_id] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/LPStaking.sol\":7637:7643  stakes */\n      0x03\n        /* \"contracts/LPStaking.sol\":7637:7653  stakes[stake_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LPStaking.sol\":7686:7702  details.maturity */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":7686:7717  details.maturity + CLAIM_PERIOD */\n      tag_103\n      swap1\n        /* \"contracts/LPStaking.sol\":994:1001  40 days */\n      0x34bc00\n      swap1\n      shl(0xa0, 0x01)\n        /* \"contracts/LPStaking.sol\":7686:7702  details.maturity */\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/LPStaking.sol\":7686:7717  details.maturity + CLAIM_PERIOD */\n      tag_104\n      jump\t// in\n    tag_103:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":7672:7717  time_now() >= details.maturity + CLAIM_PERIOD */\n      and\n        /* \"contracts/LPStaking.sol\":4014:4029  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":7672:7717  time_now() >= details.maturity + CLAIM_PERIOD */\n      and\n      lt\n      iszero\n        /* \"contracts/LPStaking.sol\":7664:7718  require(time_now() >= details.maturity + CLAIM_PERIOD) */\n      tag_107\n      jumpi\n      revert(0x00, 0x00)\n    tag_107:\n        /* \"contracts/LPStaking.sol\":7730:7751  PoolInfo storage pool */\n      0x00\n        /* \"contracts/LPStaking.sol\":7754:7759  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":7760:7767  details */\n      dup3\n        /* \"contracts/LPStaking.sol\":7760:7775  details.pool_id */\n      0x00\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":7754:7776  pools[details.pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_109\n      jumpi\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      0x03\n        /* \"contracts/LPStaking.sol\":7827:7848  details.reward_amount */\n      dup7\n      dup2\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":7754:7776  pools[details.pool_id] */\n      swap4\n      mul\n      add\n        /* \"contracts/LPStaking.sol\":7804:7822  pool.rewards_token */\n      0x01\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/LPStaking.sol\":7787:7823  pending_payments[pool.rewards_token] */\n      dup5\n      mstore\n        /* \"contracts/LPStaking.sol\":7787:7803  pending_payments */\n      0x05\n        /* \"contracts/LPStaking.sol\":7787:7823  pending_payments[pool.rewards_token] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup4\n      keccak256\n        /* \"contracts/LPStaking.sol\":7787:7848  pending_payments[pool.rewards_token] -= details.reward_amount */\n      dup1\n      sload\n        /* \"contracts/LPStaking.sol\":7754:7776  pools[details.pool_id] */\n      swap2\n      swap5\n      pop\n        /* \"contracts/LPStaking.sol\":7827:7848  details.reward_amount */\n      swap2\n      swap3\n        /* \"contracts/LPStaking.sol\":7754:7776  pools[details.pool_id] */\n      swap1\n        /* \"contracts/LPStaking.sol\":7787:7848  pending_payments[pool.rewards_token] -= details.reward_amount */\n      tag_112\n      swap1\n        /* \"contracts/LPStaking.sol\":7827:7848  details.reward_amount */\n      dup5\n      swap1\n        /* \"contracts/LPStaking.sol\":7787:7848  pending_payments[pool.rewards_token] -= details.reward_amount */\n      tag_113\n      jump\t// in\n    tag_112:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/LPStaking.sol\":7883:7884  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":7859:7880  details.reward_amount */\n      0x03\n      dup4\n      add\n        /* \"contracts/LPStaking.sol\":7859:7884  details.reward_amount = 0 */\n      sstore\n        /* \"contracts/LPStaking.sol\":7913:7928  details.pool_id */\n      dup2\n      sload\n        /* \"contracts/LPStaking.sol\":7900:7939  RewardVoided(details.pool_id, stake_id) */\n      mload(0x40)\n        /* \"#utility.yul\":4208:4233   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/LPStaking.sol\":7900:7939  RewardVoided(details.pool_id, stake_id) */\n      0x085cf309fcbacaf1ee2b300f62e8586a0661e41c7f318003e9aab792be89980b\n      swap1\n        /* \"#utility.yul\":4196:4198   */\n      0x20\n        /* \"#utility.yul\":4181:4199   */\n      add\n        /* \"contracts/LPStaking.sol\":7900:7939  RewardVoided(details.pool_id, stake_id) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LPStaking.sol\":7595:7947  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"contracts/LPStaking.sol\":7511:7947  function voidReward(uint stake_id) external onlyOwner validate_stake(stake_id)... */\n      pop\n      jump\t// out\n        /* \"contracts/LPStaking.sol\":9284:9519  function setAPY(uint pool_id, uint96 apy) external onlyOwner validate_pool(pool_id)... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/LPStaking.sol\":9359:9366  pool_id */\n      dup2\n        /* \"contracts/LPStaking.sol\":2119:2120  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":2109:2116  pool_id */\n      dup2\n        /* \"contracts/LPStaking.sol\":2109:2120  pool_id > 0 */\n      gt\n        /* \"contracts/LPStaking.sol\":2109:2146  pool_id > 0 && pool_id < pools.length */\n      dup1\n      iszero\n      tag_118\n      jumpi\n      pop\n        /* \"contracts/LPStaking.sol\":2134:2139  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":2134:2146  pools.length */\n      sload\n        /* \"contracts/LPStaking.sol\":2124:2146  pool_id < pools.length */\n      dup2\n      lt\n        /* \"contracts/LPStaking.sol\":2109:2146  pool_id > 0 && pool_id < pools.length */\n    tag_118:\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7658:7660   */\n      0x20\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7640:7661   */\n      mstore\n        /* \"#utility.yul\":7697:7699   */\n      0x1a\n        /* \"#utility.yul\":7677:7695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7670:7700   */\n      mstore\n        /* \"#utility.yul\":7736:7764   */\n      0x4c505374616b696e673a496e76616c696420506f6f6c20494421000000000000\n        /* \"#utility.yul\":7716:7734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7709:7765   */\n      mstore\n        /* \"#utility.yul\":7782:7800   */\n      0x64\n      add\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n      tag_100\n        /* \"#utility.yul\":7456:7806   */\n      jump\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n    tag_119:\n        /* \"contracts/LPStaking.sol\":9399:9405  100000 */\n      0x0186a0\n        /* \"contracts/LPStaking.sol\":9392:9395  apy */\n      dup3\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":9392:9405  apy <= 100000 */\n      and\n      gt\n      iszero\n        /* \"contracts/LPStaking.sol\":9384:9436  require(apy <= 100000, \"LPStaking:max apy is 1000%\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8013:8015   */\n      0x20\n        /* \"contracts/LPStaking.sol\":9384:9436  require(apy <= 100000, \"LPStaking:max apy is 1000%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7995:8016   */\n      mstore\n        /* \"#utility.yul\":8052:8054   */\n      0x1a\n        /* \"#utility.yul\":8032:8050   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8025:8055   */\n      mstore\n        /* \"#utility.yul\":8091:8119   */\n      0x4c505374616b696e673a6d617820617079206973203130303025000000000000\n        /* \"#utility.yul\":8071:8089   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8064:8120   */\n      mstore\n        /* \"#utility.yul\":8137:8155   */\n      0x64\n      add\n        /* \"contracts/LPStaking.sol\":9384:9436  require(apy <= 100000, \"LPStaking:max apy is 1000%\") */\n      tag_100\n        /* \"#utility.yul\":7811:8161   */\n      jump\n        /* \"contracts/LPStaking.sol\":9384:9436  require(apy <= 100000, \"LPStaking:max apy is 1000%\") */\n    tag_123:\n        /* \"contracts/LPStaking.sol\":9468:9471  apy */\n      dup2\n        /* \"contracts/LPStaking.sol\":9447:9452  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":9453:9460  pool_id */\n      dup5\n        /* \"contracts/LPStaking.sol\":9447:9461  pools[pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_127\n      jumpi\n      tag_127\n      tag_110\n      jump\t// in\n    tag_127:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n      0x03\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/LPStaking.sol\":9447:9465  pools[pool_id].apy */\n      0x01\n      add\n        /* \"contracts/LPStaking.sol\":9447:9471  pools[pool_id].apy = apy */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      shl(0xa0, 0x01)\n      sub(shl(0x60, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/LPStaking.sol\":9487:9511  APYChanged(pool_id, apy) */\n      mload(0x40)\n        /* \"#utility.yul\":1674:1713   */\n      swap2\n      dup5\n      and\n        /* \"#utility.yul\":1656:1714   */\n      dup3\n      mstore\n        /* \"contracts/LPStaking.sol\":9498:9505  pool_id */\n      dup5\n      swap2\n        /* \"contracts/LPStaking.sol\":9487:9511  APYChanged(pool_id, apy) */\n      0x09a2c3c653a42f5c64bbfdf07224d8e0d6526460f44e520ac49bae23804e18e8\n      swap2\n        /* \"#utility.yul\":1629:1647   */\n      add\n        /* \"contracts/LPStaking.sol\":9487:9511  APYChanged(pool_id, apy) */\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"contracts/LPStaking.sol\":9284:9519  function setAPY(uint pool_id, uint96 apy) external onlyOwner validate_pool(pool_id)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LPStaking.sol\":2758:3295  function getPool(uint pool_id) external validate_pool(pool_id) view ... */\n    tag_34:\n        /* \"contracts/LPStaking.sol\":2845:2866  address staking_token */\n      0x00\n        /* \"contracts/LPStaking.sol\":2881:2902  address rewards_token */\n      0x00\n        /* \"contracts/LPStaking.sol\":2917:2937  address price_oracle */\n      0x00\n        /* \"contracts/LPStaking.sol\":2952:2967  uint96 maturity */\n      0x00\n        /* \"contracts/LPStaking.sol\":2982:2992  uint96 apy */\n      0x00\n        /* \"contracts/LPStaking.sol\":3007:3030  uint96 whales_bonus_apy */\n      0x00\n        /* \"contracts/LPStaking.sol\":2812:2819  pool_id */\n      dup7\n        /* \"contracts/LPStaking.sol\":2119:2120  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":2109:2116  pool_id */\n      dup2\n        /* \"contracts/LPStaking.sol\":2109:2120  pool_id > 0 */\n      gt\n        /* \"contracts/LPStaking.sol\":2109:2146  pool_id > 0 && pool_id < pools.length */\n      dup1\n      iszero\n      tag_131\n      jumpi\n      pop\n        /* \"contracts/LPStaking.sol\":2134:2139  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":2134:2146  pools.length */\n      sload\n        /* \"contracts/LPStaking.sol\":2124:2146  pool_id < pools.length */\n      dup2\n      lt\n        /* \"contracts/LPStaking.sol\":2109:2146  pool_id > 0 && pool_id < pools.length */\n    tag_131:\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7658:7660   */\n      0x20\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7640:7661   */\n      mstore\n        /* \"#utility.yul\":7697:7699   */\n      0x1a\n        /* \"#utility.yul\":7677:7695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7670:7700   */\n      mstore\n        /* \"#utility.yul\":7736:7764   */\n      0x4c505374616b696e673a496e76616c696420506f6f6c20494421000000000000\n        /* \"#utility.yul\":7716:7734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7709:7765   */\n      mstore\n        /* \"#utility.yul\":7782:7800   */\n      0x64\n      add\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n      tag_100\n        /* \"#utility.yul\":7456:7806   */\n      jump\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n    tag_132:\n        /* \"contracts/LPStaking.sol\":3056:3061  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":3062:3069  pool_id */\n      dup9\n        /* \"contracts/LPStaking.sol\":3056:3070  pools[pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_136\n      jumpi\n      tag_136\n      tag_110\n      jump\t// in\n    tag_136:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/LPStaking.sol\":3056:3084  pools[pool_id].staking_token */\n      sload\n        /* \"contracts/LPStaking.sol\":3099:3104  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":3099:3113  pools[pool_id] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":3056:3084  pools[pool_id].staking_token */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/LPStaking.sol\":3105:3112  pool_id */\n      dup11\n      swap1\n        /* \"contracts/LPStaking.sol\":3099:3113  pools[pool_id] */\n      dup2\n      lt\n      tag_139\n      jumpi\n      tag_139\n      tag_110\n      jump\t// in\n    tag_139:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/LPStaking.sol\":3099:3127  pools[pool_id].rewards_token */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/LPStaking.sol\":3142:3147  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":3148:3155  pool_id */\n      dup11\n        /* \"contracts/LPStaking.sol\":3142:3156  pools[pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_142\n      jumpi\n      tag_142\n      tag_110\n      jump\t// in\n    tag_142:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/LPStaking.sol\":3142:3169  pools[pool_id].price_oracle */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/LPStaking.sol\":3184:3189  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":3190:3197  pool_id */\n      dup12\n        /* \"contracts/LPStaking.sol\":3184:3198  pools[pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_145\n      jumpi\n      tag_145\n      tag_110\n      jump\t// in\n    tag_145:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/LPStaking.sol\":3184:3207  pools[pool_id].maturity */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/LPStaking.sol\":3222:3227  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":3228:3235  pool_id */\n      dup13\n        /* \"contracts/LPStaking.sol\":3222:3236  pools[pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_148\n      jumpi\n      tag_148\n      tag_110\n      jump\t// in\n    tag_148:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/LPStaking.sol\":3222:3240  pools[pool_id].apy */\n      0x01\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/LPStaking.sol\":3255:3260  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":3261:3268  pool_id */\n      dup14\n        /* \"contracts/LPStaking.sol\":3255:3269  pools[pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_151\n      jumpi\n      tag_151\n      tag_110\n      jump\t// in\n    tag_151:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/LPStaking.sol\":3255:3286  pools[pool_id].whales_bonus_apy */\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/LPStaking.sol\":3048:3287  return (pools[pool_id].staking_token,... */\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"contracts/LPStaking.sol\":2758:3295  function getPool(uint pool_id) external validate_pool(pool_id) view ... */\n      pop\n      swap2\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      swap6\n      jump\t// out\n        /* \"contracts/LPStaking.sol\":7955:8614  function withdrawStake(uint stake_id) external nonReentrant validate_stake(stake_id)... */\n    tag_43:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_154\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/LPStaking.sol\":8030:8038  stake_id */\n      dup1\n        /* \"contracts/LPStaking.sol\":2280:2281  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":2269:2277  stake_id */\n      dup2\n        /* \"contracts/LPStaking.sol\":2269:2281  stake_id > 0 */\n      gt\n        /* \"contracts/LPStaking.sol\":2269:2308  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_157\n      jumpi\n      pop\n        /* \"contracts/LPStaking.sol\":2296:2308  stakes_count */\n      sload(0x04)\n        /* \"contracts/LPStaking.sol\":2285:2293  stake_id */\n      dup2\n        /* \"contracts/LPStaking.sol\":2285:2308  stake_id < stakes_count */\n      lt\n        /* \"contracts/LPStaking.sol\":2269:2308  stake_id > 0 && stake_id < stakes_count */\n    tag_157:\n        /* \"contracts/LPStaking.sol\":2261:2340  require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6685:6687   */\n      0x20\n        /* \"contracts/LPStaking.sol\":2261:2340  require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6667:6688   */\n      mstore\n        /* \"#utility.yul\":6724:6726   */\n      0x1b\n        /* \"#utility.yul\":6704:6722   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6697:6727   */\n      mstore\n        /* \"#utility.yul\":6763:6792   */\n      0x4c505374616b696e673a496e76616c6964205374616b65204944210000000000\n        /* \"#utility.yul\":6743:6761   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6736:6793   */\n      mstore\n        /* \"#utility.yul\":6810:6828   */\n      0x64\n      add\n        /* \"contracts/LPStaking.sol\":2261:2340  require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\") */\n      tag_100\n        /* \"#utility.yul\":6483:6834   */\n      jump\n        /* \"contracts/LPStaking.sol\":2261:2340  require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\") */\n    tag_158:\n        /* \"contracts/LPStaking.sol\":8056:8084  StakeDetails storage details */\n      0x00\n        /* \"contracts/LPStaking.sol\":8087:8103  stakes[stake_id] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/LPStaking.sol\":8087:8093  stakes */\n      0x03\n        /* \"contracts/LPStaking.sol\":8087:8103  stakes[stake_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LPStaking.sol\":8122:8135  details.owner */\n      0x01\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/LPStaking.sol\":8122:8151  details.owner == _msgSender() */\n      eq\n        /* \"contracts/LPStaking.sol\":8114:8189  require(details.owner == _msgSender(), \"LPStaking:Caller is not the owner\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8368:8370   */\n      0x20\n        /* \"contracts/LPStaking.sol\":8114:8189  require(details.owner == _msgSender(), \"LPStaking:Caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8350:8371   */\n      mstore\n        /* \"#utility.yul\":8407:8409   */\n      0x21\n        /* \"#utility.yul\":8387:8405   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8380:8410   */\n      mstore\n        /* \"#utility.yul\":8446:8480   */\n      0x4c505374616b696e673a43616c6c6572206973206e6f7420746865206f776e65\n        /* \"#utility.yul\":8426:8444   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8419:8481   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":8497:8515   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8490:8521   */\n      mstore\n        /* \"#utility.yul\":8538:8557   */\n      0x84\n      add\n        /* \"contracts/LPStaking.sol\":8114:8189  require(details.owner == _msgSender(), \"LPStaking:Caller is not the owner\") */\n      tag_100\n        /* \"#utility.yul\":8166:8563   */\n      jump\n        /* \"contracts/LPStaking.sol\":8114:8189  require(details.owner == _msgSender(), \"LPStaking:Caller is not the owner\") */\n    tag_163:\n        /* \"contracts/LPStaking.sol\":8200:8220  PoolInfo memory pool */\n      0x00\n        /* \"contracts/LPStaking.sol\":8223:8228  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":8229:8236  details */\n      dup3\n        /* \"contracts/LPStaking.sol\":8229:8244  details.pool_id */\n      0x00\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":8223:8245  pools[details.pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_167\n      jumpi\n      tag_167\n      tag_110\n      jump\t// in\n    tag_167:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/LPStaking.sol\":8200:8245  PoolInfo memory pool = pools[details.pool_id] */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/LPStaking.sol\":8223:8245  pools[details.pool_id] */\n      0x03\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"contracts/LPStaking.sol\":8200:8245  PoolInfo memory pool = pools[details.pool_id] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      dup6\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      shl(0xa0, 0x01)\n      swap3\n      dup4\n      swap1\n      div\n      dup2\n      and\n      swap7\n      dup7\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x01\n      dup1\n      dup5\n      add\n      sload\n      dup1\n      dup4\n      and\n      swap6\n      dup8\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      swap4\n      dup3\n      swap1\n      div\n      dup7\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap2\n      dup3\n      and\n      0x80\n      dup6\n      add\n      mstore\n      swap1\n      dup2\n      swap1\n      div\n      dup5\n      and\n      0xa0\n      dup5\n      add\n      mstore\n        /* \"contracts/LPStaking.sol\":8278:8294  details.maturity */\n      swap1\n      dup6\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":8200:8245  PoolInfo memory pool = pools[details.pool_id] */\n      swap2\n      swap4\n      pop\n        /* \"contracts/LPStaking.sol\":8278:8294  details.maturity */\n      swap1\n      div\n      and\n        /* \"contracts/LPStaking.sol\":8264:8274  time_now() */\n      tag_169\n        /* \"contracts/LPStaking.sol\":4014:4029  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/LPStaking.sol\":3935:4038  function time_now() private view returns(uint96)... */\n      jump\n        /* \"contracts/LPStaking.sol\":8264:8274  time_now() */\n    tag_169:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":8264:8294  time_now() >= details.maturity */\n      and\n      lt\n      iszero\n        /* \"contracts/LPStaking.sol\":8256:8343  require(time_now() >= details.maturity, \"LPStaking:Early Withdrawal is not permitted!\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8770:8772   */\n      0x20\n        /* \"contracts/LPStaking.sol\":8256:8343  require(time_now() >= details.maturity, \"LPStaking:Early Withdrawal is not permitted!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8752:8773   */\n      mstore\n        /* \"#utility.yul\":8809:8811   */\n      0x2c\n        /* \"#utility.yul\":8789:8807   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8782:8812   */\n      mstore\n        /* \"#utility.yul\":8848:8882   */\n      0x4c505374616b696e673a4561726c79205769746864726177616c206973206e6f\n        /* \"#utility.yul\":8828:8846   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8821:8883   */\n      mstore\n      shl(0xa0, 0x74207065726d697474656421)\n        /* \"#utility.yul\":8899:8917   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8892:8934   */\n      mstore\n        /* \"#utility.yul\":8951:8970   */\n      0x84\n      add\n        /* \"contracts/LPStaking.sol\":8256:8343  require(time_now() >= details.maturity, \"LPStaking:Early Withdrawal is not permitted!\") */\n      tag_100\n        /* \"#utility.yul\":8568:8976   */\n      jump\n        /* \"contracts/LPStaking.sol\":8256:8343  require(time_now() >= details.maturity, \"LPStaking:Early Withdrawal is not permitted!\") */\n    tag_170:\n        /* \"contracts/LPStaking.sol\":8368:8388  details.stake_amount */\n      0x02\n      dup3\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":8368:8392  details.stake_amount > 0 */\n      iszero\n        /* \"contracts/LPStaking.sol\":8365:8605  if(details.stake_amount > 0)... */\n      tag_173\n      jumpi\n        /* \"contracts/LPStaking.sol\":8418:8493  IERC20(pool.staking_token).safeTransfer(_msgSender(), details.stake_amount) */\n      tag_174\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/LPStaking.sol\":8472:8492  details.stake_amount */\n      0x02\n      dup5\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":8425:8443  pool.staking_token */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":8418:8457  IERC20(pool.staking_token).safeTransfer */\n      and\n      swap2\n        /* \"contracts/LPStaking.sol\":8418:8493  IERC20(pool.staking_token).safeTransfer(_msgSender(), details.stake_amount) */\n      swap1\n        /* \"contracts/LPStaking.sol\":8418:8457  IERC20(pool.staking_token).safeTransfer */\n      tag_176\n        /* \"contracts/LPStaking.sol\":8418:8493  IERC20(pool.staking_token).safeTransfer(_msgSender(), details.stake_amount) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/LPStaking.sol\":8531:8532  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":8508:8528  details.stake_amount */\n      0x02\n      dup4\n      add\n        /* \"contracts/LPStaking.sol\":8508:8532  details.stake_amount = 0 */\n      sstore\n        /* \"contracts/LPStaking.sol\":8567:8582  details.pool_id */\n      dup2\n      sload\n        /* \"contracts/LPStaking.sol\":8552:8593  StakeWithdrawn(details.pool_id, stake_id) */\n      mload(0x40)\n        /* \"#utility.yul\":4208:4233   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/LPStaking.sol\":8552:8593  StakeWithdrawn(details.pool_id, stake_id) */\n      0x3db0ca701d7c1106534c6003e5d65dae65a9cb891ad5bbb9be39c091df79d87e\n      swap1\n        /* \"#utility.yul\":4196:4198   */\n      0x20\n        /* \"#utility.yul\":4181:4199   */\n      add\n        /* \"contracts/LPStaking.sol\":8552:8593  StakeWithdrawn(details.pool_id, stake_id) */\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LPStaking.sol\":8365:8605  if(details.stake_amount > 0)... */\n    tag_173:\n        /* \"contracts/LPStaking.sol\":8045:8614  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_178\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n    tag_178:\n        /* \"contracts/LPStaking.sol\":7955:8614  function withdrawStake(uint stake_id) external nonReentrant validate_stake(stake_id)... */\n      pop\n      jump\t// out\n        /* \"contracts/LPStaking.sol\":6534:7503  function claim(uint stake_id) external nonReentrant validate_stake(stake_id)... */\n    tag_46:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_181\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_181:\n        /* \"contracts/LPStaking.sol\":6601:6609  stake_id */\n      dup1\n        /* \"contracts/LPStaking.sol\":2280:2281  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":2269:2277  stake_id */\n      dup2\n        /* \"contracts/LPStaking.sol\":2269:2281  stake_id > 0 */\n      gt\n        /* \"contracts/LPStaking.sol\":2269:2308  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \"contracts/LPStaking.sol\":2296:2308  stakes_count */\n      sload(0x04)\n        /* \"contracts/LPStaking.sol\":2285:2293  stake_id */\n      dup2\n        /* \"contracts/LPStaking.sol\":2285:2308  stake_id < stakes_count */\n      lt\n        /* \"contracts/LPStaking.sol\":2269:2308  stake_id > 0 && stake_id < stakes_count */\n    tag_183:\n        /* \"contracts/LPStaking.sol\":2261:2340  require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6685:6687   */\n      0x20\n        /* \"contracts/LPStaking.sol\":2261:2340  require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6667:6688   */\n      mstore\n        /* \"#utility.yul\":6724:6726   */\n      0x1b\n        /* \"#utility.yul\":6704:6722   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6697:6727   */\n      mstore\n        /* \"#utility.yul\":6763:6792   */\n      0x4c505374616b696e673a496e76616c6964205374616b65204944210000000000\n        /* \"#utility.yul\":6743:6761   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6736:6793   */\n      mstore\n        /* \"#utility.yul\":6810:6828   */\n      0x64\n      add\n        /* \"contracts/LPStaking.sol\":2261:2340  require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\") */\n      tag_100\n        /* \"#utility.yul\":6483:6834   */\n      jump\n        /* \"contracts/LPStaking.sol\":2261:2340  require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\") */\n    tag_184:\n        /* \"contracts/LPStaking.sol\":6633:6661  StakeDetails storage details */\n      0x00\n        /* \"contracts/LPStaking.sol\":6664:6680  stakes[stake_id] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/LPStaking.sol\":6664:6670  stakes */\n      0x03\n        /* \"contracts/LPStaking.sol\":6664:6680  stakes[stake_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LPStaking.sol\":6699:6712  details.owner */\n      0x01\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/LPStaking.sol\":6699:6728  details.owner == _msgSender() */\n      eq\n        /* \"contracts/LPStaking.sol\":6691:6766  require(details.owner == _msgSender(), \"LPStaking:Caller is not the owner\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8368:8370   */\n      0x20\n        /* \"contracts/LPStaking.sol\":6691:6766  require(details.owner == _msgSender(), \"LPStaking:Caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8350:8371   */\n      mstore\n        /* \"#utility.yul\":8407:8409   */\n      0x21\n        /* \"#utility.yul\":8387:8405   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8380:8410   */\n      mstore\n        /* \"#utility.yul\":8446:8480   */\n      0x4c505374616b696e673a43616c6c6572206973206e6f7420746865206f776e65\n        /* \"#utility.yul\":8426:8444   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8419:8481   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":8497:8515   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8490:8521   */\n      mstore\n        /* \"#utility.yul\":8538:8557   */\n      0x84\n      add\n        /* \"contracts/LPStaking.sol\":6691:6766  require(details.owner == _msgSender(), \"LPStaking:Caller is not the owner\") */\n      tag_100\n        /* \"#utility.yul\":8166:8563   */\n      jump\n        /* \"contracts/LPStaking.sol\":6691:6766  require(details.owner == _msgSender(), \"LPStaking:Caller is not the owner\") */\n    tag_188:\n        /* \"contracts/LPStaking.sol\":6777:6798  PoolInfo storage pool */\n      0x00\n        /* \"contracts/LPStaking.sol\":6801:6806  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":6807:6814  details */\n      dup3\n        /* \"contracts/LPStaking.sol\":6807:6822  details.pool_id */\n      0x00\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":6801:6823  pools[details.pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_191\n      jumpi\n      tag_191\n      tag_110\n      jump\t// in\n    tag_191:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/LPStaking.sol\":6856:6872  details.maturity */\n      0x01\n      dup5\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":6801:6823  pools[details.pool_id] */\n      0x03\n      swap1\n      swap3\n      mul\n      add\n      swap2\n      pop\n      shl(0xa0, 0x01)\n        /* \"contracts/LPStaking.sol\":6856:6872  details.maturity */\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/LPStaking.sol\":4014:4029  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":6842:6872  time_now() >= details.maturity */\n      and\n      lt\n      iszero\n        /* \"contracts/LPStaking.sol\":6834:6921  require(time_now() >= details.maturity, \"LPStaking:Early Withdrawal is not permitted!\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8770:8772   */\n      0x20\n        /* \"contracts/LPStaking.sol\":6834:6921  require(time_now() >= details.maturity, \"LPStaking:Early Withdrawal is not permitted!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8752:8773   */\n      mstore\n        /* \"#utility.yul\":8809:8811   */\n      0x2c\n        /* \"#utility.yul\":8789:8807   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8782:8812   */\n      mstore\n        /* \"#utility.yul\":8848:8882   */\n      0x4c505374616b696e673a4561726c79205769746864726177616c206973206e6f\n        /* \"#utility.yul\":8828:8846   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8821:8883   */\n      mstore\n      shl(0xa0, 0x74207065726d697474656421)\n        /* \"#utility.yul\":8899:8917   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8892:8934   */\n      mstore\n        /* \"#utility.yul\":8951:8970   */\n      0x84\n      add\n        /* \"contracts/LPStaking.sol\":6834:6921  require(time_now() >= details.maturity, \"LPStaking:Early Withdrawal is not permitted!\") */\n      tag_100\n        /* \"#utility.yul\":8568:8976   */\n      jump\n        /* \"contracts/LPStaking.sol\":6834:6921  require(time_now() >= details.maturity, \"LPStaking:Early Withdrawal is not permitted!\") */\n    tag_194:\n        /* \"contracts/LPStaking.sol\":6965:6966  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":6941:6948  details */\n      dup3\n        /* \"contracts/LPStaking.sol\":6941:6962  details.reward_amount */\n      0x03\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":6941:6966  details.reward_amount > 0 */\n      gt\n        /* \"contracts/LPStaking.sol\":6933:6997  require(details.reward_amount > 0, \"LPStaking:Nothing to claim\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9183:9185   */\n      0x20\n        /* \"contracts/LPStaking.sol\":6933:6997  require(details.reward_amount > 0, \"LPStaking:Nothing to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9165:9186   */\n      mstore\n        /* \"#utility.yul\":9222:9224   */\n      0x1a\n        /* \"#utility.yul\":9202:9220   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9195:9225   */\n      mstore\n        /* \"#utility.yul\":9261:9289   */\n      0x4c505374616b696e673a4e6f7468696e6720746f20636c61696d000000000000\n        /* \"#utility.yul\":9241:9259   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9234:9290   */\n      mstore\n        /* \"#utility.yul\":9307:9325   */\n      0x64\n      add\n        /* \"contracts/LPStaking.sol\":6933:6997  require(details.reward_amount > 0, \"LPStaking:Nothing to claim\") */\n      tag_100\n        /* \"#utility.yul\":8981:9331   */\n      jump\n        /* \"contracts/LPStaking.sol\":6933:6997  require(details.reward_amount > 0, \"LPStaking:Nothing to claim\") */\n    tag_196:\n        /* \"contracts/LPStaking.sol\":7011:7031  details.stake_amount */\n      0x02\n      dup3\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":7011:7035  details.stake_amount > 0 */\n      iszero\n        /* \"contracts/LPStaking.sol\":7008:7187  if(details.stake_amount > 0)... */\n      tag_199\n      jumpi\n        /* \"contracts/LPStaking.sol\":7061:7136  IERC20(pool.staking_token).safeTransfer(_msgSender(), details.stake_amount) */\n      tag_200\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/LPStaking.sol\":7115:7135  details.stake_amount */\n      0x02\n      dup5\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":7068:7086  pool.staking_token */\n      dup4\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n        /* \"contracts/LPStaking.sol\":7061:7136  IERC20(pool.staking_token).safeTransfer(_msgSender(), details.stake_amount) */\n      swap1\n        /* \"contracts/LPStaking.sol\":7061:7100  IERC20(pool.staking_token).safeTransfer */\n      tag_176\n        /* \"contracts/LPStaking.sol\":7061:7136  IERC20(pool.staking_token).safeTransfer(_msgSender(), details.stake_amount) */\n      jump\t// in\n    tag_200:\n        /* \"contracts/LPStaking.sol\":7174:7175  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":7151:7171  details.stake_amount */\n      0x02\n      dup4\n      add\n        /* \"contracts/LPStaking.sol\":7151:7175  details.stake_amount = 0 */\n      sstore\n        /* \"contracts/LPStaking.sol\":7008:7187  if(details.stake_amount > 0)... */\n    tag_199:\n        /* \"contracts/LPStaking.sol\":7199:7275  IERC20(pool.rewards_token).safeTransfer(_msgSender(), details.reward_amount) */\n      tag_202\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/LPStaking.sol\":7253:7274  details.reward_amount */\n      0x03\n      dup5\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":7206:7224  pool.rewards_token */\n      0x01\n      dup5\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n        /* \"contracts/LPStaking.sol\":7199:7275  IERC20(pool.rewards_token).safeTransfer(_msgSender(), details.reward_amount) */\n      swap1\n        /* \"contracts/LPStaking.sol\":7199:7238  IERC20(pool.rewards_token).safeTransfer */\n      tag_176\n        /* \"contracts/LPStaking.sol\":7199:7275  IERC20(pool.rewards_token).safeTransfer(_msgSender(), details.reward_amount) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/LPStaking.sol\":7326:7347  details.reward_amount */\n      0x03\n      dup3\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":7303:7321  pool.rewards_token */\n      0x01\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/LPStaking.sol\":7286:7322  pending_payments[pool.rewards_token] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LPStaking.sol\":7286:7302  pending_payments */\n      0x05\n        /* \"contracts/LPStaking.sol\":7286:7322  pending_payments[pool.rewards_token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LPStaking.sol\":7286:7347  pending_payments[pool.rewards_token] -= details.reward_amount */\n      dup1\n      sload\n        /* \"contracts/LPStaking.sol\":7286:7322  pending_payments[pool.rewards_token] */\n      swap1\n      swap2\n      swap1\n        /* \"contracts/LPStaking.sol\":7286:7347  pending_payments[pool.rewards_token] -= details.reward_amount */\n      tag_204\n      swap1\n        /* \"contracts/LPStaking.sol\":7326:7347  details.reward_amount */\n      dup5\n      swap1\n        /* \"contracts/LPStaking.sol\":7286:7347  pending_payments[pool.rewards_token] -= details.reward_amount */\n      tag_113\n      jump\t// in\n    tag_204:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/LPStaking.sol\":7382:7383  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":7358:7379  details.reward_amount */\n      0x03\n      dup4\n      add\n        /* \"contracts/LPStaking.sol\":7358:7383  details.reward_amount = 0 */\n      sstore\n        /* \"contracts/LPStaking.sol\":7415:7430  details.pool_id */\n      dup2\n      sload\n        /* \"contracts/LPStaking.sol\":7400:7441  StakeWithdrawn(details.pool_id, stake_id) */\n      mload(0x40)\n        /* \"#utility.yul\":4208:4233   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/LPStaking.sol\":7400:7441  StakeWithdrawn(details.pool_id, stake_id) */\n      0x3db0ca701d7c1106534c6003e5d65dae65a9cb891ad5bbb9be39c091df79d87e\n      swap1\n        /* \"#utility.yul\":4196:4198   */\n      0x20\n        /* \"#utility.yul\":4181:4199   */\n      add\n        /* \"contracts/LPStaking.sol\":7400:7441  StakeWithdrawn(details.pool_id, stake_id) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LPStaking.sol\":7468:7483  details.pool_id */\n      dup2\n      sload\n        /* \"contracts/LPStaking.sol\":7457:7494  RewardPaid(details.pool_id, stake_id) */\n      mload(0x40)\n        /* \"#utility.yul\":4208:4233   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/LPStaking.sol\":7457:7494  RewardPaid(details.pool_id, stake_id) */\n      0x4d7828f2aa36030cc63cdea79ec646099aa121d019f1a90edb55078939fb84ea\n      swap1\n        /* \"#utility.yul\":4196:4198   */\n      0x20\n        /* \"#utility.yul\":4181:4199   */\n      add\n        /* \"contracts/LPStaking.sol\":7457:7494  RewardPaid(details.pool_id, stake_id) */\n      tag_177\n        /* \"#utility.yul\":4062:4239   */\n      jump\n        /* \"contracts/LPStaking.sol\":5024:6526  function stake(uint pool_id, uint stake_amount, bytes calldata token0_price_data, bytes calldata token1_price_data) external nonReentrant validate_pool(pool_id)... */\n    tag_50:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_209\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_209:\n        /* \"contracts/LPStaking.sol\":5176:5183  pool_id */\n      dup6\n        /* \"contracts/LPStaking.sol\":2119:2120  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":2109:2116  pool_id */\n      dup2\n        /* \"contracts/LPStaking.sol\":2109:2120  pool_id > 0 */\n      gt\n        /* \"contracts/LPStaking.sol\":2109:2146  pool_id > 0 && pool_id < pools.length */\n      dup1\n      iszero\n      tag_211\n      jumpi\n      pop\n        /* \"contracts/LPStaking.sol\":2134:2139  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":2134:2146  pools.length */\n      sload\n        /* \"contracts/LPStaking.sol\":2124:2146  pool_id < pools.length */\n      dup2\n      lt\n        /* \"contracts/LPStaking.sol\":2109:2146  pool_id > 0 && pool_id < pools.length */\n    tag_211:\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7658:7660   */\n      0x20\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7640:7661   */\n      mstore\n        /* \"#utility.yul\":7697:7699   */\n      0x1a\n        /* \"#utility.yul\":7677:7695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7670:7700   */\n      mstore\n        /* \"#utility.yul\":7736:7764   */\n      0x4c505374616b696e673a496e76616c696420506f6f6c20494421000000000000\n        /* \"#utility.yul\":7716:7734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7709:7765   */\n      mstore\n        /* \"#utility.yul\":7782:7800   */\n      0x64\n      add\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n      tag_100\n        /* \"#utility.yul\":7456:7806   */\n      jump\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n    tag_212:\n        /* \"contracts/LPStaking.sol\":5224:5225  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":5209:5221  stake_amount */\n      dup7\n        /* \"contracts/LPStaking.sol\":5209:5225  stake_amount > 0 */\n      gt\n        /* \"contracts/LPStaking.sol\":5201:5278  require(stake_amount > 0,\"LPStaking:stake_amount must be greater than zero!\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9538:9540   */\n      0x20\n        /* \"contracts/LPStaking.sol\":5201:5278  require(stake_amount > 0,\"LPStaking:stake_amount must be greater than zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9520:9541   */\n      mstore\n        /* \"#utility.yul\":9577:9579   */\n      0x31\n        /* \"#utility.yul\":9557:9575   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9550:9580   */\n      mstore\n        /* \"#utility.yul\":9616:9650   */\n      0x4c505374616b696e673a7374616b655f616d6f756e74206d7573742062652067\n        /* \"#utility.yul\":9596:9614   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9589:9651   */\n      mstore\n        /* \"#utility.yul\":9687:9706   */\n      0x726561746572207468616e207a65726f21000000000000000000000000000000\n        /* \"#utility.yul\":9667:9685   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9660:9707   */\n      mstore\n        /* \"#utility.yul\":9724:9743   */\n      0x84\n      add\n        /* \"contracts/LPStaking.sol\":5201:5278  require(stake_amount > 0,\"LPStaking:stake_amount must be greater than zero!\") */\n      tag_100\n        /* \"#utility.yul\":9336:9749   */\n      jump\n        /* \"contracts/LPStaking.sol\":5201:5278  require(stake_amount > 0,\"LPStaking:stake_amount must be greater than zero!\") */\n    tag_215:\n        /* \"contracts/LPStaking.sol\":5289:5310  PoolInfo storage pool */\n      0x00\n        /* \"contracts/LPStaking.sol\":5313:5318  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":5319:5326  pool_id */\n      dup9\n        /* \"contracts/LPStaking.sol\":5313:5327  pools[pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_219\n      jumpi\n      tag_219\n      tag_110\n      jump\t// in\n    tag_219:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/LPStaking.sol\":5289:5327  PoolInfo storage pool = pools[pool_id] */\n      swap1\n      pop\n        /* \"contracts/LPStaking.sol\":5357:5358  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":5346:5350  pool */\n      dup2\n        /* \"contracts/LPStaking.sol\":5346:5354  pool.apy */\n      0x01\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":5346:5358  pool.apy > 0 */\n      and\n      gt\n        /* \"contracts/LPStaking.sol\":5338:5388  require(pool.apy > 0, \"LPStaking:Pool is paused!\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9956:9958   */\n      0x20\n        /* \"contracts/LPStaking.sol\":5338:5388  require(pool.apy > 0, \"LPStaking:Pool is paused!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9938:9959   */\n      mstore\n        /* \"#utility.yul\":9995:9997   */\n      0x19\n        /* \"#utility.yul\":9975:9993   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9968:9998   */\n      mstore\n        /* \"#utility.yul\":10034:10061   */\n      0x4c505374616b696e673a506f6f6c206973207061757365642100000000000000\n        /* \"#utility.yul\":10014:10032   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10007:10062   */\n      mstore\n        /* \"#utility.yul\":10079:10097   */\n      0x64\n      add\n        /* \"contracts/LPStaking.sol\":5338:5388  require(pool.apy > 0, \"LPStaking:Pool is paused!\") */\n      tag_100\n        /* \"#utility.yul\":9754:10103   */\n      jump\n        /* \"contracts/LPStaking.sol\":5338:5388  require(pool.apy > 0, \"LPStaking:Pool is paused!\") */\n    tag_221:\n        /* \"contracts/LPStaking.sol\":5399:5485  IERC20(pool.staking_token).safeTransferFrom(_msgSender(), address(this), stake_amount) */\n      tag_224\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/LPStaking.sol\":5406:5424  pool.staking_token */\n      dup3\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/LPStaking.sol\":5465:5469  this */\n      address\n        /* \"contracts/LPStaking.sol\":5472:5484  stake_amount */\n      dup11\n        /* \"contracts/LPStaking.sol\":5399:5442  IERC20(pool.staking_token).safeTransferFrom */\n      tag_226\n        /* \"contracts/LPStaking.sol\":5399:5485  IERC20(pool.staking_token).safeTransferFrom(_msgSender(), address(this), stake_amount) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/LPStaking.sol\":5525:5543  pool.staking_token */\n      dup1\n      sload\n        /* \"contracts/LPStaking.sol\":5559:5576  pool.price_oracle */\n      0x02\n      dup3\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":5497:5513  uint stake_value */\n      0x00\n      swap2\n        /* \"contracts/LPStaking.sol\":5516:5615  lp_value(pool.staking_token, stake_amount, pool.price_oracle, token0_price_data, token1_price_data) */\n      tag_227\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":5525:5543  pool.staking_token */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/LPStaking.sol\":5545:5557  stake_amount */\n      dup12\n      swap2\n        /* \"contracts/LPStaking.sol\":5559:5576  pool.price_oracle */\n      and\n        /* \"contracts/LPStaking.sol\":5578:5595  token0_price_data */\n      dup11\n      dup11\n        /* \"contracts/LPStaking.sol\":5597:5614  token1_price_data */\n      dup11\n      dup11\n        /* \"contracts/LPStaking.sol\":5516:5524  lp_value */\n      tag_228\n        /* \"contracts/LPStaking.sol\":5516:5615  lp_value(pool.staking_token, stake_amount, pool.price_oracle, token0_price_data, token1_price_data) */\n      jump\t// in\n    tag_227:\n        /* \"contracts/LPStaking.sol\":5674:5687  pool.maturity */\n      dup3\n      sload\n        /* \"contracts/LPStaking.sol\":5659:5667  pool.apy */\n      0x01\n      dup5\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":5497:5615  uint stake_value = lp_value(pool.staking_token, stake_amount, pool.price_oracle, token0_price_data, token1_price_data) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/LPStaking.sol\":5626:5644  uint reward_amount */\n      0x00\n      swap2\n        /* \"contracts/LPStaking.sol\":5689:5697  365 days */\n      0x01e13380\n      swap2\n      sub(shl(0x60, 0x01), 0x01)\n      shl(0xa0, 0x01)\n        /* \"contracts/LPStaking.sol\":5674:5687  pool.maturity */\n      swap2\n      dup3\n      swap1\n      div\n      dup2\n      and\n      swap3\n        /* \"contracts/LPStaking.sol\":5668:5673  10000 */\n      0x2710\n      swap3\n        /* \"contracts/LPStaking.sol\":5647:5667  stake_value*pool.apy */\n      tag_229\n      swap3\n        /* \"contracts/LPStaking.sol\":5659:5667  pool.apy */\n      swap2\n      div\n      and\n        /* \"contracts/LPStaking.sol\":5497:5615  uint stake_value = lp_value(pool.staking_token, stake_amount, pool.price_oracle, token0_price_data, token1_price_data) */\n      dup7\n        /* \"contracts/LPStaking.sol\":5647:5667  stake_value*pool.apy */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"contracts/LPStaking.sol\":5647:5673  stake_value*pool.apy/10000 */\n      tag_231\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"contracts/LPStaking.sol\":5647:5687  stake_value*pool.apy/10000*pool.maturity */\n      tag_233\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_233:\n        /* \"contracts/LPStaking.sol\":5647:5698  stake_value*pool.apy/10000*pool.maturity/(365 days) */\n      tag_234\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_234:\n        /* \"contracts/LPStaking.sol\":5626:5698  uint reward_amount = stake_value*pool.apy/10000*pool.maturity/(365 days) */\n      swap1\n      pop\n        /* \"contracts/LPStaking.sol\":5709:5728  uint required_CREDI */\n      0x00\n        /* \"contracts/LPStaking.sol\":5746:5764  CREDI_WHALE_ORACLE */\n      immutable(\"0x1be098a259116bb01f030c85677666e5a5cc1ac00ee0d8dd61762f3f467db074\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":5746:5772  CREDI_WHALE_ORACLE.isWhale */\n      and\n      0x8ef1e259\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/LPStaking.sol\":5746:5786  CREDI_WHALE_ORACLE.isWhale(_msgSender()) */\n      mload(0x40)\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4921:4976   */\n      swap1\n      swap2\n      and\n        /* \"contracts/LPStaking.sol\":5746:5786  CREDI_WHALE_ORACLE.isWhale(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4903:4977   */\n      mstore\n        /* \"#utility.yul\":4876:4894   */\n      0x24\n      add\n        /* \"contracts/LPStaking.sol\":5746:5786  CREDI_WHALE_ORACLE.isWhale(_msgSender()) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"contracts/LPStaking.sol\":5743:5972  if(CREDI_WHALE_ORACLE.isWhale(_msgSender()))... */\n      iszero\n      tag_241\n      jumpi\n        /* \"contracts/LPStaking.sol\":5829:5847  CREDI_WHALE_ORACLE */\n      immutable(\"0x1be098a259116bb01f030c85677666e5a5cc1ac00ee0d8dd61762f3f467db074\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":5829:5862  CREDI_WHALE_ORACLE.whaleThreshold */\n      and\n      0x9a3bfdf5\n        /* \"contracts/LPStaking.sol\":5829:5864  CREDI_WHALE_ORACLE.whaleThreshold() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_243\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_243:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"contracts/LPStaking.sol\":5936:5949  pool.maturity */\n      dup5\n      sload\n        /* \"contracts/LPStaking.sol\":5908:5929  pool.whales_bonus_apy */\n      0x02\n      dup7\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":5812:5864  required_CREDI = CREDI_WHALE_ORACLE.whaleThreshold() */\n      swap2\n      swap3\n      pop\n        /* \"contracts/LPStaking.sol\":5951:5959  365 days */\n      0x01e13380\n      swap2\n      sub(shl(0x60, 0x01), 0x01)\n      shl(0xa0, 0x01)\n        /* \"contracts/LPStaking.sol\":5936:5949  pool.maturity */\n      swap3\n      dup4\n      swap1\n      div\n      dup2\n      and\n      swap3\n        /* \"contracts/LPStaking.sol\":5930:5935  10000 */\n      0x2710\n      swap3\n        /* \"contracts/LPStaking.sol\":5896:5929  stake_value*pool.whales_bonus_apy */\n      tag_246\n      swap3\n        /* \"contracts/LPStaking.sol\":5908:5929  pool.whales_bonus_apy */\n      swap2\n      swap1\n      div\n      and\n        /* \"contracts/LPStaking.sol\":5896:5907  stake_value */\n      dup8\n        /* \"contracts/LPStaking.sol\":5896:5929  stake_value*pool.whales_bonus_apy */\n      tag_230\n      jump\t// in\n    tag_246:\n        /* \"contracts/LPStaking.sol\":5896:5935  stake_value*pool.whales_bonus_apy/10000 */\n      tag_247\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_247:\n        /* \"contracts/LPStaking.sol\":5896:5949  stake_value*pool.whales_bonus_apy/10000*pool.maturity */\n      tag_248\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_248:\n        /* \"contracts/LPStaking.sol\":5896:5960  stake_value*pool.whales_bonus_apy/10000*pool.maturity/(365 days) */\n      tag_249\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_249:\n        /* \"contracts/LPStaking.sol\":5879:5960  reward_amount += stake_value*pool.whales_bonus_apy/10000*pool.maturity/(365 days) */\n      tag_250\n      swap1\n      dup4\n      tag_251\n      jump\t// in\n    tag_250:\n      swap2\n      pop\n        /* \"contracts/LPStaking.sol\":5743:5972  if(CREDI_WHALE_ORACLE.isWhale(_msgSender()))... */\n    tag_241:\n        /* \"contracts/LPStaking.sol\":6015:6028  pool.maturity */\n      dup4\n      sload\n        /* \"contracts/LPStaking.sol\":5984:5999  uint96 maturity */\n      0x00\n      swap1\n      shl(0xa0, 0x01)\n        /* \"contracts/LPStaking.sol\":6015:6028  pool.maturity */\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/LPStaking.sol\":4014:4029  block.timestamp */\n      timestamp\n        /* \"contracts/LPStaking.sol\":6002:6028  time_now() + pool.maturity */\n      tag_253\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_253:\n        /* \"contracts/LPStaking.sol\":5984:6028  uint96 maturity = time_now() + pool.maturity */\n      swap1\n      pop\n        /* \"contracts/LPStaking.sol\":6062:6314  StakeDetails({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/LPStaking.sol\":6133:6140  pool_id */\n      dup14\n        /* \"contracts/LPStaking.sol\":6062:6314  StakeDetails({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LPStaking.sol\":6097:6109  _msgSender() */\n      tag_254\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/LPStaking.sol\":6097:6109  _msgSender() */\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":6062:6314  StakeDetails({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LPStaking.sol\":6165:6173  maturity */\n      dup3\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":6062:6314  StakeDetails({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LPStaking.sol\":6202:6214  stake_amount */\n      dup13\n        /* \"contracts/LPStaking.sol\":6062:6314  StakeDetails({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LPStaking.sol\":6244:6257  reward_amount */\n      dup5\n        /* \"contracts/LPStaking.sol\":6062:6314  StakeDetails({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LPStaking.sol\":6288:6302  required_CREDI */\n      dup4\n        /* \"contracts/LPStaking.sol\":6062:6314  StakeDetails({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/LPStaking.sol\":6039:6045  stakes */\n      0x03\n        /* \"contracts/LPStaking.sol\":6039:6059  stakes[stakes_count] */\n      0x00\n        /* \"contracts/LPStaking.sol\":6046:6058  stakes_count */\n      sload(0x04)\n        /* \"contracts/LPStaking.sol\":6039:6059  stakes[stakes_count] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LPStaking.sol\":6039:6314  stakes[stakes_count] = StakeDetails({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      sub(shl(0x60, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/LPStaking.sol\":6365:6378  reward_amount */\n      dup3\n        /* \"contracts/LPStaking.sol\":6325:6341  pending_payments */\n      0x05\n        /* \"contracts/LPStaking.sol\":6325:6361  pending_payments[pool.rewards_token] */\n      0x00\n        /* \"contracts/LPStaking.sol\":6342:6346  pool */\n      dup8\n        /* \"contracts/LPStaking.sol\":6342:6360  pool.rewards_token */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":6325:6361  pending_payments[pool.rewards_token] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/LPStaking.sol\":6325:6378  pending_payments[pool.rewards_token] += reward_amount */\n      dup3\n      dup3\n      sload\n      tag_255\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_255:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/LPStaking.sol\":6415:6427  stakes_count */\n      sload(0x04)\n        /* \"contracts/LPStaking.sol\":6394:6492  Staked(_msgSender(), stakes_count, pool_id, maturity, stake_amount, reward_amount, required_CREDI) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":11361:11386   */\n      swap2\n      dup3\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":11422:11461   */\n      dup4\n      and\n        /* \"#utility.yul\":11417:11419   */\n      0x20\n        /* \"#utility.yul\":11402:11420   */\n      dup4\n      add\n        /* \"#utility.yul\":11395:11462   */\n      mstore\n        /* \"#utility.yul\":11478:11496   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":11471:11505   */\n      dup14\n      swap1\n      mstore\n        /* \"#utility.yul\":11536:11538   */\n      0x60\n        /* \"#utility.yul\":11521:11539   */\n      dup3\n      add\n        /* \"#utility.yul\":11514:11548   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":11579:11582   */\n      0x80\n        /* \"#utility.yul\":11564:11583   */\n      dup3\n      add\n        /* \"#utility.yul\":11557:11592   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/LPStaking.sol\":6394:6492  Staked(_msgSender(), stakes_count, pool_id, maturity, stake_amount, reward_amount, required_CREDI) */\n      mload\n        /* \"contracts/LPStaking.sol\":6429:6436  pool_id */\n      dup14\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap2\n        /* \"contracts/LPStaking.sol\":6394:6492  Staked(_msgSender(), stakes_count, pool_id, maturity, stake_amount, reward_amount, required_CREDI) */\n      0xc48192cf3609b4932a8b10a6f09fe1cac38610fdef14eacc15b35c454da0b4c5\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":11348:11351   */\n      0xa0\n        /* \"contracts/LPStaking.sol\":6394:6492  Staked(_msgSender(), stakes_count, pool_id, maturity, stake_amount, reward_amount, required_CREDI) */\n      add\n      swap1\n      log3\n        /* \"contracts/LPStaking.sol\":6503:6515  stakes_count */\n      0x04\n        /* \"contracts/LPStaking.sol\":6503:6517  stakes_count++ */\n      dup1\n      sload\n      swap1\n        /* \"contracts/LPStaking.sol\":6503:6515  stakes_count */\n      0x00\n        /* \"contracts/LPStaking.sol\":6503:6517  stakes_count++ */\n      tag_259\n      dup4\n      tag_260\n      jump\t// in\n    tag_259:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/LPStaking.sol\":5190:6526  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_261\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n    tag_261:\n        /* \"contracts/LPStaking.sol\":5024:6526  function stake(uint pool_id, uint stake_amount, bytes calldata token0_price_data, bytes calldata token1_price_data) external nonReentrant validate_pool(pool_id)... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LPStaking.sol\":9527:9843  function setBonusAPY(uint pool_id, uint96 whales_bonus_apy) external onlyOwner validate_pool(pool_id)... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_263:\n        /* \"contracts/LPStaking.sol\":9620:9627  pool_id */\n      dup2\n        /* \"contracts/LPStaking.sol\":2119:2120  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":2109:2116  pool_id */\n      dup2\n        /* \"contracts/LPStaking.sol\":2109:2120  pool_id > 0 */\n      gt\n        /* \"contracts/LPStaking.sol\":2109:2146  pool_id > 0 && pool_id < pools.length */\n      dup1\n      iszero\n      tag_265\n      jumpi\n      pop\n        /* \"contracts/LPStaking.sol\":2134:2139  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":2134:2146  pools.length */\n      sload\n        /* \"contracts/LPStaking.sol\":2124:2146  pool_id < pools.length */\n      dup2\n      lt\n        /* \"contracts/LPStaking.sol\":2109:2146  pool_id > 0 && pool_id < pools.length */\n    tag_265:\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7658:7660   */\n      0x20\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7640:7661   */\n      mstore\n        /* \"#utility.yul\":7697:7699   */\n      0x1a\n        /* \"#utility.yul\":7677:7695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7670:7700   */\n      mstore\n        /* \"#utility.yul\":7736:7764   */\n      0x4c505374616b696e673a496e76616c696420506f6f6c20494421000000000000\n        /* \"#utility.yul\":7716:7734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7709:7765   */\n      mstore\n        /* \"#utility.yul\":7782:7800   */\n      0x64\n      add\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n      tag_100\n        /* \"#utility.yul\":7456:7806   */\n      jump\n        /* \"contracts/LPStaking.sol\":2101:2177  require(pool_id > 0 && pool_id < pools.length, \"LPStaking:Invalid Pool ID!\") */\n    tag_266:\n        /* \"contracts/LPStaking.sol\":9673:9679  100000 */\n      0x0186a0\n        /* \"contracts/LPStaking.sol\":9653:9669  whales_bonus_apy */\n      dup3\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":9653:9679  whales_bonus_apy <= 100000 */\n      and\n      gt\n      iszero\n        /* \"contracts/LPStaking.sol\":9645:9716  require(whales_bonus_apy <= 100000, \"LPStaking:max bonus apy is 1000%\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11945:11947   */\n      0x20\n        /* \"contracts/LPStaking.sol\":9645:9716  require(whales_bonus_apy <= 100000, \"LPStaking:max bonus apy is 1000%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11927:11948   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11964:11982   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11957:11987   */\n      mstore\n        /* \"#utility.yul\":12023:12057   */\n      0x4c505374616b696e673a6d617820626f6e757320617079206973203130303025\n        /* \"#utility.yul\":12003:12021   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11996:12058   */\n      mstore\n        /* \"#utility.yul\":12075:12093   */\n      0x64\n      add\n        /* \"contracts/LPStaking.sol\":9645:9716  require(whales_bonus_apy <= 100000, \"LPStaking:max bonus apy is 1000%\") */\n      tag_100\n        /* \"#utility.yul\":11743:12099   */\n      jump\n        /* \"contracts/LPStaking.sol\":9645:9716  require(whales_bonus_apy <= 100000, \"LPStaking:max bonus apy is 1000%\") */\n    tag_269:\n        /* \"contracts/LPStaking.sol\":9761:9777  whales_bonus_apy */\n      dup2\n        /* \"contracts/LPStaking.sol\":9727:9732  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":9733:9740  pool_id */\n      dup5\n        /* \"contracts/LPStaking.sol\":9727:9741  pools[pool_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_273\n      jumpi\n      tag_273\n      tag_110\n      jump\t// in\n    tag_273:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n      0x03\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/LPStaking.sol\":9727:9758  pools[pool_id].whales_bonus_apy */\n      0x02\n      add\n        /* \"contracts/LPStaking.sol\":9727:9777  pools[pool_id].whales_bonus_apy = whales_bonus_apy */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      shl(0xa0, 0x01)\n      sub(shl(0x60, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/LPStaking.sol\":9793:9835  BonusAPYChanged(pool_id, whales_bonus_apy) */\n      mload(0x40)\n        /* \"#utility.yul\":1674:1713   */\n      swap2\n      dup5\n      and\n        /* \"#utility.yul\":1656:1714   */\n      dup3\n      mstore\n        /* \"contracts/LPStaking.sol\":9809:9816  pool_id */\n      dup5\n      swap2\n        /* \"contracts/LPStaking.sol\":9793:9835  BonusAPYChanged(pool_id, whales_bonus_apy) */\n      0xd3cd184b56b5b95016981fc55484ff8fdf06eb587430055c7ab828a0edc0dc9d\n      swap2\n        /* \"#utility.yul\":1629:1647   */\n      add\n        /* \"contracts/LPStaking.sol\":9793:9835  BonusAPYChanged(pool_id, whales_bonus_apy) */\n      tag_129\n        /* \"#utility.yul\":1512:1720   */\n      jump\n        /* \"contracts/LPStaking.sol\":4046:5016  function createPool(address staking_token, address rewards_token, address price_oracle, uint reward_amount, uint96 maturity, uint96 apy, uint96 whales_bonus_apy) external onlyOwner returns(uint)... */\n    tag_57:\n        /* \"contracts/LPStaking.sol\":4235:4239  uint */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_277\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_277:\n        /* \"contracts/LPStaking.sol\":4276:4277  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":4265:4273  maturity */\n      dup5\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":4265:4277  maturity > 0 */\n      and\n      gt\n        /* \"contracts/LPStaking.sol\":4257:4323  require(maturity > 0, \"LPStaking:maturity must be greater than 0\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12306:12308   */\n      0x20\n        /* \"contracts/LPStaking.sol\":4257:4323  require(maturity > 0, \"LPStaking:maturity must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12288:12309   */\n      mstore\n        /* \"#utility.yul\":12345:12347   */\n      0x29\n        /* \"#utility.yul\":12325:12343   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12318:12348   */\n      mstore\n        /* \"#utility.yul\":12384:12418   */\n      0x4c505374616b696e673a6d61747572697479206d757374206265206772656174\n        /* \"#utility.yul\":12364:12382   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12357:12419   */\n      mstore\n      shl(0xbc, 0x06572207468616e203)\n        /* \"#utility.yul\":12435:12453   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12428:12467   */\n      mstore\n        /* \"#utility.yul\":12484:12503   */\n      0x84\n      add\n        /* \"contracts/LPStaking.sol\":4257:4323  require(maturity > 0, \"LPStaking:maturity must be greater than 0\") */\n      tag_100\n        /* \"#utility.yul\":12104:12509   */\n      jump\n        /* \"contracts/LPStaking.sol\":4257:4323  require(maturity > 0, \"LPStaking:maturity must be greater than 0\") */\n    tag_279:\n        /* \"contracts/LPStaking.sol\":4383:4396  rewards_token */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":4342:4396  IPriceData(price_oracle).quoteToken() == rewards_token */\n      and\n        /* \"contracts/LPStaking.sol\":4353:4365  price_oracle */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":4342:4377  IPriceData(price_oracle).quoteToken */\n      and\n      0x217a4b70\n        /* \"contracts/LPStaking.sol\":4342:4379  IPriceData(price_oracle).quoteToken() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_283\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_283:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_284\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":4342:4396  IPriceData(price_oracle).quoteToken() == rewards_token */\n      and\n      eq\n        /* \"contracts/LPStaking.sol\":4334:4466  require(IPriceData(price_oracle).quoteToken() == rewards_token, \"LPStaking:rewards_token must be equal to price_oracle quote token\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12972:12974   */\n      0x20\n        /* \"contracts/LPStaking.sol\":4334:4466  require(IPriceData(price_oracle).quoteToken() == rewards_token, \"LPStaking:rewards_token must be equal to price_oracle quote token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12954:12975   */\n      mstore\n        /* \"#utility.yul\":13011:13013   */\n      0x41\n        /* \"#utility.yul\":12991:13009   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12984:13014   */\n      mstore\n        /* \"#utility.yul\":13050:13084   */\n      0x4c505374616b696e673a726577617264735f746f6b656e206d75737420626520\n        /* \"#utility.yul\":13030:13048   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13023:13085   */\n      mstore\n        /* \"#utility.yul\":13121:13155   */\n      0x657175616c20746f2070726963655f6f7261636c652071756f746520746f6b65\n        /* \"#utility.yul\":13101:13119   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13094:13156   */\n      mstore\n      shl(0xf9, 0x37)\n        /* \"#utility.yul\":13172:13191   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":13165:13197   */\n      mstore\n        /* \"#utility.yul\":13214:13233   */\n      0xa4\n      add\n        /* \"contracts/LPStaking.sol\":4334:4466  require(IPriceData(price_oracle).quoteToken() == rewards_token, \"LPStaking:rewards_token must be equal to price_oracle quote token\") */\n      tag_100\n        /* \"#utility.yul\":12770:13239   */\n      jump\n        /* \"contracts/LPStaking.sol\":4334:4466  require(IPriceData(price_oracle).quoteToken() == rewards_token, \"LPStaking:rewards_token must be equal to price_oracle quote token\") */\n    tag_286:\n        /* \"contracts/LPStaking.sol\":4488:4741  PoolInfo({... */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup11\n      dup2\n      and\n      dup3\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      0x20\n      dup5\n      add\n      swap1\n      dup2\n      mstore\n      dup12\n      dup4\n      and\n      swap5\n      dup5\n      add\n      swap5\n      dup6\n      mstore\n      dup8\n      dup3\n      and\n      0x60\n      dup6\n      add\n      swap1\n      dup2\n      mstore\n      dup12\n      dup5\n      and\n      0x80\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n      dup9\n      dup5\n      and\n      0xa0\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LPStaking.sol\":4477:4482  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":4477:4742  pools.push(PoolInfo({... */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup4\n      sstore\n      0x00\n      dup4\n      dup2\n      mstore\n      swap10\n      mload\n      swap7\n      mload\n      swap7\n      dup10\n      and\n      shl(0xa0, 0x01)\n      swap8\n      dup10\n      and\n      dup9\n      mul\n      or\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace\n      0x03\n      swap1\n      swap4\n      mul\n      swap3\n      dup4\n      add\n      sstore\n      swap10\n      mload\n      swap5\n      mload\n      swap5\n      dup9\n      and\n      swap5\n      dup8\n      and\n      dup7\n      mul\n      swap5\n      swap1\n      swap5\n      or\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf\n      dup6\n      add\n      sstore\n      swap2\n      mload\n      swap1\n      mload\n      swap6\n      and\n      swap5\n      swap1\n      swap4\n      and\n      swap1\n      swap2\n      mul\n      swap3\n      swap1\n      swap3\n      or\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/LPStaking.sol\":4768:4780  pools.length */\n      sload\n      swap1\n      swap2\n        /* \"contracts/LPStaking.sol\":4768:4784  pools.length - 1 */\n      tag_290\n      swap2\n      tag_113\n      jump\t// in\n    tag_290:\n        /* \"contracts/LPStaking.sol\":4753:4784  uint pool_id = pools.length - 1 */\n      swap1\n      pop\n        /* \"contracts/LPStaking.sol\":4836:4849  rewards_token */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":4800:4897  PoolCreated(pool_id, staking_token, rewards_token, price_oracle, maturity, apy, whales_bonus_apy) */\n      and\n        /* \"contracts/LPStaking.sol\":4821:4834  staking_token */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":4800:4897  PoolCreated(pool_id, staking_token, rewards_token, price_oracle, maturity, apy, whales_bonus_apy) */\n      and\n        /* \"contracts/LPStaking.sol\":4812:4819  pool_id */\n      dup3\n        /* \"contracts/LPStaking.sol\":4800:4897  PoolCreated(pool_id, staking_token, rewards_token, price_oracle, maturity, apy, whales_bonus_apy) */\n      0x6b64b7e8b6f4656658efb1c74b7d1bbff6e84d3d7b1cd5ae89fd6cd91de6ef96\n        /* \"contracts/LPStaking.sol\":4851:4863  price_oracle */\n      dup11\n        /* \"contracts/LPStaking.sol\":4865:4873  maturity */\n      dup10\n        /* \"contracts/LPStaking.sol\":4875:4878  apy */\n      dup10\n        /* \"contracts/LPStaking.sol\":4880:4896  whales_bonus_apy */\n      dup10\n        /* \"contracts/LPStaking.sol\":4800:4897  PoolCreated(pool_id, staking_token, rewards_token, price_oracle, maturity, apy, whales_bonus_apy) */\n      mload(0x40)\n      tag_291\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13487:13542   */\n      swap5\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":13469:13543   */\n      dup5\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":13579:13618   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":13574:13576   */\n      0x20\n        /* \"#utility.yul\":13559:13577   */\n      dup6\n      add\n        /* \"#utility.yul\":13552:13619   */\n      mstore\n        /* \"#utility.yul\":13655:13694   */\n      swap1\n      dup3\n      and\n        /* \"#utility.yul\":13650:13652   */\n      0x40\n        /* \"#utility.yul\":13635:13653   */\n      dup5\n      add\n        /* \"#utility.yul\":13628:13695   */\n      mstore\n        /* \"#utility.yul\":13731:13770   */\n      and\n        /* \"#utility.yul\":13726:13728   */\n      0x60\n        /* \"#utility.yul\":13711:13729   */\n      dup3\n      add\n        /* \"#utility.yul\":13704:13771   */\n      mstore\n        /* \"#utility.yul\":13456:13459   */\n      0x80\n        /* \"#utility.yul\":13441:13460   */\n      add\n      swap1\n        /* \"#utility.yul\":13244:13777   */\n      jump\n        /* \"contracts/LPStaking.sol\":4800:4897  PoolCreated(pool_id, staking_token, rewards_token, price_oracle, maturity, apy, whales_bonus_apy) */\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/LPStaking.sol\":4911:4928  reward_amount > 0 */\n      dup6\n      iszero\n        /* \"contracts/LPStaking.sol\":4908:4983  if(reward_amount > 0)... */\n      tag_294\n      jumpi\n        /* \"contracts/LPStaking.sol\":4943:4983  addRewards(rewards_token, reward_amount) */\n      tag_294\n        /* \"contracts/LPStaking.sol\":4954:4967  rewards_token */\n      dup9\n        /* \"contracts/LPStaking.sol\":4969:4982  reward_amount */\n      dup8\n        /* \"contracts/LPStaking.sol\":4943:4953  addRewards */\n      tag_78\n        /* \"contracts/LPStaking.sol\":4943:4983  addRewards(rewards_token, reward_amount) */\n      jump\t// in\n    tag_294:\n        /* \"contracts/LPStaking.sol\":5001:5008  pool_id */\n      swap9\n        /* \"contracts/LPStaking.sol\":4046:5016  function createPool(address staking_token, address rewards_token, address price_oracle, uint reward_amount, uint96 maturity, uint96 apy, uint96 whales_bonus_apy) external onlyOwner returns(uint)... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_296\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_298\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_299\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/LPStaking.sol\":8921:9276  function withdrawRewards(address rewards_token, address to, uint amount) external onlyOwner... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_301\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_301:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":9096:9127  pending_payments[rewards_token] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LPStaking.sol\":9096:9112  pending_payments */\n      0x05\n        /* \"contracts/LPStaking.sol\":9096:9127  pending_payments[rewards_token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/LPStaking.sol\":9087:9127  amount + pending_payments[rewards_token] */\n      tag_303\n      swap1\n        /* \"contracts/LPStaking.sol\":9087:9093  amount */\n      dup3\n        /* \"contracts/LPStaking.sol\":9087:9127  amount + pending_payments[rewards_token] */\n      tag_251\n      jump\t// in\n    tag_303:\n        /* \"contracts/LPStaking.sol\":9037:9083  IERC20(rewards_token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/LPStaking.sol\":9077:9081  this */\n      address\n        /* \"contracts/LPStaking.sol\":9037:9083  IERC20(rewards_token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4903:4977   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":9037:9068  IERC20(rewards_token).balanceOf */\n      dup6\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4876:4894   */\n      0x24\n      add\n        /* \"contracts/LPStaking.sol\":9037:9083  IERC20(rewards_token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_306\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_306:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_307\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_307:\n        /* \"contracts/LPStaking.sol\":9037:9127  IERC20(rewards_token).balanceOf(address(this)) >= amount + pending_payments[rewards_token] */\n      lt\n      iszero\n        /* \"contracts/LPStaking.sol\":9029:9153  require(IERC20(rewards_token).balanceOf(address(this)) >= amount + pending_payments[rewards_token], \"Insufficient balance!\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13984:13986   */\n      0x20\n        /* \"contracts/LPStaking.sol\":9029:9153  require(IERC20(rewards_token).balanceOf(address(this)) >= amount + pending_payments[rewards_token], \"Insufficient balance!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13966:13987   */\n      mstore\n        /* \"#utility.yul\":14023:14025   */\n      0x15\n        /* \"#utility.yul\":14003:14021   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13996:14026   */\n      mstore\n        /* \"#utility.yul\":14062:14085   */\n      0x496e73756666696369656e742062616c616e6365210000000000000000000000\n        /* \"#utility.yul\":14042:14060   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14035:14086   */\n      mstore\n        /* \"#utility.yul\":14103:14121   */\n      0x64\n      add\n        /* \"contracts/LPStaking.sol\":9029:9153  require(IERC20(rewards_token).balanceOf(address(this)) >= amount + pending_payments[rewards_token], \"Insufficient balance!\") */\n      tag_100\n        /* \"#utility.yul\":13782:14127   */\n      jump\n        /* \"contracts/LPStaking.sol\":9029:9153  require(IERC20(rewards_token).balanceOf(address(this)) >= amount + pending_payments[rewards_token], \"Insufficient balance!\") */\n    tag_308:\n        /* \"contracts/LPStaking.sol\":9164:9210  IERC20(rewards_token).safeTransfer(to, amount) */\n      tag_311\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":9164:9198  IERC20(rewards_token).safeTransfer */\n      dup5\n      and\n        /* \"contracts/LPStaking.sol\":9199:9201  to */\n      dup4\n        /* \"contracts/LPStaking.sol\":9203:9209  amount */\n      dup4\n        /* \"contracts/LPStaking.sol\":9164:9198  IERC20(rewards_token).safeTransfer */\n      tag_176\n        /* \"contracts/LPStaking.sol\":9164:9210  IERC20(rewards_token).safeTransfer(to, amount) */\n      jump\t// in\n    tag_311:\n        /* \"contracts/LPStaking.sol\":9257:9259  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":9226:9268  RewardWithdrawn(rewards_token, to, amount) */\n      and\n        /* \"contracts/LPStaking.sol\":9242:9255  rewards_token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":9226:9268  RewardWithdrawn(rewards_token, to, amount) */\n      and\n      0xe06fab35f3c220725c11d544884aff93ebf67222c8310c487c71f27c844593e8\n        /* \"contracts/LPStaking.sol\":9261:9267  amount */\n      dup4\n        /* \"contracts/LPStaking.sol\":9226:9268  RewardWithdrawn(rewards_token, to, amount) */\n      mload(0x40)\n      tag_312\n      swap2\n        /* \"#utility.yul\":4208:4233   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4196:4198   */\n      0x20\n        /* \"#utility.yul\":4181:4199   */\n      add\n      swap1\n        /* \"#utility.yul\":4062:4239   */\n      jump\n        /* \"contracts/LPStaking.sol\":9226:9268  RewardWithdrawn(rewards_token, to, amount) */\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/LPStaking.sol\":8921:9276  function withdrawRewards(address rewards_token, address to, uint amount) external onlyOwner... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LPStaking.sol\":8622:8913  function addRewards(address rewards_token, uint amount) public ... */\n    tag_78:\n        /* \"contracts/LPStaking.sol\":8720:8721  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":8711:8717  amount */\n      dup2\n        /* \"contracts/LPStaking.sol\":8711:8721  amount > 0 */\n      gt\n        /* \"contracts/LPStaking.sol\":8702:8769  require (amount > 0, \"LPStaking:amount must be greater than zero!\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14334:14336   */\n      0x20\n        /* \"contracts/LPStaking.sol\":8702:8769  require (amount > 0, \"LPStaking:amount must be greater than zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14316:14337   */\n      mstore\n        /* \"#utility.yul\":14373:14375   */\n      0x2b\n        /* \"#utility.yul\":14353:14371   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14346:14376   */\n      mstore\n        /* \"#utility.yul\":14412:14446   */\n      0x4c505374616b696e673a616d6f756e74206d7573742062652067726561746572\n        /* \"#utility.yul\":14392:14410   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14385:14447   */\n      mstore\n      shl(0xa8, 0x207468616e207a65726f21)\n        /* \"#utility.yul\":14463:14481   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14456:14497   */\n      mstore\n        /* \"#utility.yul\":14514:14533   */\n      0x84\n      add\n        /* \"contracts/LPStaking.sol\":8702:8769  require (amount > 0, \"LPStaking:amount must be greater than zero!\") */\n      tag_100\n        /* \"#utility.yul\":14132:14539   */\n      jump\n        /* \"contracts/LPStaking.sol\":8702:8769  require (amount > 0, \"LPStaking:amount must be greater than zero!\") */\n    tag_315:\n        /* \"contracts/LPStaking.sol\":8780:8855  IERC20(rewards_token).safeTransferFrom(_msgSender(), address(this), amount) */\n      tag_318\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":8780:8818  IERC20(rewards_token).safeTransferFrom */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/LPStaking.sol\":8841:8845  this */\n      address\n        /* \"contracts/LPStaking.sol\":8848:8854  amount */\n      dup5\n        /* \"contracts/LPStaking.sol\":8780:8818  IERC20(rewards_token).safeTransferFrom */\n      tag_226\n        /* \"contracts/LPStaking.sol\":8780:8855  IERC20(rewards_token).safeTransferFrom(_msgSender(), address(this), amount) */\n      jump\t// in\n    tag_318:\n        /* \"contracts/LPStaking.sol\":8883:8896  rewards_token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":8871:8905  RewardAdded(rewards_token, amount) */\n      and\n      0xac24935fd910bc682b5ccb1a07b718cadf8cf2f6d1404c4f3ddc3662dae40e29\n        /* \"contracts/LPStaking.sol\":8898:8904  amount */\n      dup3\n        /* \"contracts/LPStaking.sol\":8871:8905  RewardAdded(rewards_token, amount) */\n      mload(0x40)\n      tag_320\n      swap2\n        /* \"#utility.yul\":4208:4233   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4196:4198   */\n      0x20\n        /* \"#utility.yul\":4181:4199   */\n      add\n      swap1\n        /* \"#utility.yul\":4062:4239   */\n      jump\n        /* \"contracts/LPStaking.sol\":8871:8905  RewardAdded(rewards_token, amount) */\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LPStaking.sol\":8622:8913  function addRewards(address rewards_token, uint amount) public ... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LPStaking.sol\":3825:3927  function getPoolsCount() external view returns (uint) ... */\n    tag_80:\n        /* \"contracts/LPStaking.sol\":3903:3908  pools */\n      0x02\n        /* \"contracts/LPStaking.sol\":3903:3915  pools.length */\n      sload\n        /* \"contracts/LPStaking.sol\":3873:3877  uint */\n      0x00\n      swap1\n        /* \"contracts/LPStaking.sol\":3903:3919  pools.length - 1 */\n      tag_322\n      swap1\n        /* \"contracts/LPStaking.sol\":3918:3919  1 */\n      0x01\n      swap1\n        /* \"contracts/LPStaking.sol\":3903:3919  pools.length - 1 */\n      tag_113\n      jump\t// in\n    tag_322:\n        /* \"contracts/LPStaking.sol\":3896:3919  return pools.length - 1 */\n      swap1\n      pop\n        /* \"contracts/LPStaking.sol\":3825:3927  function getPoolsCount() external view returns (uint) ... */\n      swap1\n      jump\t// out\n        /* \"contracts/LPStaking.sol\":3306:3817  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n    tag_88:\n        /* \"contracts/LPStaking.sol\":3397:3410  address owner */\n      0x00\n        /* \"contracts/LPStaking.sol\":3421:3433  uint pool_id */\n      0x00\n        /* \"contracts/LPStaking.sol\":3444:3459  uint96 maturity */\n      0x00\n        /* \"contracts/LPStaking.sol\":3470:3487  uint stake_amount */\n      0x00\n        /* \"contracts/LPStaking.sol\":3498:3516  uint reward_amount */\n      0x00\n        /* \"contracts/LPStaking.sol\":3527:3546  uint required_CREDI */\n      0x00\n        /* \"contracts/LPStaking.sol\":3363:3371  stake_id */\n      dup7\n        /* \"contracts/LPStaking.sol\":2280:2281  0 */\n      0x00\n        /* \"contracts/LPStaking.sol\":2269:2277  stake_id */\n      dup2\n        /* \"contracts/LPStaking.sol\":2269:2281  stake_id > 0 */\n      gt\n        /* \"contracts/LPStaking.sol\":2269:2308  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_324\n      jumpi\n      pop\n        /* \"contracts/LPStaking.sol\":2296:2308  stakes_count */\n      sload(0x04)\n        /* \"contracts/LPStaking.sol\":2285:2293  stake_id */\n      dup2\n        /* \"contracts/LPStaking.sol\":2285:2308  stake_id < stakes_count */\n      lt\n        /* \"contracts/LPStaking.sol\":2269:2308  stake_id > 0 && stake_id < stakes_count */\n    tag_324:\n        /* \"contracts/LPStaking.sol\":2261:2340  require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6685:6687   */\n      0x20\n        /* \"contracts/LPStaking.sol\":2261:2340  require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6667:6688   */\n      mstore\n        /* \"#utility.yul\":6724:6726   */\n      0x1b\n        /* \"#utility.yul\":6704:6722   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6697:6727   */\n      mstore\n        /* \"#utility.yul\":6763:6792   */\n      0x4c505374616b696e673a496e76616c6964205374616b65204944210000000000\n        /* \"#utility.yul\":6743:6761   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6736:6793   */\n      mstore\n        /* \"#utility.yul\":6810:6828   */\n      0x64\n      add\n        /* \"contracts/LPStaking.sol\":2261:2340  require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\") */\n      tag_100\n        /* \"#utility.yul\":6483:6834   */\n      jump\n        /* \"contracts/LPStaking.sol\":2261:2340  require(stake_id > 0 && stake_id < stakes_count, \"LPStaking:Invalid Stake ID!\") */\n    tag_325:\n      pop\n      pop\n      pop\n        /* \"contracts/LPStaking.sol\":3572:3588  stakes[stake_id] */\n      0x00\n      swap5\n      dup6\n      mstore\n      pop\n      pop\n        /* \"contracts/LPStaking.sol\":3572:3578  stakes */\n      0x03\n        /* \"contracts/LPStaking.sol\":3572:3588  stakes[stake_id] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap4\n      keccak256\n        /* \"contracts/LPStaking.sol\":3572:3594  stakes[stake_id].owner */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":3609:3633  stakes[stake_id].pool_id */\n      dup2\n      sload\n        /* \"contracts/LPStaking.sol\":3688:3717  stakes[stake_id].stake_amount */\n      0x02\n      dup4\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":3732:3762  stakes[stake_id].reward_amount */\n      swap6\n      dup4\n      add\n      sload\n        /* \"contracts/LPStaking.sol\":3777:3808  stakes[stake_id].required_CREDI */\n      0x04\n      swap1\n      swap4\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LPStaking.sol\":3572:3594  stakes[stake_id].owner */\n      dup4\n      and\n      swap8\n        /* \"contracts/LPStaking.sol\":3609:3633  stakes[stake_id].pool_id */\n      swap2\n      swap7\n      shl(0xa0, 0x01)\n        /* \"contracts/LPStaking.sol\":3648:3673  stakes[stake_id].maturity */\n      swap1\n      swap4\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap6\n      pop\n        /* \"contracts/LPStaking.sol\":3688:3717  stakes[stake_id].stake_amount */\n      swap2\n      swap4\n      pop\n        /* \"contracts/LPStaking.sol\":3306:3817  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_329\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_329:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4903:4977   */\n      mstore\n        /* \"#utility.yul\":4876:4894   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_100\n        /* \"#utility.yul\":4757:4983   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_299\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4903:4977   */\n      mstore\n        /* \"#utility.yul\":4876:4894   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_100\n        /* \"#utility.yul\":4757:4983   */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14736:14791   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":14718:14792   */\n      mstore\n        /* \"#utility.yul\":14808:14826   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14801:14835   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_345\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":14691:14709   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n    tag_346:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_348\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15066:15121   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":15048:15122   */\n      mstore\n        /* \"#utility.yul\":15158:15213   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":15138:15156   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":15131:15214   */\n      mstore\n        /* \"#utility.yul\":15230:15248   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15223:15257   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_351\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":15021:15039   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_346\n        /* \"#utility.yul\":14846:15263   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oracle_utils/LPValue.sol\":855:1466  function lp_value(address lp_addr, uint lp_amount, address oracle_addr, bytes calldata token0_price_data, bytes calldata token1_price_data) internal returns (uint)... */\n    tag_228:\n        /* \"contracts/oracle_utils/LPValue.sol\":1013:1017  uint */\n      0x00\n        /* \"contracts/oracle_utils/LPValue.sol\":1035:1054  IUniswapV2Pair pair */\n      0x00\n        /* \"contracts/oracle_utils/LPValue.sol\":1072:1079  lp_addr */\n      dup9\n        /* \"contracts/oracle_utils/LPValue.sol\":1035:1080  IUniswapV2Pair pair = IUniswapV2Pair(lp_addr) */\n      swap1\n      pop\n        /* \"contracts/oracle_utils/LPValue.sol\":1092:1108  uint112 reserve0 */\n      0x00\n        /* \"contracts/oracle_utils/LPValue.sol\":1110:1126  uint112 reserve1 */\n      0x00\n        /* \"contracts/oracle_utils/LPValue.sol\":1132:1136  pair */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/oracle_utils/LPValue.sol\":1132:1148  pair.getReserves */\n      and\n      0x0902f1ac\n        /* \"contracts/oracle_utils/LPValue.sol\":1132:1150  pair.getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_356\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_356:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_357\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"contracts/oracle_utils/LPValue.sol\":1091:1150  (uint112 reserve0, uint112 reserve1, ) = pair.getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/oracle_utils/LPValue.sol\":1162:1181  uint token0_balance */\n      0x00\n        /* \"contracts/oracle_utils/LPValue.sol\":1183:1202  uint token1_balance */\n      0x00\n        /* \"contracts/oracle_utils/LPValue.sol\":1206:1271  token_balances(lp_amount, pair.totalSupply(), reserve0, reserve1) */\n      tag_359\n        /* \"contracts/oracle_utils/LPValue.sol\":1221:1230  lp_amount */\n      dup13\n        /* \"contracts/oracle_utils/LPValue.sol\":1232:1236  pair */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/oracle_utils/LPValue.sol\":1232:1248  pair.totalSupply */\n      and\n      0x18160ddd\n        /* \"contracts/oracle_utils/LPValue.sol\":1232:1250  pair.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_361\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_361:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_362\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_362:\n        /* \"contracts/oracle_utils/LPValue.sol\":1252:1260  reserve0 */\n      dup7\n        /* \"contracts/oracle_utils/LPValue.sol\":1262:1270  reserve1 */\n      dup7\n        /* \"contracts/oracle_utils/LPValue.sol\":1206:1220  token_balances */\n      tag_363\n        /* \"contracts/oracle_utils/LPValue.sol\":1206:1271  token_balances(lp_amount, pair.totalSupply(), reserve0, reserve1) */\n      jump\t// in\n    tag_359:\n        /* \"contracts/oracle_utils/LPValue.sol\":1161:1271  (uint token0_balance, uint token1_balance) = token_balances(lp_amount, pair.totalSupply(), reserve0, reserve1) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/oracle_utils/LPValue.sol\":1384:1458  token_value(pair.token1(), token1_balance, oracle_addr, token1_price_data) */\n      tag_364\n        /* \"contracts/oracle_utils/LPValue.sol\":1396:1400  pair */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/oracle_utils/LPValue.sol\":1396:1407  pair.token1 */\n      and\n      0xd21220a7\n        /* \"contracts/oracle_utils/LPValue.sol\":1396:1409  pair.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_366\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_366:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_367\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_367:\n        /* \"contracts/oracle_utils/LPValue.sol\":1411:1425  token1_balance */\n      dup3\n        /* \"contracts/oracle_utils/LPValue.sol\":1427:1438  oracle_addr */\n      dup14\n        /* \"contracts/oracle_utils/LPValue.sol\":1440:1457  token1_price_data */\n      dup12\n      dup12\n        /* \"contracts/oracle_utils/LPValue.sol\":1384:1395  token_value */\n      tag_368\n        /* \"contracts/oracle_utils/LPValue.sol\":1384:1458  token_value(pair.token1(), token1_balance, oracle_addr, token1_price_data) */\n      jump\t// in\n    tag_364:\n        /* \"contracts/oracle_utils/LPValue.sol\":1290:1364  token_value(pair.token0(), token0_balance, oracle_addr, token0_price_data) */\n      tag_369\n        /* \"contracts/oracle_utils/LPValue.sol\":1302:1306  pair */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/oracle_utils/LPValue.sol\":1302:1313  pair.token0 */\n      and\n      0x0dfe1681\n        /* \"contracts/oracle_utils/LPValue.sol\":1302:1315  pair.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_371\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_371:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_372\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_372:\n        /* \"contracts/oracle_utils/LPValue.sol\":1317:1331  token0_balance */\n      dup5\n        /* \"contracts/oracle_utils/LPValue.sol\":1333:1344  oracle_addr */\n      dup15\n        /* \"contracts/oracle_utils/LPValue.sol\":1346:1363  token0_price_data */\n      dup15\n      dup15\n        /* \"contracts/oracle_utils/LPValue.sol\":1290:1301  token_value */\n      tag_368\n        /* \"contracts/oracle_utils/LPValue.sol\":1290:1364  token_value(pair.token0(), token0_balance, oracle_addr, token0_price_data) */\n      jump\t// in\n    tag_369:\n        /* \"contracts/oracle_utils/LPValue.sol\":1290:1458  token_value(pair.token0(), token0_balance, oracle_addr, token0_price_data) ... */\n      tag_373\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_373:\n        /* \"contracts/oracle_utils/LPValue.sol\":1282:1458  return  token_value(pair.token0(), token0_balance, oracle_addr, token0_price_data) ... */\n      swap14\n        /* \"contracts/oracle_utils/LPValue.sol\":855:1466  function lp_value(address lp_addr, uint lp_amount, address oracle_addr, bytes calldata token0_price_data, bytes calldata token1_price_data) internal returns (uint)... */\n      swap13\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_376\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_376:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_378)\n    tag_377:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_378:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4921:4976   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4903:4977   */\n      mstore\n        /* \"#utility.yul\":4876:4894   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      tag_100\n        /* \"#utility.yul\":4757:4983   */\n      jump\n        /* \"contracts/oracle_utils/LPValue.sol\":533:847  function token_balances(uint lp_balance, uint lp_supply, uint112 reserve0, uint112 reserve1) private pure returns (uint, uint)... */\n    tag_363:\n        /* \"contracts/oracle_utils/LPValue.sol\":648:652  uint */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/oracle_utils/LPValue.sol\":718:727  lp_supply */\n      dup6\n        /* \"contracts/oracle_utils/LPValue.sol\":698:717  reserve0*lp_balance */\n      tag_382\n        /* \"contracts/oracle_utils/LPValue.sol\":707:717  lp_balance */\n      dup9\n        /* \"contracts/oracle_utils/LPValue.sol\":698:717  reserve0*lp_balance */\n      0xffffffffffffffffffffffffffff\n      dup9\n      and\n      tag_230\n      jump\t// in\n    tag_382:\n        /* \"contracts/oracle_utils/LPValue.sol\":698:727  reserve0*lp_balance/lp_supply */\n      tag_383\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_383:\n        /* \"contracts/oracle_utils/LPValue.sol\":676:727  uint token0_balance = reserve0*lp_balance/lp_supply */\n      swap1\n      pop\n        /* \"contracts/oracle_utils/LPValue.sol\":738:757  uint token1_balance */\n      0x00\n        /* \"contracts/oracle_utils/LPValue.sol\":780:789  lp_supply */\n      dup7\n        /* \"contracts/oracle_utils/LPValue.sol\":760:779  reserve1*lp_balance */\n      tag_384\n        /* \"contracts/oracle_utils/LPValue.sol\":769:779  lp_balance */\n      dup10\n        /* \"contracts/oracle_utils/LPValue.sol\":760:779  reserve1*lp_balance */\n      0xffffffffffffffffffffffffffff\n      dup9\n      and\n      tag_230\n      jump\t// in\n    tag_384:\n        /* \"contracts/oracle_utils/LPValue.sol\":760:789  reserve1*lp_balance/lp_supply */\n      tag_385\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_385:\n        /* \"contracts/oracle_utils/LPValue.sol\":808:822  token0_balance */\n      swap2\n      swap9\n      swap2\n      swap8\n      pop\n        /* \"contracts/oracle_utils/LPValue.sol\":533:847  function token_balances(uint lp_balance, uint lp_supply, uint112 reserve0, uint112 reserve1) private pure returns (uint, uint)... */\n      swap1\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/oracle_utils/LPValue.sol\":248:525  function token_value(address token_addr, uint amount, address oracle_addr, bytes calldata price_data) private returns(uint)... */\n    tag_368:\n        /* \"contracts/oracle_utils/LPValue.sol\":366:370  uint */\n      0x00\n        /* \"contracts/oracle_utils/LPValue.sol\":406:417  oracle_addr */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/oracle_utils/LPValue.sol\":395:445  IPriceData(oracle_addr).useAbsoluteCollateralValue */\n      and\n      0x6a089215\n        /* \"contracts/oracle_utils/LPValue.sol\":446:456  token_addr */\n      dup8\n        /* \"contracts/oracle_utils/LPValue.sol\":458:464  amount */\n      dup8\n        /* \"contracts/oracle_utils/LPValue.sol\":482:492  token_addr */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/oracle_utils/LPValue.sol\":466:502  IERC20_Decimals(token_addr).decimals */\n      and\n      0x313ce567\n        /* \"contracts/oracle_utils/LPValue.sol\":466:504  IERC20_Decimals(token_addr).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_388\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_388:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_389\n      swap2\n      swap1\n      tag_390\n      jump\t// in\n    tag_389:\n        /* \"contracts/oracle_utils/LPValue.sol\":506:516  price_data */\n      dup8\n      dup8\n        /* \"contracts/oracle_utils/LPValue.sol\":395:517  IPriceData(oracle_addr).useAbsoluteCollateralValue(token_addr, amount, IERC20_Decimals(token_addr).decimals(), price_data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_391\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_392\n      jump\t// in\n    tag_391:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_394\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_394:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_395\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_395:\n        /* \"contracts/oracle_utils/LPValue.sol\":388:517  return IPriceData(oracle_addr).useAbsoluteCollateralValue(token_addr, amount, IERC20_Decimals(token_addr).decimals(), price_data) */\n      swap7\n        /* \"contracts/oracle_utils/LPValue.sol\":248:525  function token_value(address token_addr, uint amount, address oracle_addr, bytes calldata price_data) private returns(uint)... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:240   */\n    tag_26:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_403:\n      pop\n        /* \"#utility.yul\":187:210   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:240   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":245:424   */\n    tag_396:\n        /* \"#utility.yul\":312:332   */\n      dup1\n      calldataload\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":361:399   */\n      dup2\n      and\n        /* \"#utility.yul\":351:400   */\n      dup2\n      eq\n        /* \"#utility.yul\":341:418   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":414:415   */\n      0x00\n        /* \"#utility.yul\":411:412   */\n      0x00\n        /* \"#utility.yul\":404:416   */\n      revert\n        /* \"#utility.yul\":341:418   */\n    tag_405:\n        /* \"#utility.yul\":245:424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":429:727   */\n    tag_30:\n        /* \"#utility.yul\":496:502   */\n      0x00\n        /* \"#utility.yul\":504:510   */\n      0x00\n        /* \"#utility.yul\":557:559   */\n      0x40\n        /* \"#utility.yul\":545:554   */\n      dup4\n        /* \"#utility.yul\":536:543   */\n      dup6\n        /* \"#utility.yul\":532:555   */\n      sub\n        /* \"#utility.yul\":528:560   */\n      slt\n        /* \"#utility.yul\":525:577   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":573:574   */\n      0x00\n        /* \"#utility.yul\":570:571   */\n      0x00\n        /* \"#utility.yul\":563:575   */\n      revert\n        /* \"#utility.yul\":525:577   */\n    tag_407:\n        /* \"#utility.yul\":618:641   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":684:721   */\n      tag_408\n        /* \"#utility.yul\":717:719   */\n      0x20\n        /* \"#utility.yul\":702:720   */\n      dup5\n      add\n        /* \"#utility.yul\":684:721   */\n      tag_396\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":674:721   */\n      swap1\n      pop\n        /* \"#utility.yul\":429:727   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1725:2072   */\n    tag_397:\n        /* \"#utility.yul\":1776:1784   */\n      0x00\n        /* \"#utility.yul\":1786:1792   */\n      0x00\n        /* \"#utility.yul\":1840:1843   */\n      dup4\n        /* \"#utility.yul\":1833:1837   */\n      0x1f\n        /* \"#utility.yul\":1825:1831   */\n      dup5\n        /* \"#utility.yul\":1821:1838   */\n      add\n        /* \"#utility.yul\":1817:1844   */\n      slt\n        /* \"#utility.yul\":1807:1862   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":1858:1859   */\n      0x00\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1848:1860   */\n      revert\n        /* \"#utility.yul\":1807:1862   */\n    tag_412:\n      pop\n        /* \"#utility.yul\":1881:1901   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":1924:1942   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1913:1943   */\n      dup2\n      gt\n        /* \"#utility.yul\":1910:1960   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":1956:1957   */\n      0x00\n        /* \"#utility.yul\":1953:1954   */\n      0x00\n        /* \"#utility.yul\":1946:1958   */\n      revert\n        /* \"#utility.yul\":1910:1960   */\n    tag_413:\n        /* \"#utility.yul\":1993:1997   */\n      0x20\n        /* \"#utility.yul\":1985:1991   */\n      dup4\n        /* \"#utility.yul\":1981:1998   */\n      add\n        /* \"#utility.yul\":1969:1998   */\n      swap2\n      pop\n        /* \"#utility.yul\":2045:2048   */\n      dup4\n        /* \"#utility.yul\":2038:2042   */\n      0x20\n        /* \"#utility.yul\":2029:2035   */\n      dup3\n        /* \"#utility.yul\":2021:2027   */\n      dup6\n        /* \"#utility.yul\":2017:2036   */\n      add\n        /* \"#utility.yul\":2013:2043   */\n      add\n        /* \"#utility.yul\":2010:2049   */\n      gt\n        /* \"#utility.yul\":2007:2066   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":2062:2063   */\n      0x00\n        /* \"#utility.yul\":2059:2060   */\n      0x00\n        /* \"#utility.yul\":2052:2064   */\n      revert\n        /* \"#utility.yul\":2007:2066   */\n    tag_414:\n        /* \"#utility.yul\":1725:2072   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2077:3024   */\n    tag_49:\n        /* \"#utility.yul\":2185:2191   */\n      0x00\n        /* \"#utility.yul\":2193:2199   */\n      0x00\n        /* \"#utility.yul\":2201:2207   */\n      0x00\n        /* \"#utility.yul\":2209:2215   */\n      0x00\n        /* \"#utility.yul\":2217:2223   */\n      0x00\n        /* \"#utility.yul\":2225:2231   */\n      0x00\n        /* \"#utility.yul\":2278:2281   */\n      0x80\n        /* \"#utility.yul\":2266:2275   */\n      dup8\n        /* \"#utility.yul\":2257:2264   */\n      dup10\n        /* \"#utility.yul\":2253:2276   */\n      sub\n        /* \"#utility.yul\":2249:2282   */\n      slt\n        /* \"#utility.yul\":2246:2299   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":2295:2296   */\n      0x00\n        /* \"#utility.yul\":2292:2293   */\n      0x00\n        /* \"#utility.yul\":2285:2297   */\n      revert\n        /* \"#utility.yul\":2246:2299   */\n    tag_416:\n        /* \"#utility.yul\":2340:2363   */\n      dup7\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2460:2462   */\n      0x20\n        /* \"#utility.yul\":2445:2463   */\n      dup8\n      add\n        /* \"#utility.yul\":2432:2464   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":2541:2543   */\n      0x40\n        /* \"#utility.yul\":2526:2544   */\n      dup8\n      add\n        /* \"#utility.yul\":2513:2545   */\n      calldataload\n        /* \"#utility.yul\":2568:2586   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2557:2587   */\n      dup2\n      gt\n        /* \"#utility.yul\":2554:2604   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":2600:2601   */\n      0x00\n        /* \"#utility.yul\":2597:2598   */\n      0x00\n        /* \"#utility.yul\":2590:2602   */\n      revert\n        /* \"#utility.yul\":2554:2604   */\n    tag_417:\n        /* \"#utility.yul\":2639:2697   */\n      tag_418\n        /* \"#utility.yul\":2689:2696   */\n      dup10\n        /* \"#utility.yul\":2680:2686   */\n      dup3\n        /* \"#utility.yul\":2669:2678   */\n      dup11\n        /* \"#utility.yul\":2665:2687   */\n      add\n        /* \"#utility.yul\":2639:2697   */\n      tag_397\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":2716:2724   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":2613:2697   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":2804:2806   */\n      0x60\n        /* \"#utility.yul\":2789:2807   */\n      dup8\n      add\n        /* \"#utility.yul\":2776:2808   */\n      calldataload\n        /* \"#utility.yul\":2833:2851   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2820:2852   */\n      dup2\n      gt\n        /* \"#utility.yul\":2817:2869   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":2865:2866   */\n      0x00\n        /* \"#utility.yul\":2862:2863   */\n      0x00\n        /* \"#utility.yul\":2855:2867   */\n      revert\n        /* \"#utility.yul\":2817:2869   */\n    tag_419:\n        /* \"#utility.yul\":2904:2964   */\n      tag_420\n        /* \"#utility.yul\":2956:2963   */\n      dup10\n        /* \"#utility.yul\":2945:2953   */\n      dup3\n        /* \"#utility.yul\":2934:2943   */\n      dup11\n        /* \"#utility.yul\":2930:2954   */\n      add\n        /* \"#utility.yul\":2904:2964   */\n      tag_397\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":2077:3024   */\n      swap8\n      swap11\n      swap7\n      swap10\n      pop\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":2983:2991   */\n      swap4\n      swap5\n        /* \"#utility.yul\":2077:3024   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3029:3183   */\n    tag_398:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3108:3113   */\n      dup2\n        /* \"#utility.yul\":3104:3158   */\n      and\n        /* \"#utility.yul\":3097:3102   */\n      dup2\n        /* \"#utility.yul\":3094:3159   */\n      eq\n        /* \"#utility.yul\":3084:3177   */\n      tag_178\n      jumpi\n        /* \"#utility.yul\":3173:3174   */\n      0x00\n        /* \"#utility.yul\":3170:3171   */\n      0x00\n        /* \"#utility.yul\":3163:3175   */\n      revert\n        /* \"#utility.yul\":3188:4057   */\n    tag_56:\n        /* \"#utility.yul\":3298:3304   */\n      0x00\n        /* \"#utility.yul\":3306:3312   */\n      0x00\n        /* \"#utility.yul\":3314:3320   */\n      0x00\n        /* \"#utility.yul\":3322:3328   */\n      0x00\n        /* \"#utility.yul\":3330:3336   */\n      0x00\n        /* \"#utility.yul\":3338:3344   */\n      0x00\n        /* \"#utility.yul\":3346:3352   */\n      0x00\n        /* \"#utility.yul\":3399:3402   */\n      0xe0\n        /* \"#utility.yul\":3387:3396   */\n      dup9\n        /* \"#utility.yul\":3378:3385   */\n      dup11\n        /* \"#utility.yul\":3374:3397   */\n      sub\n        /* \"#utility.yul\":3370:3403   */\n      slt\n        /* \"#utility.yul\":3367:3420   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":3416:3417   */\n      0x00\n        /* \"#utility.yul\":3413:3414   */\n      0x00\n        /* \"#utility.yul\":3406:3418   */\n      revert\n        /* \"#utility.yul\":3367:3420   */\n    tag_424:\n        /* \"#utility.yul\":3455:3464   */\n      dup8\n        /* \"#utility.yul\":3442:3465   */\n      calldataload\n        /* \"#utility.yul\":3474:3505   */\n      tag_425\n        /* \"#utility.yul\":3499:3504   */\n      dup2\n        /* \"#utility.yul\":3474:3505   */\n      tag_398\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3524:3529   */\n      swap7\n      pop\n        /* \"#utility.yul\":3581:3583   */\n      0x20\n        /* \"#utility.yul\":3566:3584   */\n      dup9\n      add\n        /* \"#utility.yul\":3553:3585   */\n      calldataload\n        /* \"#utility.yul\":3594:3627   */\n      tag_426\n        /* \"#utility.yul\":3553:3585   */\n      dup2\n        /* \"#utility.yul\":3594:3627   */\n      tag_398\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3646:3653   */\n      swap6\n      pop\n        /* \"#utility.yul\":3705:3707   */\n      0x40\n        /* \"#utility.yul\":3690:3708   */\n      dup9\n      add\n        /* \"#utility.yul\":3677:3709   */\n      calldataload\n        /* \"#utility.yul\":3718:3751   */\n      tag_427\n        /* \"#utility.yul\":3677:3709   */\n      dup2\n        /* \"#utility.yul\":3718:3751   */\n      tag_398\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3770:3777   */\n      swap5\n      pop\n        /* \"#utility.yul\":3850:3852   */\n      0x60\n        /* \"#utility.yul\":3835:3853   */\n      dup9\n      add\n        /* \"#utility.yul\":3822:3854   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":3899:3937   */\n      tag_428\n        /* \"#utility.yul\":3932:3935   */\n      0x80\n        /* \"#utility.yul\":3917:3936   */\n      dup10\n      add\n        /* \"#utility.yul\":3899:3937   */\n      tag_396\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3889:3937   */\n      swap3\n      pop\n        /* \"#utility.yul\":3956:3994   */\n      tag_429\n        /* \"#utility.yul\":3989:3992   */\n      0xa0\n        /* \"#utility.yul\":3978:3987   */\n      dup10\n        /* \"#utility.yul\":3974:3993   */\n      add\n        /* \"#utility.yul\":3956:3994   */\n      tag_396\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":3946:3994   */\n      swap2\n      pop\n        /* \"#utility.yul\":4013:4051   */\n      tag_430\n        /* \"#utility.yul\":4046:4049   */\n      0xc0\n        /* \"#utility.yul\":4035:4044   */\n      dup10\n        /* \"#utility.yul\":4031:4050   */\n      add\n        /* \"#utility.yul\":4013:4051   */\n      tag_396\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":4003:4051   */\n      swap1\n      pop\n        /* \"#utility.yul\":3188:4057   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4244:4752   */\n    tag_64:\n        /* \"#utility.yul\":4321:4327   */\n      0x00\n        /* \"#utility.yul\":4329:4335   */\n      0x00\n        /* \"#utility.yul\":4337:4343   */\n      0x00\n        /* \"#utility.yul\":4390:4392   */\n      0x60\n        /* \"#utility.yul\":4378:4387   */\n      dup5\n        /* \"#utility.yul\":4369:4376   */\n      dup7\n        /* \"#utility.yul\":4365:4388   */\n      sub\n        /* \"#utility.yul\":4361:4393   */\n      slt\n        /* \"#utility.yul\":4358:4410   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":4406:4407   */\n      0x00\n        /* \"#utility.yul\":4403:4404   */\n      0x00\n        /* \"#utility.yul\":4396:4408   */\n      revert\n        /* \"#utility.yul\":4358:4410   */\n    tag_433:\n        /* \"#utility.yul\":4445:4454   */\n      dup4\n        /* \"#utility.yul\":4432:4455   */\n      calldataload\n        /* \"#utility.yul\":4464:4495   */\n      tag_434\n        /* \"#utility.yul\":4489:4494   */\n      dup2\n        /* \"#utility.yul\":4464:4495   */\n      tag_398\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":4514:4519   */\n      swap3\n      pop\n        /* \"#utility.yul\":4571:4573   */\n      0x20\n        /* \"#utility.yul\":4556:4574   */\n      dup5\n      add\n        /* \"#utility.yul\":4543:4575   */\n      calldataload\n        /* \"#utility.yul\":4584:4617   */\n      tag_435\n        /* \"#utility.yul\":4543:4575   */\n      dup2\n        /* \"#utility.yul\":4584:4617   */\n      tag_398\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":4244:4752   */\n      swap3\n      swap6\n        /* \"#utility.yul\":4636:4643   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4716:4718   */\n      0x40\n        /* \"#utility.yul\":4701:4719   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4688:4720   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":4244:4752   */\n      jump\t// out\n        /* \"#utility.yul\":4988:5235   */\n    tag_72:\n        /* \"#utility.yul\":5047:5053   */\n      0x00\n        /* \"#utility.yul\":5100:5102   */\n      0x20\n        /* \"#utility.yul\":5088:5097   */\n      dup3\n        /* \"#utility.yul\":5079:5086   */\n      dup5\n        /* \"#utility.yul\":5075:5098   */\n      sub\n        /* \"#utility.yul\":5071:5103   */\n      slt\n        /* \"#utility.yul\":5068:5120   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":5116:5117   */\n      0x00\n        /* \"#utility.yul\":5113:5114   */\n      0x00\n        /* \"#utility.yul\":5106:5118   */\n      revert\n        /* \"#utility.yul\":5068:5120   */\n    tag_438:\n        /* \"#utility.yul\":5155:5164   */\n      dup2\n        /* \"#utility.yul\":5142:5165   */\n      calldataload\n        /* \"#utility.yul\":5174:5205   */\n      tag_439\n        /* \"#utility.yul\":5199:5204   */\n      dup2\n        /* \"#utility.yul\":5174:5205   */\n      tag_398\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":5224:5229   */\n      swap4\n        /* \"#utility.yul\":4988:5235   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5240:5607   */\n    tag_77:\n        /* \"#utility.yul\":5308:5314   */\n      0x00\n        /* \"#utility.yul\":5316:5322   */\n      0x00\n        /* \"#utility.yul\":5369:5371   */\n      0x40\n        /* \"#utility.yul\":5357:5366   */\n      dup4\n        /* \"#utility.yul\":5348:5355   */\n      dup6\n        /* \"#utility.yul\":5344:5367   */\n      sub\n        /* \"#utility.yul\":5340:5372   */\n      slt\n        /* \"#utility.yul\":5337:5389   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":5385:5386   */\n      0x00\n        /* \"#utility.yul\":5382:5383   */\n      0x00\n        /* \"#utility.yul\":5375:5387   */\n      revert\n        /* \"#utility.yul\":5337:5389   */\n    tag_441:\n        /* \"#utility.yul\":5424:5433   */\n      dup3\n        /* \"#utility.yul\":5411:5434   */\n      calldataload\n        /* \"#utility.yul\":5443:5474   */\n      tag_442\n        /* \"#utility.yul\":5468:5473   */\n      dup2\n        /* \"#utility.yul\":5443:5474   */\n      tag_398\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":5493:5498   */\n      swap5\n        /* \"#utility.yul\":5571:5573   */\n      0x20\n        /* \"#utility.yul\":5556:5574   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":5543:5575   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5240:5607   */\n      jump\t// out\n        /* \"#utility.yul\":6839:6966   */\n    tag_399:\n        /* \"#utility.yul\":6900:6910   */\n      0x4e487b71\n        /* \"#utility.yul\":6895:6898   */\n      0xe0\n        /* \"#utility.yul\":6891:6911   */\n      shl\n        /* \"#utility.yul\":6888:6889   */\n      0x00\n        /* \"#utility.yul\":6881:6912   */\n      mstore\n        /* \"#utility.yul\":6931:6935   */\n      0x11\n        /* \"#utility.yul\":6928:6929   */\n      0x04\n        /* \"#utility.yul\":6921:6936   */\n      mstore\n        /* \"#utility.yul\":6955:6959   */\n      0x24\n        /* \"#utility.yul\":6952:6953   */\n      0x00\n        /* \"#utility.yul\":6945:6960   */\n      revert\n        /* \"#utility.yul\":6971:7186   */\n    tag_104:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":7039:7073   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":7075:7109   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":7035:7110   */\n      add\n      swap1\n        /* \"#utility.yul\":7122:7157   */\n      dup2\n      gt\n        /* \"#utility.yul\":7119:7180   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":7160:7178   */\n      tag_449\n      tag_399\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":6971:7186   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7191:7318   */\n    tag_110:\n        /* \"#utility.yul\":7252:7262   */\n      0x4e487b71\n        /* \"#utility.yul\":7247:7250   */\n      0xe0\n        /* \"#utility.yul\":7243:7263   */\n      shl\n        /* \"#utility.yul\":7240:7241   */\n      0x00\n        /* \"#utility.yul\":7233:7264   */\n      mstore\n        /* \"#utility.yul\":7283:7287   */\n      0x32\n        /* \"#utility.yul\":7280:7281   */\n      0x04\n        /* \"#utility.yul\":7273:7288   */\n      mstore\n        /* \"#utility.yul\":7307:7311   */\n      0x24\n        /* \"#utility.yul\":7304:7305   */\n      0x00\n        /* \"#utility.yul\":7297:7312   */\n      revert\n        /* \"#utility.yul\":7323:7451   */\n    tag_113:\n        /* \"#utility.yul\":7390:7399   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":7411:7422   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":7408:7445   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":7425:7443   */\n      tag_449\n      tag_399\n      jump\t// in\n        /* \"#utility.yul\":10108:10276   */\n    tag_230:\n        /* \"#utility.yul\":10181:10190   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":10212:10221   */\n      dup2\n      iszero\n        /* \"#utility.yul\":10229:10244   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":10223:10245   */\n      dup5\n      eq\n        /* \"#utility.yul\":10209:10246   */\n      or\n        /* \"#utility.yul\":10199:10270   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":10250:10268   */\n      tag_449\n      tag_399\n      jump\t// in\n        /* \"#utility.yul\":10281:10498   */\n    tag_232:\n        /* \"#utility.yul\":10321:10322   */\n      0x00\n        /* \"#utility.yul\":10347:10348   */\n      dup3\n        /* \"#utility.yul\":10337:10469   */\n      tag_465\n      jumpi\n        /* \"#utility.yul\":10391:10401   */\n      0x4e487b71\n        /* \"#utility.yul\":10386:10389   */\n      0xe0\n        /* \"#utility.yul\":10382:10402   */\n      shl\n        /* \"#utility.yul\":10379:10380   */\n      0x00\n        /* \"#utility.yul\":10372:10403   */\n      mstore\n        /* \"#utility.yul\":10426:10430   */\n      0x12\n        /* \"#utility.yul\":10423:10424   */\n      0x04\n        /* \"#utility.yul\":10416:10431   */\n      mstore\n        /* \"#utility.yul\":10454:10458   */\n      0x24\n        /* \"#utility.yul\":10451:10452   */\n      0x00\n        /* \"#utility.yul\":10444:10459   */\n      revert\n        /* \"#utility.yul\":10337:10469   */\n    tag_465:\n      pop\n        /* \"#utility.yul\":10483:10492   */\n      div\n      swap1\n        /* \"#utility.yul\":10281:10498   */\n      jump\t// out\n        /* \"#utility.yul\":10503:10780   */\n    tag_240:\n        /* \"#utility.yul\":10570:10576   */\n      0x00\n        /* \"#utility.yul\":10623:10625   */\n      0x20\n        /* \"#utility.yul\":10611:10620   */\n      dup3\n        /* \"#utility.yul\":10602:10609   */\n      dup5\n        /* \"#utility.yul\":10598:10621   */\n      sub\n        /* \"#utility.yul\":10594:10626   */\n      slt\n        /* \"#utility.yul\":10591:10643   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":10639:10640   */\n      0x00\n        /* \"#utility.yul\":10636:10637   */\n      0x00\n        /* \"#utility.yul\":10629:10641   */\n      revert\n        /* \"#utility.yul\":10591:10643   */\n    tag_467:\n        /* \"#utility.yul\":10671:10680   */\n      dup2\n        /* \"#utility.yul\":10665:10681   */\n      mload\n        /* \"#utility.yul\":10724:10729   */\n      dup1\n        /* \"#utility.yul\":10717:10730   */\n      iszero\n        /* \"#utility.yul\":10710:10731   */\n      iszero\n        /* \"#utility.yul\":10703:10708   */\n      dup2\n        /* \"#utility.yul\":10700:10732   */\n      eq\n        /* \"#utility.yul\":10690:10750   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":10746:10747   */\n      0x00\n        /* \"#utility.yul\":10743:10744   */\n      0x00\n        /* \"#utility.yul\":10736:10748   */\n      revert\n        /* \"#utility.yul\":10785:10969   */\n    tag_245:\n        /* \"#utility.yul\":10855:10861   */\n      0x00\n        /* \"#utility.yul\":10908:10910   */\n      0x20\n        /* \"#utility.yul\":10896:10905   */\n      dup3\n        /* \"#utility.yul\":10887:10894   */\n      dup5\n        /* \"#utility.yul\":10883:10906   */\n      sub\n        /* \"#utility.yul\":10879:10911   */\n      slt\n        /* \"#utility.yul\":10876:10928   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":10924:10925   */\n      0x00\n        /* \"#utility.yul\":10921:10922   */\n      0x00\n        /* \"#utility.yul\":10914:10926   */\n      revert\n        /* \"#utility.yul\":10876:10928   */\n    tag_470:\n      pop\n        /* \"#utility.yul\":10947:10963   */\n      mload\n      swap2\n        /* \"#utility.yul\":10785:10969   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10974:11099   */\n    tag_251:\n        /* \"#utility.yul\":11039:11048   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11060:11070   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":11057:11093   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":11073:11091   */\n      tag_449\n      tag_399\n      jump\t// in\n        /* \"#utility.yul\":11603:11738   */\n    tag_260:\n        /* \"#utility.yul\":11642:11645   */\n      0x00\n        /* \"#utility.yul\":11663:11680   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":11660:11703   */\n      tag_477\n      jumpi\n        /* \"#utility.yul\":11683:11701   */\n      tag_477\n      tag_399\n      jump\t// in\n    tag_477:\n      pop\n        /* \"#utility.yul\":11730:11731   */\n      0x01\n        /* \"#utility.yul\":11719:11732   */\n      add\n      swap1\n        /* \"#utility.yul\":11603:11738   */\n      jump\t// out\n        /* \"#utility.yul\":12514:12765   */\n    tag_285:\n        /* \"#utility.yul\":12584:12590   */\n      0x00\n        /* \"#utility.yul\":12637:12639   */\n      0x20\n        /* \"#utility.yul\":12625:12634   */\n      dup3\n        /* \"#utility.yul\":12616:12623   */\n      dup5\n        /* \"#utility.yul\":12612:12635   */\n      sub\n        /* \"#utility.yul\":12608:12640   */\n      slt\n        /* \"#utility.yul\":12605:12657   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":12653:12654   */\n      0x00\n        /* \"#utility.yul\":12650:12651   */\n      0x00\n        /* \"#utility.yul\":12643:12655   */\n      revert\n        /* \"#utility.yul\":12605:12657   */\n    tag_481:\n        /* \"#utility.yul\":12685:12694   */\n      dup2\n        /* \"#utility.yul\":12679:12695   */\n      mload\n        /* \"#utility.yul\":12704:12735   */\n      tag_439\n        /* \"#utility.yul\":12729:12734   */\n      dup2\n        /* \"#utility.yul\":12704:12735   */\n      tag_398\n      jump\t// in\n        /* \"#utility.yul\":15268:15456   */\n    tag_400:\n        /* \"#utility.yul\":15347:15360   */\n      dup1\n      mload\n        /* \"#utility.yul\":15400:15430   */\n      0xffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15389:15431   */\n      dup2\n      and\n        /* \"#utility.yul\":15379:15432   */\n      dup2\n      eq\n        /* \"#utility.yul\":15369:15450   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":15446:15447   */\n      0x00\n        /* \"#utility.yul\":15443:15444   */\n      0x00\n        /* \"#utility.yul\":15436:15448   */\n      revert\n        /* \"#utility.yul\":15461:15911   */\n    tag_358:\n        /* \"#utility.yul\":15548:15554   */\n      0x00\n        /* \"#utility.yul\":15556:15562   */\n      0x00\n        /* \"#utility.yul\":15564:15570   */\n      0x00\n        /* \"#utility.yul\":15617:15619   */\n      0x60\n        /* \"#utility.yul\":15605:15614   */\n      dup5\n        /* \"#utility.yul\":15596:15603   */\n      dup7\n        /* \"#utility.yul\":15592:15615   */\n      sub\n        /* \"#utility.yul\":15588:15620   */\n      slt\n        /* \"#utility.yul\":15585:15637   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":15633:15634   */\n      0x00\n        /* \"#utility.yul\":15630:15631   */\n      0x00\n        /* \"#utility.yul\":15623:15635   */\n      revert\n        /* \"#utility.yul\":15585:15637   */\n    tag_492:\n        /* \"#utility.yul\":15656:15696   */\n      tag_493\n        /* \"#utility.yul\":15686:15695   */\n      dup5\n        /* \"#utility.yul\":15656:15696   */\n      tag_400\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":15646:15696   */\n      swap3\n      pop\n        /* \"#utility.yul\":15715:15764   */\n      tag_494\n        /* \"#utility.yul\":15760:15762   */\n      0x20\n        /* \"#utility.yul\":15749:15758   */\n      dup6\n        /* \"#utility.yul\":15745:15763   */\n      add\n        /* \"#utility.yul\":15715:15764   */\n      tag_400\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":15705:15764   */\n      swap2\n      pop\n        /* \"#utility.yul\":15807:15809   */\n      0x40\n        /* \"#utility.yul\":15796:15805   */\n      dup5\n        /* \"#utility.yul\":15792:15810   */\n      add\n        /* \"#utility.yul\":15786:15811   */\n      mload\n        /* \"#utility.yul\":15851:15861   */\n      0xffffffff\n        /* \"#utility.yul\":15844:15849   */\n      dup2\n        /* \"#utility.yul\":15840:15862   */\n      and\n        /* \"#utility.yul\":15833:15838   */\n      dup2\n        /* \"#utility.yul\":15830:15863   */\n      eq\n        /* \"#utility.yul\":15820:15881   */\n      tag_495\n      jumpi\n        /* \"#utility.yul\":15877:15878   */\n      0x00\n        /* \"#utility.yul\":15874:15875   */\n      0x00\n        /* \"#utility.yul\":15867:15879   */\n      revert\n        /* \"#utility.yul\":15820:15881   */\n    tag_495:\n        /* \"#utility.yul\":15900:15905   */\n      dup1\n        /* \"#utility.yul\":15890:15905   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":15461:15911   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":15916:16189   */\n    tag_390:\n        /* \"#utility.yul\":15984:15990   */\n      0x00\n        /* \"#utility.yul\":16037:16039   */\n      0x20\n        /* \"#utility.yul\":16025:16034   */\n      dup3\n        /* \"#utility.yul\":16016:16023   */\n      dup5\n        /* \"#utility.yul\":16012:16035   */\n      sub\n        /* \"#utility.yul\":16008:16040   */\n      slt\n        /* \"#utility.yul\":16005:16057   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":16053:16054   */\n      0x00\n        /* \"#utility.yul\":16050:16051   */\n      0x00\n        /* \"#utility.yul\":16043:16055   */\n      revert\n        /* \"#utility.yul\":16005:16057   */\n    tag_497:\n        /* \"#utility.yul\":16085:16094   */\n      dup2\n        /* \"#utility.yul\":16079:16095   */\n      mload\n        /* \"#utility.yul\":16135:16139   */\n      0xff\n        /* \"#utility.yul\":16128:16133   */\n      dup2\n        /* \"#utility.yul\":16124:16140   */\n      and\n        /* \"#utility.yul\":16117:16122   */\n      dup2\n        /* \"#utility.yul\":16114:16141   */\n      eq\n        /* \"#utility.yul\":16104:16159   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":16155:16156   */\n      0x00\n        /* \"#utility.yul\":16152:16153   */\n      0x00\n        /* \"#utility.yul\":16145:16157   */\n      revert\n        /* \"#utility.yul\":16194:16856   */\n    tag_392:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16435:16441   */\n      dup7\n        /* \"#utility.yul\":16431:16486   */\n      and\n        /* \"#utility.yul\":16420:16429   */\n      dup2\n        /* \"#utility.yul\":16413:16487   */\n      mstore\n        /* \"#utility.yul\":16523:16529   */\n      dup5\n        /* \"#utility.yul\":16518:16520   */\n      0x20\n        /* \"#utility.yul\":16507:16516   */\n      dup3\n        /* \"#utility.yul\":16503:16521   */\n      add\n        /* \"#utility.yul\":16496:16530   */\n      mstore\n        /* \"#utility.yul\":16578:16582   */\n      0xff\n        /* \"#utility.yul\":16570:16576   */\n      dup5\n        /* \"#utility.yul\":16566:16583   */\n      and\n        /* \"#utility.yul\":16561:16563   */\n      0x40\n        /* \"#utility.yul\":16550:16559   */\n      dup3\n        /* \"#utility.yul\":16546:16564   */\n      add\n        /* \"#utility.yul\":16539:16584   */\n      mstore\n        /* \"#utility.yul\":16620:16623   */\n      0x80\n        /* \"#utility.yul\":16615:16617   */\n      0x60\n        /* \"#utility.yul\":16604:16613   */\n      dup3\n        /* \"#utility.yul\":16600:16618   */\n      add\n        /* \"#utility.yul\":16593:16624   */\n      mstore\n        /* \"#utility.yul\":16661:16667   */\n      dup2\n        /* \"#utility.yul\":16655:16658   */\n      0x80\n        /* \"#utility.yul\":16644:16653   */\n      dup3\n        /* \"#utility.yul\":16640:16659   */\n      add\n        /* \"#utility.yul\":16633:16668   */\n      mstore\n        /* \"#utility.yul\":16719:16725   */\n      dup2\n        /* \"#utility.yul\":16711:16717   */\n      dup4\n        /* \"#utility.yul\":16705:16708   */\n      0xa0\n        /* \"#utility.yul\":16694:16703   */\n      dup4\n        /* \"#utility.yul\":16690:16709   */\n      add\n        /* \"#utility.yul\":16677:16726   */\n      calldatacopy\n        /* \"#utility.yul\":16776:16777   */\n      0x00\n        /* \"#utility.yul\":16746:16768   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":16770:16773   */\n      0xa0\n        /* \"#utility.yul\":16742:16774   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":16735:16778   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":16839:16841   */\n      0x1f\n        /* \"#utility.yul\":16818:16833   */\n      swap1\n      swap3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":16814:16843   */\n      and\n        /* \"#utility.yul\":16799:16844   */\n      add\n        /* \"#utility.yul\":16795:16850   */\n      add\n      swap5\n        /* \"#utility.yul\":16194:16856   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122032677d72e61bc7ff0411e07688cc24b1a1c0291d76a62d80e4cf4107394475eb64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1348": {
									"entryPoint": null,
									"id": 1348,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_831": {
									"entryPoint": null,
									"id": 831,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 356,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:514:15",
										"nodeType": "YulBlock",
										"src": "0:514:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:15",
													"nodeType": "YulBlock",
													"src": "95:209:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:15",
																"nodeType": "YulBlock",
																"src": "141:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:15",
																					"nodeType": "YulLiteral",
																					"src": "150:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:15",
																					"nodeType": "YulLiteral",
																					"src": "153:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:15"
																			},
																			"nativeSrc": "143:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:15"
																		},
																		"nativeSrc": "143:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:15"
																		},
																		"nativeSrc": "112:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:15",
																		"nodeType": "YulLiteral",
																		"src": "137:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:15"
																},
																"nativeSrc": "108:32:15",
																"nodeType": "YulFunctionCall",
																"src": "108:32:15"
															},
															"nativeSrc": "105:52:15",
															"nodeType": "YulIf",
															"src": "105:52:15"
														},
														{
															"nativeSrc": "166:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:15"
																},
																"nativeSrc": "179:16:15",
																"nodeType": "YulFunctionCall",
																"src": "179:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:15",
																	"nodeType": "YulTypedName",
																	"src": "170:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:15",
																"nodeType": "YulBlock",
																"src": "258:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:15",
																					"nodeType": "YulLiteral",
																					"src": "267:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:15",
																					"nodeType": "YulLiteral",
																					"src": "270:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:15"
																			},
																			"nativeSrc": "260:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:15"
																		},
																		"nativeSrc": "260:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:15",
																										"nodeType": "YulLiteral",
																										"src": "243:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:15",
																										"nodeType": "YulLiteral",
																										"src": "248:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:15"
																								},
																								"nativeSrc": "239:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:15",
																								"nodeType": "YulLiteral",
																								"src": "252:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:15"
																						},
																						"nativeSrc": "235:19:15",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:15"
																				},
																				"nativeSrc": "224:31:15",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:15"
																		},
																		"nativeSrc": "214:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:15"
																},
																"nativeSrc": "207:50:15",
																"nodeType": "YulFunctionCall",
																"src": "207:50:15"
															},
															"nativeSrc": "204:70:15",
															"nodeType": "YulIf",
															"src": "204:70:15"
														},
														{
															"nativeSrc": "283:15:15",
															"nodeType": "YulAssignment",
															"src": "283:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:15",
																"nodeType": "YulIdentifier",
																"src": "293:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:15",
														"nodeType": "YulTypedName",
														"src": "61:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:15",
														"nodeType": "YulTypedName",
														"src": "72:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:15",
														"nodeType": "YulTypedName",
														"src": "84:6:15",
														"type": ""
													}
												],
												"src": "14:290:15"
											},
											{
												"body": {
													"nativeSrc": "410:102:15",
													"nodeType": "YulBlock",
													"src": "410:102:15",
													"statements": [
														{
															"nativeSrc": "420:26:15",
															"nodeType": "YulAssignment",
															"src": "420:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "432:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:2:15",
																		"nodeType": "YulLiteral",
																		"src": "443:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:15"
																},
																"nativeSrc": "428:18:15",
																"nodeType": "YulFunctionCall",
																"src": "428:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "420:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "462:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "477:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "493:3:15",
																								"nodeType": "YulLiteral",
																								"src": "493:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "498:1:15",
																								"nodeType": "YulLiteral",
																								"src": "498:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "489:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:15"
																						},
																						"nativeSrc": "489:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "502:1:15",
																						"nodeType": "YulLiteral",
																						"src": "502:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "485:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:15"
																				},
																				"nativeSrc": "485:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "473:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:15"
																		},
																		"nativeSrc": "473:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "455:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:15"
																},
																"nativeSrc": "455:51:15",
																"nodeType": "YulFunctionCall",
																"src": "455:51:15"
															},
															"nativeSrc": "455:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "455:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "309:203:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "379:9:15",
														"nodeType": "YulTypedName",
														"src": "379:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "390:6:15",
														"nodeType": "YulTypedName",
														"src": "390:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "401:4:15",
														"nodeType": "YulTypedName",
														"src": "401:4:15",
														"type": ""
													}
												],
												"src": "309:203:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040526001600455348015610014575f5ffd5b506040516124ad3803806124ad833981016040819052610033916101b3565b338061005857604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61006181610164565b5060018080556001600160a01b0391821660809081526040805160c0810182525f808252602082018181529282018181526060830182815294830182815260a0840183815260028054988901815590935292519351938716600160a01b6001600160601b039586168102919091177f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace600390980297880155905194519487169484168102949094177f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf860155905190519416931602919091177f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0909101556101e0565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156101c3575f5ffd5b81516001600160a01b03811681146101d9575f5ffd5b9392505050565b6080516122a76102065f395f81816102ad01528181610e9b0152610f4e01526122a75ff3fe608060405234801561000f575f5ffd5b5060043610610110575f3560e01c8063715018a61161009e578063a9fc507b1161006e578063a9fc507b1461028d578063b4ac6860146102a0578063cc5c56dc146102a8578063ce325bf8146102cf578063f2fde38b14610327575f5ffd5b8063715018a61461022f57806374ee6b62146102375780638da5cb5b1461024a578063954821b61461026e575f5ffd5b806325d5971f116100e457806325d5971f146101c2578063379607f5146101d55780633b5dd047146101e85780634f44daa9146101fb57806369ca431b1461020e575f5ffd5b806221578414610114578063039ba6b714610129578063068bcd8d1461013c57806321241dfe146101a0575b5f5ffd5b610127610122366004611e46565b61033a565b005b610127610137366004611e78565b61048c565b61014f61014a366004611e46565b6105cf565b604080516001600160a01b039788168152958716602087015293909516928401929092526001600160601b039081166060840152908116608083015290911660a082015260c0015b60405180910390f35b6101aa6234bc0081565b6040516001600160601b039091168152602001610197565b6101276101d0366004611e46565b610783565b6101276101e3366004611e46565b6109d9565b6101276101f6366004611ee7565b610c9a565b610127610209366004611e78565b6111fc565b61022161021c366004611f7d565b611336565b604051908152602001610197565b61012761164a565b610127610245366004611ffd565b61165d565b5f546001600160a01b03165b6040516001600160a01b039091168152602001610197565b61022161027c36600461203b565b60056020525f908152604090205481565b61012761029b36600461205d565b6117a1565b610221611860565b6102567f000000000000000000000000000000000000000000000000000000000000000081565b6102e26102dd366004611e46565b611876565b604080516001600160a01b03909716875260208701959095526001600160601b03909316938501939093526060840152608083019190915260a082015260c001610197565b61012761033536600461203b565b611929565b610342611963565b805f81118015610353575060045481105b6103a45760405162461bcd60e51b815260206004820152601b60248201527f4c505374616b696e673a496e76616c6964205374616b6520494421000000000060448201526064015b60405180910390fd5b5f82815260036020526040902060018101546103d4906234bc0090600160a01b90046001600160601b031661209b565b6001600160601b0316426001600160601b031610156103f1575f5ffd5b5f6002825f015481548110610408576104086120c0565b5f918252602080832060038681015493020160018101546001600160a01b0316845260059091526040832080549194509192906104469084906120d4565b90915550505f600383015581546040518581527f085cf309fcbacaf1ee2b300f62e8586a0661e41c7f318003e9aab792be89980b9060200160405180910390a250505050565b610494611963565b815f811180156104a5575060025481105b6104f15760405162461bcd60e51b815260206004820152601a60248201527f4c505374616b696e673a496e76616c696420506f6f6c20494421000000000000604482015260640161039b565b620186a0826001600160601b0316111561054d5760405162461bcd60e51b815260206004820152601a60248201527f4c505374616b696e673a6d617820617079206973203130303025000000000000604482015260640161039b565b8160028481548110610561576105616120c0565b5f9182526020918290206003919091020160010180546001600160a01b0316600160a01b6001600160601b0394851602179055604051918416825284917f09a2c3c653a42f5c64bbfdf07224d8e0d6526460f44e520ac49bae23804e18e891015b60405180910390a2505050565b5f5f5f5f5f5f865f811180156105e6575060025481105b6106325760405162461bcd60e51b815260206004820152601a60248201527f4c505374616b696e673a496e76616c696420506f6f6c20494421000000000000604482015260640161039b565b60028881548110610645576106456120c0565b5f918252602090912060039091020154600280546001600160a01b03909216918a908110610675576106756120c0565b905f5260205f2090600302016001015f9054906101000a90046001600160a01b031660028a815481106106aa576106aa6120c0565b905f5260205f2090600302016002015f9054906101000a90046001600160a01b031660028b815481106106df576106df6120c0565b905f5260205f2090600302015f0160149054906101000a90046001600160601b031660028c81548110610714576107146120c0565b905f5260205f20906003020160010160149054906101000a90046001600160601b031660028d8154811061074a5761074a6120c0565b905f5260205f20906003020160020160149054906101000a90046001600160601b03169650965096509650965096505091939550919395565b61078b61198f565b805f8111801561079c575060045481105b6107e85760405162461bcd60e51b815260206004820152601b60248201527f4c505374616b696e673a496e76616c6964205374616b65204944210000000000604482015260640161039b565b5f82815260036020526040902060018101546001600160a01b0316331461085b5760405162461bcd60e51b815260206004820152602160248201527f4c505374616b696e673a43616c6c6572206973206e6f7420746865206f776e656044820152603960f91b606482015260840161039b565b5f6002825f015481548110610872576108726120c0565b5f9182526020918290206040805160c081018252600390930290910180546001600160a01b0380821685526001600160601b03600160a01b92839004811696860196909652600180840154808316958701959095529382900486166060860152600290920154918216608085015290819004841660a0840152908501549193509004166108fc4290565b6001600160601b031610156109685760405162461bcd60e51b815260206004820152602c60248201527f4c505374616b696e673a4561726c79205769746864726177616c206973206e6f60448201526b74207065726d69747465642160a01b606482015260840161039b565b6002820154156109ca5761098d33600284015483516001600160a01b031691906119b9565b5f600283015581546040518581527f3db0ca701d7c1106534c6003e5d65dae65a9cb891ad5bbb9be39c091df79d87e906020015b60405180910390a25b5050506109d660018055565b50565b6109e161198f565b805f811180156109f2575060045481105b610a3e5760405162461bcd60e51b815260206004820152601b60248201527f4c505374616b696e673a496e76616c6964205374616b65204944210000000000604482015260640161039b565b5f82815260036020526040902060018101546001600160a01b03163314610ab15760405162461bcd60e51b815260206004820152602160248201527f4c505374616b696e673a43616c6c6572206973206e6f7420746865206f776e656044820152603960f91b606482015260840161039b565b5f6002825f015481548110610ac857610ac86120c0565b5f918252602090912060018401546003909202019150600160a01b90046001600160601b0316426001600160601b03161015610b5b5760405162461bcd60e51b815260206004820152602c60248201527f4c505374616b696e673a4561726c79205769746864726177616c206973206e6f60448201526b74207065726d69747465642160a01b606482015260840161039b565b5f826003015411610bae5760405162461bcd60e51b815260206004820152601a60248201527f4c505374616b696e673a4e6f7468696e6720746f20636c61696d000000000000604482015260640161039b565b600282015415610bda57610bd333600284015483546001600160a01b031691906119b9565b5f60028301555b610bf833600384015460018401546001600160a01b031691906119b9565b600382015460018201546001600160a01b03165f9081526005602052604081208054909190610c289084906120d4565b90915550505f600383015581546040518581527f3db0ca701d7c1106534c6003e5d65dae65a9cb891ad5bbb9be39c091df79d87e9060200160405180910390a281546040518581527f4d7828f2aa36030cc63cdea79ec646099aa121d019f1a90edb55078939fb84ea906020016109c1565b610ca261198f565b855f81118015610cb3575060025481105b610cff5760405162461bcd60e51b815260206004820152601a60248201527f4c505374616b696e673a496e76616c696420506f6f6c20494421000000000000604482015260640161039b565b5f8611610d745760405162461bcd60e51b815260206004820152603160248201527f4c505374616b696e673a7374616b655f616d6f756e74206d757374206265206760448201527f726561746572207468616e207a65726f21000000000000000000000000000000606482015260840161039b565b5f60028881548110610d8857610d886120c0565b905f5260205f20906003020190505f8160010160149054906101000a90046001600160601b03166001600160601b031611610e055760405162461bcd60e51b815260206004820152601960248201527f4c505374616b696e673a506f6f6c206973207061757365642100000000000000604482015260640161039b565b610e1c3382546001600160a01b031690308a611a32565b805460028201545f91610e41916001600160a01b03918216918b91168a8a8a8a611a71565b825460018401549192505f916301e13380916001600160601b03600160a01b9182900481169261271092610e7892910416866120e7565b610e8291906120fe565b610e8c91906120e7565b610e9691906120fe565b90505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638ef1e259336040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610f23573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f47919061211d565b1561102d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639a3bfdf56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fa8573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fcc919061213c565b845460028601549192506301e13380916001600160601b03600160a01b92839004811692612710926110029291900416876120e7565b61100c91906120fe565b61101691906120e7565b61102091906120fe565b61102a9083612153565b91505b83545f90600160a01b90046001600160601b03164261104c919061209b565b90506040518060c001604052808d81526020016110663390565b6001600160a01b03168152602001826001600160601b031681526020018c81526020018481526020018381525060035f60045481526020019081526020015f205f820151815f01556020820151816001015f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a8154816001600160601b0302191690836001600160601b03160217905550606082015181600201556080820151816003015560a082015181600401559050508260055f876001015f9054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020019081526020015f205f8282546111709190612153565b9091555050600454604080519182526001600160601b03831660208301528181018d90526060820185905260808201849052518d9133917fc48192cf3609b4932a8b10a6f09fe1cac38610fdef14eacc15b35c454da0b4c59181900360a00190a360048054905f6111e083612166565b91905055505050505050506111f460018055565b505050505050565b611204611963565b815f81118015611215575060025481105b6112615760405162461bcd60e51b815260206004820152601a60248201527f4c505374616b696e673a496e76616c696420506f6f6c20494421000000000000604482015260640161039b565b620186a0826001600160601b031611156112bd5760405162461bcd60e51b815260206004820181905260248201527f4c505374616b696e673a6d617820626f6e757320617079206973203130303025604482015260640161039b565b81600284815481106112d1576112d16120c0565b5f9182526020918290206003919091020160020180546001600160a01b0316600160a01b6001600160601b0394851602179055604051918416825284917fd3cd184b56b5b95016981fc55484ff8fdf06eb587430055c7ab828a0edc0dc9d91016105c2565b5f61133f611963565b5f846001600160601b0316116113a95760405162461bcd60e51b815260206004820152602960248201527f4c505374616b696e673a6d61747572697479206d75737420626520677265617460448201526806572207468616e20360bc1b606482015260840161039b565b866001600160a01b0316866001600160a01b031663217a4b706040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113ef573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611413919061217e565b6001600160a01b0316146114995760405162461bcd60e51b815260206004820152604160248201527f4c505374616b696e673a726577617264735f746f6b656e206d7573742062652060448201527f657175616c20746f2070726963655f6f7261636c652071756f746520746f6b656064820152603760f91b608482015260a40161039b565b6040805160c0810182526001600160a01b038a811682526001600160601b03878116602084019081528b8316948401948552878216606085019081528b84166080860190815288841660a0870190815260028054600180820183555f83815299519651968916600160a01b9789168802177f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace600390930292830155995194519488169487168602949094177f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf85015591519051951694909316909102929092177f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0909201919091555490916115ad916120d4565b9050876001600160a01b0316896001600160a01b0316827f6b64b7e8b6f4656658efb1c74b7d1bbff6e84d3d7b1cd5ae89fd6cd91de6ef968a89898960405161162694939291906001600160a01b039490941684526001600160601b039283166020850152908216604084015216606082015260800190565b60405180910390a4851561163e5761163e88876117a1565b98975050505050505050565b611652611963565b61165b5f611c41565b565b611665611963565b6001600160a01b0383165f908152600560205260409020546116879082612153565b6040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa1580156116c9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116ed919061213c565b101561173b5760405162461bcd60e51b815260206004820152601560248201527f496e73756666696369656e742062616c616e6365210000000000000000000000604482015260640161039b565b61174f6001600160a01b03841683836119b9565b816001600160a01b0316836001600160a01b03167fe06fab35f3c220725c11d544884aff93ebf67222c8310c487c71f27c844593e88360405161179491815260200190565b60405180910390a3505050565b5f81116118045760405162461bcd60e51b815260206004820152602b60248201527f4c505374616b696e673a616d6f756e74206d757374206265206772656174657260448201526a207468616e207a65726f2160a81b606482015260840161039b565b6118196001600160a01b038316333084611a32565b816001600160a01b03167fac24935fd910bc682b5ccb1a07b718cadf8cf2f6d1404c4f3ddc3662dae40e298260405161185491815260200190565b60405180910390a25050565b6002545f90611871906001906120d4565b905090565b5f5f5f5f5f5f865f8111801561188d575060045481105b6118d95760405162461bcd60e51b815260206004820152601b60248201527f4c505374616b696e673a496e76616c6964205374616b65204944210000000000604482015260640161039b565b5050505f9485525050600360208190526040909320600181015481546002830154958301546004909301546001600160a01b038316979196600160a01b9093046001600160601b03169550919350565b611931611963565b6001600160a01b03811661195a57604051631e4fbdf760e01b81525f600482015260240161039b565b6109d681611c41565b5f546001600160a01b0316331461165b5760405163118cdaa760e01b815233600482015260240161039b565b6002600154036119b257604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6040516001600160a01b03838116602483015260448201839052611a2d91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c9d565b505050565b6040516001600160a01b038481166024830152838116604483015260648201839052611a6b9186918216906323b872dd906084016119e6565b50505050565b5f5f8890505f5f826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611ab4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ad891906121b6565b50915091505f5f611b4a8c866001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b1f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b43919061213c565b8686611d09565b91509150611bba856001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b8d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611bb1919061217e565b828d8b8b611d68565b611c26866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bf9573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c1d919061217e565b848e8e8e611d68565b611c309190612153565b9d9c50505050505050505050505050565b5f80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f5f60205f8451602086015f885af180611cbc576040513d5f823e3d81fd5b50505f513d91508115611cd3578060011415611ce0565b6001600160a01b0384163b155b15611a6b57604051635274afe760e01b81526001600160a01b038516600482015260240161039b565b5f808085611d27886dffffffffffffffffffffffffffff88166120e7565b611d3191906120fe565b90505f86611d4f896dffffffffffffffffffffffffffff88166120e7565b611d5991906120fe565b91989197509095505050505050565b5f836001600160a01b0316636a0892158787896001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611db6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dda9190612202565b87876040518663ffffffff1660e01b8152600401611dfc959493929190612222565b6020604051808303815f875af1158015611e18573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e3c919061213c565b9695505050505050565b5f60208284031215611e56575f5ffd5b5035919050565b80356001600160601b0381168114611e73575f5ffd5b919050565b5f5f60408385031215611e89575f5ffd5b82359150611e9960208401611e5d565b90509250929050565b5f5f83601f840112611eb2575f5ffd5b50813567ffffffffffffffff811115611ec9575f5ffd5b602083019150836020828501011115611ee0575f5ffd5b9250929050565b5f5f5f5f5f5f60808789031215611efc575f5ffd5b8635955060208701359450604087013567ffffffffffffffff811115611f20575f5ffd5b611f2c89828a01611ea2565b909550935050606087013567ffffffffffffffff811115611f4b575f5ffd5b611f5789828a01611ea2565b979a9699509497509295939492505050565b6001600160a01b03811681146109d6575f5ffd5b5f5f5f5f5f5f5f60e0888a031215611f93575f5ffd5b8735611f9e81611f69565b96506020880135611fae81611f69565b95506040880135611fbe81611f69565b945060608801359350611fd360808901611e5d565b9250611fe160a08901611e5d565b9150611fef60c08901611e5d565b905092959891949750929550565b5f5f5f6060848603121561200f575f5ffd5b833561201a81611f69565b9250602084013561202a81611f69565b929592945050506040919091013590565b5f6020828403121561204b575f5ffd5b813561205681611f69565b9392505050565b5f5f6040838503121561206e575f5ffd5b823561207981611f69565b946020939093013593505050565b634e487b7160e01b5f52601160045260245ffd5b6001600160601b0381811683821601908111156120ba576120ba612087565b92915050565b634e487b7160e01b5f52603260045260245ffd5b818103818111156120ba576120ba612087565b80820281158282048414176120ba576120ba612087565b5f8261211857634e487b7160e01b5f52601260045260245ffd5b500490565b5f6020828403121561212d575f5ffd5b81518015158114612056575f5ffd5b5f6020828403121561214c575f5ffd5b5051919050565b808201808211156120ba576120ba612087565b5f6001820161217757612177612087565b5060010190565b5f6020828403121561218e575f5ffd5b815161205681611f69565b80516dffffffffffffffffffffffffffff81168114611e73575f5ffd5b5f5f5f606084860312156121c8575f5ffd5b6121d184612199565b92506121df60208501612199565b9150604084015163ffffffff811681146121f7575f5ffd5b809150509250925092565b5f60208284031215612212575f5ffd5b815160ff81168114612056575f5ffd5b6001600160a01b038616815284602082015260ff8416604082015260806060820152816080820152818360a08301375f81830160a090810191909152601f909201601f1916010194935050505056fea264697066735822122032677d72e61bc7ff0411e07688cc24b1a1c0291d76a62d80e4cf4107394475eb64736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x24AD CODESIZE SUB DUP1 PUSH2 0x24AD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x33 SWAP2 PUSH2 0x1B3 JUMP JUMPDEST CALLER DUP1 PUSH2 0x58 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x61 DUP2 PUSH2 0x164 JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 MSTORE SWAP3 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP3 DUP2 MSTORE SWAP5 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0xA0 DUP5 ADD DUP4 DUP2 MSTORE PUSH1 0x2 DUP1 SLOAD SWAP9 DUP10 ADD DUP2 SSTORE SWAP1 SWAP4 MSTORE SWAP3 MLOAD SWAP4 MLOAD SWAP4 DUP8 AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP6 DUP7 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE PUSH1 0x3 SWAP1 SWAP9 MUL SWAP8 DUP9 ADD SSTORE SWAP1 MLOAD SWAP5 MLOAD SWAP5 DUP8 AND SWAP5 DUP5 AND DUP2 MUL SWAP5 SWAP1 SWAP5 OR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF DUP7 ADD SSTORE SWAP1 MLOAD SWAP1 MLOAD SWAP5 AND SWAP4 AND MUL SWAP2 SWAP1 SWAP2 OR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0 SWAP1 SWAP2 ADD SSTORE PUSH2 0x1E0 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x22A7 PUSH2 0x206 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x2AD ADD MSTORE DUP2 DUP2 PUSH2 0xE9B ADD MSTORE PUSH2 0xF4E ADD MSTORE PUSH2 0x22A7 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x110 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xA9FC507B GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA9FC507B EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xB4AC6860 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xCC5C56DC EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xCE325BF8 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x327 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x74EE6B62 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x954821B6 EQ PUSH2 0x26E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x25D5971F GT PUSH2 0xE4 JUMPI DUP1 PUSH4 0x25D5971F EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x3B5DD047 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x4F44DAA9 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x69CA431B EQ PUSH2 0x20E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH3 0x215784 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x39BA6B7 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x68BCD8D EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x21241DFE EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x127 PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x33A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x127 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E78 JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE SWAP6 DUP8 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 SWAP1 SWAP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP1 DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH3 0x34BC00 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x783 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE7 JUMP JUMPDEST PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x127 PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E78 JUMP JUMPDEST PUSH2 0x11FC JUMP JUMPDEST PUSH2 0x221 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F7D JUMP JUMPDEST PUSH2 0x1336 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x164A JUMP JUMPDEST PUSH2 0x127 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FFD JUMP JUMPDEST PUSH2 0x165D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x221 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x203B JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x205D JUMP JUMPDEST PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0x221 PUSH2 0x1860 JUMP JUMPDEST PUSH2 0x256 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x1876 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP4 AND SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x1929 JUMP JUMPDEST PUSH2 0x342 PUSH2 0x1963 JUMP JUMPDEST DUP1 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x353 JUMPI POP PUSH1 0x4 SLOAD DUP2 LT JUMPDEST PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C6964205374616B65204944210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x3D4 SWAP1 PUSH3 0x34BC00 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x209B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x3F1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 PUSH0 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x408 JUMPI PUSH2 0x408 PUSH2 0x20C0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 DUP7 DUP2 ADD SLOAD SWAP4 MUL ADD PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD SWAP2 SWAP5 POP SWAP2 SWAP3 SWAP1 PUSH2 0x446 SWAP1 DUP5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 PUSH1 0x3 DUP4 ADD SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x85CF309FCBACAF1EE2B300F62E8586A0661E41C7F318003E9AAB792BE89980B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x494 PUSH2 0x1963 JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x4A5 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C696420506F6F6C20494421000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH3 0x186A0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A6D617820617079206973203130303025000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST DUP2 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x561 JUMPI PUSH2 0x561 PUSH2 0x20C0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP5 DUP6 AND MUL OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP5 AND DUP3 MSTORE DUP5 SWAP2 PUSH32 0x9A2C3C653A42F5C64BBFDF07224D8E0D6526460F44E520AC49BAE23804E18E8 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 DUP7 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x5E6 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C696420506F6F6C20494421000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x2 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x645 JUMPI PUSH2 0x645 PUSH2 0x20C0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP11 SWAP1 DUP2 LT PUSH2 0x675 JUMPI PUSH2 0x675 PUSH2 0x20C0 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP11 DUP2 SLOAD DUP2 LT PUSH2 0x6AA JUMPI PUSH2 0x6AA PUSH2 0x20C0 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP12 DUP2 SLOAD DUP2 LT PUSH2 0x6DF JUMPI PUSH2 0x6DF PUSH2 0x20C0 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x2 DUP13 DUP2 SLOAD DUP2 LT PUSH2 0x714 JUMPI PUSH2 0x714 PUSH2 0x20C0 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x2 DUP14 DUP2 SLOAD DUP2 LT PUSH2 0x74A JUMPI PUSH2 0x74A PUSH2 0x20C0 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH2 0x78B PUSH2 0x198F JUMP JUMPDEST DUP1 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x79C JUMPI POP PUSH1 0x4 SLOAD DUP2 LT JUMPDEST PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C6964205374616B65204944210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A43616C6C6572206973206E6F7420746865206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 PUSH0 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x872 JUMPI PUSH2 0x872 PUSH2 0x20C0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL SWAP3 DUP4 SWAP1 DIV DUP2 AND SWAP7 DUP7 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP1 DUP4 AND SWAP6 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP3 SWAP1 DIV DUP7 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP3 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP2 SWAP1 DIV DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 DUP6 ADD SLOAD SWAP2 SWAP4 POP SWAP1 DIV AND PUSH2 0x8FC TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x968 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A4561726C79205769746864726177616C206973206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x74207065726D697474656421 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD ISZERO PUSH2 0x9CA JUMPI PUSH2 0x98D CALLER PUSH1 0x2 DUP5 ADD SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP4 ADD SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x3DB0CA701D7C1106534C6003E5D65DAE65A9CB891AD5BBB9BE39C091DF79D87E SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP PUSH2 0x9D6 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9E1 PUSH2 0x198F JUMP JUMPDEST DUP1 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x9F2 JUMPI POP PUSH1 0x4 SLOAD DUP2 LT JUMPDEST PUSH2 0xA3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C6964205374616B65204944210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A43616C6C6572206973206E6F7420746865206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 PUSH0 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xAC8 JUMPI PUSH2 0xAC8 PUSH2 0x20C0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A4561726C79205769746864726177616C206973206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x74207065726D697474656421 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 ADD SLOAD GT PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A4E6F7468696E6720746F20636C61696D000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD ISZERO PUSH2 0xBDA JUMPI PUSH2 0xBD3 CALLER PUSH1 0x2 DUP5 ADD SLOAD DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH2 0xBF8 CALLER PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xC28 SWAP1 DUP5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 PUSH1 0x3 DUP4 ADD SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x3DB0CA701D7C1106534C6003E5D65DAE65A9CB891AD5BBB9BE39C091DF79D87E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 SLOAD PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x4D7828F2AA36030CC63CDEA79EC646099AA121D019F1A90EDB55078939FB84EA SWAP1 PUSH1 0x20 ADD PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0xCA2 PUSH2 0x198F JUMP JUMPDEST DUP6 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xCB3 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C696420506F6F6C20494421000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 DUP7 GT PUSH2 0xD74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A7374616B655F616D6F756E74206D7573742062652067 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x726561746572207468616E207A65726F21000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xD88 JUMPI PUSH2 0xD88 PUSH2 0x20C0 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT PUSH2 0xE05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A506F6F6C206973207061757365642100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0xE1C CALLER DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP11 PUSH2 0x1A32 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH0 SWAP2 PUSH2 0xE41 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP12 SWAP2 AND DUP11 DUP11 DUP11 DUP11 PUSH2 0x1A71 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 DUP5 ADD SLOAD SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH4 0x1E13380 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 DUP3 SWAP1 DIV DUP2 AND SWAP3 PUSH2 0x2710 SWAP3 PUSH2 0xE78 SWAP3 SWAP2 DIV AND DUP7 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0xE8C SWAP2 SWAP1 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0xE96 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8EF1E259 CALLER PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF23 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF47 SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST ISZERO PUSH2 0x102D JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9A3BFDF5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFCC SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST DUP5 SLOAD PUSH1 0x2 DUP7 ADD SLOAD SWAP2 SWAP3 POP PUSH4 0x1E13380 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL SWAP3 DUP4 SWAP1 DIV DUP2 AND SWAP3 PUSH2 0x2710 SWAP3 PUSH2 0x1002 SWAP3 SWAP2 SWAP1 DIV AND DUP8 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x100C SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x1016 SWAP2 SWAP1 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x1020 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x102A SWAP1 DUP4 PUSH2 0x2153 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP4 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH2 0x104C SWAP2 SWAP1 PUSH2 0x209B JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP14 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1066 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x3 PUSH0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP DUP3 PUSH1 0x5 PUSH0 DUP8 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1170 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP5 SWAP1 MSTORE MLOAD DUP14 SWAP2 CALLER SWAP2 PUSH32 0xC48192CF3609B4932A8B10A6F09FE1CAC38610FDEF14EACC15B35C454DA0B4C5 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG3 PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x11E0 DUP4 PUSH2 0x2166 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP PUSH2 0x11F4 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1204 PUSH2 0x1963 JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x1215 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x1261 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C696420506F6F6C20494421000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH3 0x186A0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x12BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A6D617820626F6E757320617079206973203130303025 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST DUP2 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12D1 JUMPI PUSH2 0x12D1 PUSH2 0x20C0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP5 DUP6 AND MUL OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP5 AND DUP3 MSTORE DUP5 SWAP2 PUSH32 0xD3CD184B56B5B95016981FC55484FF8FDF06EB587430055C7AB828A0EDC0DC9D SWAP2 ADD PUSH2 0x5C2 JUMP JUMPDEST PUSH0 PUSH2 0x133F PUSH2 0x1963 JUMP JUMPDEST PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT PUSH2 0x13A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A6D61747572697479206D757374206265206772656174 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6572207468616E203 PUSH1 0xBC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x217A4B70 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13EF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1413 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A726577617264735F746F6B656E206D75737420626520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657175616C20746F2070726963655F6F7261636C652071756F746520746F6B65 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE DUP12 DUP4 AND SWAP5 DUP5 ADD SWAP5 DUP6 MSTORE DUP8 DUP3 AND PUSH1 0x60 DUP6 ADD SWAP1 DUP2 MSTORE DUP12 DUP5 AND PUSH1 0x80 DUP7 ADD SWAP1 DUP2 MSTORE DUP9 DUP5 AND PUSH1 0xA0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH0 DUP4 DUP2 MSTORE SWAP10 MLOAD SWAP7 MLOAD SWAP7 DUP10 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP8 DUP10 AND DUP9 MUL OR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE PUSH1 0x3 SWAP1 SWAP4 MUL SWAP3 DUP4 ADD SSTORE SWAP10 MLOAD SWAP5 MLOAD SWAP5 DUP9 AND SWAP5 DUP8 AND DUP7 MUL SWAP5 SWAP1 SWAP5 OR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF DUP6 ADD SSTORE SWAP2 MLOAD SWAP1 MLOAD SWAP6 AND SWAP5 SWAP1 SWAP4 AND SWAP1 SWAP2 MUL SWAP3 SWAP1 SWAP3 OR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD SWAP1 SWAP2 PUSH2 0x15AD SWAP2 PUSH2 0x20D4 JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0x6B64B7E8B6F4656658EFB1C74B7D1BBFF6E84D3D7B1CD5AE89FD6CD91DE6EF96 DUP11 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x1626 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP1 DUP3 AND PUSH1 0x40 DUP5 ADD MSTORE AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP6 ISZERO PUSH2 0x163E JUMPI PUSH2 0x163E DUP9 DUP8 PUSH2 0x17A1 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1652 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x165B PUSH0 PUSH2 0x1C41 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1665 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1687 SWAP1 DUP3 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16C9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16ED SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST LT ISZERO PUSH2 0x173B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365210000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0x174F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x19B9 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE06FAB35F3C220725C11D544884AFF93EBF67222C8310C487C71F27C844593E8 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1794 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1804 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A616D6F756E74206D7573742062652067726561746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x207468616E207A65726F21 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0x1819 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER ADDRESS DUP5 PUSH2 0x1A32 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAC24935FD910BC682B5CCB1A07B718CADF8CF2F6D1404C4F3DDC3662DAE40E29 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1854 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP1 PUSH2 0x1871 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 DUP7 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x188D JUMPI POP PUSH1 0x4 SLOAD DUP2 LT JUMPDEST PUSH2 0x18D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C6964205374616B65204944210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST POP POP POP PUSH0 SWAP5 DUP6 MSTORE POP POP PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP4 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP6 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP8 SWAP2 SWAP7 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP6 POP SWAP2 SWAP4 POP JUMP JUMPDEST PUSH2 0x1931 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x195A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0x9D6 DUP2 PUSH2 0x1C41 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x165B JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x19B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1A2D SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C9D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1A6B SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x19E6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP9 SWAP1 POP PUSH0 PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AB4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD8 SWAP2 SWAP1 PUSH2 0x21B6 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH0 PUSH0 PUSH2 0x1B4A DUP13 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B1F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B43 SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST DUP7 DUP7 PUSH2 0x1D09 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1BBA DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B8D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BB1 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST DUP3 DUP14 DUP12 DUP12 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x1C26 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BF9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C1D SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST DUP5 DUP15 DUP15 DUP15 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x1C30 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1CBC JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x1CD3 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1A6B JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 DUP1 DUP1 DUP6 PUSH2 0x1D27 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x1D31 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 PUSH2 0x1D4F DUP10 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x1D59 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST SWAP2 SWAP9 SWAP2 SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6A089215 DUP8 DUP8 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DB6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DDA SWAP2 SWAP1 PUSH2 0x2202 JUMP JUMPDEST DUP8 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2222 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E18 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3C SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E56 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E73 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E89 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1E99 PUSH1 0x20 DUP5 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1EB2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EC9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1EE0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1EFC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F20 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F2C DUP10 DUP3 DUP11 ADD PUSH2 0x1EA2 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F4B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F57 DUP10 DUP3 DUP11 ADD PUSH2 0x1EA2 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1F93 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1F9E DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x1FAE DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x1FBE DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1FD3 PUSH1 0x80 DUP10 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP3 POP PUSH2 0x1FE1 PUSH1 0xA0 DUP10 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEF PUSH1 0xC0 DUP10 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x200F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x201A DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x202A DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x204B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2056 DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x206E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2079 DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x20BA JUMPI PUSH2 0x20BA PUSH2 0x2087 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x20BA JUMPI PUSH2 0x20BA PUSH2 0x2087 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x20BA JUMPI PUSH2 0x20BA PUSH2 0x2087 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2118 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x212D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2056 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x214C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x20BA JUMPI PUSH2 0x20BA PUSH2 0x2087 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x2177 JUMPI PUSH2 0x2177 PUSH2 0x2087 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x218E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2056 DUP2 PUSH2 0x1F69 JUMP JUMPDEST DUP1 MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1E73 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21C8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x21D1 DUP5 PUSH2 0x2199 JUMP JUMPDEST SWAP3 POP PUSH2 0x21DF PUSH1 0x20 DUP6 ADD PUSH2 0x2199 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x21F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2212 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2056 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0xA0 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0xA0 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN PUSH8 0x7D72E61BC7FF0411 RJUMP 0x7688 0xCC 0x24 0xB1 LOG1 0xC0 0x29 SAR PUSH23 0xA62D80E4CF4107394475EB64736F6C634300081E003300 ",
							"sourceMap": "418:9430:10:-:0;;;1175:1;1147:29;;2368:382;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:6;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:15;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:7;2061:21;;;-1:-1:-1;;;;;2446:52:10;;::::1;;::::0;;;2520:221:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;2520:221:10;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;2509:5:::1;:233:::0;;;;::::1;::::0;;;;;;;;;;;::::1;-1:-1:-1::0;;;;;;;;2509:233:10;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;;;;418:9430;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:15:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:15;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:15:o;309:203::-;418:9430:10;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CLAIM_PERIOD_1180": {
									"entryPoint": null,
									"id": 1180,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CREDI_WHALE_ORACLE_1183": {
									"entryPoint": null,
									"id": 1183,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_737": {
									"entryPoint": 7325,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 6499,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_866": {
									"entryPoint": null,
									"id": 866,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_858": {
									"entryPoint": 6543,
									"id": 858,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 7233,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRewards_1975": {
									"entryPoint": 6049,
									"id": 1975,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@claim_1813": {
									"entryPoint": 2521,
									"id": 1813,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@createPool_1546": {
									"entryPoint": 4918,
									"id": 1546,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"@getPool_1395": {
									"entryPoint": 1487,
									"id": 1395,
									"parameterSlots": 1,
									"returnSlots": 6
								},
								"@getPoolsCount_1453": {
									"entryPoint": 6240,
									"id": 1453,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStake_1442": {
									"entryPoint": 6262,
									"id": 1442,
									"parameterSlots": 1,
									"returnSlots": 6
								},
								"@lp_value_2411": {
									"entryPoint": 6769,
									"id": 2411,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pending_payments_1199": {
									"entryPoint": null,
									"id": 1199,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 5706,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_387": {
									"entryPoint": 6706,
									"id": 387,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_360": {
									"entryPoint": 6585,
									"id": 360,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setAPY_2052": {
									"entryPoint": 1164,
									"id": 2052,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBonusAPY_2084": {
									"entryPoint": 4604,
									"id": 2084,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stake_1701": {
									"entryPoint": 3226,
									"id": 1701,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@time_now_1465": {
									"entryPoint": null,
									"id": 1465,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@token_balances_2349": {
									"entryPoint": 7433,
									"id": 2349,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@token_value_2313": {
									"entryPoint": 7528,
									"id": 2313,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 6441,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@voidReward_1869": {
									"entryPoint": 826,
									"id": 1869,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawRewards_2020": {
									"entryPoint": 5725,
									"id": 2020,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdrawStake_1942": {
									"entryPoint": 1923,
									"id": 1942,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 7842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 8574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint96t_uint96t_uint96": {
									"entryPoint": 8061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory": {
									"entryPoint": 8630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 7911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256t_uint96": {
									"entryPoint": 7800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 8706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint112_fromMemory": {
									"entryPoint": 8601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint96": {
									"entryPoint": 7773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint96_t_uint96_t_uint96__to_t_address_t_address_t_address_t_uint96_t_uint96_t_uint96__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint8_t_bytes_calldata_ptr__to_t_address_t_uint256_t_uint8_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8738,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint96_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint96_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint96_t_uint96_t_uint96__to_t_address_t_uint96_t_uint96_t_uint96__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ICREDIWhale_$2100__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_008c56d8658d73b34b2f55f43c00bff7db45991e8cba2583fde4ec34762eff7e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0e16e6a30f81a14a3750dadd850a42a6a565cd1e2e793344412756e6597d7eb3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_29c57daf8e27c717e10ae76545d83b5f2c91ce346314162ccef308ba8221272c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48745a825c3a66aabc6ad4692f5fa1ce6747939b3796aa484c27ba9fdcf82213__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7413541967929611b36bcd89f295c92ebef45e79b12d187d4ae73575bb36f18c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_80eaacf457ba567125d46e8d07b85f0b19850b9352dda34d0af0b902e124e0b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9609bed7fe5874993a0e45025cb75d78736e0e5d28fc319f68fd61927d3a2555__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9ca6d7d8f4b50884f4b4d7f1090e14ef0c0a197944e02f7d686fb0c2fe397c91__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a09483d25cc2fc12a7cf65e12568a6dd37259e605cfb897eb1abbbae1dbe9274__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a12b524a3be40694ffb0d5bc0958fc55168fc7cda344718aab4c0bc96880da50__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e59456cdc9cfda50f9f5660769488a43bd3f02d37b1d88f2648a4b04115dc9d4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f05035c333f8eea86681a079e9dbbf83f20c2edbd12293e704e25b5c79f55ebb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fbecf6cd1d46bfcd2d35ede7e1d976af256e1566b1bef182b8efd2e5ea4c8a50__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint96": {
									"entryPoint": 8347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8384,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 8041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16858:15",
										"nodeType": "YulBlock",
										"src": "0:16858:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:156:15",
													"nodeType": "YulBlock",
													"src": "84:156:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:15",
																"nodeType": "YulBlock",
																"src": "130:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:15",
																					"nodeType": "YulLiteral",
																					"src": "139:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:15",
																					"nodeType": "YulLiteral",
																					"src": "142:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:15"
																			},
																			"nativeSrc": "132:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:15"
																		},
																		"nativeSrc": "132:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:15"
																		},
																		"nativeSrc": "101:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:15",
																		"nodeType": "YulLiteral",
																		"src": "126:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:15"
																},
																"nativeSrc": "97:32:15",
																"nodeType": "YulFunctionCall",
																"src": "97:32:15"
															},
															"nativeSrc": "94:52:15",
															"nodeType": "YulIf",
															"src": "94:52:15"
														},
														{
															"nativeSrc": "155:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "155:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "168:1:15",
																"nodeType": "YulLiteral",
																"src": "168:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:15",
																	"nodeType": "YulTypedName",
																	"src": "159:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "178:32:15",
															"nodeType": "YulAssignment",
															"src": "178:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "200:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "200:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "187:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:12:15"
																},
																"nativeSrc": "187:23:15",
																"nodeType": "YulFunctionCall",
																"src": "187:23:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "178:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "178:5:15"
																}
															]
														},
														{
															"nativeSrc": "219:15:15",
															"nodeType": "YulAssignment",
															"src": "219:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "229:5:15",
																"nodeType": "YulIdentifier",
																"src": "229:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "219:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "219:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:226:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:15",
														"nodeType": "YulTypedName",
														"src": "50:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:15",
														"nodeType": "YulTypedName",
														"src": "61:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:15",
														"nodeType": "YulTypedName",
														"src": "73:6:15",
														"type": ""
													}
												],
												"src": "14:226:15"
											},
											{
												"body": {
													"nativeSrc": "293:131:15",
													"nodeType": "YulBlock",
													"src": "293:131:15",
													"statements": [
														{
															"nativeSrc": "303:29:15",
															"nodeType": "YulAssignment",
															"src": "303:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "325:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "325:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "312:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "312:12:15"
																},
																"nativeSrc": "312:20:15",
																"nodeType": "YulFunctionCall",
																"src": "312:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "303:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "303:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "402:16:15",
																"nodeType": "YulBlock",
																"src": "402:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "411:1:15",
																					"nodeType": "YulLiteral",
																					"src": "411:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:1:15",
																					"nodeType": "YulLiteral",
																					"src": "414:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "404:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "404:6:15"
																			},
																			"nativeSrc": "404:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "404:12:15"
																		},
																		"nativeSrc": "404:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "404:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "354:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "354:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "365:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "365:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "372:26:15",
																						"nodeType": "YulLiteral",
																						"src": "372:26:15",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "361:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "361:3:15"
																				},
																				"nativeSrc": "361:38:15",
																				"nodeType": "YulFunctionCall",
																				"src": "361:38:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "351:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "351:2:15"
																		},
																		"nativeSrc": "351:49:15",
																		"nodeType": "YulFunctionCall",
																		"src": "351:49:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "344:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "344:6:15"
																},
																"nativeSrc": "344:57:15",
																"nodeType": "YulFunctionCall",
																"src": "344:57:15"
															},
															"nativeSrc": "341:77:15",
															"nodeType": "YulIf",
															"src": "341:77:15"
														}
													]
												},
												"name": "abi_decode_uint96",
												"nativeSrc": "245:179:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "272:6:15",
														"nodeType": "YulTypedName",
														"src": "272:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "283:5:15",
														"nodeType": "YulTypedName",
														"src": "283:5:15",
														"type": ""
													}
												],
												"src": "245:179:15"
											},
											{
												"body": {
													"nativeSrc": "515:212:15",
													"nodeType": "YulBlock",
													"src": "515:212:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "561:16:15",
																"nodeType": "YulBlock",
																"src": "561:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "570:1:15",
																					"nodeType": "YulLiteral",
																					"src": "570:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "573:1:15",
																					"nodeType": "YulLiteral",
																					"src": "573:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "563:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "563:6:15"
																			},
																			"nativeSrc": "563:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "563:12:15"
																		},
																		"nativeSrc": "563:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "563:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "536:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "536:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "545:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "545:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "532:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "532:3:15"
																		},
																		"nativeSrc": "532:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "532:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "557:2:15",
																		"nodeType": "YulLiteral",
																		"src": "557:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "528:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "528:3:15"
																},
																"nativeSrc": "528:32:15",
																"nodeType": "YulFunctionCall",
																"src": "528:32:15"
															},
															"nativeSrc": "525:52:15",
															"nodeType": "YulIf",
															"src": "525:52:15"
														},
														{
															"nativeSrc": "586:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "586:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "599:1:15",
																"nodeType": "YulLiteral",
																"src": "599:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "590:5:15",
																	"nodeType": "YulTypedName",
																	"src": "590:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "609:32:15",
															"nodeType": "YulAssignment",
															"src": "609:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "631:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "631:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "618:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "618:12:15"
																},
																"nativeSrc": "618:23:15",
																"nodeType": "YulFunctionCall",
																"src": "618:23:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "609:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "609:5:15"
																}
															]
														},
														{
															"nativeSrc": "650:15:15",
															"nodeType": "YulAssignment",
															"src": "650:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "660:5:15",
																"nodeType": "YulIdentifier",
																"src": "660:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "650:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "650:6:15"
																}
															]
														},
														{
															"nativeSrc": "674:47:15",
															"nodeType": "YulAssignment",
															"src": "674:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "706:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "706:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "717:2:15",
																				"nodeType": "YulLiteral",
																				"src": "717:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "702:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "702:3:15"
																		},
																		"nativeSrc": "702:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "702:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint96",
																	"nativeSrc": "684:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "684:17:15"
																},
																"nativeSrc": "684:37:15",
																"nodeType": "YulFunctionCall",
																"src": "684:37:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "674:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "674:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint96",
												"nativeSrc": "429:298:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "473:9:15",
														"nodeType": "YulTypedName",
														"src": "473:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "484:7:15",
														"nodeType": "YulTypedName",
														"src": "484:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "496:6:15",
														"nodeType": "YulTypedName",
														"src": "496:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "504:6:15",
														"nodeType": "YulTypedName",
														"src": "504:6:15",
														"type": ""
													}
												],
												"src": "429:298:15"
											},
											{
												"body": {
													"nativeSrc": "967:540:15",
													"nodeType": "YulBlock",
													"src": "967:540:15",
													"statements": [
														{
															"nativeSrc": "977:27:15",
															"nodeType": "YulAssignment",
															"src": "977:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "989:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "989:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1000:3:15",
																		"nodeType": "YulLiteral",
																		"src": "1000:3:15",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "985:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "985:3:15"
																},
																"nativeSrc": "985:19:15",
																"nodeType": "YulFunctionCall",
																"src": "985:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "977:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "977:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1020:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1020:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1035:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1035:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1043:42:15",
																				"nodeType": "YulLiteral",
																				"src": "1043:42:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1031:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1031:3:15"
																		},
																		"nativeSrc": "1031:55:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1031:55:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1013:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1013:6:15"
																},
																"nativeSrc": "1013:74:15",
																"nodeType": "YulFunctionCall",
																"src": "1013:74:15"
															},
															"nativeSrc": "1013:74:15",
															"nodeType": "YulExpressionStatement",
															"src": "1013:74:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1107:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1107:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1118:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1118:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1103:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1103:3:15"
																		},
																		"nativeSrc": "1103:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1103:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1127:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1127:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1135:42:15",
																				"nodeType": "YulLiteral",
																				"src": "1135:42:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1123:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1123:3:15"
																		},
																		"nativeSrc": "1123:55:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1123:55:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1096:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1096:6:15"
																},
																"nativeSrc": "1096:83:15",
																"nodeType": "YulFunctionCall",
																"src": "1096:83:15"
															},
															"nativeSrc": "1096:83:15",
															"nodeType": "YulExpressionStatement",
															"src": "1096:83:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1199:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1199:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1210:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1210:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1195:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1195:3:15"
																		},
																		"nativeSrc": "1195:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1195:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "1219:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1219:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1227:42:15",
																				"nodeType": "YulLiteral",
																				"src": "1227:42:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1215:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1215:3:15"
																		},
																		"nativeSrc": "1215:55:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1215:55:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1188:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1188:6:15"
																},
																"nativeSrc": "1188:83:15",
																"nodeType": "YulFunctionCall",
																"src": "1188:83:15"
															},
															"nativeSrc": "1188:83:15",
															"nodeType": "YulExpressionStatement",
															"src": "1188:83:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1291:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1291:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1302:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1302:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1287:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1287:3:15"
																		},
																		"nativeSrc": "1287:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1287:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "1311:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1311:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1319:26:15",
																				"nodeType": "YulLiteral",
																				"src": "1319:26:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1307:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1307:3:15"
																		},
																		"nativeSrc": "1307:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1307:39:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1280:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1280:6:15"
																},
																"nativeSrc": "1280:67:15",
																"nodeType": "YulFunctionCall",
																"src": "1280:67:15"
															},
															"nativeSrc": "1280:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "1280:67:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1367:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1367:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1378:3:15",
																				"nodeType": "YulLiteral",
																				"src": "1378:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1363:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1363:3:15"
																		},
																		"nativeSrc": "1363:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1363:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "1388:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1388:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1396:26:15",
																				"nodeType": "YulLiteral",
																				"src": "1396:26:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1384:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1384:3:15"
																		},
																		"nativeSrc": "1384:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1384:39:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1356:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1356:6:15"
																},
																"nativeSrc": "1356:68:15",
																"nodeType": "YulFunctionCall",
																"src": "1356:68:15"
															},
															"nativeSrc": "1356:68:15",
															"nodeType": "YulExpressionStatement",
															"src": "1356:68:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1444:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1444:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1455:3:15",
																				"nodeType": "YulLiteral",
																				"src": "1455:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1440:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:15"
																		},
																		"nativeSrc": "1440:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1440:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value5",
																				"nativeSrc": "1465:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1465:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1473:26:15",
																				"nodeType": "YulLiteral",
																				"src": "1473:26:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1461:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1461:3:15"
																		},
																		"nativeSrc": "1461:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1461:39:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:15"
																},
																"nativeSrc": "1433:68:15",
																"nodeType": "YulFunctionCall",
																"src": "1433:68:15"
															},
															"nativeSrc": "1433:68:15",
															"nodeType": "YulExpressionStatement",
															"src": "1433:68:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint96_t_uint96_t_uint96__to_t_address_t_address_t_address_t_uint96_t_uint96_t_uint96__fromStack_reversed",
												"nativeSrc": "732:775:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "896:9:15",
														"nodeType": "YulTypedName",
														"src": "896:9:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "907:6:15",
														"nodeType": "YulTypedName",
														"src": "907:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "915:6:15",
														"nodeType": "YulTypedName",
														"src": "915:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "923:6:15",
														"nodeType": "YulTypedName",
														"src": "923:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "931:6:15",
														"nodeType": "YulTypedName",
														"src": "931:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "939:6:15",
														"nodeType": "YulTypedName",
														"src": "939:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "947:6:15",
														"nodeType": "YulTypedName",
														"src": "947:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "958:4:15",
														"nodeType": "YulTypedName",
														"src": "958:4:15",
														"type": ""
													}
												],
												"src": "732:775:15"
											},
											{
												"body": {
													"nativeSrc": "1611:109:15",
													"nodeType": "YulBlock",
													"src": "1611:109:15",
													"statements": [
														{
															"nativeSrc": "1621:26:15",
															"nodeType": "YulAssignment",
															"src": "1621:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1633:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1633:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1644:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1644:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1629:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1629:3:15"
																},
																"nativeSrc": "1629:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1629:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1621:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1621:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1663:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1663:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1678:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1678:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1686:26:15",
																				"nodeType": "YulLiteral",
																				"src": "1686:26:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1674:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1674:3:15"
																		},
																		"nativeSrc": "1674:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:39:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1656:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1656:6:15"
																},
																"nativeSrc": "1656:58:15",
																"nodeType": "YulFunctionCall",
																"src": "1656:58:15"
															},
															"nativeSrc": "1656:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "1656:58:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
												"nativeSrc": "1512:208:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1580:9:15",
														"nodeType": "YulTypedName",
														"src": "1580:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1591:6:15",
														"nodeType": "YulTypedName",
														"src": "1591:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1602:4:15",
														"nodeType": "YulTypedName",
														"src": "1602:4:15",
														"type": ""
													}
												],
												"src": "1512:208:15"
											},
											{
												"body": {
													"nativeSrc": "1797:275:15",
													"nodeType": "YulBlock",
													"src": "1797:275:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1846:16:15",
																"nodeType": "YulBlock",
																"src": "1846:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1855:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1855:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1858:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1858:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1848:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1848:6:15"
																			},
																			"nativeSrc": "1848:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1848:12:15"
																		},
																		"nativeSrc": "1848:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1848:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1825:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1825:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1833:4:15",
																						"nodeType": "YulLiteral",
																						"src": "1833:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1821:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1821:3:15"
																				},
																				"nativeSrc": "1821:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1821:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1840:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1840:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1817:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1817:3:15"
																		},
																		"nativeSrc": "1817:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1817:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1810:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1810:6:15"
																},
																"nativeSrc": "1810:35:15",
																"nodeType": "YulFunctionCall",
																"src": "1810:35:15"
															},
															"nativeSrc": "1807:55:15",
															"nodeType": "YulIf",
															"src": "1807:55:15"
														},
														{
															"nativeSrc": "1871:30:15",
															"nodeType": "YulAssignment",
															"src": "1871:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1894:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1894:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1881:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1881:12:15"
																},
																"nativeSrc": "1881:20:15",
																"nodeType": "YulFunctionCall",
																"src": "1881:20:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1871:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1871:6:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1944:16:15",
																"nodeType": "YulBlock",
																"src": "1944:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1953:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1953:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1956:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1946:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1946:6:15"
																			},
																			"nativeSrc": "1946:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1946:12:15"
																		},
																		"nativeSrc": "1946:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1946:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1916:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1916:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1924:18:15",
																		"nodeType": "YulLiteral",
																		"src": "1924:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1913:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1913:2:15"
																},
																"nativeSrc": "1913:30:15",
																"nodeType": "YulFunctionCall",
																"src": "1913:30:15"
															},
															"nativeSrc": "1910:50:15",
															"nodeType": "YulIf",
															"src": "1910:50:15"
														},
														{
															"nativeSrc": "1969:29:15",
															"nodeType": "YulAssignment",
															"src": "1969:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1985:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1985:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1993:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1993:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1981:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1981:3:15"
																},
																"nativeSrc": "1981:17:15",
																"nodeType": "YulFunctionCall",
																"src": "1981:17:15"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1969:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "1969:8:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2050:16:15",
																"nodeType": "YulBlock",
																"src": "2050:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2059:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2062:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2062:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2052:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2052:6:15"
																			},
																			"nativeSrc": "2052:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2052:12:15"
																		},
																		"nativeSrc": "2052:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2052:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2021:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2021:6:15"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2029:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2029:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2017:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2017:3:15"
																				},
																				"nativeSrc": "2017:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2017:19:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2038:4:15",
																				"nodeType": "YulLiteral",
																				"src": "2038:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2013:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2013:3:15"
																		},
																		"nativeSrc": "2013:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2013:30:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2045:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2045:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2010:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2010:2:15"
																},
																"nativeSrc": "2010:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2010:39:15"
															},
															"nativeSrc": "2007:59:15",
															"nodeType": "YulIf",
															"src": "2007:59:15"
														}
													]
												},
												"name": "abi_decode_bytes_calldata",
												"nativeSrc": "1725:347:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1760:6:15",
														"nodeType": "YulTypedName",
														"src": "1760:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1768:3:15",
														"nodeType": "YulTypedName",
														"src": "1768:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "1776:8:15",
														"nodeType": "YulTypedName",
														"src": "1776:8:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1786:6:15",
														"nodeType": "YulTypedName",
														"src": "1786:6:15",
														"type": ""
													}
												],
												"src": "1725:347:15"
											},
											{
												"body": {
													"nativeSrc": "2236:788:15",
													"nodeType": "YulBlock",
													"src": "2236:788:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2283:16:15",
																"nodeType": "YulBlock",
																"src": "2283:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2292:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2292:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2295:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2295:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2285:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2285:6:15"
																			},
																			"nativeSrc": "2285:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2285:12:15"
																		},
																		"nativeSrc": "2285:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2285:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2257:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2257:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2266:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2266:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2253:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2253:3:15"
																		},
																		"nativeSrc": "2253:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2253:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2278:3:15",
																		"nodeType": "YulLiteral",
																		"src": "2278:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2249:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2249:3:15"
																},
																"nativeSrc": "2249:33:15",
																"nodeType": "YulFunctionCall",
																"src": "2249:33:15"
															},
															"nativeSrc": "2246:53:15",
															"nodeType": "YulIf",
															"src": "2246:53:15"
														},
														{
															"nativeSrc": "2308:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2308:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2321:1:15",
																"nodeType": "YulLiteral",
																"src": "2321:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2312:5:15",
																	"nodeType": "YulTypedName",
																	"src": "2312:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2331:32:15",
															"nodeType": "YulAssignment",
															"src": "2331:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2353:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2353:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2340:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2340:12:15"
																},
																"nativeSrc": "2340:23:15",
																"nodeType": "YulFunctionCall",
																"src": "2340:23:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2331:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2331:5:15"
																}
															]
														},
														{
															"nativeSrc": "2372:15:15",
															"nodeType": "YulAssignment",
															"src": "2372:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "2382:5:15",
																"nodeType": "YulIdentifier",
																"src": "2382:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2372:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2372:6:15"
																}
															]
														},
														{
															"nativeSrc": "2396:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2396:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2411:1:15",
																"nodeType": "YulLiteral",
																"src": "2411:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2400:7:15",
																	"nodeType": "YulTypedName",
																	"src": "2400:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2421:43:15",
															"nodeType": "YulAssignment",
															"src": "2421:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2449:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2449:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2460:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2460:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2445:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2445:3:15"
																		},
																		"nativeSrc": "2445:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2445:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2432:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2432:12:15"
																},
																"nativeSrc": "2432:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2432:32:15"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "2421:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2421:7:15"
																}
															]
														},
														{
															"nativeSrc": "2473:17:15",
															"nodeType": "YulAssignment",
															"src": "2473:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "2483:7:15",
																"nodeType": "YulIdentifier",
																"src": "2483:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2473:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2473:6:15"
																}
															]
														},
														{
															"nativeSrc": "2499:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2499:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2530:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2530:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2541:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2541:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2526:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2526:3:15"
																		},
																		"nativeSrc": "2526:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2526:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2513:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2513:12:15"
																},
																"nativeSrc": "2513:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2513:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2503:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2503:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2588:16:15",
																"nodeType": "YulBlock",
																"src": "2588:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2597:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2597:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2600:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2600:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2590:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2590:6:15"
																			},
																			"nativeSrc": "2590:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2590:12:15"
																		},
																		"nativeSrc": "2590:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2590:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2560:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2560:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2568:18:15",
																		"nodeType": "YulLiteral",
																		"src": "2568:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2557:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2557:2:15"
																},
																"nativeSrc": "2557:30:15",
																"nodeType": "YulFunctionCall",
																"src": "2557:30:15"
															},
															"nativeSrc": "2554:50:15",
															"nodeType": "YulIf",
															"src": "2554:50:15"
														},
														{
															"nativeSrc": "2613:84:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2613:84:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2669:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2669:9:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2680:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2680:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2665:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2665:3:15"
																		},
																		"nativeSrc": "2665:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2665:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2689:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "2689:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nativeSrc": "2639:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "2639:25:15"
																},
																"nativeSrc": "2639:58:15",
																"nodeType": "YulFunctionCall",
																"src": "2639:58:15"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nativeSrc": "2617:8:15",
																	"nodeType": "YulTypedName",
																	"src": "2617:8:15",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nativeSrc": "2627:8:15",
																	"nodeType": "YulTypedName",
																	"src": "2627:8:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2706:18:15",
															"nodeType": "YulAssignment",
															"src": "2706:18:15",
															"value": {
																"name": "value2_1",
																"nativeSrc": "2716:8:15",
																"nodeType": "YulIdentifier",
																"src": "2716:8:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2706:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2706:6:15"
																}
															]
														},
														{
															"nativeSrc": "2733:18:15",
															"nodeType": "YulAssignment",
															"src": "2733:18:15",
															"value": {
																"name": "value3_1",
																"nativeSrc": "2743:8:15",
																"nodeType": "YulIdentifier",
																"src": "2743:8:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2733:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2733:6:15"
																}
															]
														},
														{
															"nativeSrc": "2760:48:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2760:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2793:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2793:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2804:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2804:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2789:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2789:3:15"
																		},
																		"nativeSrc": "2789:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2789:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2776:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2776:12:15"
																},
																"nativeSrc": "2776:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2776:32:15"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "2764:8:15",
																	"nodeType": "YulTypedName",
																	"src": "2764:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2853:16:15",
																"nodeType": "YulBlock",
																"src": "2853:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2862:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2862:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2865:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2865:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2855:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2855:6:15"
																			},
																			"nativeSrc": "2855:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2855:12:15"
																		},
																		"nativeSrc": "2855:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2855:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "2823:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "2823:8:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2833:18:15",
																		"nodeType": "YulLiteral",
																		"src": "2833:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2820:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2820:2:15"
																},
																"nativeSrc": "2820:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2820:32:15"
															},
															"nativeSrc": "2817:52:15",
															"nodeType": "YulIf",
															"src": "2817:52:15"
														},
														{
															"nativeSrc": "2878:86:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2878:86:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2934:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2934:9:15"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "2945:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "2945:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2930:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2930:3:15"
																		},
																		"nativeSrc": "2930:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2930:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2956:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "2956:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nativeSrc": "2904:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "2904:25:15"
																},
																"nativeSrc": "2904:60:15",
																"nodeType": "YulFunctionCall",
																"src": "2904:60:15"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nativeSrc": "2882:8:15",
																	"nodeType": "YulTypedName",
																	"src": "2882:8:15",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nativeSrc": "2892:8:15",
																	"nodeType": "YulTypedName",
																	"src": "2892:8:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2973:18:15",
															"nodeType": "YulAssignment",
															"src": "2973:18:15",
															"value": {
																"name": "value4_1",
																"nativeSrc": "2983:8:15",
																"nodeType": "YulIdentifier",
																"src": "2983:8:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "2973:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2973:6:15"
																}
															]
														},
														{
															"nativeSrc": "3000:18:15",
															"nodeType": "YulAssignment",
															"src": "3000:18:15",
															"value": {
																"name": "value5_1",
																"nativeSrc": "3010:8:15",
																"nodeType": "YulIdentifier",
																"src": "3010:8:15"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "3000:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3000:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr",
												"nativeSrc": "2077:947:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2162:9:15",
														"nodeType": "YulTypedName",
														"src": "2162:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2173:7:15",
														"nodeType": "YulTypedName",
														"src": "2173:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2185:6:15",
														"nodeType": "YulTypedName",
														"src": "2185:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2193:6:15",
														"nodeType": "YulTypedName",
														"src": "2193:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2201:6:15",
														"nodeType": "YulTypedName",
														"src": "2201:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2209:6:15",
														"nodeType": "YulTypedName",
														"src": "2209:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2217:6:15",
														"nodeType": "YulTypedName",
														"src": "2217:6:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2225:6:15",
														"nodeType": "YulTypedName",
														"src": "2225:6:15",
														"type": ""
													}
												],
												"src": "2077:947:15"
											},
											{
												"body": {
													"nativeSrc": "3074:109:15",
													"nodeType": "YulBlock",
													"src": "3074:109:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3161:16:15",
																"nodeType": "YulBlock",
																"src": "3161:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3170:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3170:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3173:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3173:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3163:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3163:6:15"
																			},
																			"nativeSrc": "3163:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3163:12:15"
																		},
																		"nativeSrc": "3163:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3163:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3097:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3097:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3108:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3108:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3115:42:15",
																						"nodeType": "YulLiteral",
																						"src": "3115:42:15",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3104:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3104:3:15"
																				},
																				"nativeSrc": "3104:54:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3104:54:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3094:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3094:2:15"
																		},
																		"nativeSrc": "3094:65:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3094:65:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3087:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3087:6:15"
																},
																"nativeSrc": "3087:73:15",
																"nodeType": "YulFunctionCall",
																"src": "3087:73:15"
															},
															"nativeSrc": "3084:93:15",
															"nodeType": "YulIf",
															"src": "3084:93:15"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "3029:154:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3063:5:15",
														"nodeType": "YulTypedName",
														"src": "3063:5:15",
														"type": ""
													}
												],
												"src": "3029:154:15"
											},
											{
												"body": {
													"nativeSrc": "3357:700:15",
													"nodeType": "YulBlock",
													"src": "3357:700:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3404:16:15",
																"nodeType": "YulBlock",
																"src": "3404:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3413:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3413:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3416:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3416:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3406:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3406:6:15"
																			},
																			"nativeSrc": "3406:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3406:12:15"
																		},
																		"nativeSrc": "3406:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3406:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3378:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3378:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3387:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3387:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3374:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3374:3:15"
																		},
																		"nativeSrc": "3374:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3374:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3399:3:15",
																		"nodeType": "YulLiteral",
																		"src": "3399:3:15",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3370:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3370:3:15"
																},
																"nativeSrc": "3370:33:15",
																"nodeType": "YulFunctionCall",
																"src": "3370:33:15"
															},
															"nativeSrc": "3367:53:15",
															"nodeType": "YulIf",
															"src": "3367:53:15"
														},
														{
															"nativeSrc": "3429:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3429:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3455:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3455:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3442:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3442:12:15"
																},
																"nativeSrc": "3442:23:15",
																"nodeType": "YulFunctionCall",
																"src": "3442:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3433:5:15",
																	"nodeType": "YulTypedName",
																	"src": "3433:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3499:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3499:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3474:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "3474:24:15"
																},
																"nativeSrc": "3474:31:15",
																"nodeType": "YulFunctionCall",
																"src": "3474:31:15"
															},
															"nativeSrc": "3474:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "3474:31:15"
														},
														{
															"nativeSrc": "3514:15:15",
															"nodeType": "YulAssignment",
															"src": "3514:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "3524:5:15",
																"nodeType": "YulIdentifier",
																"src": "3524:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3514:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3514:6:15"
																}
															]
														},
														{
															"nativeSrc": "3538:47:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3538:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3570:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3570:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3581:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3581:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3566:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3566:3:15"
																		},
																		"nativeSrc": "3566:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3566:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3553:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3553:12:15"
																},
																"nativeSrc": "3553:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3553:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3542:7:15",
																	"nodeType": "YulTypedName",
																	"src": "3542:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3619:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "3619:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3594:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "3594:24:15"
																},
																"nativeSrc": "3594:33:15",
																"nodeType": "YulFunctionCall",
																"src": "3594:33:15"
															},
															"nativeSrc": "3594:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "3594:33:15"
														},
														{
															"nativeSrc": "3636:17:15",
															"nodeType": "YulAssignment",
															"src": "3636:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "3646:7:15",
																"nodeType": "YulIdentifier",
																"src": "3646:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3636:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3636:6:15"
																}
															]
														},
														{
															"nativeSrc": "3662:47:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3662:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3694:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3694:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3705:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3705:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3690:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3690:3:15"
																		},
																		"nativeSrc": "3690:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3690:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3677:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3677:12:15"
																},
																"nativeSrc": "3677:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3677:32:15"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3666:7:15",
																	"nodeType": "YulTypedName",
																	"src": "3666:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "3743:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "3743:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3718:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "3718:24:15"
																},
																"nativeSrc": "3718:33:15",
																"nodeType": "YulFunctionCall",
																"src": "3718:33:15"
															},
															"nativeSrc": "3718:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "3718:33:15"
														},
														{
															"nativeSrc": "3760:17:15",
															"nodeType": "YulAssignment",
															"src": "3760:17:15",
															"value": {
																"name": "value_2",
																"nativeSrc": "3770:7:15",
																"nodeType": "YulIdentifier",
																"src": "3770:7:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3760:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3760:6:15"
																}
															]
														},
														{
															"nativeSrc": "3786:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3786:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "3801:1:15",
																"nodeType": "YulLiteral",
																"src": "3801:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "3790:7:15",
																	"nodeType": "YulTypedName",
																	"src": "3790:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3811:43:15",
															"nodeType": "YulAssignment",
															"src": "3811:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3839:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3839:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3850:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3850:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3835:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3835:3:15"
																		},
																		"nativeSrc": "3835:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3835:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3822:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3822:12:15"
																},
																"nativeSrc": "3822:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3822:32:15"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "3811:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3811:7:15"
																}
															]
														},
														{
															"nativeSrc": "3863:17:15",
															"nodeType": "YulAssignment",
															"src": "3863:17:15",
															"value": {
																"name": "value_3",
																"nativeSrc": "3873:7:15",
																"nodeType": "YulIdentifier",
																"src": "3873:7:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3863:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3863:6:15"
																}
															]
														},
														{
															"nativeSrc": "3889:48:15",
															"nodeType": "YulAssignment",
															"src": "3889:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3921:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3921:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3932:3:15",
																				"nodeType": "YulLiteral",
																				"src": "3932:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3917:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:15"
																		},
																		"nativeSrc": "3917:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3917:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint96",
																	"nativeSrc": "3899:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "3899:17:15"
																},
																"nativeSrc": "3899:38:15",
																"nodeType": "YulFunctionCall",
																"src": "3899:38:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "3889:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3889:6:15"
																}
															]
														},
														{
															"nativeSrc": "3946:48:15",
															"nodeType": "YulAssignment",
															"src": "3946:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3978:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3978:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3989:3:15",
																				"nodeType": "YulLiteral",
																				"src": "3989:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3974:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3974:3:15"
																		},
																		"nativeSrc": "3974:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3974:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint96",
																	"nativeSrc": "3956:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "3956:17:15"
																},
																"nativeSrc": "3956:38:15",
																"nodeType": "YulFunctionCall",
																"src": "3956:38:15"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "3946:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3946:6:15"
																}
															]
														},
														{
															"nativeSrc": "4003:48:15",
															"nodeType": "YulAssignment",
															"src": "4003:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4035:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4035:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4046:3:15",
																				"nodeType": "YulLiteral",
																				"src": "4046:3:15",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4031:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4031:3:15"
																		},
																		"nativeSrc": "4031:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4031:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint96",
																	"nativeSrc": "4013:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "4013:17:15"
																},
																"nativeSrc": "4013:38:15",
																"nodeType": "YulFunctionCall",
																"src": "4013:38:15"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "4003:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4003:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint96t_uint96t_uint96",
												"nativeSrc": "3188:869:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3275:9:15",
														"nodeType": "YulTypedName",
														"src": "3275:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3286:7:15",
														"nodeType": "YulTypedName",
														"src": "3286:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3298:6:15",
														"nodeType": "YulTypedName",
														"src": "3298:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3306:6:15",
														"nodeType": "YulTypedName",
														"src": "3306:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3314:6:15",
														"nodeType": "YulTypedName",
														"src": "3314:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3322:6:15",
														"nodeType": "YulTypedName",
														"src": "3322:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3330:6:15",
														"nodeType": "YulTypedName",
														"src": "3330:6:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3338:6:15",
														"nodeType": "YulTypedName",
														"src": "3338:6:15",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3346:6:15",
														"nodeType": "YulTypedName",
														"src": "3346:6:15",
														"type": ""
													}
												],
												"src": "3188:869:15"
											},
											{
												"body": {
													"nativeSrc": "4163:76:15",
													"nodeType": "YulBlock",
													"src": "4163:76:15",
													"statements": [
														{
															"nativeSrc": "4173:26:15",
															"nodeType": "YulAssignment",
															"src": "4173:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4185:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4185:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4196:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4196:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4181:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4181:3:15"
																},
																"nativeSrc": "4181:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4181:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4173:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4173:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4215:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4215:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4226:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4226:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4208:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4208:6:15"
																},
																"nativeSrc": "4208:25:15",
																"nodeType": "YulFunctionCall",
																"src": "4208:25:15"
															},
															"nativeSrc": "4208:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "4208:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4062:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4132:9:15",
														"nodeType": "YulTypedName",
														"src": "4132:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4143:6:15",
														"nodeType": "YulTypedName",
														"src": "4143:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4154:4:15",
														"nodeType": "YulTypedName",
														"src": "4154:4:15",
														"type": ""
													}
												],
												"src": "4062:177:15"
											},
											{
												"body": {
													"nativeSrc": "4348:404:15",
													"nodeType": "YulBlock",
													"src": "4348:404:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4394:16:15",
																"nodeType": "YulBlock",
																"src": "4394:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4403:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4403:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4406:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4406:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4396:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4396:6:15"
																			},
																			"nativeSrc": "4396:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4396:12:15"
																		},
																		"nativeSrc": "4396:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4396:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4369:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4369:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4378:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4378:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4365:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4365:3:15"
																		},
																		"nativeSrc": "4365:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4365:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4390:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4390:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4361:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4361:3:15"
																},
																"nativeSrc": "4361:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4361:32:15"
															},
															"nativeSrc": "4358:52:15",
															"nodeType": "YulIf",
															"src": "4358:52:15"
														},
														{
															"nativeSrc": "4419:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4419:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4445:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4445:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4432:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4432:12:15"
																},
																"nativeSrc": "4432:23:15",
																"nodeType": "YulFunctionCall",
																"src": "4432:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4423:5:15",
																	"nodeType": "YulTypedName",
																	"src": "4423:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4489:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4489:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4464:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "4464:24:15"
																},
																"nativeSrc": "4464:31:15",
																"nodeType": "YulFunctionCall",
																"src": "4464:31:15"
															},
															"nativeSrc": "4464:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "4464:31:15"
														},
														{
															"nativeSrc": "4504:15:15",
															"nodeType": "YulAssignment",
															"src": "4504:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "4514:5:15",
																"nodeType": "YulIdentifier",
																"src": "4514:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4504:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4504:6:15"
																}
															]
														},
														{
															"nativeSrc": "4528:47:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4528:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4560:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4560:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4571:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4571:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4556:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4556:3:15"
																		},
																		"nativeSrc": "4556:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4556:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4543:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4543:12:15"
																},
																"nativeSrc": "4543:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4543:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4532:7:15",
																	"nodeType": "YulTypedName",
																	"src": "4532:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "4609:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "4609:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4584:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "4584:24:15"
																},
																"nativeSrc": "4584:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4584:33:15"
															},
															"nativeSrc": "4584:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "4584:33:15"
														},
														{
															"nativeSrc": "4626:17:15",
															"nodeType": "YulAssignment",
															"src": "4626:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "4636:7:15",
																"nodeType": "YulIdentifier",
																"src": "4636:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4626:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4626:6:15"
																}
															]
														},
														{
															"nativeSrc": "4652:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4652:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4667:1:15",
																"nodeType": "YulLiteral",
																"src": "4667:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "4656:7:15",
																	"nodeType": "YulTypedName",
																	"src": "4656:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4677:43:15",
															"nodeType": "YulAssignment",
															"src": "4677:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4705:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4705:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4716:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4716:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4701:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4701:3:15"
																		},
																		"nativeSrc": "4701:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4701:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4688:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4688:12:15"
																},
																"nativeSrc": "4688:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4688:32:15"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "4677:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "4677:7:15"
																}
															]
														},
														{
															"nativeSrc": "4729:17:15",
															"nodeType": "YulAssignment",
															"src": "4729:17:15",
															"value": {
																"name": "value_2",
																"nativeSrc": "4739:7:15",
																"nodeType": "YulIdentifier",
																"src": "4739:7:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4729:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4729:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4244:508:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4298:9:15",
														"nodeType": "YulTypedName",
														"src": "4298:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4309:7:15",
														"nodeType": "YulTypedName",
														"src": "4309:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4321:6:15",
														"nodeType": "YulTypedName",
														"src": "4321:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4329:6:15",
														"nodeType": "YulTypedName",
														"src": "4329:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4337:6:15",
														"nodeType": "YulTypedName",
														"src": "4337:6:15",
														"type": ""
													}
												],
												"src": "4244:508:15"
											},
											{
												"body": {
													"nativeSrc": "4858:125:15",
													"nodeType": "YulBlock",
													"src": "4858:125:15",
													"statements": [
														{
															"nativeSrc": "4868:26:15",
															"nodeType": "YulAssignment",
															"src": "4868:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4880:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4880:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4891:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4891:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4876:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4876:3:15"
																},
																"nativeSrc": "4876:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4876:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4868:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4868:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4910:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4910:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4925:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4925:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4933:42:15",
																				"nodeType": "YulLiteral",
																				"src": "4933:42:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4921:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4921:3:15"
																		},
																		"nativeSrc": "4921:55:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4921:55:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4903:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4903:6:15"
																},
																"nativeSrc": "4903:74:15",
																"nodeType": "YulFunctionCall",
																"src": "4903:74:15"
															},
															"nativeSrc": "4903:74:15",
															"nodeType": "YulExpressionStatement",
															"src": "4903:74:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4757:226:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4827:9:15",
														"nodeType": "YulTypedName",
														"src": "4827:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4838:6:15",
														"nodeType": "YulTypedName",
														"src": "4838:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4849:4:15",
														"nodeType": "YulTypedName",
														"src": "4849:4:15",
														"type": ""
													}
												],
												"src": "4757:226:15"
											},
											{
												"body": {
													"nativeSrc": "5058:177:15",
													"nodeType": "YulBlock",
													"src": "5058:177:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5104:16:15",
																"nodeType": "YulBlock",
																"src": "5104:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5113:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5113:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5116:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5116:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5106:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5106:6:15"
																			},
																			"nativeSrc": "5106:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5106:12:15"
																		},
																		"nativeSrc": "5106:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5106:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5079:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5079:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5088:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5088:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5075:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5075:3:15"
																		},
																		"nativeSrc": "5075:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5075:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5100:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5100:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5071:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5071:3:15"
																},
																"nativeSrc": "5071:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5071:32:15"
															},
															"nativeSrc": "5068:52:15",
															"nodeType": "YulIf",
															"src": "5068:52:15"
														},
														{
															"nativeSrc": "5129:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5129:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5155:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5155:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5142:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "5142:12:15"
																},
																"nativeSrc": "5142:23:15",
																"nodeType": "YulFunctionCall",
																"src": "5142:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5133:5:15",
																	"nodeType": "YulTypedName",
																	"src": "5133:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5199:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5199:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5174:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "5174:24:15"
																},
																"nativeSrc": "5174:31:15",
																"nodeType": "YulFunctionCall",
																"src": "5174:31:15"
															},
															"nativeSrc": "5174:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "5174:31:15"
														},
														{
															"nativeSrc": "5214:15:15",
															"nodeType": "YulAssignment",
															"src": "5214:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "5224:5:15",
																"nodeType": "YulIdentifier",
																"src": "5224:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5214:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5214:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4988:247:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5024:9:15",
														"nodeType": "YulTypedName",
														"src": "5024:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5035:7:15",
														"nodeType": "YulTypedName",
														"src": "5035:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5047:6:15",
														"nodeType": "YulTypedName",
														"src": "5047:6:15",
														"type": ""
													}
												],
												"src": "4988:247:15"
											},
											{
												"body": {
													"nativeSrc": "5327:280:15",
													"nodeType": "YulBlock",
													"src": "5327:280:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5373:16:15",
																"nodeType": "YulBlock",
																"src": "5373:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5382:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5382:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5385:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5385:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5375:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5375:6:15"
																			},
																			"nativeSrc": "5375:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5375:12:15"
																		},
																		"nativeSrc": "5375:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5375:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5348:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5348:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5357:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5357:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5344:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5344:3:15"
																		},
																		"nativeSrc": "5344:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5344:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5369:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5369:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5340:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5340:3:15"
																},
																"nativeSrc": "5340:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5340:32:15"
															},
															"nativeSrc": "5337:52:15",
															"nodeType": "YulIf",
															"src": "5337:52:15"
														},
														{
															"nativeSrc": "5398:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5398:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5424:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5424:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5411:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "5411:12:15"
																},
																"nativeSrc": "5411:23:15",
																"nodeType": "YulFunctionCall",
																"src": "5411:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5402:5:15",
																	"nodeType": "YulTypedName",
																	"src": "5402:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5468:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5468:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5443:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "5443:24:15"
																},
																"nativeSrc": "5443:31:15",
																"nodeType": "YulFunctionCall",
																"src": "5443:31:15"
															},
															"nativeSrc": "5443:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "5443:31:15"
														},
														{
															"nativeSrc": "5483:15:15",
															"nodeType": "YulAssignment",
															"src": "5483:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "5493:5:15",
																"nodeType": "YulIdentifier",
																"src": "5493:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5483:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5483:6:15"
																}
															]
														},
														{
															"nativeSrc": "5507:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5507:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "5522:1:15",
																"nodeType": "YulLiteral",
																"src": "5522:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "5511:7:15",
																	"nodeType": "YulTypedName",
																	"src": "5511:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5532:43:15",
															"nodeType": "YulAssignment",
															"src": "5532:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5560:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5560:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5571:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5571:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5556:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5556:3:15"
																		},
																		"nativeSrc": "5556:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5556:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5543:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "5543:12:15"
																},
																"nativeSrc": "5543:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5543:32:15"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "5532:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "5532:7:15"
																}
															]
														},
														{
															"nativeSrc": "5584:17:15",
															"nodeType": "YulAssignment",
															"src": "5584:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "5594:7:15",
																"nodeType": "YulIdentifier",
																"src": "5594:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5584:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5584:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "5240:367:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5285:9:15",
														"nodeType": "YulTypedName",
														"src": "5285:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5296:7:15",
														"nodeType": "YulTypedName",
														"src": "5296:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5308:6:15",
														"nodeType": "YulTypedName",
														"src": "5308:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5316:6:15",
														"nodeType": "YulTypedName",
														"src": "5316:6:15",
														"type": ""
													}
												],
												"src": "5240:367:15"
											},
											{
												"body": {
													"nativeSrc": "5733:125:15",
													"nodeType": "YulBlock",
													"src": "5733:125:15",
													"statements": [
														{
															"nativeSrc": "5743:26:15",
															"nodeType": "YulAssignment",
															"src": "5743:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5755:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5755:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5766:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5766:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5751:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5751:3:15"
																},
																"nativeSrc": "5751:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5751:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5743:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5743:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5785:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5785:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5800:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5800:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5808:42:15",
																				"nodeType": "YulLiteral",
																				"src": "5808:42:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5796:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5796:3:15"
																		},
																		"nativeSrc": "5796:55:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5796:55:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5778:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5778:6:15"
																},
																"nativeSrc": "5778:74:15",
																"nodeType": "YulFunctionCall",
																"src": "5778:74:15"
															},
															"nativeSrc": "5778:74:15",
															"nodeType": "YulExpressionStatement",
															"src": "5778:74:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ICREDIWhale_$2100__to_t_address__fromStack_reversed",
												"nativeSrc": "5612:246:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5702:9:15",
														"nodeType": "YulTypedName",
														"src": "5702:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5713:6:15",
														"nodeType": "YulTypedName",
														"src": "5713:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5724:4:15",
														"nodeType": "YulTypedName",
														"src": "5724:4:15",
														"type": ""
													}
												],
												"src": "5612:246:15"
											},
											{
												"body": {
													"nativeSrc": "6102:376:15",
													"nodeType": "YulBlock",
													"src": "6102:376:15",
													"statements": [
														{
															"nativeSrc": "6112:27:15",
															"nodeType": "YulAssignment",
															"src": "6112:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6124:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6124:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6135:3:15",
																		"nodeType": "YulLiteral",
																		"src": "6135:3:15",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6120:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6120:3:15"
																},
																"nativeSrc": "6120:19:15",
																"nodeType": "YulFunctionCall",
																"src": "6120:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6112:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6112:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6155:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6155:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6170:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6170:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6178:42:15",
																				"nodeType": "YulLiteral",
																				"src": "6178:42:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6166:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6166:3:15"
																		},
																		"nativeSrc": "6166:55:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6166:55:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6148:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:15"
																},
																"nativeSrc": "6148:74:15",
																"nodeType": "YulFunctionCall",
																"src": "6148:74:15"
															},
															"nativeSrc": "6148:74:15",
															"nodeType": "YulExpressionStatement",
															"src": "6148:74:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6242:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6242:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6253:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6253:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6238:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6238:3:15"
																		},
																		"nativeSrc": "6238:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6238:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6258:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6258:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6231:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6231:6:15"
																},
																"nativeSrc": "6231:34:15",
																"nodeType": "YulFunctionCall",
																"src": "6231:34:15"
															},
															"nativeSrc": "6231:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "6231:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6285:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6285:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6296:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6296:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6281:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6281:3:15"
																		},
																		"nativeSrc": "6281:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6281:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "6305:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6305:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6313:26:15",
																				"nodeType": "YulLiteral",
																				"src": "6313:26:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6301:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6301:3:15"
																		},
																		"nativeSrc": "6301:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6301:39:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6274:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6274:6:15"
																},
																"nativeSrc": "6274:67:15",
																"nodeType": "YulFunctionCall",
																"src": "6274:67:15"
															},
															"nativeSrc": "6274:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "6274:67:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6361:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6361:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6372:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6372:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6357:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6357:3:15"
																		},
																		"nativeSrc": "6357:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6357:18:15"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "6377:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6350:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6350:6:15"
																},
																"nativeSrc": "6350:34:15",
																"nodeType": "YulFunctionCall",
																"src": "6350:34:15"
															},
															"nativeSrc": "6350:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "6350:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6404:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6404:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6415:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6415:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6400:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6400:3:15"
																		},
																		"nativeSrc": "6400:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6400:19:15"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "6421:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6421:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6393:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6393:6:15"
																},
																"nativeSrc": "6393:35:15",
																"nodeType": "YulFunctionCall",
																"src": "6393:35:15"
															},
															"nativeSrc": "6393:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "6393:35:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6448:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6448:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6459:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6459:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6444:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6444:3:15"
																		},
																		"nativeSrc": "6444:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6444:19:15"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "6465:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6465:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6437:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6437:6:15"
																},
																"nativeSrc": "6437:35:15",
																"nodeType": "YulFunctionCall",
																"src": "6437:35:15"
															},
															"nativeSrc": "6437:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "6437:35:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint96_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint96_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5863:615:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6031:9:15",
														"nodeType": "YulTypedName",
														"src": "6031:9:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6042:6:15",
														"nodeType": "YulTypedName",
														"src": "6042:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6050:6:15",
														"nodeType": "YulTypedName",
														"src": "6050:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6058:6:15",
														"nodeType": "YulTypedName",
														"src": "6058:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6066:6:15",
														"nodeType": "YulTypedName",
														"src": "6066:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6074:6:15",
														"nodeType": "YulTypedName",
														"src": "6074:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6082:6:15",
														"nodeType": "YulTypedName",
														"src": "6082:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6093:4:15",
														"nodeType": "YulTypedName",
														"src": "6093:4:15",
														"type": ""
													}
												],
												"src": "5863:615:15"
											},
											{
												"body": {
													"nativeSrc": "6657:177:15",
													"nodeType": "YulBlock",
													"src": "6657:177:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6674:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6674:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6685:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6685:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6667:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6667:6:15"
																},
																"nativeSrc": "6667:21:15",
																"nodeType": "YulFunctionCall",
																"src": "6667:21:15"
															},
															"nativeSrc": "6667:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "6667:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6708:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6708:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6719:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6719:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6704:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6704:3:15"
																		},
																		"nativeSrc": "6704:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6704:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6724:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6724:2:15",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6697:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6697:6:15"
																},
																"nativeSrc": "6697:30:15",
																"nodeType": "YulFunctionCall",
																"src": "6697:30:15"
															},
															"nativeSrc": "6697:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "6697:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6747:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6747:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6758:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6758:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6743:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:15"
																		},
																		"nativeSrc": "6743:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6743:18:15"
																	},
																	{
																		"hexValue": "4c505374616b696e673a496e76616c6964205374616b6520494421",
																		"kind": "string",
																		"nativeSrc": "6763:29:15",
																		"nodeType": "YulLiteral",
																		"src": "6763:29:15",
																		"type": "",
																		"value": "LPStaking:Invalid Stake ID!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6736:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6736:6:15"
																},
																"nativeSrc": "6736:57:15",
																"nodeType": "YulFunctionCall",
																"src": "6736:57:15"
															},
															"nativeSrc": "6736:57:15",
															"nodeType": "YulExpressionStatement",
															"src": "6736:57:15"
														},
														{
															"nativeSrc": "6802:26:15",
															"nodeType": "YulAssignment",
															"src": "6802:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6814:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6814:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6825:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6825:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6810:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6810:3:15"
																},
																"nativeSrc": "6810:18:15",
																"nodeType": "YulFunctionCall",
																"src": "6810:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6802:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6802:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0e16e6a30f81a14a3750dadd850a42a6a565cd1e2e793344412756e6597d7eb3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6483:351:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6634:9:15",
														"nodeType": "YulTypedName",
														"src": "6634:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6648:4:15",
														"nodeType": "YulTypedName",
														"src": "6648:4:15",
														"type": ""
													}
												],
												"src": "6483:351:15"
											},
											{
												"body": {
													"nativeSrc": "6871:95:15",
													"nodeType": "YulBlock",
													"src": "6871:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6888:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6888:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6895:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6895:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6900:10:15",
																				"nodeType": "YulLiteral",
																				"src": "6900:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6891:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6891:3:15"
																		},
																		"nativeSrc": "6891:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6891:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6881:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6881:6:15"
																},
																"nativeSrc": "6881:31:15",
																"nodeType": "YulFunctionCall",
																"src": "6881:31:15"
															},
															"nativeSrc": "6881:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "6881:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6928:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6928:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6931:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6931:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6921:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6921:6:15"
																},
																"nativeSrc": "6921:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6921:15:15"
															},
															"nativeSrc": "6921:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "6921:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6952:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6952:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6955:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6955:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6945:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6945:6:15"
																},
																"nativeSrc": "6945:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6945:15:15"
															},
															"nativeSrc": "6945:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "6945:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6839:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "6839:127:15"
											},
											{
												"body": {
													"nativeSrc": "7018:168:15",
													"nodeType": "YulBlock",
													"src": "7018:168:15",
													"statements": [
														{
															"nativeSrc": "7028:82:15",
															"nodeType": "YulAssignment",
															"src": "7028:82:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "7043:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "7043:1:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7046:26:15",
																				"nodeType": "YulLiteral",
																				"src": "7046:26:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7039:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7039:3:15"
																		},
																		"nativeSrc": "7039:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7039:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "7079:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "7079:1:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7082:26:15",
																				"nodeType": "YulLiteral",
																				"src": "7082:26:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7075:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7075:3:15"
																		},
																		"nativeSrc": "7075:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7075:34:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7035:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7035:3:15"
																},
																"nativeSrc": "7035:75:15",
																"nodeType": "YulFunctionCall",
																"src": "7035:75:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7028:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7028:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7158:22:15",
																"nodeType": "YulBlock",
																"src": "7158:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7160:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7160:16:15"
																			},
																			"nativeSrc": "7160:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7160:18:15"
																		},
																		"nativeSrc": "7160:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7160:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "7125:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7125:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7130:26:15",
																		"nodeType": "YulLiteral",
																		"src": "7130:26:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7122:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7122:2:15"
																},
																"nativeSrc": "7122:35:15",
																"nodeType": "YulFunctionCall",
																"src": "7122:35:15"
															},
															"nativeSrc": "7119:61:15",
															"nodeType": "YulIf",
															"src": "7119:61:15"
														}
													]
												},
												"name": "checked_add_t_uint96",
												"nativeSrc": "6971:215:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7001:1:15",
														"nodeType": "YulTypedName",
														"src": "7001:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7004:1:15",
														"nodeType": "YulTypedName",
														"src": "7004:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7010:3:15",
														"nodeType": "YulTypedName",
														"src": "7010:3:15",
														"type": ""
													}
												],
												"src": "6971:215:15"
											},
											{
												"body": {
													"nativeSrc": "7223:95:15",
													"nodeType": "YulBlock",
													"src": "7223:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7240:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7240:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7247:3:15",
																				"nodeType": "YulLiteral",
																				"src": "7247:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7252:10:15",
																				"nodeType": "YulLiteral",
																				"src": "7252:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7243:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7243:3:15"
																		},
																		"nativeSrc": "7243:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7243:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7233:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7233:6:15"
																},
																"nativeSrc": "7233:31:15",
																"nodeType": "YulFunctionCall",
																"src": "7233:31:15"
															},
															"nativeSrc": "7233:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "7233:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7280:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7280:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7283:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7283:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7273:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7273:6:15"
																},
																"nativeSrc": "7273:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7273:15:15"
															},
															"nativeSrc": "7273:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7273:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7304:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7304:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7307:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7307:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7297:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7297:6:15"
																},
																"nativeSrc": "7297:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7297:15:15"
															},
															"nativeSrc": "7297:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7297:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7191:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "7191:127:15"
											},
											{
												"body": {
													"nativeSrc": "7372:79:15",
													"nodeType": "YulBlock",
													"src": "7372:79:15",
													"statements": [
														{
															"nativeSrc": "7382:17:15",
															"nodeType": "YulAssignment",
															"src": "7382:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7394:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "7394:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7397:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "7397:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7390:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7390:3:15"
																},
																"nativeSrc": "7390:9:15",
																"nodeType": "YulFunctionCall",
																"src": "7390:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7382:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7382:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7423:22:15",
																"nodeType": "YulBlock",
																"src": "7423:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7425:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7425:16:15"
																			},
																			"nativeSrc": "7425:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7425:18:15"
																		},
																		"nativeSrc": "7425:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7425:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7414:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7414:4:15"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7420:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "7420:1:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7411:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7411:2:15"
																},
																"nativeSrc": "7411:11:15",
																"nodeType": "YulFunctionCall",
																"src": "7411:11:15"
															},
															"nativeSrc": "7408:37:15",
															"nodeType": "YulIf",
															"src": "7408:37:15"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7323:128:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7354:1:15",
														"nodeType": "YulTypedName",
														"src": "7354:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7357:1:15",
														"nodeType": "YulTypedName",
														"src": "7357:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7363:4:15",
														"nodeType": "YulTypedName",
														"src": "7363:4:15",
														"type": ""
													}
												],
												"src": "7323:128:15"
											},
											{
												"body": {
													"nativeSrc": "7630:176:15",
													"nodeType": "YulBlock",
													"src": "7630:176:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7647:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7647:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7658:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7658:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7640:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7640:6:15"
																},
																"nativeSrc": "7640:21:15",
																"nodeType": "YulFunctionCall",
																"src": "7640:21:15"
															},
															"nativeSrc": "7640:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "7640:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7681:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7681:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7692:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7692:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7677:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7677:3:15"
																		},
																		"nativeSrc": "7677:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7677:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7697:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7697:2:15",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7670:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:15"
																},
																"nativeSrc": "7670:30:15",
																"nodeType": "YulFunctionCall",
																"src": "7670:30:15"
															},
															"nativeSrc": "7670:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "7670:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7720:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7720:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7731:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7731:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7716:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7716:3:15"
																		},
																		"nativeSrc": "7716:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7716:18:15"
																	},
																	{
																		"hexValue": "4c505374616b696e673a496e76616c696420506f6f6c20494421",
																		"kind": "string",
																		"nativeSrc": "7736:28:15",
																		"nodeType": "YulLiteral",
																		"src": "7736:28:15",
																		"type": "",
																		"value": "LPStaking:Invalid Pool ID!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7709:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7709:6:15"
																},
																"nativeSrc": "7709:56:15",
																"nodeType": "YulFunctionCall",
																"src": "7709:56:15"
															},
															"nativeSrc": "7709:56:15",
															"nodeType": "YulExpressionStatement",
															"src": "7709:56:15"
														},
														{
															"nativeSrc": "7774:26:15",
															"nodeType": "YulAssignment",
															"src": "7774:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7786:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7786:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7797:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7797:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7782:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7782:3:15"
																},
																"nativeSrc": "7782:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7782:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7774:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7774:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9609bed7fe5874993a0e45025cb75d78736e0e5d28fc319f68fd61927d3a2555__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7456:350:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7607:9:15",
														"nodeType": "YulTypedName",
														"src": "7607:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7621:4:15",
														"nodeType": "YulTypedName",
														"src": "7621:4:15",
														"type": ""
													}
												],
												"src": "7456:350:15"
											},
											{
												"body": {
													"nativeSrc": "7985:176:15",
													"nodeType": "YulBlock",
													"src": "7985:176:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8002:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8002:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8013:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8013:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7995:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:15"
																},
																"nativeSrc": "7995:21:15",
																"nodeType": "YulFunctionCall",
																"src": "7995:21:15"
															},
															"nativeSrc": "7995:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "7995:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8036:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8036:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8047:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8047:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8032:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8032:3:15"
																		},
																		"nativeSrc": "8032:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8032:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8052:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8052:2:15",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8025:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8025:6:15"
																},
																"nativeSrc": "8025:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8025:30:15"
															},
															"nativeSrc": "8025:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "8025:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8075:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8075:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8086:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8086:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8071:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8071:3:15"
																		},
																		"nativeSrc": "8071:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8071:18:15"
																	},
																	{
																		"hexValue": "4c505374616b696e673a6d617820617079206973203130303025",
																		"kind": "string",
																		"nativeSrc": "8091:28:15",
																		"nodeType": "YulLiteral",
																		"src": "8091:28:15",
																		"type": "",
																		"value": "LPStaking:max apy is 1000%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8064:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8064:6:15"
																},
																"nativeSrc": "8064:56:15",
																"nodeType": "YulFunctionCall",
																"src": "8064:56:15"
															},
															"nativeSrc": "8064:56:15",
															"nodeType": "YulExpressionStatement",
															"src": "8064:56:15"
														},
														{
															"nativeSrc": "8129:26:15",
															"nodeType": "YulAssignment",
															"src": "8129:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8141:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8141:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8152:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8152:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8137:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8137:3:15"
																},
																"nativeSrc": "8137:18:15",
																"nodeType": "YulFunctionCall",
																"src": "8137:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8129:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8129:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48745a825c3a66aabc6ad4692f5fa1ce6747939b3796aa484c27ba9fdcf82213__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7811:350:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7962:9:15",
														"nodeType": "YulTypedName",
														"src": "7962:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7976:4:15",
														"nodeType": "YulTypedName",
														"src": "7976:4:15",
														"type": ""
													}
												],
												"src": "7811:350:15"
											},
											{
												"body": {
													"nativeSrc": "8340:223:15",
													"nodeType": "YulBlock",
													"src": "8340:223:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8357:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8357:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8368:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8368:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8350:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8350:6:15"
																},
																"nativeSrc": "8350:21:15",
																"nodeType": "YulFunctionCall",
																"src": "8350:21:15"
															},
															"nativeSrc": "8350:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "8350:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8391:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8391:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8402:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8402:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8387:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8387:3:15"
																		},
																		"nativeSrc": "8387:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8387:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8407:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8407:2:15",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8380:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8380:6:15"
																},
																"nativeSrc": "8380:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8380:30:15"
															},
															"nativeSrc": "8380:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "8380:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8430:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8430:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8441:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8441:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8426:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8426:3:15"
																		},
																		"nativeSrc": "8426:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8426:18:15"
																	},
																	{
																		"hexValue": "4c505374616b696e673a43616c6c6572206973206e6f7420746865206f776e65",
																		"kind": "string",
																		"nativeSrc": "8446:34:15",
																		"nodeType": "YulLiteral",
																		"src": "8446:34:15",
																		"type": "",
																		"value": "LPStaking:Caller is not the owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8419:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8419:6:15"
																},
																"nativeSrc": "8419:62:15",
																"nodeType": "YulFunctionCall",
																"src": "8419:62:15"
															},
															"nativeSrc": "8419:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "8419:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8501:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8501:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8512:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8512:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8497:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8497:3:15"
																		},
																		"nativeSrc": "8497:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8497:18:15"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "8517:3:15",
																		"nodeType": "YulLiteral",
																		"src": "8517:3:15",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8490:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8490:6:15"
																},
																"nativeSrc": "8490:31:15",
																"nodeType": "YulFunctionCall",
																"src": "8490:31:15"
															},
															"nativeSrc": "8490:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "8490:31:15"
														},
														{
															"nativeSrc": "8530:27:15",
															"nodeType": "YulAssignment",
															"src": "8530:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8542:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8542:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8553:3:15",
																		"nodeType": "YulLiteral",
																		"src": "8553:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8538:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8538:3:15"
																},
																"nativeSrc": "8538:19:15",
																"nodeType": "YulFunctionCall",
																"src": "8538:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8530:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8530:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a12b524a3be40694ffb0d5bc0958fc55168fc7cda344718aab4c0bc96880da50__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8166:397:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8317:9:15",
														"nodeType": "YulTypedName",
														"src": "8317:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8331:4:15",
														"nodeType": "YulTypedName",
														"src": "8331:4:15",
														"type": ""
													}
												],
												"src": "8166:397:15"
											},
											{
												"body": {
													"nativeSrc": "8742:234:15",
													"nodeType": "YulBlock",
													"src": "8742:234:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8759:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8759:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8770:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8770:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8752:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8752:6:15"
																},
																"nativeSrc": "8752:21:15",
																"nodeType": "YulFunctionCall",
																"src": "8752:21:15"
															},
															"nativeSrc": "8752:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "8752:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8793:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8793:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8804:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8804:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8789:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8789:3:15"
																		},
																		"nativeSrc": "8789:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8789:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8809:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8809:2:15",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8782:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8782:6:15"
																},
																"nativeSrc": "8782:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8782:30:15"
															},
															"nativeSrc": "8782:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "8782:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8832:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8832:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8843:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8843:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8828:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8828:3:15"
																		},
																		"nativeSrc": "8828:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8828:18:15"
																	},
																	{
																		"hexValue": "4c505374616b696e673a4561726c79205769746864726177616c206973206e6f",
																		"kind": "string",
																		"nativeSrc": "8848:34:15",
																		"nodeType": "YulLiteral",
																		"src": "8848:34:15",
																		"type": "",
																		"value": "LPStaking:Early Withdrawal is no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8821:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8821:6:15"
																},
																"nativeSrc": "8821:62:15",
																"nodeType": "YulFunctionCall",
																"src": "8821:62:15"
															},
															"nativeSrc": "8821:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "8821:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8903:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8903:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8914:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8914:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8899:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8899:3:15"
																		},
																		"nativeSrc": "8899:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8899:18:15"
																	},
																	{
																		"hexValue": "74207065726d697474656421",
																		"kind": "string",
																		"nativeSrc": "8919:14:15",
																		"nodeType": "YulLiteral",
																		"src": "8919:14:15",
																		"type": "",
																		"value": "t permitted!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8892:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8892:6:15"
																},
																"nativeSrc": "8892:42:15",
																"nodeType": "YulFunctionCall",
																"src": "8892:42:15"
															},
															"nativeSrc": "8892:42:15",
															"nodeType": "YulExpressionStatement",
															"src": "8892:42:15"
														},
														{
															"nativeSrc": "8943:27:15",
															"nodeType": "YulAssignment",
															"src": "8943:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8955:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8955:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8966:3:15",
																		"nodeType": "YulLiteral",
																		"src": "8966:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8951:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8951:3:15"
																},
																"nativeSrc": "8951:19:15",
																"nodeType": "YulFunctionCall",
																"src": "8951:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8943:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8943:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f05035c333f8eea86681a079e9dbbf83f20c2edbd12293e704e25b5c79f55ebb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8568:408:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8719:9:15",
														"nodeType": "YulTypedName",
														"src": "8719:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8733:4:15",
														"nodeType": "YulTypedName",
														"src": "8733:4:15",
														"type": ""
													}
												],
												"src": "8568:408:15"
											},
											{
												"body": {
													"nativeSrc": "9155:176:15",
													"nodeType": "YulBlock",
													"src": "9155:176:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9172:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9172:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9183:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9183:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9165:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9165:6:15"
																},
																"nativeSrc": "9165:21:15",
																"nodeType": "YulFunctionCall",
																"src": "9165:21:15"
															},
															"nativeSrc": "9165:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "9165:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9206:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9206:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9217:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9217:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9202:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9202:3:15"
																		},
																		"nativeSrc": "9202:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9202:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9222:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9222:2:15",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9195:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9195:6:15"
																},
																"nativeSrc": "9195:30:15",
																"nodeType": "YulFunctionCall",
																"src": "9195:30:15"
															},
															"nativeSrc": "9195:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "9195:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9245:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9245:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9256:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9256:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9241:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9241:3:15"
																		},
																		"nativeSrc": "9241:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9241:18:15"
																	},
																	{
																		"hexValue": "4c505374616b696e673a4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "9261:28:15",
																		"nodeType": "YulLiteral",
																		"src": "9261:28:15",
																		"type": "",
																		"value": "LPStaking:Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9234:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9234:6:15"
																},
																"nativeSrc": "9234:56:15",
																"nodeType": "YulFunctionCall",
																"src": "9234:56:15"
															},
															"nativeSrc": "9234:56:15",
															"nodeType": "YulExpressionStatement",
															"src": "9234:56:15"
														},
														{
															"nativeSrc": "9299:26:15",
															"nodeType": "YulAssignment",
															"src": "9299:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9311:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9311:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9322:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9322:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9307:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9307:3:15"
																},
																"nativeSrc": "9307:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9307:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9299:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9299:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e59456cdc9cfda50f9f5660769488a43bd3f02d37b1d88f2648a4b04115dc9d4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8981:350:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9132:9:15",
														"nodeType": "YulTypedName",
														"src": "9132:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9146:4:15",
														"nodeType": "YulTypedName",
														"src": "9146:4:15",
														"type": ""
													}
												],
												"src": "8981:350:15"
											},
											{
												"body": {
													"nativeSrc": "9510:239:15",
													"nodeType": "YulBlock",
													"src": "9510:239:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9527:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9527:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9538:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9538:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9520:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9520:6:15"
																},
																"nativeSrc": "9520:21:15",
																"nodeType": "YulFunctionCall",
																"src": "9520:21:15"
															},
															"nativeSrc": "9520:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "9520:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9561:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9561:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9572:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9572:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9557:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9557:3:15"
																		},
																		"nativeSrc": "9557:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9557:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9577:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9577:2:15",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9550:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9550:6:15"
																},
																"nativeSrc": "9550:30:15",
																"nodeType": "YulFunctionCall",
																"src": "9550:30:15"
															},
															"nativeSrc": "9550:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "9550:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9600:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9600:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9611:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9611:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9596:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9596:3:15"
																		},
																		"nativeSrc": "9596:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9596:18:15"
																	},
																	{
																		"hexValue": "4c505374616b696e673a7374616b655f616d6f756e74206d7573742062652067",
																		"kind": "string",
																		"nativeSrc": "9616:34:15",
																		"nodeType": "YulLiteral",
																		"src": "9616:34:15",
																		"type": "",
																		"value": "LPStaking:stake_amount must be g"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9589:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9589:6:15"
																},
																"nativeSrc": "9589:62:15",
																"nodeType": "YulFunctionCall",
																"src": "9589:62:15"
															},
															"nativeSrc": "9589:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "9589:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9671:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9671:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9682:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9682:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9667:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9667:3:15"
																		},
																		"nativeSrc": "9667:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9667:18:15"
																	},
																	{
																		"hexValue": "726561746572207468616e207a65726f21",
																		"kind": "string",
																		"nativeSrc": "9687:19:15",
																		"nodeType": "YulLiteral",
																		"src": "9687:19:15",
																		"type": "",
																		"value": "reater than zero!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9660:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9660:6:15"
																},
																"nativeSrc": "9660:47:15",
																"nodeType": "YulFunctionCall",
																"src": "9660:47:15"
															},
															"nativeSrc": "9660:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "9660:47:15"
														},
														{
															"nativeSrc": "9716:27:15",
															"nodeType": "YulAssignment",
															"src": "9716:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9728:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9728:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9739:3:15",
																		"nodeType": "YulLiteral",
																		"src": "9739:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9724:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9724:3:15"
																},
																"nativeSrc": "9724:19:15",
																"nodeType": "YulFunctionCall",
																"src": "9724:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9716:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9716:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a09483d25cc2fc12a7cf65e12568a6dd37259e605cfb897eb1abbbae1dbe9274__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9336:413:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9487:9:15",
														"nodeType": "YulTypedName",
														"src": "9487:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9501:4:15",
														"nodeType": "YulTypedName",
														"src": "9501:4:15",
														"type": ""
													}
												],
												"src": "9336:413:15"
											},
											{
												"body": {
													"nativeSrc": "9928:175:15",
													"nodeType": "YulBlock",
													"src": "9928:175:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9945:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9945:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9956:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9956:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9938:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9938:6:15"
																},
																"nativeSrc": "9938:21:15",
																"nodeType": "YulFunctionCall",
																"src": "9938:21:15"
															},
															"nativeSrc": "9938:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "9938:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9979:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9979:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9990:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9990:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9975:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9975:3:15"
																		},
																		"nativeSrc": "9975:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9975:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9995:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9995:2:15",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9968:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9968:6:15"
																},
																"nativeSrc": "9968:30:15",
																"nodeType": "YulFunctionCall",
																"src": "9968:30:15"
															},
															"nativeSrc": "9968:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "9968:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10018:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10018:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10029:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10029:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10014:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10014:3:15"
																		},
																		"nativeSrc": "10014:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10014:18:15"
																	},
																	{
																		"hexValue": "4c505374616b696e673a506f6f6c2069732070617573656421",
																		"kind": "string",
																		"nativeSrc": "10034:27:15",
																		"nodeType": "YulLiteral",
																		"src": "10034:27:15",
																		"type": "",
																		"value": "LPStaking:Pool is paused!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10007:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10007:6:15"
																},
																"nativeSrc": "10007:55:15",
																"nodeType": "YulFunctionCall",
																"src": "10007:55:15"
															},
															"nativeSrc": "10007:55:15",
															"nodeType": "YulExpressionStatement",
															"src": "10007:55:15"
														},
														{
															"nativeSrc": "10071:26:15",
															"nodeType": "YulAssignment",
															"src": "10071:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10083:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10083:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10094:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10094:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10079:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10079:3:15"
																},
																"nativeSrc": "10079:18:15",
																"nodeType": "YulFunctionCall",
																"src": "10079:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10071:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10071:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7413541967929611b36bcd89f295c92ebef45e79b12d187d4ae73575bb36f18c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9754:349:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9905:9:15",
														"nodeType": "YulTypedName",
														"src": "9905:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9919:4:15",
														"nodeType": "YulTypedName",
														"src": "9919:4:15",
														"type": ""
													}
												],
												"src": "9754:349:15"
											},
											{
												"body": {
													"nativeSrc": "10160:116:15",
													"nodeType": "YulBlock",
													"src": "10160:116:15",
													"statements": [
														{
															"nativeSrc": "10170:20:15",
															"nodeType": "YulAssignment",
															"src": "10170:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10185:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10185:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10188:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10188:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10181:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10181:3:15"
																},
																"nativeSrc": "10181:9:15",
																"nodeType": "YulFunctionCall",
																"src": "10181:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10170:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "10170:7:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10248:22:15",
																"nodeType": "YulBlock",
																"src": "10248:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10250:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "10250:16:15"
																			},
																			"nativeSrc": "10250:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10250:18:15"
																		},
																		"nativeSrc": "10250:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10250:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10219:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10219:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10212:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "10212:6:15"
																				},
																				"nativeSrc": "10212:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10212:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10226:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10226:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10233:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "10233:7:15"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10242:1:15",
																								"nodeType": "YulIdentifier",
																								"src": "10242:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10229:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "10229:3:15"
																						},
																						"nativeSrc": "10229:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "10229:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10223:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "10223:2:15"
																				},
																				"nativeSrc": "10223:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10223:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10209:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10209:2:15"
																		},
																		"nativeSrc": "10209:37:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10209:37:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10202:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10202:6:15"
																},
																"nativeSrc": "10202:45:15",
																"nodeType": "YulFunctionCall",
																"src": "10202:45:15"
															},
															"nativeSrc": "10199:71:15",
															"nodeType": "YulIf",
															"src": "10199:71:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10108:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10139:1:15",
														"nodeType": "YulTypedName",
														"src": "10139:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10142:1:15",
														"nodeType": "YulTypedName",
														"src": "10142:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10148:7:15",
														"nodeType": "YulTypedName",
														"src": "10148:7:15",
														"type": ""
													}
												],
												"src": "10108:168:15"
											},
											{
												"body": {
													"nativeSrc": "10327:171:15",
													"nodeType": "YulBlock",
													"src": "10327:171:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10358:111:15",
																"nodeType": "YulBlock",
																"src": "10358:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10379:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10379:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10386:3:15",
																							"nodeType": "YulLiteral",
																							"src": "10386:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10391:10:15",
																							"nodeType": "YulLiteral",
																							"src": "10391:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "10382:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "10382:3:15"
																					},
																					"nativeSrc": "10382:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10382:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10372:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10372:6:15"
																			},
																			"nativeSrc": "10372:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10372:31:15"
																		},
																		"nativeSrc": "10372:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10372:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10423:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10423:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10426:4:15",
																					"nodeType": "YulLiteral",
																					"src": "10426:4:15",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10416:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10416:6:15"
																			},
																			"nativeSrc": "10416:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10416:15:15"
																		},
																		"nativeSrc": "10416:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10416:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10451:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10451:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10454:4:15",
																					"nodeType": "YulLiteral",
																					"src": "10454:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10444:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10444:6:15"
																			},
																			"nativeSrc": "10444:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10444:15:15"
																		},
																		"nativeSrc": "10444:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10444:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10347:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10347:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10340:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10340:6:15"
																},
																"nativeSrc": "10340:9:15",
																"nodeType": "YulFunctionCall",
																"src": "10340:9:15"
															},
															"nativeSrc": "10337:132:15",
															"nodeType": "YulIf",
															"src": "10337:132:15"
														},
														{
															"nativeSrc": "10478:14:15",
															"nodeType": "YulAssignment",
															"src": "10478:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10487:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10487:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10490:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10490:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10483:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10483:3:15"
																},
																"nativeSrc": "10483:9:15",
																"nodeType": "YulFunctionCall",
																"src": "10483:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10478:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "10478:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10281:217:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10312:1:15",
														"nodeType": "YulTypedName",
														"src": "10312:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10315:1:15",
														"nodeType": "YulTypedName",
														"src": "10315:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10321:1:15",
														"nodeType": "YulTypedName",
														"src": "10321:1:15",
														"type": ""
													}
												],
												"src": "10281:217:15"
											},
											{
												"body": {
													"nativeSrc": "10581:199:15",
													"nodeType": "YulBlock",
													"src": "10581:199:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10627:16:15",
																"nodeType": "YulBlock",
																"src": "10627:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10636:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10636:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10639:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10639:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10629:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10629:6:15"
																			},
																			"nativeSrc": "10629:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10629:12:15"
																		},
																		"nativeSrc": "10629:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10629:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10602:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10602:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10611:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10611:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10598:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10598:3:15"
																		},
																		"nativeSrc": "10598:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10598:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10623:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10623:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10594:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10594:3:15"
																},
																"nativeSrc": "10594:32:15",
																"nodeType": "YulFunctionCall",
																"src": "10594:32:15"
															},
															"nativeSrc": "10591:52:15",
															"nodeType": "YulIf",
															"src": "10591:52:15"
														},
														{
															"nativeSrc": "10652:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10652:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10671:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10671:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10665:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10665:5:15"
																},
																"nativeSrc": "10665:16:15",
																"nodeType": "YulFunctionCall",
																"src": "10665:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10656:5:15",
																	"nodeType": "YulTypedName",
																	"src": "10656:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10734:16:15",
																"nodeType": "YulBlock",
																"src": "10734:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10743:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10743:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10746:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10746:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10736:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10736:6:15"
																			},
																			"nativeSrc": "10736:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10736:12:15"
																		},
																		"nativeSrc": "10736:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10736:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10703:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10703:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "10724:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "10724:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "10717:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "10717:6:15"
																						},
																						"nativeSrc": "10717:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "10717:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10710:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "10710:6:15"
																				},
																				"nativeSrc": "10710:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10710:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10700:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10700:2:15"
																		},
																		"nativeSrc": "10700:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10700:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10693:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10693:6:15"
																},
																"nativeSrc": "10693:40:15",
																"nodeType": "YulFunctionCall",
																"src": "10693:40:15"
															},
															"nativeSrc": "10690:60:15",
															"nodeType": "YulIf",
															"src": "10690:60:15"
														},
														{
															"nativeSrc": "10759:15:15",
															"nodeType": "YulAssignment",
															"src": "10759:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "10769:5:15",
																"nodeType": "YulIdentifier",
																"src": "10769:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10759:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10759:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10503:277:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10547:9:15",
														"nodeType": "YulTypedName",
														"src": "10547:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10558:7:15",
														"nodeType": "YulTypedName",
														"src": "10558:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10570:6:15",
														"nodeType": "YulTypedName",
														"src": "10570:6:15",
														"type": ""
													}
												],
												"src": "10503:277:15"
											},
											{
												"body": {
													"nativeSrc": "10866:103:15",
													"nodeType": "YulBlock",
													"src": "10866:103:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10912:16:15",
																"nodeType": "YulBlock",
																"src": "10912:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10921:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10921:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10924:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10924:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10914:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10914:6:15"
																			},
																			"nativeSrc": "10914:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10914:12:15"
																		},
																		"nativeSrc": "10914:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10914:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10887:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10887:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10896:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10896:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10883:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10883:3:15"
																		},
																		"nativeSrc": "10883:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10883:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10908:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10908:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10879:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10879:3:15"
																},
																"nativeSrc": "10879:32:15",
																"nodeType": "YulFunctionCall",
																"src": "10879:32:15"
															},
															"nativeSrc": "10876:52:15",
															"nodeType": "YulIf",
															"src": "10876:52:15"
														},
														{
															"nativeSrc": "10937:26:15",
															"nodeType": "YulAssignment",
															"src": "10937:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10953:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10953:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10947:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10947:5:15"
																},
																"nativeSrc": "10947:16:15",
																"nodeType": "YulFunctionCall",
																"src": "10947:16:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10937:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10937:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "10785:184:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10832:9:15",
														"nodeType": "YulTypedName",
														"src": "10832:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10843:7:15",
														"nodeType": "YulTypedName",
														"src": "10843:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10855:6:15",
														"nodeType": "YulTypedName",
														"src": "10855:6:15",
														"type": ""
													}
												],
												"src": "10785:184:15"
											},
											{
												"body": {
													"nativeSrc": "11022:77:15",
													"nodeType": "YulBlock",
													"src": "11022:77:15",
													"statements": [
														{
															"nativeSrc": "11032:16:15",
															"nodeType": "YulAssignment",
															"src": "11032:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11043:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11043:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11046:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11046:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11039:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11039:3:15"
																},
																"nativeSrc": "11039:9:15",
																"nodeType": "YulFunctionCall",
																"src": "11039:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11032:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11032:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11071:22:15",
																"nodeType": "YulBlock",
																"src": "11071:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11073:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "11073:16:15"
																			},
																			"nativeSrc": "11073:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11073:18:15"
																		},
																		"nativeSrc": "11073:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11073:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11063:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11063:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11066:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11066:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11060:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "11060:2:15"
																},
																"nativeSrc": "11060:10:15",
																"nodeType": "YulFunctionCall",
																"src": "11060:10:15"
															},
															"nativeSrc": "11057:36:15",
															"nodeType": "YulIf",
															"src": "11057:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10974:125:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11005:1:15",
														"nodeType": "YulTypedName",
														"src": "11005:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11008:1:15",
														"nodeType": "YulTypedName",
														"src": "11008:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11014:3:15",
														"nodeType": "YulTypedName",
														"src": "11014:3:15",
														"type": ""
													}
												],
												"src": "10974:125:15"
											},
											{
												"body": {
													"nativeSrc": "11315:283:15",
													"nodeType": "YulBlock",
													"src": "11315:283:15",
													"statements": [
														{
															"nativeSrc": "11325:27:15",
															"nodeType": "YulAssignment",
															"src": "11325:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11337:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11337:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11348:3:15",
																		"nodeType": "YulLiteral",
																		"src": "11348:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11333:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11333:3:15"
																},
																"nativeSrc": "11333:19:15",
																"nodeType": "YulFunctionCall",
																"src": "11333:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11325:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11325:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11368:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11368:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11379:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11379:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11361:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11361:6:15"
																},
																"nativeSrc": "11361:25:15",
																"nodeType": "YulFunctionCall",
																"src": "11361:25:15"
															},
															"nativeSrc": "11361:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "11361:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11406:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11406:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11417:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11417:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11402:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11402:3:15"
																		},
																		"nativeSrc": "11402:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11402:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11426:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11426:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11434:26:15",
																				"nodeType": "YulLiteral",
																				"src": "11434:26:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11422:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11422:3:15"
																		},
																		"nativeSrc": "11422:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11422:39:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11395:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11395:6:15"
																},
																"nativeSrc": "11395:67:15",
																"nodeType": "YulFunctionCall",
																"src": "11395:67:15"
															},
															"nativeSrc": "11395:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "11395:67:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11482:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11482:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11493:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11493:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11478:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11478:3:15"
																		},
																		"nativeSrc": "11478:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11478:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11498:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11498:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11471:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11471:6:15"
																},
																"nativeSrc": "11471:34:15",
																"nodeType": "YulFunctionCall",
																"src": "11471:34:15"
															},
															"nativeSrc": "11471:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "11471:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11525:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11525:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11536:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11536:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11521:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11521:3:15"
																		},
																		"nativeSrc": "11521:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11521:18:15"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "11541:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11541:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11514:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11514:6:15"
																},
																"nativeSrc": "11514:34:15",
																"nodeType": "YulFunctionCall",
																"src": "11514:34:15"
															},
															"nativeSrc": "11514:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "11514:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11568:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11568:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11579:3:15",
																				"nodeType": "YulLiteral",
																				"src": "11579:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11564:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11564:3:15"
																		},
																		"nativeSrc": "11564:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11564:19:15"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "11585:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11585:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11557:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11557:6:15"
																},
																"nativeSrc": "11557:35:15",
																"nodeType": "YulFunctionCall",
																"src": "11557:35:15"
															},
															"nativeSrc": "11557:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "11557:35:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11104:494:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11252:9:15",
														"nodeType": "YulTypedName",
														"src": "11252:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11263:6:15",
														"nodeType": "YulTypedName",
														"src": "11263:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11271:6:15",
														"nodeType": "YulTypedName",
														"src": "11271:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11279:6:15",
														"nodeType": "YulTypedName",
														"src": "11279:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11287:6:15",
														"nodeType": "YulTypedName",
														"src": "11287:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11295:6:15",
														"nodeType": "YulTypedName",
														"src": "11295:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11306:4:15",
														"nodeType": "YulTypedName",
														"src": "11306:4:15",
														"type": ""
													}
												],
												"src": "11104:494:15"
											},
											{
												"body": {
													"nativeSrc": "11650:88:15",
													"nodeType": "YulBlock",
													"src": "11650:88:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "11681:22:15",
																"nodeType": "YulBlock",
																"src": "11681:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11683:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "11683:16:15"
																			},
																			"nativeSrc": "11683:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11683:18:15"
																		},
																		"nativeSrc": "11683:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11683:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11666:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11666:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11677:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11677:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "11673:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11673:3:15"
																		},
																		"nativeSrc": "11673:6:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11673:6:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11663:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "11663:2:15"
																},
																"nativeSrc": "11663:17:15",
																"nodeType": "YulFunctionCall",
																"src": "11663:17:15"
															},
															"nativeSrc": "11660:43:15",
															"nodeType": "YulIf",
															"src": "11660:43:15"
														},
														{
															"nativeSrc": "11712:20:15",
															"nodeType": "YulAssignment",
															"src": "11712:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11723:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11723:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11730:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11730:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11719:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11719:3:15"
																},
																"nativeSrc": "11719:13:15",
																"nodeType": "YulFunctionCall",
																"src": "11719:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11712:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11712:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "11603:135:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11632:5:15",
														"nodeType": "YulTypedName",
														"src": "11632:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11642:3:15",
														"nodeType": "YulTypedName",
														"src": "11642:3:15",
														"type": ""
													}
												],
												"src": "11603:135:15"
											},
											{
												"body": {
													"nativeSrc": "11917:182:15",
													"nodeType": "YulBlock",
													"src": "11917:182:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11934:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11934:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11945:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11945:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11927:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11927:6:15"
																},
																"nativeSrc": "11927:21:15",
																"nodeType": "YulFunctionCall",
																"src": "11927:21:15"
															},
															"nativeSrc": "11927:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "11927:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11968:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11968:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11979:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11979:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11964:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11964:3:15"
																		},
																		"nativeSrc": "11964:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11964:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11984:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11984:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11957:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11957:6:15"
																},
																"nativeSrc": "11957:30:15",
																"nodeType": "YulFunctionCall",
																"src": "11957:30:15"
															},
															"nativeSrc": "11957:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "11957:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12007:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12007:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12018:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12018:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12003:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12003:3:15"
																		},
																		"nativeSrc": "12003:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12003:18:15"
																	},
																	{
																		"hexValue": "4c505374616b696e673a6d617820626f6e757320617079206973203130303025",
																		"kind": "string",
																		"nativeSrc": "12023:34:15",
																		"nodeType": "YulLiteral",
																		"src": "12023:34:15",
																		"type": "",
																		"value": "LPStaking:max bonus apy is 1000%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11996:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11996:6:15"
																},
																"nativeSrc": "11996:62:15",
																"nodeType": "YulFunctionCall",
																"src": "11996:62:15"
															},
															"nativeSrc": "11996:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "11996:62:15"
														},
														{
															"nativeSrc": "12067:26:15",
															"nodeType": "YulAssignment",
															"src": "12067:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12079:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12079:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12090:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12090:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12075:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12075:3:15"
																},
																"nativeSrc": "12075:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12075:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12067:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12067:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_008c56d8658d73b34b2f55f43c00bff7db45991e8cba2583fde4ec34762eff7e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11743:356:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11894:9:15",
														"nodeType": "YulTypedName",
														"src": "11894:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11908:4:15",
														"nodeType": "YulTypedName",
														"src": "11908:4:15",
														"type": ""
													}
												],
												"src": "11743:356:15"
											},
											{
												"body": {
													"nativeSrc": "12278:231:15",
													"nodeType": "YulBlock",
													"src": "12278:231:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12295:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12295:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12306:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12306:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12288:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12288:6:15"
																},
																"nativeSrc": "12288:21:15",
																"nodeType": "YulFunctionCall",
																"src": "12288:21:15"
															},
															"nativeSrc": "12288:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "12288:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12329:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12329:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12340:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12340:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12325:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12325:3:15"
																		},
																		"nativeSrc": "12325:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12325:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12345:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12345:2:15",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12318:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12318:6:15"
																},
																"nativeSrc": "12318:30:15",
																"nodeType": "YulFunctionCall",
																"src": "12318:30:15"
															},
															"nativeSrc": "12318:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "12318:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12368:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12368:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12379:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12379:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12364:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12364:3:15"
																		},
																		"nativeSrc": "12364:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12364:18:15"
																	},
																	{
																		"hexValue": "4c505374616b696e673a6d61747572697479206d757374206265206772656174",
																		"kind": "string",
																		"nativeSrc": "12384:34:15",
																		"nodeType": "YulLiteral",
																		"src": "12384:34:15",
																		"type": "",
																		"value": "LPStaking:maturity must be great"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12357:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12357:6:15"
																},
																"nativeSrc": "12357:62:15",
																"nodeType": "YulFunctionCall",
																"src": "12357:62:15"
															},
															"nativeSrc": "12357:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "12357:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12439:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12439:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12450:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12450:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12435:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12435:3:15"
																		},
																		"nativeSrc": "12435:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12435:18:15"
																	},
																	{
																		"hexValue": "6572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "12455:11:15",
																		"nodeType": "YulLiteral",
																		"src": "12455:11:15",
																		"type": "",
																		"value": "er than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12428:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12428:6:15"
																},
																"nativeSrc": "12428:39:15",
																"nodeType": "YulFunctionCall",
																"src": "12428:39:15"
															},
															"nativeSrc": "12428:39:15",
															"nodeType": "YulExpressionStatement",
															"src": "12428:39:15"
														},
														{
															"nativeSrc": "12476:27:15",
															"nodeType": "YulAssignment",
															"src": "12476:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12488:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12488:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12499:3:15",
																		"nodeType": "YulLiteral",
																		"src": "12499:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12484:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12484:3:15"
																},
																"nativeSrc": "12484:19:15",
																"nodeType": "YulFunctionCall",
																"src": "12484:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12476:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12476:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_29c57daf8e27c717e10ae76545d83b5f2c91ce346314162ccef308ba8221272c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12104:405:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12255:9:15",
														"nodeType": "YulTypedName",
														"src": "12255:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12269:4:15",
														"nodeType": "YulTypedName",
														"src": "12269:4:15",
														"type": ""
													}
												],
												"src": "12104:405:15"
											},
											{
												"body": {
													"nativeSrc": "12595:170:15",
													"nodeType": "YulBlock",
													"src": "12595:170:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "12641:16:15",
																"nodeType": "YulBlock",
																"src": "12641:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12650:1:15",
																					"nodeType": "YulLiteral",
																					"src": "12650:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12653:1:15",
																					"nodeType": "YulLiteral",
																					"src": "12653:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12643:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12643:6:15"
																			},
																			"nativeSrc": "12643:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12643:12:15"
																		},
																		"nativeSrc": "12643:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12643:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12616:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12616:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12625:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12625:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12612:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12612:3:15"
																		},
																		"nativeSrc": "12612:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12612:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12637:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12637:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12608:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12608:3:15"
																},
																"nativeSrc": "12608:32:15",
																"nodeType": "YulFunctionCall",
																"src": "12608:32:15"
															},
															"nativeSrc": "12605:52:15",
															"nodeType": "YulIf",
															"src": "12605:52:15"
														},
														{
															"nativeSrc": "12666:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "12666:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12685:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12685:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12679:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "12679:5:15"
																},
																"nativeSrc": "12679:16:15",
																"nodeType": "YulFunctionCall",
																"src": "12679:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "12670:5:15",
																	"nodeType": "YulTypedName",
																	"src": "12670:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12729:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "12729:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "12704:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "12704:24:15"
																},
																"nativeSrc": "12704:31:15",
																"nodeType": "YulFunctionCall",
																"src": "12704:31:15"
															},
															"nativeSrc": "12704:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "12704:31:15"
														},
														{
															"nativeSrc": "12744:15:15",
															"nodeType": "YulAssignment",
															"src": "12744:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "12754:5:15",
																"nodeType": "YulIdentifier",
																"src": "12754:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "12744:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12744:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "12514:251:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12561:9:15",
														"nodeType": "YulTypedName",
														"src": "12561:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12572:7:15",
														"nodeType": "YulTypedName",
														"src": "12572:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12584:6:15",
														"nodeType": "YulTypedName",
														"src": "12584:6:15",
														"type": ""
													}
												],
												"src": "12514:251:15"
											},
											{
												"body": {
													"nativeSrc": "12944:295:15",
													"nodeType": "YulBlock",
													"src": "12944:295:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12961:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12961:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12972:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12972:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12954:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12954:6:15"
																},
																"nativeSrc": "12954:21:15",
																"nodeType": "YulFunctionCall",
																"src": "12954:21:15"
															},
															"nativeSrc": "12954:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "12954:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12995:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12995:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13006:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13006:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12991:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12991:3:15"
																		},
																		"nativeSrc": "12991:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12991:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13011:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13011:2:15",
																		"type": "",
																		"value": "65"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12984:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12984:6:15"
																},
																"nativeSrc": "12984:30:15",
																"nodeType": "YulFunctionCall",
																"src": "12984:30:15"
															},
															"nativeSrc": "12984:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "12984:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13034:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13034:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13045:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13045:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13030:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13030:3:15"
																		},
																		"nativeSrc": "13030:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13030:18:15"
																	},
																	{
																		"hexValue": "4c505374616b696e673a726577617264735f746f6b656e206d75737420626520",
																		"kind": "string",
																		"nativeSrc": "13050:34:15",
																		"nodeType": "YulLiteral",
																		"src": "13050:34:15",
																		"type": "",
																		"value": "LPStaking:rewards_token must be "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13023:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13023:6:15"
																},
																"nativeSrc": "13023:62:15",
																"nodeType": "YulFunctionCall",
																"src": "13023:62:15"
															},
															"nativeSrc": "13023:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "13023:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13105:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13105:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13116:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13116:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13101:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13101:3:15"
																		},
																		"nativeSrc": "13101:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13101:18:15"
																	},
																	{
																		"hexValue": "657175616c20746f2070726963655f6f7261636c652071756f746520746f6b65",
																		"kind": "string",
																		"nativeSrc": "13121:34:15",
																		"nodeType": "YulLiteral",
																		"src": "13121:34:15",
																		"type": "",
																		"value": "equal to price_oracle quote toke"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13094:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13094:6:15"
																},
																"nativeSrc": "13094:62:15",
																"nodeType": "YulFunctionCall",
																"src": "13094:62:15"
															},
															"nativeSrc": "13094:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "13094:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13176:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13176:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13187:3:15",
																				"nodeType": "YulLiteral",
																				"src": "13187:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13172:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13172:3:15"
																		},
																		"nativeSrc": "13172:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13172:19:15"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nativeSrc": "13193:3:15",
																		"nodeType": "YulLiteral",
																		"src": "13193:3:15",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13165:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13165:6:15"
																},
																"nativeSrc": "13165:32:15",
																"nodeType": "YulFunctionCall",
																"src": "13165:32:15"
															},
															"nativeSrc": "13165:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "13165:32:15"
														},
														{
															"nativeSrc": "13206:27:15",
															"nodeType": "YulAssignment",
															"src": "13206:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13218:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13218:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13229:3:15",
																		"nodeType": "YulLiteral",
																		"src": "13229:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13214:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13214:3:15"
																},
																"nativeSrc": "13214:19:15",
																"nodeType": "YulFunctionCall",
																"src": "13214:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13206:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13206:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80eaacf457ba567125d46e8d07b85f0b19850b9352dda34d0af0b902e124e0b4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12770:469:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12921:9:15",
														"nodeType": "YulTypedName",
														"src": "12921:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12935:4:15",
														"nodeType": "YulTypedName",
														"src": "12935:4:15",
														"type": ""
													}
												],
												"src": "12770:469:15"
											},
											{
												"body": {
													"nativeSrc": "13423:354:15",
													"nodeType": "YulBlock",
													"src": "13423:354:15",
													"statements": [
														{
															"nativeSrc": "13433:27:15",
															"nodeType": "YulAssignment",
															"src": "13433:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13445:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13445:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13456:3:15",
																		"nodeType": "YulLiteral",
																		"src": "13456:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13441:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13441:3:15"
																},
																"nativeSrc": "13441:19:15",
																"nodeType": "YulFunctionCall",
																"src": "13441:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13433:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13433:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13476:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13476:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13491:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13491:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13499:42:15",
																				"nodeType": "YulLiteral",
																				"src": "13499:42:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13487:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13487:3:15"
																		},
																		"nativeSrc": "13487:55:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13487:55:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13469:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13469:6:15"
																},
																"nativeSrc": "13469:74:15",
																"nodeType": "YulFunctionCall",
																"src": "13469:74:15"
															},
															"nativeSrc": "13469:74:15",
															"nodeType": "YulExpressionStatement",
															"src": "13469:74:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13563:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13563:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13574:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13574:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13559:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13559:3:15"
																		},
																		"nativeSrc": "13559:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13559:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "13583:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13583:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13591:26:15",
																				"nodeType": "YulLiteral",
																				"src": "13591:26:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13579:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13579:3:15"
																		},
																		"nativeSrc": "13579:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13579:39:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13552:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13552:6:15"
																},
																"nativeSrc": "13552:67:15",
																"nodeType": "YulFunctionCall",
																"src": "13552:67:15"
															},
															"nativeSrc": "13552:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "13552:67:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13639:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13639:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13650:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13650:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13635:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13635:3:15"
																		},
																		"nativeSrc": "13635:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13635:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "13659:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13659:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13667:26:15",
																				"nodeType": "YulLiteral",
																				"src": "13667:26:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13655:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13655:3:15"
																		},
																		"nativeSrc": "13655:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13655:39:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13628:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13628:6:15"
																},
																"nativeSrc": "13628:67:15",
																"nodeType": "YulFunctionCall",
																"src": "13628:67:15"
															},
															"nativeSrc": "13628:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "13628:67:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13715:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13715:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13726:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13726:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13711:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13711:3:15"
																		},
																		"nativeSrc": "13711:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13711:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "13735:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13735:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13743:26:15",
																				"nodeType": "YulLiteral",
																				"src": "13743:26:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13731:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13731:3:15"
																		},
																		"nativeSrc": "13731:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13731:39:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13704:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13704:6:15"
																},
																"nativeSrc": "13704:67:15",
																"nodeType": "YulFunctionCall",
																"src": "13704:67:15"
															},
															"nativeSrc": "13704:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "13704:67:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint96_t_uint96_t_uint96__to_t_address_t_uint96_t_uint96_t_uint96__fromStack_reversed",
												"nativeSrc": "13244:533:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13368:9:15",
														"nodeType": "YulTypedName",
														"src": "13368:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13379:6:15",
														"nodeType": "YulTypedName",
														"src": "13379:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13387:6:15",
														"nodeType": "YulTypedName",
														"src": "13387:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13395:6:15",
														"nodeType": "YulTypedName",
														"src": "13395:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13403:6:15",
														"nodeType": "YulTypedName",
														"src": "13403:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13414:4:15",
														"nodeType": "YulTypedName",
														"src": "13414:4:15",
														"type": ""
													}
												],
												"src": "13244:533:15"
											},
											{
												"body": {
													"nativeSrc": "13956:171:15",
													"nodeType": "YulBlock",
													"src": "13956:171:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13973:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13973:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13984:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13984:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13966:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13966:6:15"
																},
																"nativeSrc": "13966:21:15",
																"nodeType": "YulFunctionCall",
																"src": "13966:21:15"
															},
															"nativeSrc": "13966:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "13966:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14007:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14007:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14018:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14018:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14003:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14003:3:15"
																		},
																		"nativeSrc": "14003:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14003:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14023:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14023:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13996:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13996:6:15"
																},
																"nativeSrc": "13996:30:15",
																"nodeType": "YulFunctionCall",
																"src": "13996:30:15"
															},
															"nativeSrc": "13996:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "13996:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14046:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14046:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14057:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14057:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14042:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14042:3:15"
																		},
																		"nativeSrc": "14042:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14042:18:15"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e636521",
																		"kind": "string",
																		"nativeSrc": "14062:23:15",
																		"nodeType": "YulLiteral",
																		"src": "14062:23:15",
																		"type": "",
																		"value": "Insufficient balance!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14035:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14035:6:15"
																},
																"nativeSrc": "14035:51:15",
																"nodeType": "YulFunctionCall",
																"src": "14035:51:15"
															},
															"nativeSrc": "14035:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "14035:51:15"
														},
														{
															"nativeSrc": "14095:26:15",
															"nodeType": "YulAssignment",
															"src": "14095:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14107:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14107:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14118:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14118:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14103:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14103:3:15"
																},
																"nativeSrc": "14103:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14103:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14095:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14095:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9ca6d7d8f4b50884f4b4d7f1090e14ef0c0a197944e02f7d686fb0c2fe397c91__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13782:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13933:9:15",
														"nodeType": "YulTypedName",
														"src": "13933:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13947:4:15",
														"nodeType": "YulTypedName",
														"src": "13947:4:15",
														"type": ""
													}
												],
												"src": "13782:345:15"
											},
											{
												"body": {
													"nativeSrc": "14306:233:15",
													"nodeType": "YulBlock",
													"src": "14306:233:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14323:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14323:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14334:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14334:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14316:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14316:6:15"
																},
																"nativeSrc": "14316:21:15",
																"nodeType": "YulFunctionCall",
																"src": "14316:21:15"
															},
															"nativeSrc": "14316:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "14316:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14357:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14357:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14368:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14368:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14353:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14353:3:15"
																		},
																		"nativeSrc": "14353:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14353:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14373:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14373:2:15",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14346:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14346:6:15"
																},
																"nativeSrc": "14346:30:15",
																"nodeType": "YulFunctionCall",
																"src": "14346:30:15"
															},
															"nativeSrc": "14346:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "14346:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14396:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14396:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14407:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14407:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14392:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14392:3:15"
																		},
																		"nativeSrc": "14392:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14392:18:15"
																	},
																	{
																		"hexValue": "4c505374616b696e673a616d6f756e74206d7573742062652067726561746572",
																		"kind": "string",
																		"nativeSrc": "14412:34:15",
																		"nodeType": "YulLiteral",
																		"src": "14412:34:15",
																		"type": "",
																		"value": "LPStaking:amount must be greater"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14385:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14385:6:15"
																},
																"nativeSrc": "14385:62:15",
																"nodeType": "YulFunctionCall",
																"src": "14385:62:15"
															},
															"nativeSrc": "14385:62:15",
															"nodeType": "YulExpressionStatement",
															"src": "14385:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14467:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14467:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14478:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14478:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14463:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14463:3:15"
																		},
																		"nativeSrc": "14463:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14463:18:15"
																	},
																	{
																		"hexValue": "207468616e207a65726f21",
																		"kind": "string",
																		"nativeSrc": "14483:13:15",
																		"nodeType": "YulLiteral",
																		"src": "14483:13:15",
																		"type": "",
																		"value": " than zero!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14456:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14456:6:15"
																},
																"nativeSrc": "14456:41:15",
																"nodeType": "YulFunctionCall",
																"src": "14456:41:15"
															},
															"nativeSrc": "14456:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "14456:41:15"
														},
														{
															"nativeSrc": "14506:27:15",
															"nodeType": "YulAssignment",
															"src": "14506:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14518:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14518:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14529:3:15",
																		"nodeType": "YulLiteral",
																		"src": "14529:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14514:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14514:3:15"
																},
																"nativeSrc": "14514:19:15",
																"nodeType": "YulFunctionCall",
																"src": "14514:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14506:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14506:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fbecf6cd1d46bfcd2d35ede7e1d976af256e1566b1bef182b8efd2e5ea4c8a50__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14132:407:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14283:9:15",
														"nodeType": "YulTypedName",
														"src": "14283:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14297:4:15",
														"nodeType": "YulTypedName",
														"src": "14297:4:15",
														"type": ""
													}
												],
												"src": "14132:407:15"
											},
											{
												"body": {
													"nativeSrc": "14673:168:15",
													"nodeType": "YulBlock",
													"src": "14673:168:15",
													"statements": [
														{
															"nativeSrc": "14683:26:15",
															"nodeType": "YulAssignment",
															"src": "14683:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14695:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14695:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14706:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14706:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14691:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14691:3:15"
																},
																"nativeSrc": "14691:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14691:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14683:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14683:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14725:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14725:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14740:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14740:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14748:42:15",
																				"nodeType": "YulLiteral",
																				"src": "14748:42:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14736:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14736:3:15"
																		},
																		"nativeSrc": "14736:55:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14736:55:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14718:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14718:6:15"
																},
																"nativeSrc": "14718:74:15",
																"nodeType": "YulFunctionCall",
																"src": "14718:74:15"
															},
															"nativeSrc": "14718:74:15",
															"nodeType": "YulExpressionStatement",
															"src": "14718:74:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14812:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14812:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14823:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14823:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14808:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14808:3:15"
																		},
																		"nativeSrc": "14808:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14808:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14828:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14828:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14801:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14801:6:15"
																},
																"nativeSrc": "14801:34:15",
																"nodeType": "YulFunctionCall",
																"src": "14801:34:15"
															},
															"nativeSrc": "14801:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "14801:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14544:297:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14634:9:15",
														"nodeType": "YulTypedName",
														"src": "14634:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14645:6:15",
														"nodeType": "YulTypedName",
														"src": "14645:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14653:6:15",
														"nodeType": "YulTypedName",
														"src": "14653:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14664:4:15",
														"nodeType": "YulTypedName",
														"src": "14664:4:15",
														"type": ""
													}
												],
												"src": "14544:297:15"
											},
											{
												"body": {
													"nativeSrc": "15003:260:15",
													"nodeType": "YulBlock",
													"src": "15003:260:15",
													"statements": [
														{
															"nativeSrc": "15013:26:15",
															"nodeType": "YulAssignment",
															"src": "15013:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15025:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15025:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15036:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15036:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15021:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15021:3:15"
																},
																"nativeSrc": "15021:18:15",
																"nodeType": "YulFunctionCall",
																"src": "15021:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15013:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15013:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15055:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15055:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15070:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15070:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15078:42:15",
																				"nodeType": "YulLiteral",
																				"src": "15078:42:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15066:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15066:3:15"
																		},
																		"nativeSrc": "15066:55:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15066:55:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15048:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15048:6:15"
																},
																"nativeSrc": "15048:74:15",
																"nodeType": "YulFunctionCall",
																"src": "15048:74:15"
															},
															"nativeSrc": "15048:74:15",
															"nodeType": "YulExpressionStatement",
															"src": "15048:74:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15142:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15142:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15153:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15153:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15138:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15138:3:15"
																		},
																		"nativeSrc": "15138:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15138:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "15162:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15162:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15170:42:15",
																				"nodeType": "YulLiteral",
																				"src": "15170:42:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15158:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15158:3:15"
																		},
																		"nativeSrc": "15158:55:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15158:55:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15131:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15131:6:15"
																},
																"nativeSrc": "15131:83:15",
																"nodeType": "YulFunctionCall",
																"src": "15131:83:15"
															},
															"nativeSrc": "15131:83:15",
															"nodeType": "YulExpressionStatement",
															"src": "15131:83:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15234:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15234:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15245:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15245:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15230:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15230:3:15"
																		},
																		"nativeSrc": "15230:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15230:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "15250:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15250:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15223:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15223:6:15"
																},
																"nativeSrc": "15223:34:15",
																"nodeType": "YulFunctionCall",
																"src": "15223:34:15"
															},
															"nativeSrc": "15223:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "15223:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14846:417:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14956:9:15",
														"nodeType": "YulTypedName",
														"src": "14956:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14967:6:15",
														"nodeType": "YulTypedName",
														"src": "14967:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14975:6:15",
														"nodeType": "YulTypedName",
														"src": "14975:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14983:6:15",
														"nodeType": "YulTypedName",
														"src": "14983:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14994:4:15",
														"nodeType": "YulTypedName",
														"src": "14994:4:15",
														"type": ""
													}
												],
												"src": "14846:417:15"
											},
											{
												"body": {
													"nativeSrc": "15328:128:15",
													"nodeType": "YulBlock",
													"src": "15328:128:15",
													"statements": [
														{
															"nativeSrc": "15338:22:15",
															"nodeType": "YulAssignment",
															"src": "15338:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15353:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15353:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15347:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15347:5:15"
																},
																"nativeSrc": "15347:13:15",
																"nodeType": "YulFunctionCall",
																"src": "15347:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15338:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15338:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15434:16:15",
																"nodeType": "YulBlock",
																"src": "15434:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15443:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15443:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15446:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15446:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15436:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15436:6:15"
																			},
																			"nativeSrc": "15436:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15436:12:15"
																		},
																		"nativeSrc": "15436:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15436:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15382:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "15382:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15393:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "15393:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15400:30:15",
																						"nodeType": "YulLiteral",
																						"src": "15400:30:15",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "15389:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15389:3:15"
																				},
																				"nativeSrc": "15389:42:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15389:42:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15379:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "15379:2:15"
																		},
																		"nativeSrc": "15379:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15379:53:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15372:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15372:6:15"
																},
																"nativeSrc": "15372:61:15",
																"nodeType": "YulFunctionCall",
																"src": "15372:61:15"
															},
															"nativeSrc": "15369:81:15",
															"nodeType": "YulIf",
															"src": "15369:81:15"
														}
													]
												},
												"name": "abi_decode_uint112_fromMemory",
												"nativeSrc": "15268:188:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15307:6:15",
														"nodeType": "YulTypedName",
														"src": "15307:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15318:5:15",
														"nodeType": "YulTypedName",
														"src": "15318:5:15",
														"type": ""
													}
												],
												"src": "15268:188:15"
											},
											{
												"body": {
													"nativeSrc": "15575:336:15",
													"nodeType": "YulBlock",
													"src": "15575:336:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "15621:16:15",
																"nodeType": "YulBlock",
																"src": "15621:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15630:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15630:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15633:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15633:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15623:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15623:6:15"
																			},
																			"nativeSrc": "15623:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15623:12:15"
																		},
																		"nativeSrc": "15623:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15623:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15596:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "15596:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15605:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15605:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15592:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15592:3:15"
																		},
																		"nativeSrc": "15592:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15592:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15617:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15617:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15588:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15588:3:15"
																},
																"nativeSrc": "15588:32:15",
																"nodeType": "YulFunctionCall",
																"src": "15588:32:15"
															},
															"nativeSrc": "15585:52:15",
															"nodeType": "YulIf",
															"src": "15585:52:15"
														},
														{
															"nativeSrc": "15646:50:15",
															"nodeType": "YulAssignment",
															"src": "15646:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15686:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15686:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint112_fromMemory",
																	"nativeSrc": "15656:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "15656:29:15"
																},
																"nativeSrc": "15656:40:15",
																"nodeType": "YulFunctionCall",
																"src": "15656:40:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "15646:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15646:6:15"
																}
															]
														},
														{
															"nativeSrc": "15705:59:15",
															"nodeType": "YulAssignment",
															"src": "15705:59:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15749:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15749:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15760:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15760:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15745:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15745:3:15"
																		},
																		"nativeSrc": "15745:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15745:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint112_fromMemory",
																	"nativeSrc": "15715:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "15715:29:15"
																},
																"nativeSrc": "15715:49:15",
																"nodeType": "YulFunctionCall",
																"src": "15715:49:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "15705:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15705:6:15"
																}
															]
														},
														{
															"nativeSrc": "15773:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "15773:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15796:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15796:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15807:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15807:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15792:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15792:3:15"
																		},
																		"nativeSrc": "15792:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15792:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15786:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15786:5:15"
																},
																"nativeSrc": "15786:25:15",
																"nodeType": "YulFunctionCall",
																"src": "15786:25:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "15777:5:15",
																	"nodeType": "YulTypedName",
																	"src": "15777:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15865:16:15",
																"nodeType": "YulBlock",
																"src": "15865:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15874:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15874:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15877:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15877:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15867:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15867:6:15"
																			},
																			"nativeSrc": "15867:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15867:12:15"
																		},
																		"nativeSrc": "15867:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15867:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15833:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "15833:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15844:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "15844:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15851:10:15",
																						"nodeType": "YulLiteral",
																						"src": "15851:10:15",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "15840:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15840:3:15"
																				},
																				"nativeSrc": "15840:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15840:22:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15830:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "15830:2:15"
																		},
																		"nativeSrc": "15830:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15830:33:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15823:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15823:6:15"
																},
																"nativeSrc": "15823:41:15",
																"nodeType": "YulFunctionCall",
																"src": "15823:41:15"
															},
															"nativeSrc": "15820:61:15",
															"nodeType": "YulIf",
															"src": "15820:61:15"
														},
														{
															"nativeSrc": "15890:15:15",
															"nodeType": "YulAssignment",
															"src": "15890:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "15900:5:15",
																"nodeType": "YulIdentifier",
																"src": "15900:5:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "15890:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15890:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
												"nativeSrc": "15461:450:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15525:9:15",
														"nodeType": "YulTypedName",
														"src": "15525:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15536:7:15",
														"nodeType": "YulTypedName",
														"src": "15536:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15548:6:15",
														"nodeType": "YulTypedName",
														"src": "15548:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15556:6:15",
														"nodeType": "YulTypedName",
														"src": "15556:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15564:6:15",
														"nodeType": "YulTypedName",
														"src": "15564:6:15",
														"type": ""
													}
												],
												"src": "15461:450:15"
											},
											{
												"body": {
													"nativeSrc": "15995:194:15",
													"nodeType": "YulBlock",
													"src": "15995:194:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "16041:16:15",
																"nodeType": "YulBlock",
																"src": "16041:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16050:1:15",
																					"nodeType": "YulLiteral",
																					"src": "16050:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16053:1:15",
																					"nodeType": "YulLiteral",
																					"src": "16053:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16043:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16043:6:15"
																			},
																			"nativeSrc": "16043:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16043:12:15"
																		},
																		"nativeSrc": "16043:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "16043:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16016:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16016:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16025:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16025:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16012:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16012:3:15"
																		},
																		"nativeSrc": "16012:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16012:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16037:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16037:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16008:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16008:3:15"
																},
																"nativeSrc": "16008:32:15",
																"nodeType": "YulFunctionCall",
																"src": "16008:32:15"
															},
															"nativeSrc": "16005:52:15",
															"nodeType": "YulIf",
															"src": "16005:52:15"
														},
														{
															"nativeSrc": "16066:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "16066:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16085:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16085:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16079:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "16079:5:15"
																},
																"nativeSrc": "16079:16:15",
																"nodeType": "YulFunctionCall",
																"src": "16079:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "16070:5:15",
																	"nodeType": "YulTypedName",
																	"src": "16070:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16143:16:15",
																"nodeType": "YulBlock",
																"src": "16143:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16152:1:15",
																					"nodeType": "YulLiteral",
																					"src": "16152:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16155:1:15",
																					"nodeType": "YulLiteral",
																					"src": "16155:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16145:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16145:6:15"
																			},
																			"nativeSrc": "16145:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16145:12:15"
																		},
																		"nativeSrc": "16145:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "16145:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16117:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "16117:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16128:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "16128:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16135:4:15",
																						"nodeType": "YulLiteral",
																						"src": "16135:4:15",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "16124:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16124:3:15"
																				},
																				"nativeSrc": "16124:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16124:16:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "16114:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "16114:2:15"
																		},
																		"nativeSrc": "16114:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16114:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16107:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16107:6:15"
																},
																"nativeSrc": "16107:35:15",
																"nodeType": "YulFunctionCall",
																"src": "16107:35:15"
															},
															"nativeSrc": "16104:55:15",
															"nodeType": "YulIf",
															"src": "16104:55:15"
														},
														{
															"nativeSrc": "16168:15:15",
															"nodeType": "YulAssignment",
															"src": "16168:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "16178:5:15",
																"nodeType": "YulIdentifier",
																"src": "16178:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "16168:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16168:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "15916:273:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15961:9:15",
														"nodeType": "YulTypedName",
														"src": "15961:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15972:7:15",
														"nodeType": "YulTypedName",
														"src": "15972:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15984:6:15",
														"nodeType": "YulTypedName",
														"src": "15984:6:15",
														"type": ""
													}
												],
												"src": "15916:273:15"
											},
											{
												"body": {
													"nativeSrc": "16403:453:15",
													"nodeType": "YulBlock",
													"src": "16403:453:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16420:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16420:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "16435:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16435:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16443:42:15",
																				"nodeType": "YulLiteral",
																				"src": "16443:42:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16431:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16431:3:15"
																		},
																		"nativeSrc": "16431:55:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16431:55:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16413:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16413:6:15"
																},
																"nativeSrc": "16413:74:15",
																"nodeType": "YulFunctionCall",
																"src": "16413:74:15"
															},
															"nativeSrc": "16413:74:15",
															"nodeType": "YulExpressionStatement",
															"src": "16413:74:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16507:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16507:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16518:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16518:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16503:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16503:3:15"
																		},
																		"nativeSrc": "16503:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16503:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "16523:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16523:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16496:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16496:6:15"
																},
																"nativeSrc": "16496:34:15",
																"nodeType": "YulFunctionCall",
																"src": "16496:34:15"
															},
															"nativeSrc": "16496:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "16496:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16550:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16550:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16561:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16561:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16546:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16546:3:15"
																		},
																		"nativeSrc": "16546:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16546:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "16570:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16570:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16578:4:15",
																				"nodeType": "YulLiteral",
																				"src": "16578:4:15",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16566:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16566:3:15"
																		},
																		"nativeSrc": "16566:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16566:17:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16539:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16539:6:15"
																},
																"nativeSrc": "16539:45:15",
																"nodeType": "YulFunctionCall",
																"src": "16539:45:15"
															},
															"nativeSrc": "16539:45:15",
															"nodeType": "YulExpressionStatement",
															"src": "16539:45:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16604:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16604:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16615:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16615:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16600:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16600:3:15"
																		},
																		"nativeSrc": "16600:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16600:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16620:3:15",
																		"nodeType": "YulLiteral",
																		"src": "16620:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16593:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16593:6:15"
																},
																"nativeSrc": "16593:31:15",
																"nodeType": "YulFunctionCall",
																"src": "16593:31:15"
															},
															"nativeSrc": "16593:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "16593:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16644:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16644:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16655:3:15",
																				"nodeType": "YulLiteral",
																				"src": "16655:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16640:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16640:3:15"
																		},
																		"nativeSrc": "16640:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16640:19:15"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "16661:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16661:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16633:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16633:6:15"
																},
																"nativeSrc": "16633:35:15",
																"nodeType": "YulFunctionCall",
																"src": "16633:35:15"
															},
															"nativeSrc": "16633:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "16633:35:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16694:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16694:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16705:3:15",
																				"nodeType": "YulLiteral",
																				"src": "16705:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16690:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16690:3:15"
																		},
																		"nativeSrc": "16690:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16690:19:15"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "16711:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16711:6:15"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "16719:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16719:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "16677:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "16677:12:15"
																},
																"nativeSrc": "16677:49:15",
																"nodeType": "YulFunctionCall",
																"src": "16677:49:15"
															},
															"nativeSrc": "16677:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "16677:49:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16750:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16750:9:15"
																					},
																					{
																						"name": "value4",
																						"nativeSrc": "16761:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "16761:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16746:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16746:3:15"
																				},
																				"nativeSrc": "16746:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16746:22:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16770:3:15",
																				"nodeType": "YulLiteral",
																				"src": "16770:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16742:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16742:3:15"
																		},
																		"nativeSrc": "16742:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16742:32:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16776:1:15",
																		"nodeType": "YulLiteral",
																		"src": "16776:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16735:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16735:6:15"
																},
																"nativeSrc": "16735:43:15",
																"nodeType": "YulFunctionCall",
																"src": "16735:43:15"
															},
															"nativeSrc": "16735:43:15",
															"nodeType": "YulExpressionStatement",
															"src": "16735:43:15"
														},
														{
															"nativeSrc": "16787:63:15",
															"nodeType": "YulAssignment",
															"src": "16787:63:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16803:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16803:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value4",
																								"nativeSrc": "16822:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "16822:6:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "16830:2:15",
																								"nodeType": "YulLiteral",
																								"src": "16830:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "16818:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "16818:3:15"
																						},
																						"nativeSrc": "16818:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "16818:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "16839:2:15",
																								"nodeType": "YulLiteral",
																								"src": "16839:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "16835:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "16835:3:15"
																						},
																						"nativeSrc": "16835:7:15",
																						"nodeType": "YulFunctionCall",
																						"src": "16835:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "16814:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16814:3:15"
																				},
																				"nativeSrc": "16814:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16814:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16799:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16799:3:15"
																		},
																		"nativeSrc": "16799:45:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16799:45:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16846:3:15",
																		"nodeType": "YulLiteral",
																		"src": "16846:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16795:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16795:3:15"
																},
																"nativeSrc": "16795:55:15",
																"nodeType": "YulFunctionCall",
																"src": "16795:55:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16787:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16787:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint8_t_bytes_calldata_ptr__to_t_address_t_uint256_t_uint8_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "16194:662:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16340:9:15",
														"nodeType": "YulTypedName",
														"src": "16340:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "16351:6:15",
														"nodeType": "YulTypedName",
														"src": "16351:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16359:6:15",
														"nodeType": "YulTypedName",
														"src": "16359:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16367:6:15",
														"nodeType": "YulTypedName",
														"src": "16367:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16375:6:15",
														"nodeType": "YulTypedName",
														"src": "16375:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16383:6:15",
														"nodeType": "YulTypedName",
														"src": "16383:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16394:4:15",
														"nodeType": "YulTypedName",
														"src": "16394:4:15",
														"type": ""
													}
												],
												"src": "16194:662:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_uint96(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint96(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_uint96(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint96_t_uint96_t_uint96__to_t_address_t_address_t_address_t_uint96_t_uint96_t_uint96__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 160), and(value5, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint96t_uint96t_uint96(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 96))\n        value3 := value_3\n        value4 := abi_decode_uint96(add(headStart, 128))\n        value5 := abi_decode_uint96(add(headStart, 160))\n        value6 := abi_decode_uint96(add(headStart, 192))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_contract$_ICREDIWhale_$2100__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint96_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint96_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_0e16e6a30f81a14a3750dadd850a42a6a565cd1e2e793344412756e6597d7eb3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"LPStaking:Invalid Stake ID!\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint96(x, y) -> sum\n    {\n        sum := add(and(x, 0xffffffffffffffffffffffff), and(y, 0xffffffffffffffffffffffff))\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_9609bed7fe5874993a0e45025cb75d78736e0e5d28fc319f68fd61927d3a2555__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"LPStaking:Invalid Pool ID!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_48745a825c3a66aabc6ad4692f5fa1ce6747939b3796aa484c27ba9fdcf82213__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"LPStaking:max apy is 1000%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a12b524a3be40694ffb0d5bc0958fc55168fc7cda344718aab4c0bc96880da50__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"LPStaking:Caller is not the owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f05035c333f8eea86681a079e9dbbf83f20c2edbd12293e704e25b5c79f55ebb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"LPStaking:Early Withdrawal is no\")\n        mstore(add(headStart, 96), \"t permitted!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e59456cdc9cfda50f9f5660769488a43bd3f02d37b1d88f2648a4b04115dc9d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"LPStaking:Nothing to claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a09483d25cc2fc12a7cf65e12568a6dd37259e605cfb897eb1abbbae1dbe9274__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"LPStaking:stake_amount must be g\")\n        mstore(add(headStart, 96), \"reater than zero!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7413541967929611b36bcd89f295c92ebef45e79b12d187d4ae73575bb36f18c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"LPStaking:Pool is paused!\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_008c56d8658d73b34b2f55f43c00bff7db45991e8cba2583fde4ec34762eff7e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"LPStaking:max bonus apy is 1000%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_29c57daf8e27c717e10ae76545d83b5f2c91ce346314162ccef308ba8221272c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"LPStaking:maturity must be great\")\n        mstore(add(headStart, 96), \"er than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_80eaacf457ba567125d46e8d07b85f0b19850b9352dda34d0af0b902e124e0b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"LPStaking:rewards_token must be \")\n        mstore(add(headStart, 96), \"equal to price_oracle quote toke\")\n        mstore(add(headStart, 128), \"n\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_address_t_uint96_t_uint96_t_uint96__to_t_address_t_uint96_t_uint96_t_uint96__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_9ca6d7d8f4b50884f4b4d7f1090e14ef0c0a197944e02f7d686fb0c2fe397c91__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Insufficient balance!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fbecf6cd1d46bfcd2d35ede7e1d976af256e1566b1bef182b8efd2e5ea4c8a50__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"LPStaking:amount must be greater\")\n        mstore(add(headStart, 96), \" than zero!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_uint112_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint112_fromMemory(headStart)\n        value1 := abi_decode_uint112_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint8_t_bytes_calldata_ptr__to_t_address_t_uint256_t_uint8_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), value4)\n        calldatacopy(add(headStart, 160), value3, value4)\n        mstore(add(add(headStart, value4), 160), 0)\n        tail := add(add(headStart, and(add(value4, 31), not(31))), 160)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1183": [
									{
										"length": 32,
										"start": 685
									},
									{
										"length": 32,
										"start": 3739
									},
									{
										"length": 32,
										"start": 3918
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x110 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xA9FC507B GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA9FC507B EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xB4AC6860 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xCC5C56DC EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xCE325BF8 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x327 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x74EE6B62 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x954821B6 EQ PUSH2 0x26E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x25D5971F GT PUSH2 0xE4 JUMPI DUP1 PUSH4 0x25D5971F EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x3B5DD047 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x4F44DAA9 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x69CA431B EQ PUSH2 0x20E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH3 0x215784 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x39BA6B7 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x68BCD8D EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x21241DFE EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x127 PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x33A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x127 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E78 JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE SWAP6 DUP8 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 SWAP1 SWAP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP1 DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH3 0x34BC00 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x783 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE7 JUMP JUMPDEST PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x127 PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E78 JUMP JUMPDEST PUSH2 0x11FC JUMP JUMPDEST PUSH2 0x221 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F7D JUMP JUMPDEST PUSH2 0x1336 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x164A JUMP JUMPDEST PUSH2 0x127 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FFD JUMP JUMPDEST PUSH2 0x165D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x221 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x203B JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x205D JUMP JUMPDEST PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0x221 PUSH2 0x1860 JUMP JUMPDEST PUSH2 0x256 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x1876 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP4 AND SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x1929 JUMP JUMPDEST PUSH2 0x342 PUSH2 0x1963 JUMP JUMPDEST DUP1 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x353 JUMPI POP PUSH1 0x4 SLOAD DUP2 LT JUMPDEST PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C6964205374616B65204944210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x3D4 SWAP1 PUSH3 0x34BC00 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x209B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x3F1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 PUSH0 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x408 JUMPI PUSH2 0x408 PUSH2 0x20C0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 DUP7 DUP2 ADD SLOAD SWAP4 MUL ADD PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD SWAP2 SWAP5 POP SWAP2 SWAP3 SWAP1 PUSH2 0x446 SWAP1 DUP5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 PUSH1 0x3 DUP4 ADD SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x85CF309FCBACAF1EE2B300F62E8586A0661E41C7F318003E9AAB792BE89980B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x494 PUSH2 0x1963 JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x4A5 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C696420506F6F6C20494421000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH3 0x186A0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A6D617820617079206973203130303025000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST DUP2 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x561 JUMPI PUSH2 0x561 PUSH2 0x20C0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP5 DUP6 AND MUL OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP5 AND DUP3 MSTORE DUP5 SWAP2 PUSH32 0x9A2C3C653A42F5C64BBFDF07224D8E0D6526460F44E520AC49BAE23804E18E8 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 DUP7 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x5E6 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C696420506F6F6C20494421000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x2 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x645 JUMPI PUSH2 0x645 PUSH2 0x20C0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP11 SWAP1 DUP2 LT PUSH2 0x675 JUMPI PUSH2 0x675 PUSH2 0x20C0 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP11 DUP2 SLOAD DUP2 LT PUSH2 0x6AA JUMPI PUSH2 0x6AA PUSH2 0x20C0 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP12 DUP2 SLOAD DUP2 LT PUSH2 0x6DF JUMPI PUSH2 0x6DF PUSH2 0x20C0 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x2 DUP13 DUP2 SLOAD DUP2 LT PUSH2 0x714 JUMPI PUSH2 0x714 PUSH2 0x20C0 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x2 DUP14 DUP2 SLOAD DUP2 LT PUSH2 0x74A JUMPI PUSH2 0x74A PUSH2 0x20C0 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH2 0x78B PUSH2 0x198F JUMP JUMPDEST DUP1 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x79C JUMPI POP PUSH1 0x4 SLOAD DUP2 LT JUMPDEST PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C6964205374616B65204944210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A43616C6C6572206973206E6F7420746865206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 PUSH0 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x872 JUMPI PUSH2 0x872 PUSH2 0x20C0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL SWAP3 DUP4 SWAP1 DIV DUP2 AND SWAP7 DUP7 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP1 DUP4 AND SWAP6 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP3 SWAP1 DIV DUP7 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP3 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP2 SWAP1 DIV DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 DUP6 ADD SLOAD SWAP2 SWAP4 POP SWAP1 DIV AND PUSH2 0x8FC TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x968 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A4561726C79205769746864726177616C206973206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x74207065726D697474656421 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD ISZERO PUSH2 0x9CA JUMPI PUSH2 0x98D CALLER PUSH1 0x2 DUP5 ADD SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP4 ADD SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x3DB0CA701D7C1106534C6003E5D65DAE65A9CB891AD5BBB9BE39C091DF79D87E SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP PUSH2 0x9D6 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9E1 PUSH2 0x198F JUMP JUMPDEST DUP1 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x9F2 JUMPI POP PUSH1 0x4 SLOAD DUP2 LT JUMPDEST PUSH2 0xA3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C6964205374616B65204944210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A43616C6C6572206973206E6F7420746865206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 PUSH0 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xAC8 JUMPI PUSH2 0xAC8 PUSH2 0x20C0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A4561726C79205769746864726177616C206973206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x74207065726D697474656421 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 ADD SLOAD GT PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A4E6F7468696E6720746F20636C61696D000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD ISZERO PUSH2 0xBDA JUMPI PUSH2 0xBD3 CALLER PUSH1 0x2 DUP5 ADD SLOAD DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH2 0xBF8 CALLER PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xC28 SWAP1 DUP5 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 PUSH1 0x3 DUP4 ADD SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x3DB0CA701D7C1106534C6003E5D65DAE65A9CB891AD5BBB9BE39C091DF79D87E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 SLOAD PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x4D7828F2AA36030CC63CDEA79EC646099AA121D019F1A90EDB55078939FB84EA SWAP1 PUSH1 0x20 ADD PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0xCA2 PUSH2 0x198F JUMP JUMPDEST DUP6 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xCB3 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C696420506F6F6C20494421000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 DUP7 GT PUSH2 0xD74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A7374616B655F616D6F756E74206D7573742062652067 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x726561746572207468616E207A65726F21000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xD88 JUMPI PUSH2 0xD88 PUSH2 0x20C0 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT PUSH2 0xE05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A506F6F6C206973207061757365642100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0xE1C CALLER DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP11 PUSH2 0x1A32 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH0 SWAP2 PUSH2 0xE41 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP12 SWAP2 AND DUP11 DUP11 DUP11 DUP11 PUSH2 0x1A71 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 DUP5 ADD SLOAD SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH4 0x1E13380 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 DUP3 SWAP1 DIV DUP2 AND SWAP3 PUSH2 0x2710 SWAP3 PUSH2 0xE78 SWAP3 SWAP2 DIV AND DUP7 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0xE8C SWAP2 SWAP1 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0xE96 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8EF1E259 CALLER PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF23 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF47 SWAP2 SWAP1 PUSH2 0x211D JUMP JUMPDEST ISZERO PUSH2 0x102D JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9A3BFDF5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFCC SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST DUP5 SLOAD PUSH1 0x2 DUP7 ADD SLOAD SWAP2 SWAP3 POP PUSH4 0x1E13380 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL SWAP3 DUP4 SWAP1 DIV DUP2 AND SWAP3 PUSH2 0x2710 SWAP3 PUSH2 0x1002 SWAP3 SWAP2 SWAP1 DIV AND DUP8 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x100C SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x1016 SWAP2 SWAP1 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x1020 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x102A SWAP1 DUP4 PUSH2 0x2153 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP4 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH2 0x104C SWAP2 SWAP1 PUSH2 0x209B JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP14 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1066 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x3 PUSH0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP DUP3 PUSH1 0x5 PUSH0 DUP8 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1170 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP5 SWAP1 MSTORE MLOAD DUP14 SWAP2 CALLER SWAP2 PUSH32 0xC48192CF3609B4932A8B10A6F09FE1CAC38610FDEF14EACC15B35C454DA0B4C5 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG3 PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x11E0 DUP4 PUSH2 0x2166 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP PUSH2 0x11F4 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1204 PUSH2 0x1963 JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x1215 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x1261 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C696420506F6F6C20494421000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH3 0x186A0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x12BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A6D617820626F6E757320617079206973203130303025 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST DUP2 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12D1 JUMPI PUSH2 0x12D1 PUSH2 0x20C0 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP5 DUP6 AND MUL OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP5 AND DUP3 MSTORE DUP5 SWAP2 PUSH32 0xD3CD184B56B5B95016981FC55484FF8FDF06EB587430055C7AB828A0EDC0DC9D SWAP2 ADD PUSH2 0x5C2 JUMP JUMPDEST PUSH0 PUSH2 0x133F PUSH2 0x1963 JUMP JUMPDEST PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT PUSH2 0x13A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A6D61747572697479206D757374206265206772656174 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6572207468616E203 PUSH1 0xBC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x217A4B70 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13EF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1413 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A726577617264735F746F6B656E206D75737420626520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657175616C20746F2070726963655F6F7261636C652071756F746520746F6B65 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE DUP12 DUP4 AND SWAP5 DUP5 ADD SWAP5 DUP6 MSTORE DUP8 DUP3 AND PUSH1 0x60 DUP6 ADD SWAP1 DUP2 MSTORE DUP12 DUP5 AND PUSH1 0x80 DUP7 ADD SWAP1 DUP2 MSTORE DUP9 DUP5 AND PUSH1 0xA0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH0 DUP4 DUP2 MSTORE SWAP10 MLOAD SWAP7 MLOAD SWAP7 DUP10 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP8 DUP10 AND DUP9 MUL OR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE PUSH1 0x3 SWAP1 SWAP4 MUL SWAP3 DUP4 ADD SSTORE SWAP10 MLOAD SWAP5 MLOAD SWAP5 DUP9 AND SWAP5 DUP8 AND DUP7 MUL SWAP5 SWAP1 SWAP5 OR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF DUP6 ADD SSTORE SWAP2 MLOAD SWAP1 MLOAD SWAP6 AND SWAP5 SWAP1 SWAP4 AND SWAP1 SWAP2 MUL SWAP3 SWAP1 SWAP3 OR PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD SWAP1 SWAP2 PUSH2 0x15AD SWAP2 PUSH2 0x20D4 JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0x6B64B7E8B6F4656658EFB1C74B7D1BBFF6E84D3D7B1CD5AE89FD6CD91DE6EF96 DUP11 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x1626 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP1 DUP3 AND PUSH1 0x40 DUP5 ADD MSTORE AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP6 ISZERO PUSH2 0x163E JUMPI PUSH2 0x163E DUP9 DUP8 PUSH2 0x17A1 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1652 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x165B PUSH0 PUSH2 0x1C41 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1665 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1687 SWAP1 DUP3 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16C9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16ED SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST LT ISZERO PUSH2 0x173B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365210000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0x174F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x19B9 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE06FAB35F3C220725C11D544884AFF93EBF67222C8310C487C71F27C844593E8 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1794 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1804 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A616D6F756E74206D7573742062652067726561746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x207468616E207A65726F21 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0x1819 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER ADDRESS DUP5 PUSH2 0x1A32 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAC24935FD910BC682B5CCB1A07B718CADF8CF2F6D1404C4F3DDC3662DAE40E29 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1854 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP1 PUSH2 0x1871 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 DUP7 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x188D JUMPI POP PUSH1 0x4 SLOAD DUP2 LT JUMPDEST PUSH2 0x18D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C505374616B696E673A496E76616C6964205374616B65204944210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST POP POP POP PUSH0 SWAP5 DUP6 MSTORE POP POP PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP4 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP6 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP8 SWAP2 SWAP7 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP6 POP SWAP2 SWAP4 POP JUMP JUMPDEST PUSH2 0x1931 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x195A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0x9D6 DUP2 PUSH2 0x1C41 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x165B JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x19B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1A2D SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C9D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1A6B SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x19E6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP9 SWAP1 POP PUSH0 PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AB4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD8 SWAP2 SWAP1 PUSH2 0x21B6 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH0 PUSH0 PUSH2 0x1B4A DUP13 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B1F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B43 SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST DUP7 DUP7 PUSH2 0x1D09 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1BBA DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B8D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BB1 SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST DUP3 DUP14 DUP12 DUP12 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x1C26 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BF9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C1D SWAP2 SWAP1 PUSH2 0x217E JUMP JUMPDEST DUP5 DUP15 DUP15 DUP15 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x1C30 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1CBC JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x1CD3 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1A6B JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x39B JUMP JUMPDEST PUSH0 DUP1 DUP1 DUP6 PUSH2 0x1D27 DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x1D31 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 PUSH2 0x1D4F DUP10 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x1D59 SWAP2 SWAP1 PUSH2 0x20FE JUMP JUMPDEST SWAP2 SWAP9 SWAP2 SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6A089215 DUP8 DUP8 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DB6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DDA SWAP2 SWAP1 PUSH2 0x2202 JUMP JUMPDEST DUP8 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2222 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E18 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3C SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E56 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E73 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E89 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1E99 PUSH1 0x20 DUP5 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1EB2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EC9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1EE0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1EFC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F20 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F2C DUP10 DUP3 DUP11 ADD PUSH2 0x1EA2 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F4B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F57 DUP10 DUP3 DUP11 ADD PUSH2 0x1EA2 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1F93 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1F9E DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x1FAE DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x1FBE DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1FD3 PUSH1 0x80 DUP10 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP3 POP PUSH2 0x1FE1 PUSH1 0xA0 DUP10 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEF PUSH1 0xC0 DUP10 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x200F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x201A DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x202A DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x204B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2056 DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x206E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2079 DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x20BA JUMPI PUSH2 0x20BA PUSH2 0x2087 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x20BA JUMPI PUSH2 0x20BA PUSH2 0x2087 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x20BA JUMPI PUSH2 0x20BA PUSH2 0x2087 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2118 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x212D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2056 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x214C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x20BA JUMPI PUSH2 0x20BA PUSH2 0x2087 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x2177 JUMPI PUSH2 0x2177 PUSH2 0x2087 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x218E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2056 DUP2 PUSH2 0x1F69 JUMP JUMPDEST DUP1 MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1E73 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21C8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x21D1 DUP5 PUSH2 0x2199 JUMP JUMPDEST SWAP3 POP PUSH2 0x21DF PUSH1 0x20 DUP6 ADD PUSH2 0x2199 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x21F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2212 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2056 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0xA0 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0xA0 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN PUSH8 0x7D72E61BC7FF0411 RJUMP 0x7688 0xCC 0x24 0xB1 LOG1 0xC0 0x29 SAR PUSH23 0xA62D80E4CF4107394475EB64736F6C634300081E003300 ",
							"sourceMap": "418:9430:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7511:436;;;;;;:::i;:::-;;:::i;:::-;;9284:235;;;;;;:::i;:::-;;:::i;2758:537::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1031:55:15;;;1013:74;;1123:55;;;1118:2;1103:18;;1096:83;1215:55;;;;1195:18;;;1188:83;;;;-1:-1:-1;;;;;1307:39:15;;;1302:2;1287:18;;1280:67;1384:39;;;1378:3;1363:19;;1356:68;1461:39;;;1455:3;1440:19;;1433:68;1000:3;985:19;2758:537:10;;;;;;;;956:45;;994:7;956:45;;;;;-1:-1:-1;;;;;1674:39:15;;;1656:58;;1644:2;1629:18;956:45:10;1512:208:15;7955:659:10;;;;;;:::i;:::-;;:::i;6534:969::-;;;;;;:::i;:::-;;:::i;5024:1502::-;;;;;;:::i;:::-;;:::i;9527:316::-;;;;;;:::i;:::-;;:::i;4046:970::-;;;;;;:::i;:::-;;:::i;:::-;;;4208:25:15;;;4196:2;4181:18;4046:970:10;4062:177:15;2293:101:0;;;:::i;8921:355:10:-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;4921:55:15;;;4903:74;;4891:2;4876:18;1638:85:0;4757:226:15;1183:49:10;;;;;;:::i;:::-;;;;;;;;;;;;;;8622:291;;;;;;:::i;:::-;;:::i;3825:102::-;;;:::i;1008:47::-;;;;;3306:511;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6166:55:15;;;6148:74;;6253:2;6238:18;;6231:34;;;;-1:-1:-1;;;;;6301:39:15;;;6281:18;;;6274:67;;;;6372:2;6357:18;;6350:34;6415:3;6400:19;;6393:35;;;;6459:3;6444:19;;6437:35;6135:3;6120:19;3306:511:10;5863:615:15;2543:215:0;;;;;;:::i;:::-;;:::i;7511:436:10:-;1531:13:0;:11;:13::i;:::-;7580:8:10::1;2280:1;2269:8;:12;:39;;;;;2296:12;;2285:8;:23;2269:39;2261:79;;;::::0;-1:-1:-1;;;2261:79:10;;6685:2:15;2261:79:10::1;::::0;::::1;6667:21:15::0;6724:2;6704:18;;;6697:30;6763:29;6743:18;;;6736:57;6810:18;;2261:79:10::1;;;;;;;;;7606:28:::2;7637:16:::0;;;:6:::2;:16;::::0;;;;7686::::2;::::0;::::2;::::0;:31:::2;::::0;994:7:::2;::::0;-1:-1:-1;;;7686:16:10;::::2;-1:-1:-1::0;;;;;7686:16:10::2;:31;:::i;:::-;-1:-1:-1::0;;;;;7672:45:10::2;4014:15:::0;-1:-1:-1;;;;;7672:45:10::2;;;7664:54;;;;;;7730:21;7754:5;7760:7;:15;;;7754:22;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;7827:21:::0;;::::2;::::0;7754:22;::::2;;7804:18;::::0;::::2;::::0;-1:-1:-1;;;;;7804:18:10::2;7787:36:::0;;:16:::2;:36:::0;;;;;;:61;;7754:22;;-1:-1:-1;7827:21:10;;7754:22;7787:61:::2;::::0;7827:21;;7787:61:::2;:::i;:::-;::::0;;;-1:-1:-1;;7883:1:10::2;7859:21;::::0;::::2;:25:::0;7913:15;;7900:39:::2;::::0;4208:25:15;;;7900:39:10::2;::::0;4196:2:15;4181:18;7900:39:10::2;;;;;;;7595:352;;1554:1:0::1;7511:436:10::0;:::o;9284:235::-;1531:13:0;:11;:13::i;:::-;9359:7:10::1;2119:1;2109:7;:11;:37;;;;-1:-1:-1::0;2134:5:10::1;:12:::0;2124:22;::::1;2109:37;2101:76;;;::::0;-1:-1:-1;;;2101:76:10;;7658:2:15;2101:76:10::1;::::0;::::1;7640:21:15::0;7697:2;7677:18;;;7670:30;7736:28;7716:18;;;7709:56;7782:18;;2101:76:10::1;7456:350:15::0;2101:76:10::1;9399:6:::2;9392:3;-1:-1:-1::0;;;;;9392:13:10::2;;;9384:52;;;::::0;-1:-1:-1;;;9384:52:10;;8013:2:15;9384:52:10::2;::::0;::::2;7995:21:15::0;8052:2;8032:18;;;8025:30;8091:28;8071:18;;;8064:56;8137:18;;9384:52:10::2;7811:350:15::0;9384:52:10::2;9468:3;9447:5;9453:7;9447:14;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;::::2;::::0;;;::::2;;:18;;:24:::0;;-1:-1:-1;;;;;9447:24:10::2;-1:-1:-1::0;;;;;;;;9447:24:10;;::::2;;;::::0;;9487::::2;::::0;1674:39:15;;;1656:58;;9498:7:10;;9487:24:::2;::::0;1629:18:15;9487:24:10::2;;;;;;;;1554:1:0::1;9284:235:10::0;;:::o;2758:537::-;2845:21;2881;2917:20;2952:15;2982:10;3007:23;2812:7;2119:1;2109:7;:11;:37;;;;-1:-1:-1;2134:5:10;:12;2124:22;;2109:37;2101:76;;;;-1:-1:-1;;;2101:76:10;;7658:2:15;2101:76:10;;;7640:21:15;7697:2;7677:18;;;7670:30;7736:28;7716:18;;;7709:56;7782:18;;2101:76:10;7456:350:15;2101:76:10;3056:5:::1;3062:7;3056:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:28:::0;3099:5:::1;:14:::0;;-1:-1:-1;;;;;3056:28:10;;::::1;::::0;3105:7;;3099:14;::::1;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;-1:-1:-1::0;;;;;3099:28:10::1;3142:5;3148:7;3142:14;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;;;;;;;;-1:-1:-1::0;;;;;3142:27:10::1;3184:5;3190:7;3184:14;;;;;;;;:::i;:::-;;;;;;;;;;;:23;;;;;;;;;;-1:-1:-1::0;;;;;3184:23:10::1;3222:5;3228:7;3222:14;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;;;;;;;;-1:-1:-1::0;;;;;3222:18:10::1;3255:5;3261:7;3255:14;;;;;;;;:::i;:::-;;;;;;;;;;;:31;;;;;;;;;;-1:-1:-1::0;;;;;3255:31:10::1;3048:239;;;;;;;;;;;;2758:537:::0;;;;;;;;:::o;7955:659::-;2500:21:7;:19;:21::i;:::-;8030:8:10::1;2280:1;2269:8;:12;:39;;;;;2296:12;;2285:8;:23;2269:39;2261:79;;;::::0;-1:-1:-1;;;2261:79:10;;6685:2:15;2261:79:10::1;::::0;::::1;6667:21:15::0;6724:2;6704:18;;;6697:30;6763:29;6743:18;;;6736:57;6810:18;;2261:79:10::1;6483:351:15::0;2261:79:10::1;8056:28:::2;8087:16:::0;;;:6:::2;:16;::::0;;;;8122:13:::2;::::0;::::2;::::0;-1:-1:-1;;;;;8122:13:10::2;735:10:6::0;8122:29:10::2;8114:75;;;::::0;-1:-1:-1;;;8114:75:10;;8368:2:15;8114:75:10::2;::::0;::::2;8350:21:15::0;8407:2;8387:18;;;8380:30;8446:34;8426:18;;;8419:62;-1:-1:-1;;;8497:18:15;;;8490:31;8538:19;;8114:75:10::2;8166:397:15::0;8114:75:10::2;8200:20;8223:5;8229:7;:15;;;8223:22;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;8200:45:::2;::::0;;::::2;::::0;::::2;::::0;;8223:22:::2;::::0;;::::2;::::0;;::::2;8200:45:::0;;-1:-1:-1;;;;;8200:45:10;;::::2;::::0;;-1:-1:-1;;;;;;;;8200:45:10;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;;::::2;::::0;;;::::2;::::0;;;;;;;;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;;;;;;::::2;::::0;::::2;::::0;;;;8278:16;;::::2;::::0;8200:45;;-1:-1:-1;8278:16:10;::::2;;8264:10;4014:15:::0;;3935:103;8264:10:::2;-1:-1:-1::0;;;;;8264:30:10::2;;;8256:87;;;::::0;-1:-1:-1;;;8256:87:10;;8770:2:15;8256:87:10::2;::::0;::::2;8752:21:15::0;8809:2;8789:18;;;8782:30;8848:34;8828:18;;;8821:62;-1:-1:-1;;;8899:18:15;;;8892:42;8951:19;;8256:87:10::2;8568:408:15::0;8256:87:10::2;8368:20;::::0;::::2;::::0;:24;8365:240:::2;;8418:75;735:10:6::0;8472:20:10::2;::::0;::::2;::::0;8425:18;;-1:-1:-1;;;;;8418:39:10::2;::::0;:75;:39:::2;:75::i;:::-;8531:1;8508:20;::::0;::::2;:24:::0;8567:15;;8552:41:::2;::::0;4208:25:15;;;8552:41:10::2;::::0;4196:2:15;4181:18;8552:41:10::2;;;;;;;;8365:240;8045:569;;2531:1:7::1;2542:20:::0;1857:1;3068:21;;2888:208;2542:20;7955:659:10;:::o;6534:969::-;2500:21:7;:19;:21::i;:::-;6601:8:10::1;2280:1;2269:8;:12;:39;;;;;2296:12;;2285:8;:23;2269:39;2261:79;;;::::0;-1:-1:-1;;;2261:79:10;;6685:2:15;2261:79:10::1;::::0;::::1;6667:21:15::0;6724:2;6704:18;;;6697:30;6763:29;6743:18;;;6736:57;6810:18;;2261:79:10::1;6483:351:15::0;2261:79:10::1;6633:28:::2;6664:16:::0;;;:6:::2;:16;::::0;;;;6699:13:::2;::::0;::::2;::::0;-1:-1:-1;;;;;6699:13:10::2;735:10:6::0;6699:29:10::2;6691:75;;;::::0;-1:-1:-1;;;6691:75:10;;8368:2:15;6691:75:10::2;::::0;::::2;8350:21:15::0;8407:2;8387:18;;;8380:30;8446:34;8426:18;;;8419:62;-1:-1:-1;;;8497:18:15;;;8490:31;8538:19;;6691:75:10::2;8166:397:15::0;6691:75:10::2;6777:21;6801:5;6807:7;:15;;;6801:22;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;6856:16:::2;::::0;::::2;::::0;6801:22:::2;::::0;;::::2;;::::0;-1:-1:-1;;;;6856:16:10;::::2;-1:-1:-1::0;;;;;6856:16:10::2;4014:15:::0;-1:-1:-1;;;;;6842:30:10::2;;;6834:87;;;::::0;-1:-1:-1;;;6834:87:10;;8770:2:15;6834:87:10::2;::::0;::::2;8752:21:15::0;8809:2;8789:18;;;8782:30;8848:34;8828:18;;;8821:62;-1:-1:-1;;;8899:18:15;;;8892:42;8951:19;;6834:87:10::2;8568:408:15::0;6834:87:10::2;6965:1;6941:7;:21;;;:25;6933:64;;;::::0;-1:-1:-1;;;6933:64:10;;9183:2:15;6933:64:10::2;::::0;::::2;9165:21:15::0;9222:2;9202:18;;;9195:30;9261:28;9241:18;;;9234:56;9307:18;;6933:64:10::2;8981:350:15::0;6933:64:10::2;7011:20;::::0;::::2;::::0;:24;7008:179:::2;;7061:75;735:10:6::0;7115:20:10::2;::::0;::::2;::::0;7068:18;;-1:-1:-1;;;;;7068:18:10::2;::::0;7061:75;:39:::2;:75::i;:::-;7174:1;7151:20;::::0;::::2;:24:::0;7008:179:::2;7199:76;735:10:6::0;7253:21:10::2;::::0;::::2;::::0;7206:18:::2;::::0;::::2;::::0;-1:-1:-1;;;;;7206:18:10::2;::::0;7199:76;:39:::2;:76::i;:::-;7326:21;::::0;::::2;::::0;7303:18:::2;::::0;::::2;::::0;-1:-1:-1;;;;;7303:18:10::2;7286:36;::::0;;;:16:::2;:36;::::0;;;;:61;;:36;;;:61:::2;::::0;7326:21;;7286:61:::2;:::i;:::-;::::0;;;-1:-1:-1;;7382:1:10::2;7358:21;::::0;::::2;:25:::0;7415:15;;7400:41:::2;::::0;4208:25:15;;;7400:41:10::2;::::0;4196:2:15;4181:18;7400:41:10::2;;;;;;;7468:15:::0;;7457:37:::2;::::0;4208:25:15;;;7457:37:10::2;::::0;4196:2:15;4181:18;7457:37:10::2;4062:177:15::0;5024:1502:10;2500:21:7;:19;:21::i;:::-;5176:7:10::1;2119:1;2109:7;:11;:37;;;;-1:-1:-1::0;2134:5:10::1;:12:::0;2124:22;::::1;2109:37;2101:76;;;::::0;-1:-1:-1;;;2101:76:10;;7658:2:15;2101:76:10::1;::::0;::::1;7640:21:15::0;7697:2;7677:18;;;7670:30;7736:28;7716:18;;;7709:56;7782:18;;2101:76:10::1;7456:350:15::0;2101:76:10::1;5224:1:::2;5209:12;:16;5201:77;;;::::0;-1:-1:-1;;;5201:77:10;;9538:2:15;5201:77:10::2;::::0;::::2;9520:21:15::0;9577:2;9557:18;;;9550:30;9616:34;9596:18;;;9589:62;9687:19;9667:18;;;9660:47;9724:19;;5201:77:10::2;9336:413:15::0;5201:77:10::2;5289:21;5313:5;5319:7;5313:14;;;;;;;;:::i;:::-;;;;;;;;;;;5289:38;;5357:1;5346:4;:8;;;;;;;;;;-1:-1:-1::0;;;;;5346:8:10::2;-1:-1:-1::0;;;;;5346:12:10::2;;5338:50;;;::::0;-1:-1:-1;;;5338:50:10;;9956:2:15;5338:50:10::2;::::0;::::2;9938:21:15::0;9995:2;9975:18;;;9968:30;10034:27;10014:18;;;10007:55;10079:18;;5338:50:10::2;9754:349:15::0;5338:50:10::2;5399:86;735:10:6::0;5406:18:10;;-1:-1:-1;;;;;5406:18:10::2;::::0;5465:4:::2;5472:12:::0;5399:43:::2;:86::i;:::-;5525:18:::0;;5559:17:::2;::::0;::::2;::::0;5497:16:::2;::::0;5516:99:::2;::::0;-1:-1:-1;;;;;5525:18:10;;::::2;::::0;5545:12;;5559:17:::2;5578::::0;;5597;;5516:8:::2;:99::i;:::-;5674:13:::0;;5659:8:::2;::::0;::::2;::::0;5497:118;;-1:-1:-1;5626:18:10::2;::::0;5689:8:::2;::::0;-1:-1:-1;;;;;;;;5674:13:10;;;::::2;::::0;::::2;::::0;5668:5:::2;::::0;5647:20:::2;::::0;5659:8;::::2;;5497:118:::0;5647:20:::2;:::i;:::-;:26;;;;:::i;:::-;:40;;;;:::i;:::-;:51;;;;:::i;:::-;5626:72:::0;-1:-1:-1;5709:19:10::2;5746:18;-1:-1:-1::0;;;;;5746:26:10::2;;735:10:6::0;5746:40:10::2;::::0;;::::2;::::0;;;;;;-1:-1:-1;;;;;4921:55:15;;;5746:40:10::2;::::0;::::2;4903:74:15::0;4876:18;;5746:40:10::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5743:229;;;5829:18;-1:-1:-1::0;;;;;5829:33:10::2;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5936:13:::0;;5908:21:::2;::::0;::::2;::::0;5812:52;;-1:-1:-1;5951:8:10::2;::::0;-1:-1:-1;;;;;;;;5936:13:10;;;::::2;::::0;::::2;::::0;5930:5:::2;::::0;5896:33:::2;::::0;5908:21;;::::2;;5896:11:::0;:33:::2;:::i;:::-;:39;;;;:::i;:::-;:53;;;;:::i;:::-;:64;;;;:::i;:::-;5879:81;::::0;;::::2;:::i;:::-;;;5743:229;6015:13:::0;;5984:15:::2;::::0;-1:-1:-1;;;6015:13:10;::::2;-1:-1:-1::0;;;;;6015:13:10::2;4014:15:::0;6002:26:::2;;;;:::i;:::-;5984:44;;6062:252;;;;;;;;6133:7;6062:252;;;;6097:12;735:10:6::0;;656:96;6097:12:10::2;-1:-1:-1::0;;;;;6062:252:10::2;;;;;6165:8;-1:-1:-1::0;;;;;6062:252:10::2;;;;;6202:12;6062:252;;;;6244:13;6062:252;;;;6288:14;6062:252;;::::0;6039:6:::2;:20;6046:12;;6039:20;;;;;;;;;;;:275;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;6039:275:10::2;;;;;-1:-1:-1::0;;;;;6039:275:10::2;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;6039:275:10::2;;;;;-1:-1:-1::0;;;;;6039:275:10::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6365:13;6325:16;:36;6342:4;:18;;;;;;;;;;-1:-1:-1::0;;;;;6342:18:10::2;-1:-1:-1::0;;;;;6325:36:10::2;-1:-1:-1::0;;;;;6325:36:10::2;;;;;;;;;;;;;:53;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6415:12:10::2;::::0;6394:98:::2;::::0;;11361:25:15;;;-1:-1:-1;;;;;11422:39:15;;11417:2;11402:18;;11395:67;11478:18;;;11471:34;;;11536:2;11521:18;;11514:34;;;11579:3;11564:19;;11557:35;;;6394:98:10;6429:7;;735:10:6;;6394:98:10::2;::::0;;;;11348:3:15;6394:98:10;;::::2;6503:12;:14:::0;;;:12:::2;:14;::::0;::::2;:::i;:::-;;;;;;5190:1336;;;;;2531:1:7::1;2542:20:::0;1857:1;3068:21;;2888:208;2542:20;5024:1502:10;;;;;;:::o;9527:316::-;1531:13:0;:11;:13::i;:::-;9620:7:10::1;2119:1;2109:7;:11;:37;;;;-1:-1:-1::0;2134:5:10::1;:12:::0;2124:22;::::1;2109:37;2101:76;;;::::0;-1:-1:-1;;;2101:76:10;;7658:2:15;2101:76:10::1;::::0;::::1;7640:21:15::0;7697:2;7677:18;;;7670:30;7736:28;7716:18;;;7709:56;7782:18;;2101:76:10::1;7456:350:15::0;2101:76:10::1;9673:6:::2;9653:16;-1:-1:-1::0;;;;;9653:26:10::2;;;9645:71;;;::::0;-1:-1:-1;;;9645:71:10;;11945:2:15;9645:71:10::2;::::0;::::2;11927:21:15::0;;;11964:18;;;11957:30;12023:34;12003:18;;;11996:62;12075:18;;9645:71:10::2;11743:356:15::0;9645:71:10::2;9761:16;9727:5;9733:7;9727:14;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;::::2;::::0;;;::::2;;:31;;:50:::0;;-1:-1:-1;;;;;9727:50:10::2;-1:-1:-1::0;;;;;;;;9727:50:10;;::::2;;;::::0;;9793:42:::2;::::0;1674:39:15;;;1656:58;;9809:7:10;;9793:42:::2;::::0;1629:18:15;9793:42:10::2;1512:208:15::0;4046:970:10;4235:4;1531:13:0;:11;:13::i;:::-;4276:1:10::1;4265:8;-1:-1:-1::0;;;;;4265:12:10::1;;4257:66;;;::::0;-1:-1:-1;;;4257:66:10;;12306:2:15;4257:66:10::1;::::0;::::1;12288:21:15::0;12345:2;12325:18;;;12318:30;12384:34;12364:18;;;12357:62;-1:-1:-1;;;12435:18:15;;;12428:39;12484:19;;4257:66:10::1;12104:405:15::0;4257:66:10::1;4383:13;-1:-1:-1::0;;;;;4342:54:10::1;4353:12;-1:-1:-1::0;;;;;4342:35:10::1;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4342:54:10::1;;4334:132;;;::::0;-1:-1:-1;;;4334:132:10;;12972:2:15;4334:132:10::1;::::0;::::1;12954:21:15::0;13011:2;12991:18;;;12984:30;13050:34;13030:18;;;13023:62;13121:34;13101:18;;;13094:62;-1:-1:-1;;;13172:19:15;;;13165:32;13214:19;;4334:132:10::1;12770:469:15::0;4334:132:10::1;4488:253;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4488:253:10;;::::1;::::0;;-1:-1:-1;;;;;4488:253:10;;::::1;;::::0;::::1;::::0;;;;;::::1;::::0;;;;;;;;::::1;::::0;;;;;;;;::::1;::::0;;;;;;;;::::1;::::0;;;;;;4477:5:::1;:265:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;4477:265:10;;;;;;;;;::::1;-1:-1:-1::0;;;4477:265:10;;::::1;::::0;::::1;;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;;;;4768:12;-1:-1:-1;;4768:16:10::1;::::0;::::1;:::i;:::-;4753:31;;4836:13;-1:-1:-1::0;;;;;4800:97:10::1;4821:13;-1:-1:-1::0;;;;;4800:97:10::1;4812:7;4800:97;4851:12;4865:8;4875:3;4880:16;4800:97;;;;;;;;-1:-1:-1::0;;;;;13487:55:15;;;;13469:74;;-1:-1:-1;;;;;13579:39:15;;;13574:2;13559:18;;13552:67;13655:39;;;13650:2;13635:18;;13628:67;13731:39;13726:2;13711:18;;13704:67;13456:3;13441:19;;13244:533;4800:97:10::1;;;;;;;;4911:17:::0;;4908:75:::1;;4943:40;4954:13;4969;4943:10;:40::i;:::-;5001:7:::0;4046:970;-1:-1:-1;;;;;;;;4046:970:10:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;8921:355:10:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;9096:31:10;::::1;;::::0;;;:16:::1;:31;::::0;;;;;9087:40:::1;::::0;:6;:40:::1;:::i;:::-;9037:46;::::0;-1:-1:-1;;;9037:46:10;;9077:4:::1;9037:46;::::0;::::1;4903:74:15::0;-1:-1:-1;;;;;9037:31:10;::::1;::::0;::::1;::::0;4876:18:15;;9037:46:10::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:90;;9029:124;;;::::0;-1:-1:-1;;;9029:124:10;;13984:2:15;9029:124:10::1;::::0;::::1;13966:21:15::0;14023:2;14003:18;;;13996:30;14062:23;14042:18;;;14035:51;14103:18;;9029:124:10::1;13782:345:15::0;9029:124:10::1;9164:46;-1:-1:-1::0;;;;;9164:34:10;::::1;9199:2:::0;9203:6;9164:34:::1;:46::i;:::-;9257:2;-1:-1:-1::0;;;;;9226:42:10::1;9242:13;-1:-1:-1::0;;;;;9226:42:10::1;;9261:6;9226:42;;;;4208:25:15::0;;4196:2;4181:18;;4062:177;9226:42:10::1;;;;;;;;8921:355:::0;;;:::o;8622:291::-;8720:1;8711:6;:10;8702:67;;;;-1:-1:-1;;;8702:67:10;;14334:2:15;8702:67:10;;;14316:21:15;14373:2;14353:18;;;14346:30;14412:34;14392:18;;;14385:62;-1:-1:-1;;;14463:18:15;;;14456:41;14514:19;;8702:67:10;14132:407:15;8702:67:10;8780:75;-1:-1:-1;;;;;8780:38:10;;735:10:6;8841:4:10;8848:6;8780:38;:75::i;:::-;8883:13;-1:-1:-1;;;;;8871:34:10;;8898:6;8871:34;;;;4208:25:15;;4196:2;4181:18;;4062:177;8871:34:10;;;;;;;;8622:291;;:::o;3825:102::-;3903:5;:12;3873:4;;3903:16;;3918:1;;3903:16;:::i;:::-;3896:23;;3825:102;:::o;3306:511::-;3397:13;3421:12;3444:15;3470:17;3498:18;3527:19;3363:8;2280:1;2269:8;:12;:39;;;;;2296:12;;2285:8;:23;2269:39;2261:79;;;;-1:-1:-1;;;2261:79:10;;6685:2:15;2261:79:10;;;6667:21:15;6724:2;6704:18;;;6697:30;6763:29;6743:18;;;6736:57;6810:18;;2261:79:10;6483:351:15;2261:79:10;-1:-1:-1;;;3572:16:10::1;::::0;;;-1:-1:-1;;3572:6:10::1;:16;::::0;;;;;;;:22:::1;::::0;::::1;::::0;3609:24;;3688:29:::1;::::0;::::1;::::0;3732:30;;::::1;::::0;3777:31:::1;::::0;;::::1;::::0;-1:-1:-1;;;;;3572:22:10;::::1;::::0;3609:24;;-1:-1:-1;;;3648:25:10;;::::1;-1:-1:-1::0;;;;;3648:25:10::1;::::0;-1:-1:-1;3688:29:10;;-1:-1:-1;3306:511:10:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;4903:74:15::0;4876:18;;2672:31:0::1;4757:226:15::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;1796:162::-:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;4903:74:15;4876:18;;1901:40:0;4757:226:15;2575:307:7;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:7;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;1219:160:5:-;1328:43;;-1:-1:-1;;;;;14736:55:15;;;1328:43:5;;;14718:74:15;14808:18;;;14801:34;;;1301:71:5;;1321:5;;1343:14;;;;;14691:18:15;;1328:43:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;1618:188::-;1745:53;;-1:-1:-1;;;;;15066:55:15;;;1745:53:5;;;15048:74:15;15158:55;;;15138:18;;;15131:83;15230:18;;;15223:34;;;1718:81:5;;1738:5;;1760:18;;;;;15021::15;;1745:53:5;14846:417:15;1718:81:5;1618:188;;;;:::o;855:611:14:-;1013:4;1035:19;1072:7;1035:45;;1092:16;1110;1132:4;-1:-1:-1;;;;;1132:16:14;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1091:59;;;;;1162:19;1183;1206:65;1221:9;1232:4;-1:-1:-1;;;;;1232:16:14;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1252:8;1262;1206:14;:65::i;:::-;1161:110;;;;1384:74;1396:4;-1:-1:-1;;;;;1396:11:14;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1411:14;1427:11;1440:17;;1384:11;:74::i;:::-;1290;1302:4;-1:-1:-1;;;;;1302:11:14;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1317:14;1333:11;1346:17;;1290:11;:74::i;:::-;:168;;;;:::i;:::-;1282:176;855:611;-1:-1:-1;;;;;;;;;;;;;855:611:14:o;2912:187:0:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;8370:720:5:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:5;8910:8;8866:16;;-1:-1:-1;8942:15:5;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:5;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:5;;-1:-1:-1;;;;;4921:55:15;;9033:40:5;;;4903:74:15;4876:18;;9033:40:5;4757:226:15;533:314:14;648:4;;;718:9;698:19;707:10;698:19;;;;:::i;:::-;:29;;;;:::i;:::-;676:51;-1:-1:-1;738:19:14;780:9;760:19;769:10;760:19;;;;:::i;:::-;:29;;;;:::i;:::-;808:14;;;;-1:-1:-1;533:314:14;;-1:-1:-1;;;;;;533:314:14:o;248:277::-;366:4;406:11;-1:-1:-1;;;;;395:50:14;;446:10;458:6;482:10;-1:-1:-1;;;;;466:36:14;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;506:10;;395:122;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;388:129;248:277;-1:-1:-1;;;;;;248:277:14:o;14:226:15:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:15;;14:226;-1:-1:-1;14:226:15:o;245:179::-;312:20;;-1:-1:-1;;;;;361:38:15;;351:49;;341:77;;414:1;411;404:12;341:77;245:179;;;:::o;429:298::-;496:6;504;557:2;545:9;536:7;532:23;528:32;525:52;;;573:1;570;563:12;525:52;618:23;;;-1:-1:-1;684:37:15;717:2;702:18;;684:37;:::i;:::-;674:47;;429:298;;;;;:::o;1725:347::-;1776:8;1786:6;1840:3;1833:4;1825:6;1821:17;1817:27;1807:55;;1858:1;1855;1848:12;1807:55;-1:-1:-1;1881:20:15;;1924:18;1913:30;;1910:50;;;1956:1;1953;1946:12;1910:50;1993:4;1985:6;1981:17;1969:29;;2045:3;2038:4;2029:6;2021;2017:19;2013:30;2010:39;2007:59;;;2062:1;2059;2052:12;2007:59;1725:347;;;;;:::o;2077:947::-;2185:6;2193;2201;2209;2217;2225;2278:3;2266:9;2257:7;2253:23;2249:33;2246:53;;;2295:1;2292;2285:12;2246:53;2340:23;;;-1:-1:-1;2460:2:15;2445:18;;2432:32;;-1:-1:-1;2541:2:15;2526:18;;2513:32;2568:18;2557:30;;2554:50;;;2600:1;2597;2590:12;2554:50;2639:58;2689:7;2680:6;2669:9;2665:22;2639:58;:::i;:::-;2716:8;;-1:-1:-1;2613:84:15;-1:-1:-1;;2804:2:15;2789:18;;2776:32;2833:18;2820:32;;2817:52;;;2865:1;2862;2855:12;2817:52;2904:60;2956:7;2945:8;2934:9;2930:24;2904:60;:::i;:::-;2077:947;;;;-1:-1:-1;2077:947:15;;-1:-1:-1;2077:947:15;;2983:8;;2077:947;-1:-1:-1;;;2077:947:15:o;3029:154::-;-1:-1:-1;;;;;3108:5:15;3104:54;3097:5;3094:65;3084:93;;3173:1;3170;3163:12;3188:869;3298:6;3306;3314;3322;3330;3338;3346;3399:3;3387:9;3378:7;3374:23;3370:33;3367:53;;;3416:1;3413;3406:12;3367:53;3455:9;3442:23;3474:31;3499:5;3474:31;:::i;:::-;3524:5;-1:-1:-1;3581:2:15;3566:18;;3553:32;3594:33;3553:32;3594:33;:::i;:::-;3646:7;-1:-1:-1;3705:2:15;3690:18;;3677:32;3718:33;3677:32;3718:33;:::i;:::-;3770:7;-1:-1:-1;3850:2:15;3835:18;;3822:32;;-1:-1:-1;3899:38:15;3932:3;3917:19;;3899:38;:::i;:::-;3889:48;;3956:38;3989:3;3978:9;3974:19;3956:38;:::i;:::-;3946:48;;4013:38;4046:3;4035:9;4031:19;4013:38;:::i;:::-;4003:48;;3188:869;;;;;;;;;;:::o;4244:508::-;4321:6;4329;4337;4390:2;4378:9;4369:7;4365:23;4361:32;4358:52;;;4406:1;4403;4396:12;4358:52;4445:9;4432:23;4464:31;4489:5;4464:31;:::i;:::-;4514:5;-1:-1:-1;4571:2:15;4556:18;;4543:32;4584:33;4543:32;4584:33;:::i;:::-;4244:508;;4636:7;;-1:-1:-1;;;4716:2:15;4701:18;;;;4688:32;;4244:508::o;4988:247::-;5047:6;5100:2;5088:9;5079:7;5075:23;5071:32;5068:52;;;5116:1;5113;5106:12;5068:52;5155:9;5142:23;5174:31;5199:5;5174:31;:::i;:::-;5224:5;4988:247;-1:-1:-1;;;4988:247:15:o;5240:367::-;5308:6;5316;5369:2;5357:9;5348:7;5344:23;5340:32;5337:52;;;5385:1;5382;5375:12;5337:52;5424:9;5411:23;5443:31;5468:5;5443:31;:::i;:::-;5493:5;5571:2;5556:18;;;;5543:32;;-1:-1:-1;;;5240:367:15:o;6839:127::-;6900:10;6895:3;6891:20;6888:1;6881:31;6931:4;6928:1;6921:15;6955:4;6952:1;6945:15;6971:215;-1:-1:-1;;;;;7039:34:15;;;7075;;;7035:75;;7122:35;;7119:61;;;7160:18;;:::i;:::-;6971:215;;;;:::o;7191:127::-;7252:10;7247:3;7243:20;7240:1;7233:31;7283:4;7280:1;7273:15;7307:4;7304:1;7297:15;7323:128;7390:9;;;7411:11;;;7408:37;;;7425:18;;:::i;10108:168::-;10181:9;;;10212;;10229:15;;;10223:22;;10209:37;10199:71;;10250:18;;:::i;10281:217::-;10321:1;10347;10337:132;;10391:10;10386:3;10382:20;10379:1;10372:31;10426:4;10423:1;10416:15;10454:4;10451:1;10444:15;10337:132;-1:-1:-1;10483:9:15;;10281:217::o;10503:277::-;10570:6;10623:2;10611:9;10602:7;10598:23;10594:32;10591:52;;;10639:1;10636;10629:12;10591:52;10671:9;10665:16;10724:5;10717:13;10710:21;10703:5;10700:32;10690:60;;10746:1;10743;10736:12;10785:184;10855:6;10908:2;10896:9;10887:7;10883:23;10879:32;10876:52;;;10924:1;10921;10914:12;10876:52;-1:-1:-1;10947:16:15;;10785:184;-1:-1:-1;10785:184:15:o;10974:125::-;11039:9;;;11060:10;;;11057:36;;;11073:18;;:::i;11603:135::-;11642:3;11663:17;;;11660:43;;11683:18;;:::i;:::-;-1:-1:-1;11730:1:15;11719:13;;11603:135::o;12514:251::-;12584:6;12637:2;12625:9;12616:7;12612:23;12608:32;12605:52;;;12653:1;12650;12643:12;12605:52;12685:9;12679:16;12704:31;12729:5;12704:31;:::i;15268:188::-;15347:13;;15400:30;15389:42;;15379:53;;15369:81;;15446:1;15443;15436:12;15461:450;15548:6;15556;15564;15617:2;15605:9;15596:7;15592:23;15588:32;15585:52;;;15633:1;15630;15623:12;15585:52;15656:40;15686:9;15656:40;:::i;:::-;15646:50;;15715:49;15760:2;15749:9;15745:18;15715:49;:::i;:::-;15705:59;;15807:2;15796:9;15792:18;15786:25;15851:10;15844:5;15840:22;15833:5;15830:33;15820:61;;15877:1;15874;15867:12;15820:61;15900:5;15890:15;;;15461:450;;;;;:::o;15916:273::-;15984:6;16037:2;16025:9;16016:7;16012:23;16008:32;16005:52;;;16053:1;16050;16043:12;16005:52;16085:9;16079:16;16135:4;16128:5;16124:16;16117:5;16114:27;16104:55;;16155:1;16152;16145:12;16194:662;-1:-1:-1;;;;;16435:6:15;16431:55;16420:9;16413:74;16523:6;16518:2;16507:9;16503:18;16496:34;16578:4;16570:6;16566:17;16561:2;16550:9;16546:18;16539:45;16620:3;16615:2;16604:9;16600:18;16593:31;16661:6;16655:3;16644:9;16640:19;16633:35;16719:6;16711;16705:3;16694:9;16690:19;16677:49;16776:1;16746:22;;;16770:3;16742:32;;;16735:43;;;;16839:2;16818:15;;;-1:-1:-1;;16814:29:15;16799:45;16795:55;;16194:662;-1:-1:-1;;;;16194:662:15:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1774200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CLAIM_PERIOD()": "305",
								"CREDI_WHALE_ORACLE()": "infinite",
								"addRewards(address,uint256)": "infinite",
								"claim(uint256)": "infinite",
								"createPool(address,address,address,uint256,uint96,uint96,uint96)": "infinite",
								"getPool(uint256)": "28933",
								"getPoolsCount()": "2438",
								"getStake(uint256)": "13392",
								"owner()": "2385",
								"pending_payments(address)": "2599",
								"renounceOwnership()": "infinite",
								"setAPY(uint256,uint96)": "32664",
								"setBonusAPY(uint256,uint96)": "32718",
								"stake(uint256,uint256,bytes,bytes)": "infinite",
								"transferOwnership(address)": "infinite",
								"voidReward(uint256)": "infinite",
								"withdrawRewards(address,address,uint256)": "infinite",
								"withdrawStake(uint256)": "infinite"
							},
							"internal": {
								"time_now()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 418,
									"end": 9848,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 418,
									"end": 9848,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 418,
									"end": 9848,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1175,
									"end": 1176,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1147,
									"end": 1176,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1147,
									"end": 1176,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2368,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 735,
									"end": 745,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2446,
									"end": 2498,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2498,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2498,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2498,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2446,
									"end": 2498,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2498,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2498,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "C0"
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2741,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2514,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "PUSH",
									"source": 10,
									"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "PUSH",
									"source": 10,
									"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF"
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "PUSH",
									"source": 10,
									"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0"
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2742,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 418,
									"end": 9848,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 418,
									"end": 9848,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 309,
									"end": 512,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 309,
									"end": 512,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 418,
									"end": 9848,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 418,
									"end": 9848,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 418,
									"end": 9848,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 418,
									"end": 9848,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 418,
									"end": 9848,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 9848,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 418,
									"end": 9848,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 9848,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "1183"
								},
								{
									"begin": 418,
									"end": 9848,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 418,
									"end": 9848,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 9848,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122032677d72e61bc7ff0411e07688cc24b1a1c0291d76a62d80e4cf4107394475eb64736f6c634300081e0033",
									".code": [
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "A9FC507B"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "A9FC507B"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "B4AC6860"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "CC5C56DC"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "CE325BF8"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "74EE6B62"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "954821B6"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "25D5971F"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "25D5971F"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "379607F5"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "3B5DD047"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "4F44DAA9"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "69CA431B"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "215784"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "39BA6B7"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "68BCD8D"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "21241DFE"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9848,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 7511,
											"end": 7947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 7511,
											"end": 7947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9519,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9284,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9284,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9284,
											"end": 9519,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9519,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9284,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 9284,
											"end": 9519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9519,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9284,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 9284,
											"end": 9519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 2758,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 2758,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1031,
											"end": 1086,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1086,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1031,
											"end": 1086,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1013,
											"end": 1087,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1013,
											"end": 1087,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1123,
											"end": 1178,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 1123,
											"end": 1178,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1123,
											"end": 1178,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1121,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1103,
											"end": 1121,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1096,
											"end": 1179,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1215,
											"end": 1270,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1215,
											"end": 1270,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1215,
											"end": 1270,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 1215,
											"end": 1270,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1213,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1213,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1213,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1188,
											"end": 1271,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1188,
											"end": 1271,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1188,
											"end": 1271,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1188,
											"end": 1271,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1307,
											"end": 1346,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1307,
											"end": 1346,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1307,
											"end": 1346,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1280,
											"end": 1347,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1384,
											"end": 1423,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1384,
											"end": 1423,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1384,
											"end": 1423,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1378,
											"end": 1381,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1363,
											"end": 1382,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1363,
											"end": 1382,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1356,
											"end": 1424,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1461,
											"end": 1500,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1461,
											"end": 1500,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1461,
											"end": 1500,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1455,
											"end": 1458,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 1440,
											"end": 1459,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1459,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1433,
											"end": 1501,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1003,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 985,
											"end": 1004,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 956,
											"end": 1001,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 956,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 956,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "PUSH",
											"source": 10,
											"value": "34BC00"
										},
										{
											"begin": 956,
											"end": 1001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 956,
											"end": 1001,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 956,
											"end": 1001,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 956,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 956,
											"end": 1001,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 956,
											"end": 1001,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1656,
											"end": 1714,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1656,
											"end": 1714,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1644,
											"end": 1646,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1647,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 956,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 1512,
											"end": 1720,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7955,
											"end": 8614,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 7955,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7955,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7955,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 7955,
											"end": 8614,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7955,
											"end": 8614,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7955,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 7955,
											"end": 8614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7955,
											"end": 8614,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 7955,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7955,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 7955,
											"end": 8614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 7503,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 6534,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6534,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 6534,
											"end": 7503,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 7503,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6534,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 6534,
											"end": 7503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 7503,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 6534,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 6534,
											"end": 7503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 5024,
											"end": 6526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 5024,
											"end": 6526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9527,
											"end": 9843,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 9527,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9527,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9527,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 9527,
											"end": 9843,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9527,
											"end": 9843,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9527,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 9527,
											"end": 9843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9527,
											"end": 9843,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 9527,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9527,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 9527,
											"end": 9843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 4046,
											"end": 5016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 4046,
											"end": 5016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4196,
											"end": 4198,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 4062,
											"end": 4239,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8921,
											"end": 9276,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 8921,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8921,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8921,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 8921,
											"end": 9276,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8921,
											"end": 9276,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8921,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8921,
											"end": 9276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8921,
											"end": 9276,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 8921,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8921,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 8921,
											"end": 9276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4921,
											"end": 4976,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4921,
											"end": 4976,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4921,
											"end": 4976,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4903,
											"end": 4977,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4903,
											"end": 4977,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4891,
											"end": 4893,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4757,
											"end": 4983,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1183,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1183,
											"end": 1232,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8913,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 8622,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8622,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 8622,
											"end": 8913,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8913,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8622,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 8622,
											"end": 8913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8913,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 8622,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 8622,
											"end": 8913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3825,
											"end": 3927,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 3825,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3825,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 3825,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3825,
											"end": 3927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1055,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1008,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1008,
											"end": 1055,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1183"
										},
										{
											"begin": 1008,
											"end": 1055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1055,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 3306,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 3306,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6166,
											"end": 6221,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6166,
											"end": 6221,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 6166,
											"end": 6221,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6148,
											"end": 6222,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 6148,
											"end": 6222,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6231,
											"end": 6265,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 6231,
											"end": 6265,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6231,
											"end": 6265,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 6231,
											"end": 6265,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6301,
											"end": 6340,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6301,
											"end": 6340,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6301,
											"end": 6340,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6281,
											"end": 6299,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6281,
											"end": 6299,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6281,
											"end": 6299,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6274,
											"end": 6341,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6274,
											"end": 6341,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6274,
											"end": 6341,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6274,
											"end": 6341,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6372,
											"end": 6374,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6357,
											"end": 6375,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6357,
											"end": 6375,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6350,
											"end": 6384,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6415,
											"end": 6418,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6400,
											"end": 6419,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6400,
											"end": 6419,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6393,
											"end": 6428,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6393,
											"end": 6428,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6393,
											"end": 6428,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6393,
											"end": 6428,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6459,
											"end": 6462,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 6444,
											"end": 6463,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6444,
											"end": 6463,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6437,
											"end": 6472,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 6120,
											"end": 6139,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 5863,
											"end": 6478,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7580,
											"end": 7588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2281,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2293,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2308,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6685,
											"end": 6687,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6688,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6724,
											"end": 6726,
											"name": "PUSH",
											"source": 15,
											"value": "1B"
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6697,
											"end": 6727,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6763,
											"end": 6792,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A496E76616C6964205374616B65204944210000000000"
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6736,
											"end": 6793,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7606,
											"end": 7634,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7653,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7653,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7643,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7637,
											"end": 7653,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7637,
											"end": 7653,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7653,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7653,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7653,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 7702,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7686,
											"end": 7702,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 7702,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 7702,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 7717,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 7686,
											"end": 7717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 994,
											"end": 1001,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "34BC00"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7686,
											"end": 7702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 7702,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7686,
											"end": 7702,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 7717,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 7686,
											"end": 7717,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 7717,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 7686,
											"end": 7717,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7672,
											"end": 7717,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4029,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7672,
											"end": 7717,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7672,
											"end": 7717,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7672,
											"end": 7717,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7718,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 7664,
											"end": 7718,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7718,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7664,
											"end": 7718,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7664,
											"end": 7718,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7718,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 7664,
											"end": 7718,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7730,
											"end": 7751,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7754,
											"end": 7759,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7760,
											"end": 7767,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7760,
											"end": 7775,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7760,
											"end": 7775,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7760,
											"end": 7775,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 7754,
											"end": 7776,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 7754,
											"end": 7776,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 7754,
											"end": 7776,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 7754,
											"end": 7776,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7754,
											"end": 7776,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7754,
											"end": 7776,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7827,
											"end": 7848,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7848,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7848,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7848,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7804,
											"end": 7822,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7804,
											"end": 7822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7804,
											"end": 7822,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7804,
											"end": 7822,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7804,
											"end": 7822,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7823,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7823,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7803,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 7787,
											"end": 7823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7823,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7823,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7823,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7787,
											"end": 7823,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7823,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7848,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7827,
											"end": 7848,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7848,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7848,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 7787,
											"end": 7848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7848,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7848,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 7787,
											"end": 7848,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7848,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 7787,
											"end": 7848,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7848,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7848,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7883,
											"end": 7884,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 7880,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7859,
											"end": 7880,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7859,
											"end": 7884,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7913,
											"end": 7928,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7913,
											"end": 7928,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7900,
											"end": 7939,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7939,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7900,
											"end": 7939,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "85CF309FCBACAF1EE2B300F62E8586A0661E41C7F318003E9AAB792BE89980B"
										},
										{
											"begin": 7900,
											"end": 7939,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4198,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7900,
											"end": 7939,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7939,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7900,
											"end": 7939,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7900,
											"end": 7939,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7900,
											"end": 7939,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7900,
											"end": 7939,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7900,
											"end": 7939,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7947,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7947,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9519,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 9284,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9359,
											"end": 9366,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2116,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2120,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2134,
											"end": 2139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2124,
											"end": 2146,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2124,
											"end": 2146,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7658,
											"end": 7660,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7640,
											"end": 7661,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7697,
											"end": 7699,
											"name": "PUSH",
											"source": 15,
											"value": "1A"
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7670,
											"end": 7700,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7736,
											"end": 7764,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A496E76616C696420506F6F6C20494421000000000000"
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7709,
											"end": 7765,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7782,
											"end": 7800,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7782,
											"end": 7800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7456,
											"end": 7806,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9399,
											"end": 9405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "186A0"
										},
										{
											"begin": 9392,
											"end": 9395,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9392,
											"end": 9405,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9392,
											"end": 9405,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9392,
											"end": 9405,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9384,
											"end": 9436,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 9384,
											"end": 9436,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9384,
											"end": 9436,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9384,
											"end": 9436,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9384,
											"end": 9436,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9384,
											"end": 9436,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8013,
											"end": 8015,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9384,
											"end": 9436,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9384,
											"end": 9436,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9384,
											"end": 9436,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7995,
											"end": 8016,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8052,
											"end": 8054,
											"name": "PUSH",
											"source": 15,
											"value": "1A"
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8025,
											"end": 8055,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8091,
											"end": 8119,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A6D617820617079206973203130303025000000000000"
										},
										{
											"begin": 8071,
											"end": 8089,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8071,
											"end": 8089,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8071,
											"end": 8089,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8064,
											"end": 8120,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8137,
											"end": 8155,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8137,
											"end": 8155,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9384,
											"end": 9436,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7811,
											"end": 8161,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9384,
											"end": 9436,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 9384,
											"end": 9436,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9468,
											"end": 9471,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9452,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9453,
											"end": 9460,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 9447,
											"end": 9461,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 9447,
											"end": 9461,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 9447,
											"end": 9461,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 9447,
											"end": 9461,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9447,
											"end": 9461,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9447,
											"end": 9461,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 9447,
											"end": 9461,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9461,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9465,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9447,
											"end": 9465,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9471,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9471,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9447,
											"end": 9471,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9447,
											"end": 9471,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9471,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9471,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9471,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9471,
											"modifierDepth": 2,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9471,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9471,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9487,
											"end": 9511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9487,
											"end": 9511,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1656,
											"end": 1714,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1656,
											"end": 1714,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9498,
											"end": 9505,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9505,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9487,
											"end": 9511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "9A2C3C653A42F5C64BBFDF07224D8E0D6526460F44E520AC49BAE23804E18E8"
										},
										{
											"begin": 9487,
											"end": 9511,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1647,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9487,
											"end": 9511,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 9487,
											"end": 9511,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9487,
											"end": 9511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9487,
											"end": 9511,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9487,
											"end": 9511,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9487,
											"end": 9511,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9487,
											"end": 9511,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9487,
											"end": 9511,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9487,
											"end": 9511,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2866,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2902,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2937,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2967,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 2992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3030,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2819,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2120,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2109,
											"end": 2146,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2134,
											"end": 2139,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2124,
											"end": 2146,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2124,
											"end": 2146,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2109,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7658,
											"end": 7660,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7640,
											"end": 7661,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7697,
											"end": 7699,
											"name": "PUSH",
											"source": 15,
											"value": "1A"
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7670,
											"end": 7700,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7736,
											"end": 7764,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A496E76616C696420506F6F6C20494421000000000000"
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7709,
											"end": 7765,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7782,
											"end": 7800,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7782,
											"end": 7800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7456,
											"end": 7806,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3062,
											"end": 3069,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 3056,
											"end": 3070,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 3056,
											"end": 3070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 3056,
											"end": 3070,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 3056,
											"end": 3070,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3056,
											"end": 3070,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3056,
											"end": 3070,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3070,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3084,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3099,
											"end": 3113,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3113,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3056,
											"end": 3084,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3084,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3084,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3113,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 3099,
											"end": 3113,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3113,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3099,
											"end": 3127,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3127,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3127,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3127,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3099,
											"end": 3127,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3127,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3127,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3099,
											"end": 3127,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3148,
											"end": 3155,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 3142,
											"end": 3156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3142,
											"end": 3169,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3169,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3142,
											"end": 3169,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3169,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3142,
											"end": 3169,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3190,
											"end": 3197,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 3184,
											"end": 3198,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3198,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3207,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 3184,
											"end": 3207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3207,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3184,
											"end": 3207,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3207,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3184,
											"end": 3207,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3228,
											"end": 3235,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 3222,
											"end": 3236,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3236,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3222,
											"end": 3240,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 3222,
											"end": 3240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3222,
											"end": 3240,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3222,
											"end": 3240,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3261,
											"end": 3268,
											"modifierDepth": 1,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 3255,
											"end": 3269,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3269,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3255,
											"end": 3286,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 3255,
											"end": 3286,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3286,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3286,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3255,
											"end": 3286,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3286,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3286,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3255,
											"end": 3286,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3287,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3287,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3287,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3287,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3287,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3287,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 3295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7955,
											"end": 8614,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 7955,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8030,
											"end": 8038,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2281,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2293,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2308,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6685,
											"end": 6687,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6688,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6724,
											"end": 6726,
											"name": "PUSH",
											"source": 15,
											"value": "1B"
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6697,
											"end": 6727,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6763,
											"end": 6792,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A496E76616C6964205374616B65204944210000000000"
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6736,
											"end": 6793,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6483,
											"end": 6834,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8084,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8087,
											"end": 8103,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8087,
											"end": 8103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8087,
											"end": 8103,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8087,
											"end": 8093,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 8087,
											"end": 8103,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8087,
											"end": 8103,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8087,
											"end": 8103,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8087,
											"end": 8103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8087,
											"end": 8103,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8122,
											"end": 8135,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8122,
											"end": 8135,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8122,
											"end": 8135,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8122,
											"end": 8135,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8122,
											"end": 8135,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8122,
											"end": 8151,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8114,
											"end": 8189,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 8114,
											"end": 8189,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8114,
											"end": 8189,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8114,
											"end": 8189,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8114,
											"end": 8189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8114,
											"end": 8189,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8368,
											"end": 8370,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8114,
											"end": 8189,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8114,
											"end": 8189,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8114,
											"end": 8189,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8350,
											"end": 8371,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8407,
											"end": 8409,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8380,
											"end": 8410,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8446,
											"end": 8480,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A43616C6C6572206973206E6F7420746865206F776E65"
										},
										{
											"begin": 8426,
											"end": 8444,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8426,
											"end": 8444,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8426,
											"end": 8444,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8419,
											"end": 8481,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8490,
											"end": 8521,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8538,
											"end": 8557,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 8538,
											"end": 8557,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8114,
											"end": 8189,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8166,
											"end": 8563,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8114,
											"end": 8189,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 8114,
											"end": 8189,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8223,
											"end": 8228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8229,
											"end": 8236,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8229,
											"end": 8244,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8229,
											"end": 8244,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8229,
											"end": 8244,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 8223,
											"end": 8245,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 8223,
											"end": 8245,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 8223,
											"end": 8245,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 8223,
											"end": 8245,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8223,
											"end": 8245,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8223,
											"end": 8245,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 8223,
											"end": 8245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8245,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8294,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8294,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8294,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8294,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8245,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8278,
											"end": 8294,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8294,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8294,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8274,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 4014,
											"end": 4029,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3935,
											"end": 4038,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8274,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 8264,
											"end": 8274,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8264,
											"end": 8294,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8294,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8294,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8343,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 8256,
											"end": 8343,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8343,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8256,
											"end": 8343,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8256,
											"end": 8343,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8343,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 8772,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8256,
											"end": 8343,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8256,
											"end": 8343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8343,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8773,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8809,
											"end": 8811,
											"name": "PUSH",
											"source": 15,
											"value": "2C"
										},
										{
											"begin": 8789,
											"end": 8807,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8789,
											"end": 8807,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8789,
											"end": 8807,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8782,
											"end": 8812,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8848,
											"end": 8882,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A4561726C79205769746864726177616C206973206E6F"
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8821,
											"end": 8883,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74207065726D697474656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8892,
											"end": 8934,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8951,
											"end": 8970,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 8951,
											"end": 8970,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8256,
											"end": 8343,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8568,
											"end": 8976,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8256,
											"end": 8343,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 8256,
											"end": 8343,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8368,
											"end": 8388,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8368,
											"end": 8388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8368,
											"end": 8388,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8368,
											"end": 8388,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8365,
											"end": 8605,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 8365,
											"end": 8605,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8418,
											"end": 8493,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8472,
											"end": 8492,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8492,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8492,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8425,
											"end": 8443,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8425,
											"end": 8443,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8418,
											"end": 8457,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8418,
											"end": 8457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8418,
											"end": 8493,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8418,
											"end": 8457,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 8418,
											"end": 8493,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8418,
											"end": 8493,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 8418,
											"end": 8493,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8508,
											"end": 8528,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8508,
											"end": 8528,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8508,
											"end": 8528,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8508,
											"end": 8532,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8567,
											"end": 8582,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8567,
											"end": 8582,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8552,
											"end": 8593,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8552,
											"end": 8593,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8552,
											"end": 8593,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3DB0CA701D7C1106534C6003E5D65DAE65A9CB891AD5BBB9BE39C091DF79D87E"
										},
										{
											"begin": 8552,
											"end": 8593,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4198,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8552,
											"end": 8593,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 8552,
											"end": 8593,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8552,
											"end": 8593,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8552,
											"end": 8593,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8552,
											"end": 8593,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8552,
											"end": 8593,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8552,
											"end": 8593,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8552,
											"end": 8593,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8552,
											"end": 8593,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 8365,
											"end": 8605,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 8365,
											"end": 8605,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8045,
											"end": 8614,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8045,
											"end": 8614,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7955,
											"end": 8614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7955,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 7503,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 6534,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6609,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2281,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2293,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2308,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 2269,
											"end": 2308,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6685,
											"end": 6687,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6688,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6724,
											"end": 6726,
											"name": "PUSH",
											"source": 15,
											"value": "1B"
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6697,
											"end": 6727,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6763,
											"end": 6792,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A496E76616C6964205374616B65204944210000000000"
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6736,
											"end": 6793,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6483,
											"end": 6834,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2261,
											"end": 2340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6633,
											"end": 6661,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6664,
											"end": 6680,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6680,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6680,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6670,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6664,
											"end": 6680,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6664,
											"end": 6680,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6680,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6664,
											"end": 6680,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6680,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6712,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6712,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6712,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6699,
											"end": 6728,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6691,
											"end": 6766,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 6691,
											"end": 6766,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6691,
											"end": 6766,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6691,
											"end": 6766,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6691,
											"end": 6766,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6691,
											"end": 6766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8368,
											"end": 8370,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6691,
											"end": 6766,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6691,
											"end": 6766,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6691,
											"end": 6766,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8350,
											"end": 8371,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8407,
											"end": 8409,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8380,
											"end": 8410,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8446,
											"end": 8480,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A43616C6C6572206973206E6F7420746865206F776E65"
										},
										{
											"begin": 8426,
											"end": 8444,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8426,
											"end": 8444,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8426,
											"end": 8444,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8419,
											"end": 8481,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8490,
											"end": 8521,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8538,
											"end": 8557,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 8538,
											"end": 8557,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6691,
											"end": 6766,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8166,
											"end": 8563,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6691,
											"end": 6766,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 6691,
											"end": 6766,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6777,
											"end": 6798,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6801,
											"end": 6806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6807,
											"end": 6814,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6807,
											"end": 6822,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 6822,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6807,
											"end": 6822,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 6801,
											"end": 6823,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 6801,
											"end": 6823,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 6801,
											"end": 6823,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 6801,
											"end": 6823,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6801,
											"end": 6823,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6801,
											"end": 6823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6856,
											"end": 6872,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6856,
											"end": 6872,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6856,
											"end": 6872,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6856,
											"end": 6872,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6801,
											"end": 6823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6823,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6856,
											"end": 6872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6856,
											"end": 6872,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6856,
											"end": 6872,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4029,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6842,
											"end": 6872,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6842,
											"end": 6872,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6842,
											"end": 6872,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6834,
											"end": 6921,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 6834,
											"end": 6921,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6834,
											"end": 6921,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6921,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6921,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6834,
											"end": 6921,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 8772,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6921,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6834,
											"end": 6921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6834,
											"end": 6921,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8773,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8809,
											"end": 8811,
											"name": "PUSH",
											"source": 15,
											"value": "2C"
										},
										{
											"begin": 8789,
											"end": 8807,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8789,
											"end": 8807,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8789,
											"end": 8807,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8782,
											"end": 8812,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8848,
											"end": 8882,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A4561726C79205769746864726177616C206973206E6F"
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8828,
											"end": 8846,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8821,
											"end": 8883,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74207065726D697474656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8892,
											"end": 8934,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8951,
											"end": 8970,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 8951,
											"end": 8970,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6834,
											"end": 6921,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8568,
											"end": 8976,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6834,
											"end": 6921,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 6834,
											"end": 6921,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6965,
											"end": 6966,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6941,
											"end": 6948,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6941,
											"end": 6962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6941,
											"end": 6962,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6941,
											"end": 6962,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6941,
											"end": 6966,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 6997,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 6933,
											"end": 6997,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 6997,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6933,
											"end": 6997,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6933,
											"end": 6997,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 6997,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9185,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6933,
											"end": 6997,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6933,
											"end": 6997,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 6997,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9165,
											"end": 9186,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9222,
											"end": 9224,
											"name": "PUSH",
											"source": 15,
											"value": "1A"
										},
										{
											"begin": 9202,
											"end": 9220,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9202,
											"end": 9220,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9202,
											"end": 9220,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9195,
											"end": 9225,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9261,
											"end": 9289,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A4E6F7468696E6720746F20636C61696D000000000000"
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9234,
											"end": 9290,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6933,
											"end": 6997,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8981,
											"end": 9331,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6933,
											"end": 6997,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 6933,
											"end": 6997,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7011,
											"end": 7031,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7011,
											"end": 7031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7011,
											"end": 7031,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7011,
											"end": 7031,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7011,
											"end": 7035,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7187,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 7008,
											"end": 7187,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7061,
											"end": 7136,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7115,
											"end": 7135,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7115,
											"end": 7135,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7115,
											"end": 7135,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7115,
											"end": 7135,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7086,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7086,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7068,
											"end": 7086,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7086,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7061,
											"end": 7136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7061,
											"end": 7100,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 7061,
											"end": 7136,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7061,
											"end": 7136,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 7061,
											"end": 7136,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7174,
											"end": 7175,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7151,
											"end": 7171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7151,
											"end": 7171,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7151,
											"end": 7171,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7151,
											"end": 7175,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7187,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 7008,
											"end": 7187,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7199,
											"end": 7275,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7253,
											"end": 7274,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7253,
											"end": 7274,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7253,
											"end": 7274,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7253,
											"end": 7274,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7224,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7224,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7206,
											"end": 7224,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7199,
											"end": 7275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7199,
											"end": 7238,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 7199,
											"end": 7275,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7199,
											"end": 7275,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 7199,
											"end": 7275,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7326,
											"end": 7347,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7347,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7347,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7303,
											"end": 7321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7303,
											"end": 7321,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7303,
											"end": 7321,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7303,
											"end": 7321,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7303,
											"end": 7321,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7322,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7322,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7322,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7302,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 7286,
											"end": 7322,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7322,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7322,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7286,
											"end": 7322,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7322,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7347,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7347,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7322,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7347,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 7286,
											"end": 7347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7347,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7326,
											"end": 7347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7347,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 7286,
											"end": 7347,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7347,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 7286,
											"end": 7347,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7347,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7347,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7382,
											"end": 7383,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7379,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7358,
											"end": 7379,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7379,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7383,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7430,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7430,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7441,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7400,
											"end": 7441,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7400,
											"end": 7441,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3DB0CA701D7C1106534C6003E5D65DAE65A9CB891AD5BBB9BE39C091DF79D87E"
										},
										{
											"begin": 7400,
											"end": 7441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4198,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7400,
											"end": 7441,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7400,
											"end": 7441,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7441,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7441,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7441,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7441,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7441,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 7468,
											"end": 7483,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7468,
											"end": 7483,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7457,
											"end": 7494,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7457,
											"end": 7494,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7457,
											"end": 7494,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4D7828F2AA36030CC63CDEA79EC646099AA121D019F1A90EDB55078939FB84EA"
										},
										{
											"begin": 7457,
											"end": 7494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4198,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7457,
											"end": 7494,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 4062,
											"end": 4239,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5176,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2116,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2120,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2134,
											"end": 2139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2124,
											"end": 2146,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2124,
											"end": 2146,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7658,
											"end": 7660,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7640,
											"end": 7661,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7697,
											"end": 7699,
											"name": "PUSH",
											"source": 15,
											"value": "1A"
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7670,
											"end": 7700,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7736,
											"end": 7764,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A496E76616C696420506F6F6C20494421000000000000"
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7709,
											"end": 7765,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7782,
											"end": 7800,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7782,
											"end": 7800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7456,
											"end": 7806,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5224,
											"end": 5225,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5209,
											"end": 5221,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5225,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5201,
											"end": 5278,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 5201,
											"end": 5278,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5201,
											"end": 5278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5201,
											"end": 5278,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5201,
											"end": 5278,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5201,
											"end": 5278,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9538,
											"end": 9540,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5201,
											"end": 5278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5201,
											"end": 5278,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5201,
											"end": 5278,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9520,
											"end": 9541,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9577,
											"end": 9579,
											"name": "PUSH",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 9557,
											"end": 9575,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9557,
											"end": 9575,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9557,
											"end": 9575,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9550,
											"end": 9580,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9616,
											"end": 9650,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A7374616B655F616D6F756E74206D7573742062652067"
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9589,
											"end": 9651,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9687,
											"end": 9706,
											"name": "PUSH",
											"source": 15,
											"value": "726561746572207468616E207A65726F21000000000000000000000000000000"
										},
										{
											"begin": 9667,
											"end": 9685,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 9667,
											"end": 9685,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9667,
											"end": 9685,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9660,
											"end": 9707,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9724,
											"end": 9743,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 9724,
											"end": 9743,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5201,
											"end": 5278,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9336,
											"end": 9749,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5201,
											"end": 5278,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 5201,
											"end": 5278,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5289,
											"end": 5310,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5313,
											"end": 5318,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5319,
											"end": 5326,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 5313,
											"end": 5327,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5327,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5289,
											"end": 5327,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5289,
											"end": 5327,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5357,
											"end": 5358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5350,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5346,
											"end": 5354,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 5346,
											"end": 5354,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5354,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5354,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5346,
											"end": 5354,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5354,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5354,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5346,
											"end": 5354,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5346,
											"end": 5358,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5358,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5338,
											"end": 5388,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5338,
											"end": 5388,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5338,
											"end": 5388,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5338,
											"end": 5388,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5338,
											"end": 5388,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5338,
											"end": 5388,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9956,
											"end": 9958,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5338,
											"end": 5388,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5338,
											"end": 5388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5338,
											"end": 5388,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9938,
											"end": 9959,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9995,
											"end": 9997,
											"name": "PUSH",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9968,
											"end": 9998,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10034,
											"end": 10061,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A506F6F6C206973207061757365642100000000000000"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10007,
											"end": 10062,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10079,
											"end": 10097,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 10079,
											"end": 10097,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5338,
											"end": 5388,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9754,
											"end": 10103,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5338,
											"end": 5388,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5338,
											"end": 5388,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5485,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5406,
											"end": 5424,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5406,
											"end": 5424,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5406,
											"end": 5424,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5465,
											"end": 5469,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 5472,
											"end": 5484,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5442,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5399,
											"end": 5485,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5485,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 5399,
											"end": 5485,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5543,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5543,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5576,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5576,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5513,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5513,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 5615,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 5516,
											"end": 5615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5525,
											"end": 5543,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5543,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5543,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5545,
											"end": 5557,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 5545,
											"end": 5557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5576,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5595,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5595,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5614,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5614,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 5524,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5516,
											"end": 5615,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 5615,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 5516,
											"end": 5615,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5687,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5687,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5667,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5659,
											"end": 5667,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5667,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5667,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5615,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5626,
											"end": 5644,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5626,
											"end": 5644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 5697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1E13380"
										},
										{
											"begin": 5689,
											"end": 5697,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5674,
											"end": 5687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5687,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5687,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5687,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5687,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5673,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 5668,
											"end": 5673,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5667,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 5647,
											"end": 5667,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5667,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5667,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5667,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5615,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5667,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 5647,
											"end": 5667,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5667,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 5647,
											"end": 5667,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5673,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5647,
											"end": 5673,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5673,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5673,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5647,
											"end": 5673,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5673,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5647,
											"end": 5673,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5687,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 5647,
											"end": 5687,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5687,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5687,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 5647,
											"end": 5687,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5687,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 5647,
											"end": 5687,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5698,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5647,
											"end": 5698,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5698,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5698,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5647,
											"end": 5698,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5698,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5647,
											"end": 5698,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5698,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5709,
											"end": 5728,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5764,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1183"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5746,
											"end": 5772,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5772,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8EF1E259"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5746,
											"end": 5786,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5746,
											"end": 5786,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4921,
											"end": 4976,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4921,
											"end": 4976,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4921,
											"end": 4976,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5746,
											"end": 5786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4903,
											"end": 4977,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5746,
											"end": 5786,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 5746,
											"end": 5786,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5972,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5972,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 5743,
											"end": 5972,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5847,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1183"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5829,
											"end": 5862,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5862,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "9A3BFDF5"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 5829,
											"end": 5864,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 5829,
											"end": 5864,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5936,
											"end": 5949,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5936,
											"end": 5949,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5929,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5908,
											"end": 5929,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5929,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5929,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5812,
											"end": 5864,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5812,
											"end": 5864,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5951,
											"end": 5959,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1E13380"
										},
										{
											"begin": 5951,
											"end": 5959,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5936,
											"end": 5949,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5936,
											"end": 5949,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5936,
											"end": 5949,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5936,
											"end": 5949,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5936,
											"end": 5949,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5936,
											"end": 5949,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5936,
											"end": 5949,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5930,
											"end": 5935,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 5930,
											"end": 5935,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5929,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 5896,
											"end": 5929,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5929,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5929,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5929,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5907,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5929,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 5896,
											"end": 5929,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5929,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 5896,
											"end": 5929,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5935,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 5896,
											"end": 5935,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5935,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5935,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5896,
											"end": 5935,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5935,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 5896,
											"end": 5935,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5949,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 5896,
											"end": 5949,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5949,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5949,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 5896,
											"end": 5949,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5949,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 5896,
											"end": 5949,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5960,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 5896,
											"end": 5960,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5960,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5960,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5896,
											"end": 5960,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5960,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 5896,
											"end": 5960,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5960,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 5879,
											"end": 5960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5960,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5960,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 5879,
											"end": 5960,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5960,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 5879,
											"end": 5960,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5960,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5960,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5972,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 5743,
											"end": 5972,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6015,
											"end": 6028,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6015,
											"end": 6028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5984,
											"end": 5999,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5984,
											"end": 5999,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6015,
											"end": 6028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6015,
											"end": 6028,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6015,
											"end": 6028,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4029,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 6002,
											"end": 6028,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 6002,
											"end": 6028,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6002,
											"end": 6028,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6002,
											"end": 6028,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 6002,
											"end": 6028,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6002,
											"end": 6028,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 6002,
											"end": 6028,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5984,
											"end": 6028,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5984,
											"end": 6028,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6133,
											"end": 6140,
											"modifierDepth": 2,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6097,
											"end": 6109,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6109,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 6097,
											"end": 6109,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6165,
											"end": 6173,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6214,
											"modifierDepth": 2,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6244,
											"end": 6257,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6288,
											"end": 6302,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6045,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6039,
											"end": 6059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6046,
											"end": 6058,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6046,
											"end": 6058,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6059,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6059,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6039,
											"end": 6059,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6059,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6059,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6059,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6039,
											"end": 6059,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6039,
											"end": 6059,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6314,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6365,
											"end": 6378,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6341,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6325,
											"end": 6361,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6342,
											"end": 6346,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 6360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6342,
											"end": 6360,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 6360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6342,
											"end": 6360,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 6360,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 6360,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 6360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6342,
											"end": 6360,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 6360,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 6360,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6342,
											"end": 6360,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6325,
											"end": 6361,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6325,
											"end": 6361,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6361,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6361,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6361,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6325,
											"end": 6361,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6361,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6361,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6361,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6361,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6325,
											"end": 6361,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6361,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6325,
											"end": 6361,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6361,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6325,
											"end": 6378,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6378,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6378,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6378,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 6325,
											"end": 6378,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6378,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6378,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 6325,
											"end": 6378,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6378,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 6325,
											"end": 6378,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6378,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6378,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6415,
											"end": 6427,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6415,
											"end": 6427,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6394,
											"end": 6492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6394,
											"end": 6492,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6394,
											"end": 6492,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11361,
											"end": 11386,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11361,
											"end": 11386,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11361,
											"end": 11386,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11422,
											"end": 11461,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11422,
											"end": 11461,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11417,
											"end": 11419,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11402,
											"end": 11420,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11402,
											"end": 11420,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11395,
											"end": 11462,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11478,
											"end": 11496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11478,
											"end": 11496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11478,
											"end": 11496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11471,
											"end": 11505,
											"name": "DUP14",
											"source": 15
										},
										{
											"begin": 11471,
											"end": 11505,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11471,
											"end": 11505,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11536,
											"end": 11538,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 11521,
											"end": 11539,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11521,
											"end": 11539,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11514,
											"end": 11548,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11514,
											"end": 11548,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11514,
											"end": 11548,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11579,
											"end": 11582,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 11564,
											"end": 11583,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11564,
											"end": 11583,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11557,
											"end": 11592,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11557,
											"end": 11592,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11557,
											"end": 11592,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6394,
											"end": 6492,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6436,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6394,
											"end": 6492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "C48192CF3609B4932A8B10A6F09FE1CAC38610FDEF14EACC15B35C454DA0B4C5"
										},
										{
											"begin": 6394,
											"end": 6492,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6394,
											"end": 6492,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6394,
											"end": 6492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6394,
											"end": 6492,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11348,
											"end": 11351,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 6394,
											"end": 6492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6394,
											"end": 6492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6394,
											"end": 6492,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6503,
											"end": 6517,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6517,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6503,
											"end": 6517,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 6503,
											"end": 6517,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6517,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 6503,
											"end": 6517,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6517,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 6503,
											"end": 6517,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6517,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6517,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6517,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6517,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6503,
											"end": 6517,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5190,
											"end": 6526,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5190,
											"end": 6526,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5190,
											"end": 6526,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5190,
											"end": 6526,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5190,
											"end": 6526,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 6526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9527,
											"end": 9843,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 9527,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9620,
											"end": 9627,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2116,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2120,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2134,
											"end": 2139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2134,
											"end": 2146,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2124,
											"end": 2146,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2124,
											"end": 2146,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2109,
											"end": 2146,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7658,
											"end": 7660,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2177,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7640,
											"end": 7661,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7697,
											"end": 7699,
											"name": "PUSH",
											"source": 15,
											"value": "1A"
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7670,
											"end": 7700,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7736,
											"end": 7764,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A496E76616C696420506F6F6C20494421000000000000"
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7709,
											"end": 7765,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7782,
											"end": 7800,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7782,
											"end": 7800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7456,
											"end": 7806,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2101,
											"end": 2177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9673,
											"end": 9679,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "186A0"
										},
										{
											"begin": 9653,
											"end": 9669,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9653,
											"end": 9679,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9679,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9679,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9645,
											"end": 9716,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 9645,
											"end": 9716,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9645,
											"end": 9716,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9645,
											"end": 9716,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9645,
											"end": 9716,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9645,
											"end": 9716,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11945,
											"end": 11947,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9645,
											"end": 9716,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9645,
											"end": 9716,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9645,
											"end": 9716,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11927,
											"end": 11948,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11927,
											"end": 11948,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11927,
											"end": 11948,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11964,
											"end": 11982,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11964,
											"end": 11982,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11964,
											"end": 11982,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11957,
											"end": 11987,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12023,
											"end": 12057,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A6D617820626F6E757320617079206973203130303025"
										},
										{
											"begin": 12003,
											"end": 12021,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12003,
											"end": 12021,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12003,
											"end": 12021,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11996,
											"end": 12058,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12075,
											"end": 12093,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12075,
											"end": 12093,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9645,
											"end": 9716,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 11743,
											"end": 12099,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9645,
											"end": 9716,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 9645,
											"end": 9716,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9761,
											"end": 9777,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9732,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9733,
											"end": 9740,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 9727,
											"end": 9741,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 9727,
											"end": 9741,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 9727,
											"end": 9741,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 9727,
											"end": 9741,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9727,
											"end": 9741,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9727,
											"end": 9741,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 9727,
											"end": 9741,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9741,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9758,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9727,
											"end": 9758,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9777,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9777,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9727,
											"end": 9777,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9727,
											"end": 9777,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9777,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9777,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9777,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9777,
											"modifierDepth": 2,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9777,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9777,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9835,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9793,
											"end": 9835,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1656,
											"end": 1714,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1656,
											"end": 1714,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9809,
											"end": 9816,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9809,
											"end": 9816,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9835,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "D3CD184B56B5B95016981FC55484FF8FDF06EB587430055C7AB828A0EDC0DC9D"
										},
										{
											"begin": 9793,
											"end": 9835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1647,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9793,
											"end": 9835,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 1512,
											"end": 1720,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4235,
											"end": 4239,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4273,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4265,
											"end": 4277,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4277,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4257,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4257,
											"end": 4323,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4257,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4257,
											"end": 4323,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4257,
											"end": 4323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4257,
											"end": 4323,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12306,
											"end": 12308,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4257,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4257,
											"end": 4323,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4257,
											"end": 4323,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12288,
											"end": 12309,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12345,
											"end": 12347,
											"name": "PUSH",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 12325,
											"end": 12343,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12325,
											"end": 12343,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12325,
											"end": 12343,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12318,
											"end": 12348,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12384,
											"end": 12418,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A6D61747572697479206D757374206265206772656174"
										},
										{
											"begin": 12364,
											"end": 12382,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12364,
											"end": 12382,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12364,
											"end": 12382,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12357,
											"end": 12419,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6572207468616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12435,
											"end": 12453,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12435,
											"end": 12453,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12435,
											"end": 12453,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12428,
											"end": 12467,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12484,
											"end": 12503,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 12484,
											"end": 12503,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4257,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 12104,
											"end": 12509,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4257,
											"end": 4323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4257,
											"end": 4323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4383,
											"end": 4396,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4342,
											"end": 4396,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4365,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4342,
											"end": 4377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "217A4B70"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4342,
											"end": 4379,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 4342,
											"end": 4379,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4342,
											"end": 4396,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4396,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 4334,
											"end": 4466,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4334,
											"end": 4466,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4334,
											"end": 4466,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4466,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12972,
											"end": 12974,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4334,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4334,
											"end": 4466,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12954,
											"end": 12975,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13011,
											"end": 13013,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 12991,
											"end": 13009,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12991,
											"end": 13009,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12991,
											"end": 13009,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12984,
											"end": 13014,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13050,
											"end": 13084,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A726577617264735F746F6B656E206D75737420626520"
										},
										{
											"begin": 13030,
											"end": 13048,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 13030,
											"end": 13048,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13030,
											"end": 13048,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13023,
											"end": 13085,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13121,
											"end": 13155,
											"name": "PUSH",
											"source": 15,
											"value": "657175616C20746F2070726963655F6F7261636C652071756F746520746F6B65"
										},
										{
											"begin": 13101,
											"end": 13119,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13101,
											"end": 13119,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13101,
											"end": 13119,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13094,
											"end": 13156,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13172,
											"end": 13191,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 13172,
											"end": 13191,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13172,
											"end": 13191,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13165,
											"end": 13197,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13214,
											"end": 13233,
											"name": "PUSH",
											"source": 15,
											"value": "A4"
										},
										{
											"begin": 13214,
											"end": 13233,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4334,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 12770,
											"end": 13239,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4334,
											"end": 4466,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 4334,
											"end": 4466,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4741,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP10",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "PUSH",
											"source": 10,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP10",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "PUSH",
											"source": 10,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF"
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "PUSH",
											"source": 10,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0"
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4742,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4768,
											"end": 4780,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4768,
											"end": 4784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 4768,
											"end": 4784,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4768,
											"end": 4784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 4768,
											"end": 4784,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4768,
											"end": 4784,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 4768,
											"end": 4784,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4753,
											"end": 4784,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4753,
											"end": 4784,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4836,
											"end": 4849,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4834,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4819,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6B64B7E8B6F4656658EFB1C74B7D1BBFF6E84D3D7B1CD5AE89FD6CD91DE6EF96"
										},
										{
											"begin": 4851,
											"end": 4863,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4873,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4875,
											"end": 4878,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4880,
											"end": 4896,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13487,
											"end": 13542,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 13487,
											"end": 13542,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13487,
											"end": 13542,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 13487,
											"end": 13542,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 13469,
											"end": 13543,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13469,
											"end": 13543,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13579,
											"end": 13618,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13579,
											"end": 13618,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13579,
											"end": 13618,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 13574,
											"end": 13576,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13559,
											"end": 13577,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13559,
											"end": 13577,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13552,
											"end": 13619,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13655,
											"end": 13694,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13655,
											"end": 13694,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13655,
											"end": 13694,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 13650,
											"end": 13652,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13635,
											"end": 13653,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13635,
											"end": 13653,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13628,
											"end": 13695,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13731,
											"end": 13770,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 13726,
											"end": 13728,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 13711,
											"end": 13729,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13711,
											"end": 13729,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13704,
											"end": 13771,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13456,
											"end": 13459,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 13441,
											"end": 13460,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13441,
											"end": 13460,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13244,
											"end": 13777,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4897,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4928,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4928,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4908,
											"end": 4983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 4908,
											"end": 4983,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4943,
											"end": 4983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 4954,
											"end": 4967,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 4982,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4943,
											"end": 4953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 4943,
											"end": 4983,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4943,
											"end": 4983,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 4943,
											"end": 4983,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5001,
											"end": 5008,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 5016,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4046,
											"end": 5016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8921,
											"end": 9276,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 8921,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9096,
											"end": 9127,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9096,
											"end": 9127,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9096,
											"end": 9127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9096,
											"end": 9127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9096,
											"end": 9127,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9096,
											"end": 9127,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9096,
											"end": 9112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 9096,
											"end": 9127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9096,
											"end": 9127,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9096,
											"end": 9127,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9096,
											"end": 9127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9096,
											"end": 9127,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9096,
											"end": 9127,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9087,
											"end": 9127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 9087,
											"end": 9127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9087,
											"end": 9093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9087,
											"end": 9127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 9087,
											"end": 9127,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9087,
											"end": 9127,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 9087,
											"end": 9127,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9037,
											"end": 9083,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9037,
											"end": 9083,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9077,
											"end": 9081,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9037,
											"end": 9083,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4903,
											"end": 4977,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9037,
											"end": 9068,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9068,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9068,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 9037,
											"end": 9068,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 9037,
											"end": 9083,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 9037,
											"end": 9083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9127,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9127,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9029,
											"end": 9153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 9029,
											"end": 9153,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9029,
											"end": 9153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9029,
											"end": 9153,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9029,
											"end": 9153,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9029,
											"end": 9153,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13984,
											"end": 13986,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9029,
											"end": 9153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9029,
											"end": 9153,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9029,
											"end": 9153,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13966,
											"end": 13987,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14023,
											"end": 14025,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 14003,
											"end": 14021,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14003,
											"end": 14021,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14003,
											"end": 14021,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13996,
											"end": 14026,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14062,
											"end": 14085,
											"name": "PUSH",
											"source": 15,
											"value": "496E73756666696369656E742062616C616E6365210000000000000000000000"
										},
										{
											"begin": 14042,
											"end": 14060,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14042,
											"end": 14060,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14042,
											"end": 14060,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14035,
											"end": 14086,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14103,
											"end": 14121,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 14103,
											"end": 14121,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9029,
											"end": 9153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 13782,
											"end": 14127,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9029,
											"end": 9153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 9029,
											"end": 9153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9164,
											"end": 9210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9164,
											"end": 9198,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9164,
											"end": 9198,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9199,
											"end": 9201,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9203,
											"end": 9209,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9164,
											"end": 9198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 9164,
											"end": 9210,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9164,
											"end": 9210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 9164,
											"end": 9210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9242,
											"end": 9255,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E06FAB35F3C220725C11D544884AFF93EBF67222C8310C487C71F27C844593E8"
										},
										{
											"begin": 9261,
											"end": 9267,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4196,
											"end": 4198,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4062,
											"end": 4239,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9226,
											"end": 9268,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 8921,
											"end": 9276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8921,
											"end": 9276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8921,
											"end": 9276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8921,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8913,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 8622,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8720,
											"end": 8721,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8717,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8711,
											"end": 8721,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8702,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 8702,
											"end": 8769,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8702,
											"end": 8769,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8702,
											"end": 8769,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8702,
											"end": 8769,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8702,
											"end": 8769,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14334,
											"end": 14336,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8702,
											"end": 8769,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8702,
											"end": 8769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8702,
											"end": 8769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14316,
											"end": 14337,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14373,
											"end": 14375,
											"name": "PUSH",
											"source": 15,
											"value": "2B"
										},
										{
											"begin": 14353,
											"end": 14371,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14353,
											"end": 14371,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14353,
											"end": 14371,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14346,
											"end": 14376,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14412,
											"end": 14446,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A616D6F756E74206D7573742062652067726561746572"
										},
										{
											"begin": 14392,
											"end": 14410,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14392,
											"end": 14410,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14392,
											"end": 14410,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14385,
											"end": 14447,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207468616E207A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14456,
											"end": 14497,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14514,
											"end": 14533,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 14514,
											"end": 14533,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8702,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 14132,
											"end": 14539,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8702,
											"end": 8769,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 8702,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8780,
											"end": 8855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8780,
											"end": 8818,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8780,
											"end": 8818,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8845,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 8848,
											"end": 8854,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8780,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 8780,
											"end": 8855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8780,
											"end": 8855,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 8780,
											"end": 8855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8883,
											"end": 8896,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "PUSH",
											"source": 10,
											"value": "AC24935FD910BC682B5CCB1A07B718CADF8CF2F6D1404C4F3DDC3662DAE40E29"
										},
										{
											"begin": 8898,
											"end": 8904,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4208,
											"end": 4233,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4196,
											"end": 4198,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4062,
											"end": 4239,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3825,
											"end": 3927,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3825,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3908,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3903,
											"end": 3915,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3873,
											"end": 3877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 3903,
											"end": 3919,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3918,
											"end": 3919,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3918,
											"end": 3919,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 3903,
											"end": 3919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3919,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 3903,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3825,
											"end": 3927,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3825,
											"end": 3927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 3306,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3397,
											"end": 3410,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3444,
											"end": 3459,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3363,
											"end": 3371,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2277,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2281,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 2269,
											"end": 2308,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2308,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2308,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2293,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2308,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2308,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 2269,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6685,
											"end": 6687,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6688,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6724,
											"end": 6726,
											"name": "PUSH",
											"source": 15,
											"value": "1B"
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6697,
											"end": 6727,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6763,
											"end": 6792,
											"name": "PUSH",
											"source": 15,
											"value": "4C505374616B696E673A496E76616C6964205374616B65204944210000000000"
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6736,
											"end": 6793,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6483,
											"end": 6834,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2261,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3572,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3588,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3588,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3588,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3572,
											"end": 3578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3572,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3588,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3588,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3588,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3588,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3588,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3588,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3572,
											"end": 3594,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3594,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3594,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3633,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3633,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3688,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3688,
											"end": 3717,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3732,
											"end": 3762,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3732,
											"end": 3762,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3732,
											"end": 3762,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3732,
											"end": 3762,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3777,
											"end": 3808,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3808,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3808,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3808,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3572,
											"end": 3594,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3594,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3594,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3633,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3633,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3648,
											"end": 3673,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3673,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3673,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3648,
											"end": 3673,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3673,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3306,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4903,
											"end": 4977,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4757,
											"end": 4983,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4903,
											"end": 4977,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4757,
											"end": 4983,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14736,
											"end": 14791,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14736,
											"end": 14791,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14736,
											"end": 14791,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14718,
											"end": 14792,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14808,
											"end": 14826,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14808,
											"end": 14826,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14808,
											"end": 14826,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14801,
											"end": 14835,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14801,
											"end": 14835,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14801,
											"end": 14835,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14691,
											"end": 14709,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 14691,
											"end": 14709,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15066,
											"end": 15121,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15066,
											"end": 15121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15066,
											"end": 15121,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15048,
											"end": 15122,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15158,
											"end": 15213,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15158,
											"end": 15213,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15158,
											"end": 15213,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15138,
											"end": 15156,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 15138,
											"end": 15156,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15138,
											"end": 15156,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15131,
											"end": 15214,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15230,
											"end": 15248,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 15230,
											"end": 15248,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15230,
											"end": 15248,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15223,
											"end": 15257,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15223,
											"end": 15257,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15223,
											"end": 15257,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15021,
											"end": 15039,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 15021,
											"end": 15039,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 14846,
											"end": 15263,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 855,
											"end": 1466,
											"name": "tag",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 855,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1013,
											"end": 1017,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1054,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 1035,
											"end": 1080,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1035,
											"end": 1080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1092,
											"end": 1108,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1126,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1136,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1132,
											"end": 1148,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1148,
											"name": "PUSH",
											"source": 14,
											"value": "902F1AC"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 1132,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1150,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1150,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1162,
											"end": 1181,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1202,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "DUP13",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1236,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1232,
											"end": 1248,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1248,
											"name": "PUSH",
											"source": 14,
											"value": "18160DDD"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 1232,
											"end": 1250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 1232,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1252,
											"end": 1260,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1270,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1206,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 1206,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1206,
											"end": 1271,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 1206,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1161,
											"end": 1271,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1161,
											"end": 1271,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1161,
											"end": 1271,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1161,
											"end": 1271,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 1396,
											"end": 1400,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1407,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1407,
											"name": "PUSH",
											"source": 14,
											"value": "D21220A7"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 1396,
											"end": 1409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1427,
											"end": 1438,
											"name": "DUP14",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1457,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1457,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 1384,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1458,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 1384,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 1302,
											"end": 1306,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1302,
											"end": 1313,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1313,
											"name": "PUSH",
											"source": 14,
											"value": "DFE1681"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 1302,
											"end": 1315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1331,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1333,
											"end": 1344,
											"name": "DUP15",
											"source": 14
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "DUP15",
											"source": 14
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "DUP15",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 1290,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1364,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 1290,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 1290,
											"end": 1458,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1458,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 1290,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1458,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 1290,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1458,
											"name": "SWAP14",
											"source": 14
										},
										{
											"begin": 855,
											"end": 1466,
											"name": "SWAP13",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 1466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4921,
											"end": 4976,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4921,
											"end": 4976,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4903,
											"end": 4977,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4757,
											"end": 4983,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 533,
											"end": 847,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 533,
											"end": 847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 648,
											"end": 652,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 652,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 648,
											"end": 652,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 698,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 707,
											"end": 717,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 698,
											"end": 717,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 698,
											"end": 717,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 698,
											"end": 717,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 698,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 698,
											"end": 717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 698,
											"end": 717,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 698,
											"end": 717,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 698,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 698,
											"end": 727,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 698,
											"end": 727,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 698,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 698,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 698,
											"end": 727,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 698,
											"end": 727,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 676,
											"end": 727,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 738,
											"end": 757,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 789,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 760,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 769,
											"end": 779,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 760,
											"end": 779,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 760,
											"end": 779,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 760,
											"end": 779,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 760,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 760,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 760,
											"end": 779,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 760,
											"end": 779,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 760,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 760,
											"end": 789,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 760,
											"end": 789,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 760,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 760,
											"end": 789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 760,
											"end": 789,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 760,
											"end": 789,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 808,
											"end": 822,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 808,
											"end": 822,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 808,
											"end": 822,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 808,
											"end": 822,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 533,
											"end": 847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 533,
											"end": 847,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 533,
											"end": 847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 248,
											"end": 525,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 248,
											"end": 525,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 366,
											"end": 370,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 417,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 395,
											"end": 445,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 395,
											"end": 445,
											"name": "PUSH",
											"source": 14,
											"value": "6A089215"
										},
										{
											"begin": 446,
											"end": 456,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 458,
											"end": 464,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 482,
											"end": 492,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 502,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 466,
											"end": 502,
											"name": "PUSH",
											"source": 14,
											"value": "313CE567"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 466,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 504,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 466,
											"end": 504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 506,
											"end": 516,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 506,
											"end": 516,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 395,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 395,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 395,
											"end": 517,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 395,
											"end": 517,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 388,
											"end": 517,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 248,
											"end": 525,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 248,
											"end": 525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 240,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 14,
											"end": 240,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 187,
											"end": 210,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 187,
											"end": 210,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14,
											"end": 240,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 245,
											"end": 424,
											"name": "tag",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 245,
											"end": 424,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 312,
											"end": 332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 312,
											"end": 332,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 361,
											"end": 399,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 361,
											"end": 399,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 351,
											"end": 400,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 351,
											"end": 400,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 341,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 341,
											"end": 418,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 414,
											"end": 415,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 404,
											"end": 416,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 341,
											"end": 418,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 341,
											"end": 418,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 245,
											"end": 424,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 245,
											"end": 424,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 245,
											"end": 424,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 245,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 429,
											"end": 727,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 429,
											"end": 727,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 496,
											"end": 502,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 559,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 554,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 536,
											"end": 543,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 532,
											"end": 555,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 528,
											"end": 560,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 525,
											"end": 577,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 525,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 525,
											"end": 577,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 573,
											"end": 574,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 571,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 575,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 525,
											"end": 577,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 525,
											"end": 577,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 618,
											"end": 641,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 618,
											"end": 641,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 618,
											"end": 641,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 684,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 717,
											"end": 719,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 702,
											"end": 720,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 702,
											"end": 720,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 684,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 684,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 684,
											"end": 721,
											"name": "tag",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 684,
											"end": 721,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 674,
											"end": 721,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 674,
											"end": 721,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 429,
											"end": 727,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 429,
											"end": 727,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 429,
											"end": 727,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 429,
											"end": 727,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 429,
											"end": 727,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 429,
											"end": 727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 2072,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 1725,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1776,
											"end": 1784,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1792,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1843,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1821,
											"end": 1838,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1817,
											"end": 1844,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1807,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 1807,
											"end": 1862,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1858,
											"end": 1859,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1807,
											"end": 1862,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 1807,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1881,
											"end": 1901,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1881,
											"end": 1901,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1913,
											"end": 1943,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1913,
											"end": 1943,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1910,
											"end": 1960,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1910,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 1910,
											"end": 1960,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1954,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1958,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1910,
											"end": 1960,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 1910,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1993,
											"end": 1997,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 1991,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 1998,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 1998,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 1998,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2045,
											"end": 2048,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2035,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2017,
											"end": 2036,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2013,
											"end": 2043,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2010,
											"end": 2049,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2007,
											"end": 2066,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2007,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 2007,
											"end": 2066,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2064,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2007,
											"end": 2066,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 2007,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 2072,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 2072,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 2072,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 2072,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 2072,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 2072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 3024,
											"name": "tag",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 2077,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2185,
											"end": 2191,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2215,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2223,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2225,
											"end": 2231,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2281,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2266,
											"end": 2275,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2257,
											"end": 2264,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 2253,
											"end": 2276,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2249,
											"end": 2282,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2246,
											"end": 2299,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2246,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 2246,
											"end": 2299,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2295,
											"end": 2296,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2285,
											"end": 2297,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2246,
											"end": 2299,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 2246,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2340,
											"end": 2363,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2340,
											"end": 2363,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2340,
											"end": 2363,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2462,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2464,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2464,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2543,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2526,
											"end": 2544,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2526,
											"end": 2544,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2513,
											"end": 2545,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2557,
											"end": 2587,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2557,
											"end": 2587,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2554,
											"end": 2604,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2554,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 2554,
											"end": 2604,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2600,
											"end": 2601,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2602,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2554,
											"end": 2604,
											"name": "tag",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 2554,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2639,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2669,
											"end": 2678,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2639,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 2639,
											"end": 2697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2639,
											"end": 2697,
											"name": "tag",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 2639,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2613,
											"end": 2697,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2804,
											"end": 2806,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2789,
											"end": 2807,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2807,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2776,
											"end": 2808,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2833,
											"end": 2851,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2820,
											"end": 2852,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2820,
											"end": 2852,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2817,
											"end": 2869,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2817,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 2817,
											"end": 2869,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2865,
											"end": 2866,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2862,
											"end": 2863,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2867,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2817,
											"end": 2869,
											"name": "tag",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 2817,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2904,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 2956,
											"end": 2963,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 2945,
											"end": 2953,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2934,
											"end": 2943,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 2930,
											"end": 2954,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2904,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 2904,
											"end": 2964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2904,
											"end": 2964,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 2904,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 3024,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 3024,
											"name": "SWAP11",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 3024,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 3024,
											"name": "SWAP10",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 3024,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 3024,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 3024,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 3024,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2983,
											"end": 2991,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2983,
											"end": 2991,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 3024,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 3024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3029,
											"end": 3183,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 3029,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3108,
											"end": 3113,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3104,
											"end": 3158,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3097,
											"end": 3102,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3094,
											"end": 3159,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 3084,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 3084,
											"end": 3177,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3171,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3175,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 4057,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 3188,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3298,
											"end": 3304,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3312,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3328,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3336,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3344,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3352,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3402,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 3387,
											"end": 3396,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3378,
											"end": 3385,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 3374,
											"end": 3397,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3370,
											"end": 3403,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3417,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3414,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3418,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3455,
											"end": 3464,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3442,
											"end": 3465,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 3499,
											"end": 3504,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 3474,
											"end": 3505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 3505,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 3474,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3524,
											"end": 3529,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3581,
											"end": 3583,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3553,
											"end": 3585,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3594,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 3553,
											"end": 3585,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3594,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 3594,
											"end": 3627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3594,
											"end": 3627,
											"name": "tag",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 3594,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3646,
											"end": 3653,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3707,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3708,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3690,
											"end": 3708,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3677,
											"end": 3709,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3718,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 3677,
											"end": 3709,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3718,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 3718,
											"end": 3751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3718,
											"end": 3751,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 3718,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3770,
											"end": 3777,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3850,
											"end": 3852,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3822,
											"end": 3854,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3822,
											"end": 3854,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3899,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 3932,
											"end": 3935,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3917,
											"end": 3936,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3917,
											"end": 3936,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3899,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 3899,
											"end": 3937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3899,
											"end": 3937,
											"name": "tag",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 3899,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3889,
											"end": 3937,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3889,
											"end": 3937,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3956,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 3989,
											"end": 3992,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 3978,
											"end": 3987,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3974,
											"end": 3993,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3956,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 3956,
											"end": 3994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3956,
											"end": 3994,
											"name": "tag",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 3956,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3946,
											"end": 3994,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3946,
											"end": 3994,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4013,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 4046,
											"end": 4049,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4031,
											"end": 4050,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4013,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 4013,
											"end": 4051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4013,
											"end": 4051,
											"name": "tag",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 4013,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4003,
											"end": 4051,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4003,
											"end": 4051,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 4057,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 4057,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 4057,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 4057,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 4057,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 4057,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 4057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 4057,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 4057,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 4057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 4057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4244,
											"end": 4752,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 4244,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4335,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4343,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4390,
											"end": 4392,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4378,
											"end": 4387,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4369,
											"end": 4376,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4365,
											"end": 4388,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4393,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4358,
											"end": 4410,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4358,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 4358,
											"end": 4410,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4406,
											"end": 4407,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4404,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4396,
											"end": 4408,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4358,
											"end": 4410,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 4358,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4445,
											"end": 4454,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4432,
											"end": 4455,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4464,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 4489,
											"end": 4494,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4464,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 4464,
											"end": 4495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4464,
											"end": 4495,
											"name": "tag",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 4464,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4514,
											"end": 4519,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4571,
											"end": 4573,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4556,
											"end": 4574,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4556,
											"end": 4574,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4543,
											"end": 4575,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4584,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 4543,
											"end": 4575,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4584,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 4584,
											"end": 4617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4584,
											"end": 4617,
											"name": "tag",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 4584,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4244,
											"end": 4752,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4244,
											"end": 4752,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4636,
											"end": 4643,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4636,
											"end": 4643,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4716,
											"end": 4718,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4701,
											"end": 4719,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4701,
											"end": 4719,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4701,
											"end": 4719,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4701,
											"end": 4719,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4688,
											"end": 4720,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4688,
											"end": 4720,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4244,
											"end": 4752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4988,
											"end": 5235,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 4988,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5047,
											"end": 5053,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5102,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5088,
											"end": 5097,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5079,
											"end": 5086,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5075,
											"end": 5098,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5071,
											"end": 5103,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5068,
											"end": 5120,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5068,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 5068,
											"end": 5120,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5116,
											"end": 5117,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5113,
											"end": 5114,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5118,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5068,
											"end": 5120,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 5068,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5155,
											"end": 5164,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5142,
											"end": 5165,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5174,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 5199,
											"end": 5204,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5174,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 5174,
											"end": 5205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5174,
											"end": 5205,
											"name": "tag",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 5174,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5224,
											"end": 5229,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4988,
											"end": 5235,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4988,
											"end": 5235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5240,
											"end": 5607,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 5240,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5308,
											"end": 5314,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5322,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5369,
											"end": 5371,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5348,
											"end": 5355,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5344,
											"end": 5367,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5340,
											"end": 5372,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5337,
											"end": 5389,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5337,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 5337,
											"end": 5389,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5385,
											"end": 5386,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5382,
											"end": 5383,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5375,
											"end": 5387,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5337,
											"end": 5389,
											"name": "tag",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 5337,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5424,
											"end": 5433,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5434,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5443,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 5468,
											"end": 5473,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5443,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 5443,
											"end": 5474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5443,
											"end": 5474,
											"name": "tag",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 5443,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5493,
											"end": 5498,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5556,
											"end": 5574,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5556,
											"end": 5574,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5556,
											"end": 5574,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5556,
											"end": 5574,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5543,
											"end": 5575,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5543,
											"end": 5575,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5240,
											"end": 5607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6839,
											"end": 6966,
											"name": "tag",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 6839,
											"end": 6966,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6900,
											"end": 6910,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 6895,
											"end": 6898,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 6891,
											"end": 6911,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 6888,
											"end": 6889,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6881,
											"end": 6912,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6931,
											"end": 6935,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 6928,
											"end": 6929,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6921,
											"end": 6936,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6955,
											"end": 6959,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6952,
											"end": 6953,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6945,
											"end": 6960,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6971,
											"end": 7186,
											"name": "tag",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 6971,
											"end": 7186,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7075,
											"end": 7109,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7075,
											"end": 7109,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7075,
											"end": 7109,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7035,
											"end": 7110,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7035,
											"end": 7110,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7122,
											"end": 7157,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7122,
											"end": 7157,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7119,
											"end": 7180,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7119,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 7119,
											"end": 7180,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7160,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 7160,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 7160,
											"end": 7178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7160,
											"end": 7178,
											"name": "tag",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 7160,
											"end": 7178,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6971,
											"end": 7186,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6971,
											"end": 7186,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6971,
											"end": 7186,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6971,
											"end": 7186,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6971,
											"end": 7186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7191,
											"end": 7318,
											"name": "tag",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 7191,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7252,
											"end": 7262,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 7247,
											"end": 7250,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 7243,
											"end": 7263,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 7240,
											"end": 7241,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7264,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7283,
											"end": 7287,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 7280,
											"end": 7281,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7273,
											"end": 7288,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7307,
											"end": 7311,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7304,
											"end": 7305,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7297,
											"end": 7312,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7323,
											"end": 7451,
											"name": "tag",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 7323,
											"end": 7451,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7390,
											"end": 7399,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7390,
											"end": 7399,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7390,
											"end": 7399,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7411,
											"end": 7422,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7411,
											"end": 7422,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7411,
											"end": 7422,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7408,
											"end": 7445,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7408,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 7408,
											"end": 7445,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 7425,
											"end": 7443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10108,
											"end": 10276,
											"name": "tag",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 10108,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10181,
											"end": 10190,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10181,
											"end": 10190,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10181,
											"end": 10190,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 10212,
											"end": 10221,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10212,
											"end": 10221,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10229,
											"end": 10244,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10229,
											"end": 10244,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10229,
											"end": 10244,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 10223,
											"end": 10245,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10223,
											"end": 10245,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 10209,
											"end": 10246,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 10199,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 10199,
											"end": 10270,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10250,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 10250,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 10250,
											"end": 10268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10281,
											"end": 10498,
											"name": "tag",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 10281,
											"end": 10498,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10321,
											"end": 10322,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10347,
											"end": 10348,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10337,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 10337,
											"end": 10469,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10391,
											"end": 10401,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 10386,
											"end": 10389,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 10382,
											"end": 10402,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 10379,
											"end": 10380,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10372,
											"end": 10403,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10426,
											"end": 10430,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 10423,
											"end": 10424,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 10416,
											"end": 10431,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10454,
											"end": 10458,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10451,
											"end": 10452,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10444,
											"end": 10459,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10337,
											"end": 10469,
											"name": "tag",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 10337,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10483,
											"end": 10492,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 10483,
											"end": 10492,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10281,
											"end": 10498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10503,
											"end": 10780,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 10503,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10570,
											"end": 10576,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10623,
											"end": 10625,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10611,
											"end": 10620,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10602,
											"end": 10609,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10598,
											"end": 10621,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10594,
											"end": 10626,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10591,
											"end": 10643,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10591,
											"end": 10643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "467"
										},
										{
											"begin": 10591,
											"end": 10643,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10639,
											"end": 10640,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10636,
											"end": 10637,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10629,
											"end": 10641,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10591,
											"end": 10643,
											"name": "tag",
											"source": 15,
											"value": "467"
										},
										{
											"begin": 10591,
											"end": 10643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10671,
											"end": 10680,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10665,
											"end": 10681,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10724,
											"end": 10729,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10717,
											"end": 10730,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10710,
											"end": 10731,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10703,
											"end": 10708,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10700,
											"end": 10732,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 10690,
											"end": 10750,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 10690,
											"end": 10750,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10746,
											"end": 10747,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10743,
											"end": 10744,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10736,
											"end": 10748,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10785,
											"end": 10969,
											"name": "tag",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 10785,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10855,
											"end": 10861,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10908,
											"end": 10910,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10896,
											"end": 10905,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10887,
											"end": 10894,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10883,
											"end": 10906,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10879,
											"end": 10911,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10876,
											"end": 10928,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10876,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 10876,
											"end": 10928,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10924,
											"end": 10925,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10914,
											"end": 10926,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10876,
											"end": 10928,
											"name": "tag",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 10876,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10947,
											"end": 10963,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10947,
											"end": 10963,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10785,
											"end": 10969,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10785,
											"end": 10969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10974,
											"end": 11099,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 10974,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11039,
											"end": 11048,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11039,
											"end": 11048,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11039,
											"end": 11048,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11060,
											"end": 11070,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11060,
											"end": 11070,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11060,
											"end": 11070,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 11057,
											"end": 11093,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11057,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 11057,
											"end": 11093,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11073,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 11073,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 11073,
											"end": 11091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11603,
											"end": 11738,
											"name": "tag",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 11603,
											"end": 11738,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11642,
											"end": 11645,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11663,
											"end": 11680,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 11663,
											"end": 11680,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11663,
											"end": 11680,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11660,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 11660,
											"end": 11703,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 11683,
											"end": 11701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "tag",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11730,
											"end": 11731,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 11719,
											"end": 11732,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11719,
											"end": 11732,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11603,
											"end": 11738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12514,
											"end": 12765,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 12514,
											"end": 12765,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12584,
											"end": 12590,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12637,
											"end": 12639,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12625,
											"end": 12634,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12616,
											"end": 12623,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12612,
											"end": 12635,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12608,
											"end": 12640,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12605,
											"end": 12657,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12605,
											"end": 12657,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 12605,
											"end": 12657,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12653,
											"end": 12654,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12650,
											"end": 12651,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12643,
											"end": 12655,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12605,
											"end": 12657,
											"name": "tag",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 12605,
											"end": 12657,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12685,
											"end": 12694,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12679,
											"end": 12695,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12704,
											"end": 12735,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 12729,
											"end": 12734,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12704,
											"end": 12735,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 12704,
											"end": 12735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15268,
											"end": 15456,
											"name": "tag",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 15268,
											"end": 15456,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15347,
											"end": 15360,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15347,
											"end": 15360,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15400,
											"end": 15430,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15389,
											"end": 15431,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15389,
											"end": 15431,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15379,
											"end": 15432,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15379,
											"end": 15432,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 15369,
											"end": 15450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 15369,
											"end": 15450,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15446,
											"end": 15447,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15443,
											"end": 15444,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15436,
											"end": 15448,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15911,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 15461,
											"end": 15911,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15548,
											"end": 15554,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15556,
											"end": 15562,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15564,
											"end": 15570,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15617,
											"end": 15619,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 15605,
											"end": 15614,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15596,
											"end": 15603,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15592,
											"end": 15615,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15588,
											"end": 15620,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 15585,
											"end": 15637,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15585,
											"end": 15637,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 15585,
											"end": 15637,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15633,
											"end": 15634,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15630,
											"end": 15631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15623,
											"end": 15635,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15585,
											"end": 15637,
											"name": "tag",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 15585,
											"end": 15637,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15656,
											"end": 15696,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 15686,
											"end": 15695,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15656,
											"end": 15696,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 15656,
											"end": 15696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15656,
											"end": 15696,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 15656,
											"end": 15696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15646,
											"end": 15696,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15646,
											"end": 15696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15715,
											"end": 15764,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 15760,
											"end": 15762,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15749,
											"end": 15758,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15745,
											"end": 15763,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15715,
											"end": 15764,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 15715,
											"end": 15764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15715,
											"end": 15764,
											"name": "tag",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 15715,
											"end": 15764,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15705,
											"end": 15764,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15705,
											"end": 15764,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15807,
											"end": 15809,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 15796,
											"end": 15805,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15792,
											"end": 15810,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15786,
											"end": 15811,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15851,
											"end": 15861,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15844,
											"end": 15849,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15840,
											"end": 15862,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15833,
											"end": 15838,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15830,
											"end": 15863,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 15820,
											"end": 15881,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 15820,
											"end": 15881,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15877,
											"end": 15878,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15874,
											"end": 15875,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15867,
											"end": 15879,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15820,
											"end": 15881,
											"name": "tag",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 15820,
											"end": 15881,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15900,
											"end": 15905,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15890,
											"end": 15905,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15890,
											"end": 15905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15890,
											"end": 15905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15911,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15911,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15911,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15911,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15911,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15916,
											"end": 16189,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 15916,
											"end": 16189,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15984,
											"end": 15990,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16037,
											"end": 16039,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16025,
											"end": 16034,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16016,
											"end": 16023,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16012,
											"end": 16035,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16008,
											"end": 16040,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 16005,
											"end": 16057,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16005,
											"end": 16057,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 16005,
											"end": 16057,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16053,
											"end": 16054,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16050,
											"end": 16051,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16043,
											"end": 16055,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 16005,
											"end": 16057,
											"name": "tag",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 16005,
											"end": 16057,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16085,
											"end": 16094,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16079,
											"end": 16095,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 16135,
											"end": 16139,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 16128,
											"end": 16133,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16124,
											"end": 16140,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 16117,
											"end": 16122,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16114,
											"end": 16141,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 16104,
											"end": 16159,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 16104,
											"end": 16159,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16155,
											"end": 16156,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16152,
											"end": 16153,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16145,
											"end": 16157,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 16194,
											"end": 16856,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 16194,
											"end": 16856,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16435,
											"end": 16441,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16431,
											"end": 16486,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 16420,
											"end": 16429,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16413,
											"end": 16487,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16523,
											"end": 16529,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16518,
											"end": 16520,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16507,
											"end": 16516,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16503,
											"end": 16521,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16496,
											"end": 16530,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16578,
											"end": 16582,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 16570,
											"end": 16576,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16566,
											"end": 16583,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 16561,
											"end": 16563,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16550,
											"end": 16559,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16546,
											"end": 16564,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16539,
											"end": 16584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16620,
											"end": 16623,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 16615,
											"end": 16617,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16604,
											"end": 16613,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16600,
											"end": 16618,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16593,
											"end": 16624,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16661,
											"end": 16667,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16655,
											"end": 16658,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 16644,
											"end": 16653,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16640,
											"end": 16659,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16633,
											"end": 16668,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16719,
											"end": 16725,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16711,
											"end": 16717,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16705,
											"end": 16708,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 16694,
											"end": 16703,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16690,
											"end": 16709,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16677,
											"end": 16726,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 16776,
											"end": 16777,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16746,
											"end": 16768,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16746,
											"end": 16768,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16746,
											"end": 16768,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16770,
											"end": 16773,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 16742,
											"end": 16774,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16742,
											"end": 16774,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16742,
											"end": 16774,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16735,
											"end": 16778,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16735,
											"end": 16778,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16735,
											"end": 16778,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16735,
											"end": 16778,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16839,
											"end": 16841,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 16818,
											"end": 16833,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16818,
											"end": 16833,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16818,
											"end": 16833,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16814,
											"end": 16843,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 16799,
											"end": 16844,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16795,
											"end": 16850,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16795,
											"end": 16850,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 16194,
											"end": 16856,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16194,
											"end": 16856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
								"contracts/LPStaking.sol",
								"contracts/interface/ICREDIWhale.sol",
								"contracts/interface/IERC20_Decimals.sol",
								"contracts/interface/IPriceData.sol",
								"contracts/oracle_utils/LPValue.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CLAIM_PERIOD()": "21241dfe",
							"CREDI_WHALE_ORACLE()": "cc5c56dc",
							"addRewards(address,uint256)": "a9fc507b",
							"claim(uint256)": "379607f5",
							"createPool(address,address,address,uint256,uint96,uint96,uint96)": "69ca431b",
							"getPool(uint256)": "068bcd8d",
							"getPoolsCount()": "b4ac6860",
							"getStake(uint256)": "ce325bf8",
							"owner()": "8da5cb5b",
							"pending_payments(address)": "954821b6",
							"renounceOwnership()": "715018a6",
							"setAPY(uint256,uint96)": "039ba6b7",
							"setBonusAPY(uint256,uint96)": "4f44daa9",
							"stake(uint256,uint256,bytes,bytes)": "3b5dd047",
							"transferOwnership(address)": "f2fde38b",
							"voidReward(uint256)": "00215784",
							"withdrawRewards(address,address,uint256)": "74ee6b62",
							"withdrawStake(uint256)": "25d5971f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whale_oracle_addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"apy\",\"type\":\"uint96\"}],\"name\":\"APYChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"whales_bonus_apy\",\"type\":\"uint96\"}],\"name\":\"BonusAPYChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staking_token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewards_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"price_oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"maturity\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"apy\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"whales_bonus_apy\",\"type\":\"uint96\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"RewardVoided\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"maturity\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewards_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"required_CREDI\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_PERIOD\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CREDI_WHALE_ORACLE\",\"outputs\":[{\"internalType\":\"contract ICREDIWhale\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewards_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staking_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewards_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"price_oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reward_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"maturity\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"apy\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"whales_bonus_apy\",\"type\":\"uint96\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"staking_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewards_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"price_oracle\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"maturity\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"apy\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"whales_bonus_apy\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"getStake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"maturity\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required_CREDI\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pending_payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"apy\",\"type\":\"uint96\"}],\"name\":\"setAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"whales_bonus_apy\",\"type\":\"uint96\"}],\"name\":\"setBonusAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pool_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"token0_price_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"token1_price_data\",\"type\":\"bytes\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"voidReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewards_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LPStaking.sol\":\"LPStaking\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]},\"contracts/LPStaking.sol\":{\"keccak256\":\"0xaa59af5a7467d2c0cba7be361f49262cd182ef6ecb663719d5de53726d485e56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0acdcc470dcd4dfd76ece19802db2223f2252e64cc406cab4f74d1aed43863c9\",\"dweb:/ipfs/QmThYED6oxyqkC1V8XE5M4ZZTJEJzLKGwYrk3eMsTVgcRC\"]},\"contracts/interface/ICREDIWhale.sol\":{\"keccak256\":\"0xfceee6ad4c80887953573851857ad0f6b03f2aa5dc9007b15b553224c8d1b035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7872bcdbd1a0674b7932bc82e93fa592e5ab5fcf5c228202acc27e26502f842d\",\"dweb:/ipfs/QmXJcL28dxMaL46vLeqwpxQ7Xf8tPdLTgfoUhuZLMh3Szc\"]},\"contracts/interface/IERC20_Decimals.sol\":{\"keccak256\":\"0x2dde74db1f051dafa94b46c64b4bc80e570d768b4419426d72b5453adf1e9bd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://115bf8fb67ace478f6d567c6c436816ca00b134b5c2c19379f86b1587bb6e4c8\",\"dweb:/ipfs/QmbaEdHk666WWVTQhAoqwq2eGeiHA8XZdYhUNHmrpEpghV\"]},\"contracts/interface/IPriceData.sol\":{\"keccak256\":\"0xb9855aecf2b8333c53159ff404e66df0755c88e0cfbb0b82c078ba37dd38cdde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://072584b51e006f9aab6cc19f44e1982db742e716dfc2cba20dc9a929709e23b2\",\"dweb:/ipfs/QmQZdNRkbBpB1XncP32c9tgKZyg77GXmufsNn9afn6w4xd\"]},\"contracts/oracle_utils/LPValue.sol\":{\"keccak256\":\"0x0735a0be40b8c17d106e10173f05bc97a13aa06e05d0bf90a043863c7a355d16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8deec9e6e75f6773ed216245e789b2d8f756f6470525be8a16763f13dabf22ac\",\"dweb:/ipfs/QmdxZKVeQSMwy9Sp6kZhNc1VyixKhf9nhFLc25p4tGr9r1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/LPStaking.sol:LPStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 820,
								"contract": "contracts/LPStaking.sol:LPStaking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1187,
								"contract": "contracts/LPStaking.sol:LPStaking",
								"label": "pools",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(PoolInfo)1164_storage)dyn_storage"
							},
							{
								"astId": 1192,
								"contract": "contracts/LPStaking.sol:LPStaking",
								"label": "stakes",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(StakeDetails)1177_storage)"
							},
							{
								"astId": 1195,
								"contract": "contracts/LPStaking.sol:LPStaking",
								"label": "stakes_count",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1199,
								"contract": "contracts/LPStaking.sol:LPStaking",
								"label": "pending_payments",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1164_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1164_storage",
								"encoding": "dynamic_array",
								"label": "struct LPStaking.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(StakeDetails)1177_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LPStaking.StakeDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeDetails)1177_storage"
							},
							"t_struct(PoolInfo)1164_storage": {
								"encoding": "inplace",
								"label": "struct LPStaking.PoolInfo",
								"members": [
									{
										"astId": 1153,
										"contract": "contracts/LPStaking.sol:LPStaking",
										"label": "staking_token",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1155,
										"contract": "contracts/LPStaking.sol:LPStaking",
										"label": "maturity",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									},
									{
										"astId": 1157,
										"contract": "contracts/LPStaking.sol:LPStaking",
										"label": "rewards_token",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1159,
										"contract": "contracts/LPStaking.sol:LPStaking",
										"label": "apy",
										"offset": 20,
										"slot": "1",
										"type": "t_uint96"
									},
									{
										"astId": 1161,
										"contract": "contracts/LPStaking.sol:LPStaking",
										"label": "price_oracle",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1163,
										"contract": "contracts/LPStaking.sol:LPStaking",
										"label": "whales_bonus_apy",
										"offset": 20,
										"slot": "2",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(StakeDetails)1177_storage": {
								"encoding": "inplace",
								"label": "struct LPStaking.StakeDetails",
								"members": [
									{
										"astId": 1166,
										"contract": "contracts/LPStaking.sol:LPStaking",
										"label": "pool_id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1168,
										"contract": "contracts/LPStaking.sol:LPStaking",
										"label": "owner",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1170,
										"contract": "contracts/LPStaking.sol:LPStaking",
										"label": "maturity",
										"offset": 20,
										"slot": "1",
										"type": "t_uint96"
									},
									{
										"astId": 1172,
										"contract": "contracts/LPStaking.sol:LPStaking",
										"label": "stake_amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1174,
										"contract": "contracts/LPStaking.sol:LPStaking",
										"label": "reward_amount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1176,
										"contract": "contracts/LPStaking.sol:LPStaking",
										"label": "required_CREDI",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/ICREDIWhale.sol": {
				"ICREDIWhale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_address",
									"type": "address"
								}
							],
							"name": "isWhale",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "whaleThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isWhale(address)": "8ef1e259",
							"whaleThreshold()": "9a3bfdf5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"}],\"name\":\"isWhale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whaleThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/ICREDIWhale.sol\":\"ICREDIWhale\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"contracts/interface/ICREDIWhale.sol\":{\"keccak256\":\"0xfceee6ad4c80887953573851857ad0f6b03f2aa5dc9007b15b553224c8d1b035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7872bcdbd1a0674b7932bc82e93fa592e5ab5fcf5c228202acc27e26502f842d\",\"dweb:/ipfs/QmXJcL28dxMaL46vLeqwpxQ7Xf8tPdLTgfoUhuZLMh3Szc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IERC20_Decimals.sol": {
				"IERC20_Decimals": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IERC20_Decimals.sol\":\"IERC20_Decimals\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"contracts/interface/IERC20_Decimals.sol\":{\"keccak256\":\"0x2dde74db1f051dafa94b46c64b4bc80e570d768b4419426d72b5453adf1e9bd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://115bf8fb67ace478f6d567c6c436816ca00b134b5c2c19379f86b1587bb6e4c8\",\"dweb:/ipfs/QmbaEdHk666WWVTQhAoqwq2eGeiHA8XZdYhUNHmrpEpghV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IPriceData.sol": {
				"IPriceData": {
					"abi": [
						{
							"inputs": [],
							"name": "quoteToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "base_addr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "base_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "base_decimals",
									"type": "uint8"
								},
								{
									"internalType": "bytes",
									"name": "offchain_data",
									"type": "bytes"
								}
							],
							"name": "readAbsoluteCollateralValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "base_addr",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "result_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "base_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "base_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "quote_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "offchain_data",
									"type": "bytes"
								}
							],
							"name": "readCollateralValues",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "absolute_value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "relative_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "base_addr",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "target_decimals",
									"type": "uint8"
								},
								{
									"internalType": "bytes",
									"name": "offchain_data",
									"type": "bytes"
								}
							],
							"name": "readPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "base_addr",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "base_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "quote_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "offchain_data",
									"type": "bytes"
								}
							],
							"name": "readQuoteAmountToCollateralAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "base_addr",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "result_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "base_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "base_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "quote_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "offchain_data",
									"type": "bytes"
								}
							],
							"name": "readRelativeCollateralValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "base_addr",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "mul",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "div",
									"type": "address[]"
								}
							],
							"name": "setOracles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "setSigner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "base_addr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "base_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "base_decimals",
									"type": "uint8"
								},
								{
									"internalType": "bytes",
									"name": "offchain_data",
									"type": "bytes"
								}
							],
							"name": "useAbsoluteCollateralValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "base_addr",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "result_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "base_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "base_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "quote_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "offchain_data",
									"type": "bytes"
								}
							],
							"name": "useCollateralValues",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "absolute_value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "relative_value",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "base_addr",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "target_decimals",
									"type": "uint8"
								},
								{
									"internalType": "bytes",
									"name": "offchain_data",
									"type": "bytes"
								}
							],
							"name": "usePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "base_addr",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "base_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "quote_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "offchain_data",
									"type": "bytes"
								}
							],
							"name": "useQuoteAmountToCollateralAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "base_addr",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "result_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "base_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "base_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "quote_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "offchain_data",
									"type": "bytes"
								}
							],
							"name": "useRelativeCollateralValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"quoteToken()": "217a4b70",
							"readAbsoluteCollateralValue(address,uint256,uint8,bytes)": "1ff8d6dc",
							"readCollateralValues(address,uint8,uint256,uint8,uint256,bytes)": "3628815c",
							"readPrice(address,uint8,bytes)": "0cd07409",
							"readQuoteAmountToCollateralAmount(address,uint8,uint256,bytes)": "b57a1b0b",
							"readRelativeCollateralValue(address,uint8,uint256,uint8,uint256,bytes)": "4bbf415c",
							"setOracles(address,address[],address[])": "927b0504",
							"setSigner(address,bool)": "31cb6105",
							"useAbsoluteCollateralValue(address,uint256,uint8,bytes)": "6a089215",
							"useCollateralValues(address,uint8,uint256,uint8,uint256,bytes)": "0649b8c2",
							"usePrice(address,uint8,bytes)": "bff734c1",
							"useQuoteAmountToCollateralAmount(address,uint8,uint256,bytes)": "c5801aa3",
							"useRelativeCollateralValue(address,uint8,uint256,uint8,uint256,bytes)": "b4e37cf9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"quoteToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"base_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"base_decimals\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"offchain_data\",\"type\":\"bytes\"}],\"name\":\"readAbsoluteCollateralValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base_addr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"result_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"base_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"base_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"quote_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"offchain_data\",\"type\":\"bytes\"}],\"name\":\"readCollateralValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"absolute_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"relative_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base_addr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"target_decimals\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"offchain_data\",\"type\":\"bytes\"}],\"name\":\"readPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base_addr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"base_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"quote_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"offchain_data\",\"type\":\"bytes\"}],\"name\":\"readQuoteAmountToCollateralAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base_addr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"result_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"base_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"base_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"quote_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"offchain_data\",\"type\":\"bytes\"}],\"name\":\"readRelativeCollateralValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base_addr\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"mul\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"div\",\"type\":\"address[]\"}],\"name\":\"setOracles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"base_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"base_decimals\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"offchain_data\",\"type\":\"bytes\"}],\"name\":\"useAbsoluteCollateralValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base_addr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"result_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"base_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"base_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"quote_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"offchain_data\",\"type\":\"bytes\"}],\"name\":\"useCollateralValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"absolute_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"relative_value\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base_addr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"target_decimals\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"offchain_data\",\"type\":\"bytes\"}],\"name\":\"usePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base_addr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"base_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"quote_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"offchain_data\",\"type\":\"bytes\"}],\"name\":\"useQuoteAmountToCollateralAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base_addr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"result_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"base_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"base_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"quote_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"offchain_data\",\"type\":\"bytes\"}],\"name\":\"useRelativeCollateralValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IPriceData.sol\":\"IPriceData\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"contracts/interface/IPriceData.sol\":{\"keccak256\":\"0xb9855aecf2b8333c53159ff404e66df0755c88e0cfbb0b82c078ba37dd38cdde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://072584b51e006f9aab6cc19f44e1982db742e716dfc2cba20dc9a929709e23b2\",\"dweb:/ipfs/QmQZdNRkbBpB1XncP32c9tgKZyg77GXmufsNn9afn6w4xd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/oracle_utils/LPValue.sol": {
				"LPValue": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle_utils/LPValue.sol\":\"LPValue\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]},\"contracts/interface/IERC20_Decimals.sol\":{\"keccak256\":\"0x2dde74db1f051dafa94b46c64b4bc80e570d768b4419426d72b5453adf1e9bd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://115bf8fb67ace478f6d567c6c436816ca00b134b5c2c19379f86b1587bb6e4c8\",\"dweb:/ipfs/QmbaEdHk666WWVTQhAoqwq2eGeiHA8XZdYhUNHmrpEpghV\"]},\"contracts/interface/IPriceData.sol\":{\"keccak256\":\"0xb9855aecf2b8333c53159ff404e66df0755c88e0cfbb0b82c078ba37dd38cdde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://072584b51e006f9aab6cc19f44e1982db742e716dfc2cba20dc9a929709e23b2\",\"dweb:/ipfs/QmQZdNRkbBpB1XncP32c9tgKZyg77GXmufsNn9afn6w4xd\"]},\"contracts/oracle_utils/LPValue.sol\":{\"keccak256\":\"0x0735a0be40b8c17d106e10173f05bc97a13aa06e05d0bf90a043863c7a355d16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8deec9e6e75f6773ed216245e789b2d8f756f6470525be8a16763f13dabf22ac\",\"dweb:/ipfs/QmdxZKVeQSMwy9Sp6kZhNc1VyixKhf9nhFLc25p4tGr9r1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 810,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 809,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 809,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								809
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							890
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 890,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 890,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								890,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							890
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 891,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 890,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 315,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 315,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 315,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 315,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 315,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 315,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							779
						]
					},
					"id": 780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 327,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 336,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 351,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 353,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 349,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 347,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 779,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 779,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 404,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 406,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 402,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 400,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 411,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 390,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 389,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 779,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 432,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 434,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 435,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 428,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 440,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 416,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 415,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 779,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 466,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 468,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 444,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 779,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 514,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															485
														],
														"declarations": [
															{
																"constant": false,
																"id": 485,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 514,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 484,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 494,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 490,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 488,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 492,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 496,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 505,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 504,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 499,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 500,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 501,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 481,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 498,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 503,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 508,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 509,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 510,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 506,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 513,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 475,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 779,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 531,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 533,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 535,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 529,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 539,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 540,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 538,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 547,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 549,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 522,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 550,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 551,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 545,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 543,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 557,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 518,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 315,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 779,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 576,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 590,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 592,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 588,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 603,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 602,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 598,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 567,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 596,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 595,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 601,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 583,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 581,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 586,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 565,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 779,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 621,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 637,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 638,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 639,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 650,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 649,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 645,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 643,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 642,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 648,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 627,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 629,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 626,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 779,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 666,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 682,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 678,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 693,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 692,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 688,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 657,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 686,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 685,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 691,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 672,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 673,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 674,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 671,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 676,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 655,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 779,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 706,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 709,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 700,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 711,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 723,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 717,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 715,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 730,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 728,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 727,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 733,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 698,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 779,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 748,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 741,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 759,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 770,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 764,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 741,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 763,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 762,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 774,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 747,
												"id": 776,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 739,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 315,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 779,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 780,
							"src": "698:9376:5",
							"usedErrors": [
								327,
								336
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							809
						]
					},
					"id": 810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 809,
							"linearizedBaseContracts": [
								809
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 787,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 786,
												"id": 789,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 809,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 796,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 795,
												"id": 798,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 809,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 804,
												"id": 806,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 809,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 810,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							878
						]
					},
					"id": 879,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 811,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 812,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:7",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 878,
							"linearizedBaseContracts": [
								878
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 815,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 878,
									"src": "1818:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 813,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 814,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 818,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 878,
									"src": "1864:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 816,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 817,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 878,
									"src": "1907:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 819,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:7",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 823,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:7"
									},
									"src": "1994:37:7"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "2051:38:7",
										"statements": [
											{
												"expression": {
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 826,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2061:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 827,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "2071:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:7"
											}
										]
									},
									"id": 831,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:7"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:7"
									},
									"scope": 878,
									"src": "2037:52:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "2490:79:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 834,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "2500:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:7"
											},
											{
												"id": 837,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 838,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "2542:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:7"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:7",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 842,
									"name": "nonReentrant",
									"nameLocation": "2475:12:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:7"
									},
									"src": "2466:103:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "2614:268:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2702:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 846,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "2713:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 852,
												"nodeType": "IfStatement",
												"src": "2698:86:7",
												"trueBody": {
													"id": 851,
													"nodeType": "Block",
													"src": "2722:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 848,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "2743:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 850,
															"nodeType": "RevertStatement",
															"src": "2736:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 853,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2858:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 854,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "2868:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:7"
											}
										]
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:7"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:7"
									},
									"scope": 878,
									"src": "2575:307:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "2926:170:7",
										"statements": [
											{
												"expression": {
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 861,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "3068:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 862,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "3078:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:7"
											}
										]
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:7"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:7"
									},
									"scope": 878,
									"src": "2888:208:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "3339:42:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 872,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "3356:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 873,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "3367:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 871,
												"id": 875,
												"nodeType": "Return",
												"src": "3349:25:7"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:7",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:7"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "3333:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:7"
									},
									"scope": 878,
									"src": "3275:106:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 879,
							"src": "1030:2353:7",
							"usedErrors": [
								823
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							890
						]
					},
					"id": 891,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 880,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 881,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 890,
							"linearizedBaseContracts": [
								890
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 889,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 883,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 890,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 891,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							1132
						]
					},
					"id": 1133,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 892,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Pair",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1132,
							"linearizedBaseContracts": [
								1132
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "36:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 900,
									"name": "Approval",
									"nameLocation": "63:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "88:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "72:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "111:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "95:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "95:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "125:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "120:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "120:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71:60:9"
									},
									"src": "57:75:9"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 908,
									"name": "Transfer",
									"nameLocation": "143:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "168:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "152:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "190:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "174:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "199:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "194:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "194:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:54:9"
									},
									"src": "137:69:9"
								},
								{
									"functionSelector": "06fdde03",
									"id": 913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "221:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "225:2:9"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "251:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 910,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "251:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:15:9"
									},
									"scope": 1132,
									"src": "212:54:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 918,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "280:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:2:9"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "312:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "312:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:15:9"
									},
									"scope": 1132,
									"src": "271:56:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 923,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "341:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:2:9"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "375:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 920,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "375:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:7:9"
									},
									"scope": 1132,
									"src": "332:50:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 928,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "396:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "407:2:9"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "433:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "433:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:6:9"
									},
									"scope": 1132,
									"src": "387:52:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "453:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "471:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "463:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:15:9"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "501:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "501:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:6:9"
									},
									"scope": 1132,
									"src": "444:63:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "521:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "539:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "531:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "554:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "546:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:32:9"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "586:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "586:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:6:9"
									},
									"scope": 1132,
									"src": "512:80:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "607:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "623:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "615:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "637:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "632:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "632:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:29:9"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "662:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 950,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "662:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:6:9"
									},
									"scope": 1132,
									"src": "598:70:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "682:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "699:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "691:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "708:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "703:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "703:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:24:9"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "733:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 959,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "733:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:6:9"
									},
									"scope": 1132,
									"src": "673:66:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "753:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "774:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "766:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "788:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "780:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "797:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "792:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "792:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:38:9"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "822:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 970,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "822:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:6:9"
									},
									"scope": 1132,
									"src": "744:84:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 978,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "843:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:2:9"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "885:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 975,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:9:9"
									},
									"scope": 1132,
									"src": "834:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 983,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "908:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:9"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "949:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 980,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:9:9"
									},
									"scope": 1132,
									"src": "899:59:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "972:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "987:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "979:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:15:9"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1017:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1017:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1016:6:9"
									},
									"scope": 1132,
									"src": "963:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1038:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1053:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1045:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1068:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1060:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1082:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1077:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1077:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1094:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1089:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1089:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1110:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1104:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 999,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1104:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1121:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1113:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1001,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1132:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1124:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1003,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:90:9"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1143:0:9"
									},
									"scope": 1132,
									"src": "1029:115:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
									"id": 1015,
									"name": "Mint",
									"nameLocation": "1156:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1177:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "1161:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1190:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "1185:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1185:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1204:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "1199:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1199:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1160:52:9"
									},
									"src": "1150:63:9"
								},
								{
									"anonymous": false,
									"eventSelector": "dccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496",
									"id": 1025,
									"name": "Burn",
									"nameLocation": "1224:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1245:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "1229:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1258:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "1253:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1253:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1272:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "1267:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1297:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "1281:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:72:9"
									},
									"src": "1218:83:9"
								},
								{
									"anonymous": false,
									"eventSelector": "d78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822",
									"id": 1039,
									"name": "Swap",
									"nameLocation": "1312:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1342:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "1326:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nameLocation": "1363:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "1358:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1358:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nameLocation": "1387:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "1382:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1382:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "1411:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "1406:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1406:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "1436:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "1431:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1431:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1472:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "1456:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1456:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:164:9"
									},
									"src": "1306:175:9"
								},
								{
									"anonymous": false,
									"eventSelector": "1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1",
									"id": 1045,
									"name": "Sync",
									"nameLocation": "1492:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1505:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "1497:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1040,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1523:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "1515:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1042,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1496:36:9"
									},
									"src": "1486:47:9"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 1050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nameLocation": "1548:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:2:9"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1591:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1591:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1590:6:9"
									},
									"scope": 1132,
									"src": "1539:58:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 1055,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "1611:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1618:2:9"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "1644:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1644:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:9:9"
									},
									"scope": 1132,
									"src": "1602:51:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 1060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "1667:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1673:2:9"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "1699:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:9:9"
									},
									"scope": 1132,
									"src": "1658:50:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "1722:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1728:2:9"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1754:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:9:9"
									},
									"scope": 1132,
									"src": "1713:50:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 1074,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "1777:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1788:2:9"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1822:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1814:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1067,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1840:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1832:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1069,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "1857:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1850:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1071,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1850:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:63:9"
									},
									"scope": 1132,
									"src": "1768:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 1079,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nameLocation": "1891:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1911:2:9"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1937:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1937:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1936:6:9"
									},
									"scope": 1132,
									"src": "1882:61:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 1084,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nameLocation": "1957:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:9"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2003:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2003:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2002:6:9"
									},
									"scope": 1132,
									"src": "1948:61:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 1089,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nameLocation": "2023:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:9"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "2054:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2054:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2053:6:9"
									},
									"scope": 1132,
									"src": "2014:46:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 1096,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2075:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2088:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2080:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:12:9"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2115:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2110:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2110:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:16:9"
									},
									"scope": 1132,
									"src": "2066:60:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 1105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2140:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2153:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "2145:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2144:12:9"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2180:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "2175:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2175:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2194:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "2189:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2189:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2174:28:9"
									},
									"scope": 1132,
									"src": "2131:72:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 1116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "2217:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "2227:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "2222:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2222:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "2244:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "2239:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2264:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "2256:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2283:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "2268:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2268:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2221:67:9"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2297:0:9"
									},
									"scope": 1132,
									"src": "2208:90:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nameLocation": "2312:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2325:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "2317:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2317:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2316:12:9"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2337:0:9"
									},
									"scope": 1132,
									"src": "2303:35:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 1124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "2352:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2356:2:9"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2367:0:9"
									},
									"scope": 1132,
									"src": "2343:25:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 1131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "2383:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2394:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2403:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2403:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:18:9"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2420:0:9"
									},
									"scope": 1132,
									"src": "2374:47:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1133,
							"src": "26:2397:9",
							"usedErrors": [],
							"usedEvents": [
								900,
								908,
								1015,
								1025,
								1039,
								1045
							]
						}
					],
					"src": "0:2424:9"
				},
				"id": 9
			},
			"contracts/LPStaking.sol": {
				"ast": {
					"absolutePath": "contracts/LPStaking.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"ICREDIWhale": [
							2100
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"IERC20_Decimals": [
							2108
						],
						"IPriceData": [
							2280
						],
						"IUniswapV2Pair": [
							1132
						],
						"LPStaking": [
							2085
						],
						"LPValue": [
							2412
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							878
						],
						"SafeERC20": [
							779
						]
					},
					"id": 2086,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1134,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2086,
							"sourceUnit": 148,
							"src": "61:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2086,
							"sourceUnit": 316,
							"src": "115:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2086,
							"sourceUnit": 780,
							"src": "173:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2086,
							"sourceUnit": 879,
							"src": "240:59:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/oracle_utils/LPValue.sol",
							"file": "./oracle_utils/LPValue.sol",
							"id": 1139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2086,
							"sourceUnit": 2413,
							"src": "301:36:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/ICREDIWhale.sol",
							"file": "./interface/ICREDIWhale.sol",
							"id": 1140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2086,
							"sourceUnit": 2101,
							"src": "339:37:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IPriceData.sol",
							"file": "./interface/IPriceData.sol",
							"id": 1141,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2086,
							"sourceUnit": 2281,
							"src": "378:36:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1142,
										"name": "Ownable",
										"nameLocations": [
											"440:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "440:7:10"
									},
									"id": 1143,
									"nodeType": "InheritanceSpecifier",
									"src": "440:7:10"
								},
								{
									"baseName": {
										"id": 1144,
										"name": "LPValue",
										"nameLocations": [
											"449:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2412,
										"src": "449:7:10"
									},
									"id": 1145,
									"nodeType": "InheritanceSpecifier",
									"src": "449:7:10"
								},
								{
									"baseName": {
										"id": 1146,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"458:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 878,
										"src": "458:15:10"
									},
									"id": 1147,
									"nodeType": "InheritanceSpecifier",
									"src": "458:15:10"
								}
							],
							"canonicalName": "LPStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2085,
							"linearizedBaseContracts": [
								2085,
								878,
								2412,
								147,
								809
							],
							"name": "LPStaking",
							"nameLocation": "427:9:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1151,
									"libraryName": {
										"id": 1148,
										"name": "SafeERC20",
										"nameLocations": [
											"488:9:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 779,
										"src": "488:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "482:27:10",
									"typeName": {
										"id": 1150,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1149,
											"name": "IERC20",
											"nameLocations": [
												"502:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "502:6:10"
										},
										"referencedDeclaration": 315,
										"src": "502:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "LPStaking.PoolInfo",
									"id": 1164,
									"members": [
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "staking_token",
											"nameLocation": "555:13:10",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "547:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1152,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "547:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1155,
											"mutability": "mutable",
											"name": "maturity",
											"nameLocation": "586:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "579:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 1154,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "579:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1157,
											"mutability": "mutable",
											"name": "rewards_token",
											"nameLocation": "613:13:10",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "605:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1156,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "605:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1159,
											"mutability": "mutable",
											"name": "apy",
											"nameLocation": "644:3:10",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "637:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 1158,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "637:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1161,
											"mutability": "mutable",
											"name": "price_oracle",
											"nameLocation": "693:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "685:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1160,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "685:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1163,
											"mutability": "mutable",
											"name": "whales_bonus_apy",
											"nameLocation": "723:16:10",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "716:23:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 1162,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "716:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "522:8:10",
									"nodeType": "StructDefinition",
									"scope": 2085,
									"src": "515:232:10",
									"visibility": "public"
								},
								{
									"canonicalName": "LPStaking.StakeDetails",
									"id": 1177,
									"members": [
										{
											"constant": false,
											"id": 1166,
											"mutability": "mutable",
											"name": "pool_id",
											"nameLocation": "796:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1177,
											"src": "791:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1165,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "791:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1168,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "822:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1177,
											"src": "814:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1167,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "814:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1170,
											"mutability": "mutable",
											"name": "maturity",
											"nameLocation": "845:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 1177,
											"src": "838:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 1169,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "838:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1172,
											"mutability": "mutable",
											"name": "stake_amount",
											"nameLocation": "869:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 1177,
											"src": "864:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1171,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "864:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1174,
											"mutability": "mutable",
											"name": "reward_amount",
											"nameLocation": "897:13:10",
											"nodeType": "VariableDeclaration",
											"scope": 1177,
											"src": "892:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1173,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "892:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1176,
											"mutability": "mutable",
											"name": "required_CREDI",
											"nameLocation": "926:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1177,
											"src": "921:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1175,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "921:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeDetails",
									"nameLocation": "762:12:10",
									"nodeType": "StructDefinition",
									"scope": 2085,
									"src": "755:193:10",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "21241dfe",
									"id": 1180,
									"mutability": "constant",
									"name": "CLAIM_PERIOD",
									"nameLocation": "979:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2085,
									"src": "956:45:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint96",
										"typeString": "uint96"
									},
									"typeName": {
										"id": 1178,
										"name": "uint96",
										"nodeType": "ElementaryTypeName",
										"src": "956:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint96",
											"typeString": "uint96"
										}
									},
									"value": {
										"hexValue": "3430",
										"id": 1179,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "994:7:10",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3456000_by_1",
											"typeString": "int_const 3456000"
										},
										"value": "40"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc5c56dc",
									"id": 1183,
									"mutability": "immutable",
									"name": "CREDI_WHALE_ORACLE",
									"nameLocation": "1037:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 2085,
									"src": "1008:47:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICREDIWhale_$2100",
										"typeString": "contract ICREDIWhale"
									},
									"typeName": {
										"id": 1182,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1181,
											"name": "ICREDIWhale",
											"nameLocations": [
												"1008:11:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2100,
											"src": "1008:11:10"
										},
										"referencedDeclaration": 2100,
										"src": "1008:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICREDIWhale_$2100",
											"typeString": "contract ICREDIWhale"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1187,
									"mutability": "mutable",
									"name": "pools",
									"nameLocation": "1083:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 2085,
									"src": "1064:24:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
										"typeString": "struct LPStaking.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 1185,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1184,
												"name": "PoolInfo",
												"nameLocations": [
													"1064:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1164,
												"src": "1064:8:10"
											},
											"referencedDeclaration": 1164,
											"src": "1064:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
												"typeString": "struct LPStaking.PoolInfo"
											}
										},
										"id": 1186,
										"nodeType": "ArrayTypeName",
										"src": "1064:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage_ptr",
											"typeString": "struct LPStaking.PoolInfo[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1192,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "1134:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 2085,
									"src": "1095:45:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$1177_storage_$",
										"typeString": "mapping(uint256 => struct LPStaking.StakeDetails)"
									},
									"typeName": {
										"id": 1191,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1188,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1104:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1095:30:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$1177_storage_$",
											"typeString": "mapping(uint256 => struct LPStaking.StakeDetails)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1190,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1189,
												"name": "StakeDetails",
												"nameLocations": [
													"1112:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "1112:12:10"
											},
											"referencedDeclaration": 1177,
											"src": "1112:12:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
												"typeString": "struct LPStaking.StakeDetails"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1195,
									"mutability": "mutable",
									"name": "stakes_count",
									"nameLocation": "1160:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2085,
									"src": "1147:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1193,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1147:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1194,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1175:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "954821b6",
									"id": 1199,
									"mutability": "mutable",
									"name": "pending_payments",
									"nameLocation": "1216:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 2085,
									"src": "1183:49:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1198,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1196,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1192:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1183:25:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1197,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1203:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ac24935fd910bc682b5ccb1a07b718cadf8cf2f6d1404c4f3ddc3662dae40e29",
									"id": 1205,
									"name": "RewardAdded",
									"nameLocation": "1247:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1275:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "1259:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1287:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "1282:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1282:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:36:10"
									},
									"src": "1241:54:10"
								},
								{
									"anonymous": false,
									"eventSelector": "e06fab35f3c220725c11d544884aff93ebf67222c8310c487c71f27c844593e8",
									"id": 1213,
									"name": "RewardWithdrawn",
									"nameLocation": "1307:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1339:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1323:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1362:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1346:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1371:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1366:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1366:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:56:10"
									},
									"src": "1301:78:10"
								},
								{
									"anonymous": false,
									"eventSelector": "6b64b7e8b6f4656658efb1c74b7d1bbff6e84d3d7b1cd5ae89fd6cd91de6ef96",
									"id": 1229,
									"name": "PoolCreated",
									"nameLocation": "1391:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "1416:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "1403:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1403:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"indexed": true,
												"mutability": "mutable",
												"name": "staking_token",
												"nameLocation": "1441:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "1425:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"indexed": true,
												"mutability": "mutable",
												"name": "rewards_token",
												"nameLocation": "1472:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "1456:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1456:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"indexed": false,
												"mutability": "mutable",
												"name": "price_oracle",
												"nameLocation": "1495:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "1487:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"indexed": false,
												"mutability": "mutable",
												"name": "maturity",
												"nameLocation": "1516:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "1509:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1222,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1509:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"indexed": false,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "1533:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "1526:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1224,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1526:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"indexed": false,
												"mutability": "mutable",
												"name": "whales_bonus_apy",
												"nameLocation": "1545:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "1538:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1226,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1538:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:160:10"
									},
									"src": "1385:178:10"
								},
								{
									"anonymous": false,
									"eventSelector": "09a2c3c653a42f5c64bbfdf07224d8e0d6526460f44e520ac49bae23804e18e8",
									"id": 1235,
									"name": "APYChanged",
									"nameLocation": "1575:10:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "1599:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1586:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1586:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"indexed": false,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "1615:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1608:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1232,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1608:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:34:10"
									},
									"src": "1569:51:10"
								},
								{
									"anonymous": false,
									"eventSelector": "d3cd184b56b5b95016981fc55484ff8fdf06eb587430055c7ab828a0edc0dc9d",
									"id": 1241,
									"name": "BonusAPYChanged",
									"nameLocation": "1632:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "1661:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1648:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1648:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"indexed": false,
												"mutability": "mutable",
												"name": "whales_bonus_apy",
												"nameLocation": "1677:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "1670:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1238,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1670:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:47:10"
									},
									"src": "1626:69:10"
								},
								{
									"anonymous": false,
									"eventSelector": "c48192cf3609b4932a8b10a6f09fe1cac38610fdef14eacc15b35c454da0b4c5",
									"id": 1257,
									"name": "Staked",
									"nameLocation": "1708:6:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1731:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1715:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1743:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1738:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1738:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "1766:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1753:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1753:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"indexed": false,
												"mutability": "mutable",
												"name": "maturity",
												"nameLocation": "1782:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1775:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1248,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1775:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "1797:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1792:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1792:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewards_amount",
												"nameLocation": "1816:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1811:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"indexed": false,
												"mutability": "mutable",
												"name": "required_CREDI",
												"nameLocation": "1837:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1832:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1832:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:138:10"
									},
									"src": "1702:151:10"
								},
								{
									"anonymous": false,
									"eventSelector": "3db0ca701d7c1106534c6003e5d65dae65a9cb891ad5bbb9be39c091df79d87e",
									"id": 1263,
									"name": "StakeWithdrawn",
									"nameLocation": "1865:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "1893:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1880:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1880:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1907:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1902:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1902:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1879:37:10"
									},
									"src": "1859:58:10"
								},
								{
									"anonymous": false,
									"eventSelector": "4d7828f2aa36030cc63cdea79ec646099aa121d019f1a90edb55078939fb84ea",
									"id": 1269,
									"name": "RewardPaid",
									"nameLocation": "1929:10:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "1953:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "1940:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1940:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1967:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "1962:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1962:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1939:37:10"
									},
									"src": "1923:54:10"
								},
								{
									"anonymous": false,
									"eventSelector": "085cf309fcbacaf1ee2b300f62e8586a0661e41c7f318003e9aab792be89980b",
									"id": 1275,
									"name": "RewardVoided",
									"nameLocation": "1989:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "2015:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2002:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2002:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "2029:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2024:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2024:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2001:37:10"
									},
									"src": "1983:56:10"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "2090:107:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1280,
																	"name": "pool_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "2109:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2119:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2109:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1283,
																	"name": "pool_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "2124:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1284,
																		"name": "pools",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "2134:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
																			"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
																		}
																	},
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2140:6:10",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2134:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2124:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c505374616b696e673a496e76616c696420506f6f6c20494421",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2148:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9609bed7fe5874993a0e45025cb75d78736e0e5d28fc319f68fd61927d3a2555",
																"typeString": "literal_string \"LPStaking:Invalid Pool ID!\""
															},
															"value": "LPStaking:Invalid Pool ID!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9609bed7fe5874993a0e45025cb75d78736e0e5d28fc319f68fd61927d3a2555",
																"typeString": "literal_string \"LPStaking:Invalid Pool ID!\""
															}
														],
														"id": 1279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:76:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "2101:76:10"
											},
											{
												"id": 1291,
												"nodeType": "PlaceholderStatement",
												"src": "2188:1:10"
											}
										]
									},
									"id": 1293,
									"name": "validate_pool",
									"nameLocation": "2056:13:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "2075:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "2070:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2070:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:14:10"
									},
									"src": "2047:150:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "2250:110:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1298,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "2269:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2280:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2269:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1301,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "2285:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1302,
																	"name": "stakes_count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "2296:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2285:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2269:39:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c505374616b696e673a496e76616c6964205374616b6520494421",
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2310:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e16e6a30f81a14a3750dadd850a42a6a565cd1e2e793344412756e6597d7eb3",
																"typeString": "literal_string \"LPStaking:Invalid Stake ID!\""
															},
															"value": "LPStaking:Invalid Stake ID!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e16e6a30f81a14a3750dadd850a42a6a565cd1e2e793344412756e6597d7eb3",
																"typeString": "literal_string \"LPStaking:Invalid Stake ID!\""
															}
														],
														"id": 1297,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2261:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:79:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "2261:79:10"
											},
											{
												"id": 1308,
												"nodeType": "PlaceholderStatement",
												"src": "2351:1:10"
											}
										]
									},
									"id": 1310,
									"name": "validate_stake",
									"nameLocation": "2214:14:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "2234:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "2229:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2229:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2228:15:10"
									},
									"src": "2205:155:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "2435:315:10",
										"statements": [
											{
												"expression": {
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1319,
														"name": "CREDI_WHALE_ORACLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "2446:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICREDIWhale_$2100",
															"typeString": "contract ICREDIWhale"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1321,
																"name": "_whale_oracle_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "2479:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1320,
															"name": "ICREDIWhale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2100,
															"src": "2467:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ICREDIWhale_$2100_$",
																"typeString": "type(contract ICREDIWhale)"
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2467:31:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICREDIWhale_$2100",
															"typeString": "contract ICREDIWhale"
														}
													},
													"src": "2446:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICREDIWhale_$2100",
														"typeString": "contract ICREDIWhale"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "2446:52:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2567:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2559:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1329,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2559:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2559:10:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2594:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2633:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2625:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1334,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2625:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2625:10:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2655:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2693:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2685:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1339,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2685:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2685:10:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2728:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1328,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "2520:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1164_storage_ptr_$",
																	"typeString": "type(struct LPStaking.PoolInfo storage pointer)"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"2544:13:10",
																"2584:8:10",
																"2610:13:10",
																"2650:3:10",
																"2671:12:10",
																"2710:16:10"
															],
															"names": [
																"staking_token",
																"maturity",
																"rewards_token",
																"apy",
																"price_oracle",
																"whales_bonus_apy"
															],
															"nodeType": "FunctionCall",
															"src": "2520:221:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1164_memory_ptr",
																"typeString": "struct LPStaking.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1164_memory_ptr",
																"typeString": "struct LPStaking.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1325,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "2509:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
																"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2515:4:10",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2509:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$1164_storage_$returns$__$attached_to$_t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LPStaking.PoolInfo storage ref[] storage pointer,struct LPStaking.PoolInfo storage ref)"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:233:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "2509:233:10"
											}
										]
									},
									"id": 1348,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1315,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "2416:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2416:12:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1317,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1314,
												"name": "Ownable",
												"nameLocations": [
													"2408:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2408:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2408:21:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "_whale_oracle_addr",
												"nameLocation": "2388:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "2380:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2380:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2379:28:10"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2435:0:10"
									},
									"scope": 2085,
									"src": "2368:382:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "3037:258:10",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1368,
																	"name": "pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "3056:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
																		"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 1370,
																"indexExpression": {
																	"id": 1369,
																	"name": "pool_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "3062:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3056:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1164_storage",
																	"typeString": "struct LPStaking.PoolInfo storage ref"
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3071:13:10",
															"memberName": "staking_token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1153,
															"src": "3056:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1372,
																	"name": "pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "3099:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
																		"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 1374,
																"indexExpression": {
																	"id": 1373,
																	"name": "pool_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "3105:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3099:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1164_storage",
																	"typeString": "struct LPStaking.PoolInfo storage ref"
																}
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3114:13:10",
															"memberName": "rewards_token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1157,
															"src": "3099:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1376,
																	"name": "pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "3142:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
																		"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 1378,
																"indexExpression": {
																	"id": 1377,
																	"name": "pool_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "3148:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3142:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1164_storage",
																	"typeString": "struct LPStaking.PoolInfo storage ref"
																}
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3157:12:10",
															"memberName": "price_oracle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1161,
															"src": "3142:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1380,
																	"name": "pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "3184:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
																		"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 1382,
																"indexExpression": {
																	"id": 1381,
																	"name": "pool_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "3190:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3184:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1164_storage",
																	"typeString": "struct LPStaking.PoolInfo storage ref"
																}
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3199:8:10",
															"memberName": "maturity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1155,
															"src": "3184:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1384,
																	"name": "pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "3222:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
																		"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 1386,
																"indexExpression": {
																	"id": 1385,
																	"name": "pool_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "3228:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3222:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1164_storage",
																	"typeString": "struct LPStaking.PoolInfo storage ref"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3237:3:10",
															"memberName": "apy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1159,
															"src": "3222:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1388,
																	"name": "pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "3255:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
																		"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 1390,
																"indexExpression": {
																	"id": 1389,
																	"name": "pool_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "3261:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3255:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1164_storage",
																	"typeString": "struct LPStaking.PoolInfo storage ref"
																}
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3270:16:10",
															"memberName": "whales_bonus_apy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1163,
															"src": "3255:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"id": 1392,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3055:232:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_uint96_$_t_uint96_$_t_uint96_$",
														"typeString": "tuple(address,address,address,uint96,uint96,uint96)"
													}
												},
												"functionReturnParameters": 1367,
												"id": 1393,
												"nodeType": "Return",
												"src": "3048:239:10"
											}
										]
									},
									"functionSelector": "068bcd8d",
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1353,
													"name": "pool_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1350,
													"src": "2812:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1354,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1352,
												"name": "validate_pool",
												"nameLocations": [
													"2798:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1293,
												"src": "2798:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2798:22:10"
										}
									],
									"name": "getPool",
									"nameLocation": "2767:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "2780:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "2775:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2775:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2774:14:10"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "staking_token",
												"nameLocation": "2853:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "2845:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2845:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "rewards_token",
												"nameLocation": "2889:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "2881:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2881:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "price_oracle",
												"nameLocation": "2925:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "2917:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2917:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "maturity",
												"nameLocation": "2959:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "2952:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1361,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2952:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "2989:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "2982:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1363,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2982:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "whales_bonus_apy",
												"nameLocation": "3014:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "3007:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1365,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3007:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:187:10"
									},
									"scope": 2085,
									"src": "2758:537:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "3553:264:10",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1415,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "3572:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$1177_storage_$",
																		"typeString": "mapping(uint256 => struct LPStaking.StakeDetails storage ref)"
																	}
																},
																"id": 1417,
																"indexExpression": {
																	"id": 1416,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "3579:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3572:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$1177_storage",
																	"typeString": "struct LPStaking.StakeDetails storage ref"
																}
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3589:5:10",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1168,
															"src": "3572:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1419,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "3609:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$1177_storage_$",
																		"typeString": "mapping(uint256 => struct LPStaking.StakeDetails storage ref)"
																	}
																},
																"id": 1421,
																"indexExpression": {
																	"id": 1420,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "3616:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3609:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$1177_storage",
																	"typeString": "struct LPStaking.StakeDetails storage ref"
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3626:7:10",
															"memberName": "pool_id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1166,
															"src": "3609:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1423,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "3648:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$1177_storage_$",
																		"typeString": "mapping(uint256 => struct LPStaking.StakeDetails storage ref)"
																	}
																},
																"id": 1425,
																"indexExpression": {
																	"id": 1424,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "3655:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3648:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$1177_storage",
																	"typeString": "struct LPStaking.StakeDetails storage ref"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3665:8:10",
															"memberName": "maturity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1170,
															"src": "3648:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1427,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "3688:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$1177_storage_$",
																		"typeString": "mapping(uint256 => struct LPStaking.StakeDetails storage ref)"
																	}
																},
																"id": 1429,
																"indexExpression": {
																	"id": 1428,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "3695:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3688:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$1177_storage",
																	"typeString": "struct LPStaking.StakeDetails storage ref"
																}
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3705:12:10",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1172,
															"src": "3688:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1431,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "3732:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$1177_storage_$",
																		"typeString": "mapping(uint256 => struct LPStaking.StakeDetails storage ref)"
																	}
																},
																"id": 1433,
																"indexExpression": {
																	"id": 1432,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "3739:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3732:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$1177_storage",
																	"typeString": "struct LPStaking.StakeDetails storage ref"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3749:13:10",
															"memberName": "reward_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1174,
															"src": "3732:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1435,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "3777:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$1177_storage_$",
																		"typeString": "mapping(uint256 => struct LPStaking.StakeDetails storage ref)"
																	}
																},
																"id": 1437,
																"indexExpression": {
																	"id": 1436,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "3784:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3777:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$1177_storage",
																	"typeString": "struct LPStaking.StakeDetails storage ref"
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3794:14:10",
															"memberName": "required_CREDI",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1176,
															"src": "3777:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1439,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3571:238:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint96_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,uint256,uint96,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1414,
												"id": 1440,
												"nodeType": "Return",
												"src": "3564:245:10"
											}
										]
									},
									"functionSelector": "ce325bf8",
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1400,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1397,
													"src": "3363:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1401,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1399,
												"name": "validate_stake",
												"nameLocations": [
													"3348:14:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "3348:14:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3348:24:10"
										}
									],
									"name": "getStake",
									"nameLocation": "3315:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "3329:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "3324:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3324:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3323:15:10"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3405:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "3397:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3397:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "3426:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "3421:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3421:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "maturity",
												"nameLocation": "3451:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "3444:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1406,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3444:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "3475:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "3470:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3470:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "reward_amount",
												"nameLocation": "3503:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "3498:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3498:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "required_CREDI",
												"nameLocation": "3532:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "3527:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3527:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3396:151:10"
									},
									"scope": 2085,
									"src": "3306:511:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1452,
										"nodeType": "Block",
										"src": "3885:42:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1447,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "3903:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
																"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3909:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3903:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3918:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3903:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1446,
												"id": 1451,
												"nodeType": "Return",
												"src": "3896:23:10"
											}
										]
									},
									"functionSelector": "b4ac6860",
									"id": 1453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsCount",
									"nameLocation": "3834:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3847:2:10"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "3873:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3873:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3872:6:10"
									},
									"scope": 2085,
									"src": "3825:102:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "3989:49:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1460,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4014:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4020:9:10",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4014:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4007:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 1458,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "4007:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1457,
												"id": 1463,
												"nodeType": "Return",
												"src": "4000:30:10"
											}
										]
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "time_now",
									"nameLocation": "3944:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3952:2:10"
									},
									"returnParameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "3976:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1455,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3976:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3975:8:10"
									},
									"scope": 2085,
									"src": "3935:103:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "4246:770:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1487,
																"name": "maturity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "4265:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4276:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4265:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c505374616b696e673a6d61747572697479206d7573742062652067726561746572207468616e2030",
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4279:43:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29c57daf8e27c717e10ae76545d83b5f2c91ce346314162ccef308ba8221272c",
																"typeString": "literal_string \"LPStaking:maturity must be greater than 0\""
															},
															"value": "LPStaking:maturity must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29c57daf8e27c717e10ae76545d83b5f2c91ce346314162ccef308ba8221272c",
																"typeString": "literal_string \"LPStaking:maturity must be greater than 0\""
															}
														],
														"id": 1486,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4257:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4257:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "4257:66:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1495,
																				"name": "price_oracle",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1471,
																				"src": "4353:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1494,
																			"name": "IPriceData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "4342:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IPriceData_$2280_$",
																				"typeString": "type(contract IPriceData)"
																			}
																		},
																		"id": 1496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4342:24:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPriceData_$2280",
																			"typeString": "contract IPriceData"
																		}
																	},
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4367:10:10",
																	"memberName": "quoteToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2279,
																	"src": "4342:35:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4342:37:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1499,
																"name": "rewards_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "4383:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4342:54:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c505374616b696e673a726577617264735f746f6b656e206d75737420626520657175616c20746f2070726963655f6f7261636c652071756f746520746f6b656e",
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4398:67:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80eaacf457ba567125d46e8d07b85f0b19850b9352dda34d0af0b902e124e0b4",
																"typeString": "literal_string \"LPStaking:rewards_token must be equal to price_oracle quote token\""
															},
															"value": "LPStaking:rewards_token must be equal to price_oracle quote token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80eaacf457ba567125d46e8d07b85f0b19850b9352dda34d0af0b902e124e0b4",
																"typeString": "literal_string \"LPStaking:rewards_token must be equal to price_oracle quote token\""
															}
														],
														"id": 1493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4334:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4334:132:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1503,
												"nodeType": "ExpressionStatement",
												"src": "4334:132:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1508,
																	"name": "staking_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "4527:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1509,
																	"name": "maturity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "4565:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																{
																	"id": 1510,
																	"name": "rewards_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "4603:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1511,
																	"name": "apy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "4636:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																{
																	"id": 1512,
																	"name": "price_oracle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1471,
																	"src": "4668:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1513,
																	"name": "whales_bonus_apy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "4713:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																],
																"id": 1507,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "4488:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1164_storage_ptr_$",
																	"typeString": "type(struct LPStaking.PoolInfo storage pointer)"
																}
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"4512:13:10",
																"4555:8:10",
																"4588:13:10",
																"4631:3:10",
																"4654:12:10",
																"4695:16:10"
															],
															"names": [
																"staking_token",
																"maturity",
																"rewards_token",
																"apy",
																"price_oracle",
																"whales_bonus_apy"
															],
															"nodeType": "FunctionCall",
															"src": "4488:253:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1164_memory_ptr",
																"typeString": "struct LPStaking.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1164_memory_ptr",
																"typeString": "struct LPStaking.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1504,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "4477:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
																"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4483:4:10",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4477:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$1164_storage_$returns$__$attached_to$_t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LPStaking.PoolInfo storage ref[] storage pointer,struct LPStaking.PoolInfo storage ref)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4477:265:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1516,
												"nodeType": "ExpressionStatement",
												"src": "4477:265:10"
											},
											{
												"assignments": [
													1518
												],
												"declarations": [
													{
														"constant": false,
														"id": 1518,
														"mutability": "mutable",
														"name": "pool_id",
														"nameLocation": "4758:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1545,
														"src": "4753:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1517,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4753:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1523,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1519,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "4768:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
																"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4774:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4768:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4783:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4768:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4753:31:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1525,
															"name": "pool_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "4812:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1526,
															"name": "staking_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "4821:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1527,
															"name": "rewards_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "4836:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1528,
															"name": "price_oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "4851:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1529,
															"name": "maturity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "4865:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 1530,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "4875:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 1531,
															"name": "whales_bonus_apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "4880:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 1524,
														"name": "PoolCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "4800:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint96_$_t_uint96_$_t_uint96_$returns$__$",
															"typeString": "function (uint256,address,address,address,uint96,uint96,uint96)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4800:97:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "EmitStatement",
												"src": "4795:102:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1534,
														"name": "reward_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "4911:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4927:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4911:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1542,
												"nodeType": "IfStatement",
												"src": "4908:75:10",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 1538,
																"name": "rewards_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "4954:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1539,
																"name": "reward_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "4969:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1537,
															"name": "addRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "4943:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,uint256)"
															}
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4943:40:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1541,
													"nodeType": "ExpressionStatement",
													"src": "4943:40:10"
												}
											},
											{
												"expression": {
													"id": 1543,
													"name": "pool_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1518,
													"src": "5001:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1485,
												"id": 1544,
												"nodeType": "Return",
												"src": "4994:14:10"
											}
										]
									},
									"functionSelector": "69ca431b",
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1482,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1481,
												"name": "onlyOwner",
												"nameLocations": [
													"4217:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4217:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4217:9:10"
										}
									],
									"name": "createPool",
									"nameLocation": "4055:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "staking_token",
												"nameLocation": "4074:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4066:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4066:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "rewards_token",
												"nameLocation": "4097:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4089:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4089:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "price_oracle",
												"nameLocation": "4120:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4112:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4112:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "reward_amount",
												"nameLocation": "4139:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4134:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4134:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "maturity",
												"nameLocation": "4161:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4154:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1474,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "4154:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "4178:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4171:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1476,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "4171:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "whales_bonus_apy",
												"nameLocation": "4190:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4183:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1478,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "4183:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4065:142:10"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4235:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4235:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:6:10"
									},
									"scope": 2085,
									"src": "4046:970:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "5190:1336:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1563,
																"name": "stake_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "5209:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5224:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5209:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c505374616b696e673a7374616b655f616d6f756e74206d7573742062652067726561746572207468616e207a65726f21",
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5226:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a09483d25cc2fc12a7cf65e12568a6dd37259e605cfb897eb1abbbae1dbe9274",
																"typeString": "literal_string \"LPStaking:stake_amount must be greater than zero!\""
															},
															"value": "LPStaking:stake_amount must be greater than zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a09483d25cc2fc12a7cf65e12568a6dd37259e605cfb897eb1abbbae1dbe9274",
																"typeString": "literal_string \"LPStaking:stake_amount must be greater than zero!\""
															}
														],
														"id": 1562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5201:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5201:77:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "5201:77:10"
											},
											{
												"assignments": [
													1571
												],
												"declarations": [
													{
														"constant": false,
														"id": 1571,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5306:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1700,
														"src": "5289:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
															"typeString": "struct LPStaking.PoolInfo"
														},
														"typeName": {
															"id": 1570,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1569,
																"name": "PoolInfo",
																"nameLocations": [
																	"5289:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1164,
																"src": "5289:8:10"
															},
															"referencedDeclaration": 1164,
															"src": "5289:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																"typeString": "struct LPStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1575,
												"initialValue": {
													"baseExpression": {
														"id": 1572,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "5313:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
															"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1574,
													"indexExpression": {
														"id": 1573,
														"name": "pool_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "5319:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5313:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1164_storage",
														"typeString": "struct LPStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5289:38:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1577,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1571,
																	"src": "5346:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																		"typeString": "struct LPStaking.PoolInfo storage pointer"
																	}
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5351:3:10",
																"memberName": "apy",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1159,
																"src": "5346:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5357:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5346:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c505374616b696e673a506f6f6c2069732070617573656421",
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5360:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7413541967929611b36bcd89f295c92ebef45e79b12d187d4ae73575bb36f18c",
																"typeString": "literal_string \"LPStaking:Pool is paused!\""
															},
															"value": "LPStaking:Pool is paused!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7413541967929611b36bcd89f295c92ebef45e79b12d187d4ae73575bb36f18c",
																"typeString": "literal_string \"LPStaking:Pool is paused!\""
															}
														],
														"id": 1576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5338:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5338:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "5338:50:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1589,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "5443:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5443:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1593,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5465:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LPStaking_$2085",
																		"typeString": "contract LPStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LPStaking_$2085",
																		"typeString": "contract LPStaking"
																	}
																],
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5457:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1591,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5457:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5457:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1595,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "5472:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1585,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "5406:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																			"typeString": "struct LPStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5411:13:10",
																	"memberName": "staking_token",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1153,
																	"src": "5406:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1584,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "5399:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5399:26:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5426:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "5399:43:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5399:86:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1597,
												"nodeType": "ExpressionStatement",
												"src": "5399:86:10"
											},
											{
												"assignments": [
													1599
												],
												"declarations": [
													{
														"constant": false,
														"id": 1599,
														"mutability": "mutable",
														"name": "stake_value",
														"nameLocation": "5502:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1700,
														"src": "5497:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1598,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5497:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1609,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1601,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "5525:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																	"typeString": "struct LPStaking.PoolInfo storage pointer"
																}
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5530:13:10",
															"memberName": "staking_token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1153,
															"src": "5525:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1603,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "5545:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1604,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "5559:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																	"typeString": "struct LPStaking.PoolInfo storage pointer"
																}
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5564:12:10",
															"memberName": "price_oracle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1161,
															"src": "5559:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1606,
															"name": "token0_price_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "5578:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 1607,
															"name": "token1_price_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "5597:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 1600,
														"name": "lp_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2411,
														"src": "5516:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,address,bytes calldata,bytes calldata) returns (uint256)"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5516:99:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5497:118:10"
											},
											{
												"assignments": [
													1611
												],
												"declarations": [
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "reward_amount",
														"nameLocation": "5631:13:10",
														"nodeType": "VariableDeclaration",
														"scope": 1700,
														"src": "5626:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1610,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5626:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1624,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1612,
																	"name": "stake_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "5647:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"id": 1613,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "5659:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																			"typeString": "struct LPStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5664:3:10",
																	"memberName": "apy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1159,
																	"src": "5659:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "5647:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5668:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "5647:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"id": 1618,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "5674:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																	"typeString": "struct LPStaking.PoolInfo storage pointer"
																}
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5679:8:10",
															"memberName": "maturity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1155,
															"src": "5674:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"src": "5647:40:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"hexValue": "333635",
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5689:8:10",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_31536000_by_1",
																	"typeString": "int_const 31536000"
																},
																"value": "365"
															}
														],
														"id": 1622,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5688:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														}
													},
													"src": "5647:51:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5626:72:10"
											},
											{
												"assignments": [
													1626
												],
												"declarations": [
													{
														"constant": false,
														"id": 1626,
														"mutability": "mutable",
														"name": "required_CREDI",
														"nameLocation": "5714:14:10",
														"nodeType": "VariableDeclaration",
														"scope": 1700,
														"src": "5709:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1625,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5709:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1628,
												"initialValue": {
													"hexValue": "30",
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5731:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5709:23:10"
											},
											{
												"condition": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1631,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "5773:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1629,
															"name": "CREDI_WHALE_ORACLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "5746:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICREDIWhale_$2100",
																"typeString": "contract ICREDIWhale"
															}
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5765:7:10",
														"memberName": "isWhale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2094,
														"src": "5746:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view external returns (bool)"
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5746:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1656,
												"nodeType": "IfStatement",
												"src": "5743:229:10",
												"trueBody": {
													"id": 1655,
													"nodeType": "Block",
													"src": "5797:175:10",
													"statements": [
														{
															"expression": {
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1634,
																	"name": "required_CREDI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "5812:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1635,
																			"name": "CREDI_WHALE_ORACLE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "5829:18:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ICREDIWhale_$2100",
																				"typeString": "contract ICREDIWhale"
																			}
																		},
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5848:14:10",
																		"memberName": "whaleThreshold",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2099,
																		"src": "5829:33:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 1637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5829:35:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5812:52:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1639,
															"nodeType": "ExpressionStatement",
															"src": "5812:52:10"
														},
														{
															"expression": {
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1640,
																	"name": "reward_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "5879:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1641,
																					"name": "stake_value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1599,
																					"src": "5896:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"expression": {
																						"id": 1642,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1571,
																						"src": "5908:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																							"typeString": "struct LPStaking.PoolInfo storage pointer"
																						}
																					},
																					"id": 1643,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5913:16:10",
																					"memberName": "whales_bonus_apy",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1163,
																					"src": "5908:21:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"src": "5896:33:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3130303030",
																				"id": 1645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5930:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"src": "5896:39:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"id": 1647,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1571,
																				"src": "5936:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																					"typeString": "struct LPStaking.PoolInfo storage pointer"
																				}
																			},
																			"id": 1648,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5941:8:10",
																			"memberName": "maturity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1155,
																			"src": "5936:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"src": "5896:53:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"hexValue": "333635",
																				"id": 1650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5951:8:10",
																				"subdenomination": "days",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_31536000_by_1",
																					"typeString": "int_const 31536000"
																				},
																				"value": "365"
																			}
																		],
																		"id": 1651,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5950:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31536000_by_1",
																			"typeString": "int_const 31536000"
																		}
																	},
																	"src": "5896:64:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5879:81:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1654,
															"nodeType": "ExpressionStatement",
															"src": "5879:81:10"
														}
													]
												}
											},
											{
												"assignments": [
													1658
												],
												"declarations": [
													{
														"constant": false,
														"id": 1658,
														"mutability": "mutable",
														"name": "maturity",
														"nameLocation": "5991:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1700,
														"src": "5984:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 1657,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "5984:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1664,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1659,
															"name": "time_now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "6002:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																"typeString": "function () view returns (uint96)"
															}
														},
														"id": 1660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6002:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 1661,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "6015:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																"typeString": "struct LPStaking.PoolInfo storage pointer"
															}
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6020:8:10",
														"memberName": "maturity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "6015:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "6002:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5984:44:10"
											},
											{
												"expression": {
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1665,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "6039:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$1177_storage_$",
																"typeString": "mapping(uint256 => struct LPStaking.StakeDetails storage ref)"
															}
														},
														"id": 1667,
														"indexExpression": {
															"id": 1666,
															"name": "stakes_count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "6046:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6039:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$1177_storage",
															"typeString": "struct LPStaking.StakeDetails storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1669,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "6097:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6097:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1671,
																"name": "pool_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "6133:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1672,
																"name": "maturity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1658,
																"src": "6165:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"id": 1673,
																"name": "stake_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "6202:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1674,
																"name": "reward_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "6244:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1675,
																"name": "required_CREDI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "6288:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1668,
															"name": "StakeDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "6062:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_StakeDetails_$1177_storage_ptr_$",
																"typeString": "type(struct LPStaking.StakeDetails storage pointer)"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"6090:5:10",
															"6124:7:10",
															"6155:8:10",
															"6188:12:10",
															"6229:13:10",
															"6272:14:10"
														],
														"names": [
															"owner",
															"pool_id",
															"maturity",
															"stake_amount",
															"reward_amount",
															"required_CREDI"
														],
														"nodeType": "FunctionCall",
														"src": "6062:252:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$1177_memory_ptr",
															"typeString": "struct LPStaking.StakeDetails memory"
														}
													},
													"src": "6039:275:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$1177_storage",
														"typeString": "struct LPStaking.StakeDetails storage ref"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "6039:275:10"
											},
											{
												"expression": {
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1679,
															"name": "pending_payments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "6325:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1682,
														"indexExpression": {
															"expression": {
																"id": 1680,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "6342:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																	"typeString": "struct LPStaking.PoolInfo storage pointer"
																}
															},
															"id": 1681,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6347:13:10",
															"memberName": "rewards_token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1157,
															"src": "6342:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6325:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1683,
														"name": "reward_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "6365:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6325:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "6325:53:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1687,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6401:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6401:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1689,
															"name": "stakes_count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "6415:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1690,
															"name": "pool_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "6429:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1691,
															"name": "maturity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "6438:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 1692,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "6448:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1693,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "6462:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1694,
															"name": "required_CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "6477:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1686,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "6394:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint96_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint96,uint256,uint256,uint256)"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6394:98:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1696,
												"nodeType": "EmitStatement",
												"src": "6389:103:10"
											},
											{
												"expression": {
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "6503:14:10",
													"subExpression": {
														"id": 1697,
														"name": "stakes_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "6503:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1699,
												"nodeType": "ExpressionStatement",
												"src": "6503:14:10"
											}
										]
									},
									"functionSelector": "3b5dd047",
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1557,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1556,
												"name": "nonReentrant",
												"nameLocations": [
													"5149:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 842,
												"src": "5149:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5149:12:10"
										},
										{
											"arguments": [
												{
													"id": 1559,
													"name": "pool_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1548,
													"src": "5176:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1560,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1558,
												"name": "validate_pool",
												"nameLocations": [
													"5162:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1293,
												"src": "5162:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5162:22:10"
										}
									],
									"name": "stake",
									"nameLocation": "5033:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "5044:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "5039:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5039:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "5058:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "5053:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5053:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "token0_price_data",
												"nameLocation": "5087:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "5072:32:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1551,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5072:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "token1_price_data",
												"nameLocation": "5121:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "5106:32:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5106:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5038:101:10"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5190:0:10"
									},
									"scope": 2085,
									"src": "5024:1502:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1812,
										"nodeType": "Block",
										"src": "6616:887:10",
										"statements": [
											{
												"assignments": [
													1713
												],
												"declarations": [
													{
														"constant": false,
														"id": 1713,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "6654:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1812,
														"src": "6633:28:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
															"typeString": "struct LPStaking.StakeDetails"
														},
														"typeName": {
															"id": 1712,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1711,
																"name": "StakeDetails",
																"nameLocations": [
																	"6633:12:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1177,
																"src": "6633:12:10"
															},
															"referencedDeclaration": 1177,
															"src": "6633:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																"typeString": "struct LPStaking.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1717,
												"initialValue": {
													"baseExpression": {
														"id": 1714,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "6664:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$1177_storage_$",
															"typeString": "mapping(uint256 => struct LPStaking.StakeDetails storage ref)"
														}
													},
													"id": 1716,
													"indexExpression": {
														"id": 1715,
														"name": "stake_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "6671:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6664:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$1177_storage",
														"typeString": "struct LPStaking.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6633:47:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1719,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "6699:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																		"typeString": "struct LPStaking.StakeDetails storage pointer"
																	}
																},
																"id": 1720,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6707:5:10",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1168,
																"src": "6699:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1721,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "6716:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6716:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6699:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c505374616b696e673a43616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6730:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a12b524a3be40694ffb0d5bc0958fc55168fc7cda344718aab4c0bc96880da50",
																"typeString": "literal_string \"LPStaking:Caller is not the owner\""
															},
															"value": "LPStaking:Caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a12b524a3be40694ffb0d5bc0958fc55168fc7cda344718aab4c0bc96880da50",
																"typeString": "literal_string \"LPStaking:Caller is not the owner\""
															}
														],
														"id": 1718,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6691:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6691:75:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1726,
												"nodeType": "ExpressionStatement",
												"src": "6691:75:10"
											},
											{
												"assignments": [
													1729
												],
												"declarations": [
													{
														"constant": false,
														"id": 1729,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "6794:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1812,
														"src": "6777:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
															"typeString": "struct LPStaking.PoolInfo"
														},
														"typeName": {
															"id": 1728,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1727,
																"name": "PoolInfo",
																"nameLocations": [
																	"6777:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1164,
																"src": "6777:8:10"
															},
															"referencedDeclaration": 1164,
															"src": "6777:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																"typeString": "struct LPStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"baseExpression": {
														"id": 1730,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "6801:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
															"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1733,
													"indexExpression": {
														"expression": {
															"id": 1731,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "6807:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																"typeString": "struct LPStaking.StakeDetails storage pointer"
															}
														},
														"id": 1732,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6815:7:10",
														"memberName": "pool_id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1166,
														"src": "6807:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6801:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1164_storage",
														"typeString": "struct LPStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6777:46:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1736,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "6842:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6842:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1738,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "6856:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																		"typeString": "struct LPStaking.StakeDetails storage pointer"
																	}
																},
																"id": 1739,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6864:8:10",
																"memberName": "maturity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1170,
																"src": "6856:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "6842:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c505374616b696e673a4561726c79205769746864726177616c206973206e6f74207065726d697474656421",
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6874:46:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f05035c333f8eea86681a079e9dbbf83f20c2edbd12293e704e25b5c79f55ebb",
																"typeString": "literal_string \"LPStaking:Early Withdrawal is not permitted!\""
															},
															"value": "LPStaking:Early Withdrawal is not permitted!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f05035c333f8eea86681a079e9dbbf83f20c2edbd12293e704e25b5c79f55ebb",
																"typeString": "literal_string \"LPStaking:Early Withdrawal is not permitted!\""
															}
														],
														"id": 1735,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6834:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6834:87:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1743,
												"nodeType": "ExpressionStatement",
												"src": "6834:87:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1745,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "6941:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																		"typeString": "struct LPStaking.StakeDetails storage pointer"
																	}
																},
																"id": 1746,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6949:13:10",
																"memberName": "reward_amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1174,
																"src": "6941:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6965:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6941:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c505374616b696e673a4e6f7468696e6720746f20636c61696d",
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6968:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e59456cdc9cfda50f9f5660769488a43bd3f02d37b1d88f2648a4b04115dc9d4",
																"typeString": "literal_string \"LPStaking:Nothing to claim\""
															},
															"value": "LPStaking:Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e59456cdc9cfda50f9f5660769488a43bd3f02d37b1d88f2648a4b04115dc9d4",
																"typeString": "literal_string \"LPStaking:Nothing to claim\""
															}
														],
														"id": 1744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6933:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6933:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1751,
												"nodeType": "ExpressionStatement",
												"src": "6933:64:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1752,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "7011:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																"typeString": "struct LPStaking.StakeDetails storage pointer"
															}
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7019:12:10",
														"memberName": "stake_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1172,
														"src": "7011:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7034:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7011:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1774,
												"nodeType": "IfStatement",
												"src": "7008:179:10",
												"trueBody": {
													"id": 1773,
													"nodeType": "Block",
													"src": "7046:141:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1761,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "7101:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7101:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1763,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1713,
																			"src": "7115:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																				"typeString": "struct LPStaking.StakeDetails storage pointer"
																			}
																		},
																		"id": 1764,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7123:12:10",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1172,
																		"src": "7115:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1757,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1729,
																					"src": "7068:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																						"typeString": "struct LPStaking.PoolInfo storage pointer"
																					}
																				},
																				"id": 1758,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7073:13:10",
																				"memberName": "staking_token",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1153,
																				"src": "7068:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1756,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7061:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7061:26:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7088:12:10",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 360,
																	"src": "7061:39:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7061:75:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1766,
															"nodeType": "ExpressionStatement",
															"src": "7061:75:10"
														},
														{
															"expression": {
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1767,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "7151:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																			"typeString": "struct LPStaking.StakeDetails storage pointer"
																		}
																	},
																	"id": 1769,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7159:12:10",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1172,
																	"src": "7151:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7174:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7151:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1772,
															"nodeType": "ExpressionStatement",
															"src": "7151:24:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1780,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "7239:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7239:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1782,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "7253:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																	"typeString": "struct LPStaking.StakeDetails storage pointer"
																}
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7261:13:10",
															"memberName": "reward_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1174,
															"src": "7253:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1776,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1729,
																		"src": "7206:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																			"typeString": "struct LPStaking.PoolInfo storage pointer"
																		}
																	},
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7211:13:10",
																	"memberName": "rewards_token",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1157,
																	"src": "7206:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1775,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "7199:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7199:26:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7226:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "7199:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7199:76:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1785,
												"nodeType": "ExpressionStatement",
												"src": "7199:76:10"
											},
											{
												"expression": {
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1786,
															"name": "pending_payments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "7286:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1789,
														"indexExpression": {
															"expression": {
																"id": 1787,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1729,
																"src": "7303:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																	"typeString": "struct LPStaking.PoolInfo storage pointer"
																}
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7308:13:10",
															"memberName": "rewards_token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1157,
															"src": "7303:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7286:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1790,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "7326:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																"typeString": "struct LPStaking.StakeDetails storage pointer"
															}
														},
														"id": 1791,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7334:13:10",
														"memberName": "reward_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1174,
														"src": "7326:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7286:61:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "7286:61:10"
											},
											{
												"expression": {
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1794,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "7358:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																"typeString": "struct LPStaking.StakeDetails storage pointer"
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7366:13:10",
														"memberName": "reward_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1174,
														"src": "7358:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7382:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7358:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "7358:25:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1801,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "7415:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																	"typeString": "struct LPStaking.StakeDetails storage pointer"
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7423:7:10",
															"memberName": "pool_id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1166,
															"src": "7415:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1803,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "7432:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1800,
														"name": "StakeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "7400:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7400:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1805,
												"nodeType": "EmitStatement",
												"src": "7395:46:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1807,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "7468:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																	"typeString": "struct LPStaking.StakeDetails storage pointer"
																}
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7476:7:10",
															"memberName": "pool_id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1166,
															"src": "7468:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1809,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "7485:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1806,
														"name": "RewardPaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "7457:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7457:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1811,
												"nodeType": "EmitStatement",
												"src": "7452:42:10"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 1813,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1706,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1705,
												"name": "nonReentrant",
												"nameLocations": [
													"6573:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 842,
												"src": "6573:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6573:12:10"
										},
										{
											"arguments": [
												{
													"id": 1708,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1703,
													"src": "6601:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1709,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1707,
												"name": "validate_stake",
												"nameLocations": [
													"6586:14:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "6586:14:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6586:24:10"
										}
									],
									"name": "claim",
									"nameLocation": "6543:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "6554:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "6549:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6549:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:15:10"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6616:0:10"
									},
									"scope": 2085,
									"src": "6534:969:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1868,
										"nodeType": "Block",
										"src": "7595:352:10",
										"statements": [
											{
												"assignments": [
													1825
												],
												"declarations": [
													{
														"constant": false,
														"id": 1825,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "7627:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1868,
														"src": "7606:28:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
															"typeString": "struct LPStaking.StakeDetails"
														},
														"typeName": {
															"id": 1824,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1823,
																"name": "StakeDetails",
																"nameLocations": [
																	"7606:12:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1177,
																"src": "7606:12:10"
															},
															"referencedDeclaration": 1177,
															"src": "7606:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																"typeString": "struct LPStaking.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1829,
												"initialValue": {
													"baseExpression": {
														"id": 1826,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "7637:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$1177_storage_$",
															"typeString": "mapping(uint256 => struct LPStaking.StakeDetails storage ref)"
														}
													},
													"id": 1828,
													"indexExpression": {
														"id": 1827,
														"name": "stake_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "7644:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7637:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$1177_storage",
														"typeString": "struct LPStaking.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7606:47:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1831,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "7672:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7672:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1833,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "7686:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																			"typeString": "struct LPStaking.StakeDetails storage pointer"
																		}
																	},
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7694:8:10",
																	"memberName": "maturity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1170,
																	"src": "7686:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1835,
																	"name": "CLAIM_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "7705:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "7686:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "7672:45:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7664:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7664:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1839,
												"nodeType": "ExpressionStatement",
												"src": "7664:54:10"
											},
											{
												"assignments": [
													1842
												],
												"declarations": [
													{
														"constant": false,
														"id": 1842,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "7747:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1868,
														"src": "7730:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
															"typeString": "struct LPStaking.PoolInfo"
														},
														"typeName": {
															"id": 1841,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1840,
																"name": "PoolInfo",
																"nameLocations": [
																	"7730:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1164,
																"src": "7730:8:10"
															},
															"referencedDeclaration": 1164,
															"src": "7730:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																"typeString": "struct LPStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1847,
												"initialValue": {
													"baseExpression": {
														"id": 1843,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "7754:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
															"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1846,
													"indexExpression": {
														"expression": {
															"id": 1844,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "7760:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																"typeString": "struct LPStaking.StakeDetails storage pointer"
															}
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7768:7:10",
														"memberName": "pool_id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1166,
														"src": "7760:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7754:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1164_storage",
														"typeString": "struct LPStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7730:46:10"
											},
											{
												"expression": {
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1848,
															"name": "pending_payments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "7787:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1851,
														"indexExpression": {
															"expression": {
																"id": 1849,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1842,
																"src": "7804:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																	"typeString": "struct LPStaking.PoolInfo storage pointer"
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7809:13:10",
															"memberName": "rewards_token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1157,
															"src": "7804:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7787:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1852,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "7827:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																"typeString": "struct LPStaking.StakeDetails storage pointer"
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7835:13:10",
														"memberName": "reward_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1174,
														"src": "7827:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7787:61:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1855,
												"nodeType": "ExpressionStatement",
												"src": "7787:61:10"
											},
											{
												"expression": {
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1856,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "7859:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																"typeString": "struct LPStaking.StakeDetails storage pointer"
															}
														},
														"id": 1858,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7867:13:10",
														"memberName": "reward_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1174,
														"src": "7859:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7883:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7859:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "7859:25:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1863,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "7913:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																	"typeString": "struct LPStaking.StakeDetails storage pointer"
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7921:7:10",
															"memberName": "pool_id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1166,
															"src": "7913:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1865,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1815,
															"src": "7930:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1862,
														"name": "RewardVoided",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "7900:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7900:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1867,
												"nodeType": "EmitStatement",
												"src": "7895:44:10"
											}
										]
									},
									"functionSelector": "00215784",
									"id": 1869,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1818,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1817,
												"name": "onlyOwner",
												"nameLocations": [
													"7555:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7555:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7555:9:10"
										},
										{
											"arguments": [
												{
													"id": 1820,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1815,
													"src": "7580:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1821,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1819,
												"name": "validate_stake",
												"nameLocations": [
													"7565:14:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "7565:14:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7565:24:10"
										}
									],
									"name": "voidReward",
									"nameLocation": "7520:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "7536:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "7531:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7531:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7530:15:10"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7595:0:10"
									},
									"scope": 2085,
									"src": "7511:436:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1941,
										"nodeType": "Block",
										"src": "8045:569:10",
										"statements": [
											{
												"assignments": [
													1881
												],
												"declarations": [
													{
														"constant": false,
														"id": 1881,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "8077:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1941,
														"src": "8056:28:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
															"typeString": "struct LPStaking.StakeDetails"
														},
														"typeName": {
															"id": 1880,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1879,
																"name": "StakeDetails",
																"nameLocations": [
																	"8056:12:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1177,
																"src": "8056:12:10"
															},
															"referencedDeclaration": 1177,
															"src": "8056:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																"typeString": "struct LPStaking.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1885,
												"initialValue": {
													"baseExpression": {
														"id": 1882,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "8087:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$1177_storage_$",
															"typeString": "mapping(uint256 => struct LPStaking.StakeDetails storage ref)"
														}
													},
													"id": 1884,
													"indexExpression": {
														"id": 1883,
														"name": "stake_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1871,
														"src": "8094:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8087:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$1177_storage",
														"typeString": "struct LPStaking.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8056:47:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1887,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1881,
																	"src": "8122:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																		"typeString": "struct LPStaking.StakeDetails storage pointer"
																	}
																},
																"id": 1888,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8130:5:10",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1168,
																"src": "8122:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1889,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "8139:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8139:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8122:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c505374616b696e673a43616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8153:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a12b524a3be40694ffb0d5bc0958fc55168fc7cda344718aab4c0bc96880da50",
																"typeString": "literal_string \"LPStaking:Caller is not the owner\""
															},
															"value": "LPStaking:Caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a12b524a3be40694ffb0d5bc0958fc55168fc7cda344718aab4c0bc96880da50",
																"typeString": "literal_string \"LPStaking:Caller is not the owner\""
															}
														],
														"id": 1886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8114:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8114:75:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1894,
												"nodeType": "ExpressionStatement",
												"src": "8114:75:10"
											},
											{
												"assignments": [
													1897
												],
												"declarations": [
													{
														"constant": false,
														"id": 1897,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "8216:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1941,
														"src": "8200:20:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1164_memory_ptr",
															"typeString": "struct LPStaking.PoolInfo"
														},
														"typeName": {
															"id": 1896,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1895,
																"name": "PoolInfo",
																"nameLocations": [
																	"8200:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1164,
																"src": "8200:8:10"
															},
															"referencedDeclaration": 1164,
															"src": "8200:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1164_storage_ptr",
																"typeString": "struct LPStaking.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1902,
												"initialValue": {
													"baseExpression": {
														"id": 1898,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "8223:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
															"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1901,
													"indexExpression": {
														"expression": {
															"id": 1899,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "8229:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																"typeString": "struct LPStaking.StakeDetails storage pointer"
															}
														},
														"id": 1900,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8237:7:10",
														"memberName": "pool_id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1166,
														"src": "8229:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8223:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1164_storage",
														"typeString": "struct LPStaking.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8200:45:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1904,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "8264:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8264:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1906,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1881,
																	"src": "8278:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																		"typeString": "struct LPStaking.StakeDetails storage pointer"
																	}
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8286:8:10",
																"memberName": "maturity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1170,
																"src": "8278:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "8264:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c505374616b696e673a4561726c79205769746864726177616c206973206e6f74207065726d697474656421",
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8296:46:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f05035c333f8eea86681a079e9dbbf83f20c2edbd12293e704e25b5c79f55ebb",
																"typeString": "literal_string \"LPStaking:Early Withdrawal is not permitted!\""
															},
															"value": "LPStaking:Early Withdrawal is not permitted!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f05035c333f8eea86681a079e9dbbf83f20c2edbd12293e704e25b5c79f55ebb",
																"typeString": "literal_string \"LPStaking:Early Withdrawal is not permitted!\""
															}
														],
														"id": 1903,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8256:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8256:87:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1911,
												"nodeType": "ExpressionStatement",
												"src": "8256:87:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1912,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "8368:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																"typeString": "struct LPStaking.StakeDetails storage pointer"
															}
														},
														"id": 1913,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8376:12:10",
														"memberName": "stake_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1172,
														"src": "8368:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8391:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8368:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1940,
												"nodeType": "IfStatement",
												"src": "8365:240:10",
												"trueBody": {
													"id": 1939,
													"nodeType": "Block",
													"src": "8403:202:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1921,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "8458:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8458:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1923,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1881,
																			"src": "8472:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																				"typeString": "struct LPStaking.StakeDetails storage pointer"
																			}
																		},
																		"id": 1924,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8480:12:10",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1172,
																		"src": "8472:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1917,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1897,
																					"src": "8425:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1164_memory_ptr",
																						"typeString": "struct LPStaking.PoolInfo memory"
																					}
																				},
																				"id": 1918,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8430:13:10",
																				"memberName": "staking_token",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1153,
																				"src": "8425:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1916,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "8418:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8418:26:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8445:12:10",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 360,
																	"src": "8418:39:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8418:75:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1926,
															"nodeType": "ExpressionStatement",
															"src": "8418:75:10"
														},
														{
															"expression": {
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1927,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1881,
																		"src": "8508:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																			"typeString": "struct LPStaking.StakeDetails storage pointer"
																		}
																	},
																	"id": 1929,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8516:12:10",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1172,
																	"src": "8508:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8531:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8508:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1932,
															"nodeType": "ExpressionStatement",
															"src": "8508:24:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1934,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1881,
																			"src": "8567:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeDetails_$1177_storage_ptr",
																				"typeString": "struct LPStaking.StakeDetails storage pointer"
																			}
																		},
																		"id": 1935,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8575:7:10",
																		"memberName": "pool_id",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1166,
																		"src": "8567:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1936,
																		"name": "stake_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1871,
																		"src": "8584:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1933,
																	"name": "StakeWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "8552:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8552:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1938,
															"nodeType": "EmitStatement",
															"src": "8547:46:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "25d5971f",
									"id": 1942,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1874,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1873,
												"name": "nonReentrant",
												"nameLocations": [
													"8002:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 842,
												"src": "8002:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8002:12:10"
										},
										{
											"arguments": [
												{
													"id": 1876,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1871,
													"src": "8030:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1877,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1875,
												"name": "validate_stake",
												"nameLocations": [
													"8015:14:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "8015:14:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8015:24:10"
										}
									],
									"name": "withdrawStake",
									"nameLocation": "7964:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "7983:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "7978:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7978:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7977:15:10"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8045:0:10"
									},
									"scope": 2085,
									"src": "7955:659:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1974,
										"nodeType": "Block",
										"src": "8691:222:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1950,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1946,
																"src": "8711:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8720:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8711:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c505374616b696e673a616d6f756e74206d7573742062652067726561746572207468616e207a65726f21",
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8723:45:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fbecf6cd1d46bfcd2d35ede7e1d976af256e1566b1bef182b8efd2e5ea4c8a50",
																"typeString": "literal_string \"LPStaking:amount must be greater than zero!\""
															},
															"value": "LPStaking:amount must be greater than zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fbecf6cd1d46bfcd2d35ede7e1d976af256e1566b1bef182b8efd2e5ea4c8a50",
																"typeString": "literal_string \"LPStaking:amount must be greater than zero!\""
															}
														],
														"id": 1949,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8702:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8702:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1955,
												"nodeType": "ExpressionStatement",
												"src": "8702:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1960,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "8819:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8819:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1964,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8841:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LPStaking_$2085",
																		"typeString": "contract LPStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LPStaking_$2085",
																		"typeString": "contract LPStaking"
																	}
																],
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8833:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8833:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8833:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1966,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "8848:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1957,
																	"name": "rewards_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "8787:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1956,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "8780:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8780:21:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8802:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "8780:38:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8780:75:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1968,
												"nodeType": "ExpressionStatement",
												"src": "8780:75:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1970,
															"name": "rewards_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "8883:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1971,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "8898:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1969,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "8871:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8871:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1973,
												"nodeType": "EmitStatement",
												"src": "8866:39:10"
											}
										]
									},
									"functionSelector": "a9fc507b",
									"id": 1975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addRewards",
									"nameLocation": "8631:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "rewards_token",
												"nameLocation": "8650:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "8642:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8642:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8670:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "8665:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8665:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8641:36:10"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8691:0:10"
									},
									"scope": 2085,
									"src": "8622:291:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2019,
										"nodeType": "Block",
										"src": "9018:258:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1993,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "9077:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LPStaking_$2085",
																					"typeString": "contract LPStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LPStaking_$2085",
																					"typeString": "contract LPStaking"
																				}
																			],
																			"id": 1992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9069:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1991,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9069:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9069:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1988,
																				"name": "rewards_token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1977,
																				"src": "9044:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1987,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "9037:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9037:21:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9059:9:10",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 272,
																	"src": "9037:31:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9037:46:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1996,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1981,
																	"src": "9087:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1997,
																		"name": "pending_payments",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "9096:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1999,
																	"indexExpression": {
																		"id": 1998,
																		"name": "rewards_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1977,
																		"src": "9113:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9096:31:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9087:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9037:90:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636521",
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9129:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9ca6d7d8f4b50884f4b4d7f1090e14ef0c0a197944e02f7d686fb0c2fe397c91",
																"typeString": "literal_string \"Insufficient balance!\""
															},
															"value": "Insufficient balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9ca6d7d8f4b50884f4b4d7f1090e14ef0c0a197944e02f7d686fb0c2fe397c91",
																"typeString": "literal_string \"Insufficient balance!\""
															}
														],
														"id": 1986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9029:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9029:124:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2004,
												"nodeType": "ExpressionStatement",
												"src": "9029:124:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2009,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "9199:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2010,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1981,
															"src": "9203:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2006,
																	"name": "rewards_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1977,
																	"src": "9171:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2005,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "9164:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9164:21:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9186:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "9164:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9164:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2012,
												"nodeType": "ExpressionStatement",
												"src": "9164:46:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2014,
															"name": "rewards_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "9242:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2015,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "9257:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2016,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1981,
															"src": "9261:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2013,
														"name": "RewardWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "9226:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9226:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2018,
												"nodeType": "EmitStatement",
												"src": "9221:47:10"
											}
										]
									},
									"functionSelector": "74ee6b62",
									"id": 2020,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1984,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1983,
												"name": "onlyOwner",
												"nameLocations": [
													"9003:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9003:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9003:9:10"
										}
									],
									"name": "withdrawRewards",
									"nameLocation": "8930:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "rewards_token",
												"nameLocation": "8954:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "8946:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8946:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8977:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "8969:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8969:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8986:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "8981:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8981:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8945:48:10"
									},
									"returnParameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9018:0:10"
									},
									"scope": 2085,
									"src": "8921:355:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "9373:146:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2033,
																"name": "apy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2024,
																"src": "9392:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030303030",
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9399:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000_by_1",
																	"typeString": "int_const 100000"
																},
																"value": "100000"
															},
															"src": "9392:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c505374616b696e673a6d617820617079206973203130303025",
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9407:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48745a825c3a66aabc6ad4692f5fa1ce6747939b3796aa484c27ba9fdcf82213",
																"typeString": "literal_string \"LPStaking:max apy is 1000%\""
															},
															"value": "LPStaking:max apy is 1000%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48745a825c3a66aabc6ad4692f5fa1ce6747939b3796aa484c27ba9fdcf82213",
																"typeString": "literal_string \"LPStaking:max apy is 1000%\""
															}
														],
														"id": 2032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9384:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9384:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2038,
												"nodeType": "ExpressionStatement",
												"src": "9384:52:10"
											},
											{
												"expression": {
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2039,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "9447:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
																	"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 2041,
															"indexExpression": {
																"id": 2040,
																"name": "pool_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2022,
																"src": "9453:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9447:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1164_storage",
																"typeString": "struct LPStaking.PoolInfo storage ref"
															}
														},
														"id": 2042,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9462:3:10",
														"memberName": "apy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1159,
														"src": "9447:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2043,
														"name": "apy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2024,
														"src": "9468:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "9447:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 2045,
												"nodeType": "ExpressionStatement",
												"src": "9447:24:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2047,
															"name": "pool_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2022,
															"src": "9498:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2048,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "9507:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 2046,
														"name": "APYChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "9487:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint96_$returns$__$",
															"typeString": "function (uint256,uint96)"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9487:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2050,
												"nodeType": "EmitStatement",
												"src": "9482:29:10"
											}
										]
									},
									"functionSelector": "039ba6b7",
									"id": 2052,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2027,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2026,
												"name": "onlyOwner",
												"nameLocations": [
													"9335:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9335:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9335:9:10"
										},
										{
											"arguments": [
												{
													"id": 2029,
													"name": "pool_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2022,
													"src": "9359:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2030,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2028,
												"name": "validate_pool",
												"nameLocations": [
													"9345:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1293,
												"src": "9345:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9345:22:10"
										}
									],
									"name": "setAPY",
									"nameLocation": "9293:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "9305:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "9300:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9300:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "9321:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "9314:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2023,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "9314:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9299:26:10"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9373:0:10"
									},
									"scope": 2085,
									"src": "9284:235:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2083,
										"nodeType": "Block",
										"src": "9634:209:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2065,
																"name": "whales_bonus_apy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2056,
																"src": "9653:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030303030",
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9673:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000_by_1",
																	"typeString": "int_const 100000"
																},
																"value": "100000"
															},
															"src": "9653:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c505374616b696e673a6d617820626f6e757320617079206973203130303025",
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9681:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_008c56d8658d73b34b2f55f43c00bff7db45991e8cba2583fde4ec34762eff7e",
																"typeString": "literal_string \"LPStaking:max bonus apy is 1000%\""
															},
															"value": "LPStaking:max bonus apy is 1000%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_008c56d8658d73b34b2f55f43c00bff7db45991e8cba2583fde4ec34762eff7e",
																"typeString": "literal_string \"LPStaking:max bonus apy is 1000%\""
															}
														],
														"id": 2064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9645:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9645:71:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2070,
												"nodeType": "ExpressionStatement",
												"src": "9645:71:10"
											},
											{
												"expression": {
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2071,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "9727:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1164_storage_$dyn_storage",
																	"typeString": "struct LPStaking.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 2073,
															"indexExpression": {
																"id": 2072,
																"name": "pool_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2054,
																"src": "9733:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9727:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1164_storage",
																"typeString": "struct LPStaking.PoolInfo storage ref"
															}
														},
														"id": 2074,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9742:16:10",
														"memberName": "whales_bonus_apy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1163,
														"src": "9727:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2075,
														"name": "whales_bonus_apy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2056,
														"src": "9761:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "9727:50:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "9727:50:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2079,
															"name": "pool_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2054,
															"src": "9809:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2080,
															"name": "whales_bonus_apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "9818:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 2078,
														"name": "BonusAPYChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "9793:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint96_$returns$__$",
															"typeString": "function (uint256,uint96)"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9793:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2082,
												"nodeType": "EmitStatement",
												"src": "9788:47:10"
											}
										]
									},
									"functionSelector": "4f44daa9",
									"id": 2084,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2059,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2058,
												"name": "onlyOwner",
												"nameLocations": [
													"9596:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9596:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9596:9:10"
										},
										{
											"arguments": [
												{
													"id": 2061,
													"name": "pool_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2054,
													"src": "9620:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2062,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2060,
												"name": "validate_pool",
												"nameLocations": [
													"9606:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1293,
												"src": "9606:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9606:22:10"
										}
									],
									"name": "setBonusAPY",
									"nameLocation": "9536:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "pool_id",
												"nameLocation": "9553:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "9548:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9548:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "whales_bonus_apy",
												"nameLocation": "9569:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "9562:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2055,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "9562:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9547:39:10"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9634:0:10"
									},
									"scope": 2085,
									"src": "9527:316:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2086,
							"src": "418:9430:10",
							"usedErrors": [
								13,
								18,
								327,
								823
							],
							"usedEvents": [
								24,
								1205,
								1213,
								1229,
								1235,
								1241,
								1257,
								1263,
								1269,
								1275
							]
						}
					],
					"src": "33:9817:10"
				},
				"id": 10
			},
			"contracts/interface/ICREDIWhale.sol": {
				"ast": {
					"absolutePath": "contracts/interface/ICREDIWhale.sol",
					"exportedSymbols": {
						"ICREDIWhale": [
							2100
						]
					},
					"id": 2101,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2087,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICREDIWhale",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2100,
							"linearizedBaseContracts": [
								2100
							],
							"name": "ICREDIWhale",
							"nameLocation": "70:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8ef1e259",
									"id": 2094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isWhale",
									"nameLocation": "100:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "user_address",
												"nameLocation": "116:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "108:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "108:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "107:22:11"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "153:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "153:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "152:6:11"
									},
									"scope": 2100,
									"src": "91:68:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a3bfdf5",
									"id": 2099,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "whaleThreshold",
									"nameLocation": "174:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:2:11"
									},
									"returnParameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "214:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "214:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:6:11"
									},
									"scope": 2100,
									"src": "165:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2101,
							"src": "60:164:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:191:11"
				},
				"id": 11
			},
			"contracts/interface/IERC20_Decimals.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IERC20_Decimals.sol",
					"exportedSymbols": {
						"IERC20_Decimals": [
							2108
						]
					},
					"id": 2109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2102,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20_Decimals",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2108,
							"linearizedBaseContracts": [
								2108
							],
							"name": "IERC20_Decimals",
							"nameLocation": "71:15:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 2107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "105:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "113:2:12"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "139:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2104,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "139:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:7:12"
									},
									"scope": 2108,
									"src": "96:50:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2109,
							"src": "61:91:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:121:12"
				},
				"id": 12
			},
			"contracts/interface/IPriceData.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IPriceData.sol",
					"exportedSymbols": {
						"IPriceData": [
							2280
						]
					},
					"id": 2281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPriceData",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2280,
							"linearizedBaseContracts": [
								2280
							],
							"name": "IPriceData",
							"nameLocation": "71:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0cd07409",
									"id": 2121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readPrice",
									"nameLocation": "99:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "base_addr",
												"nameLocation": "117:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "109:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "target_decimals",
												"nameLocation": "134:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "128:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2113,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "128:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "offchain_data",
												"nameLocation": "166:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "151:28:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "151:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:72:13"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "203:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "203:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "202:6:13"
									},
									"scope": 2280,
									"src": "90:119:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bff734c1",
									"id": 2132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "usePrice",
									"nameLocation": "229:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "base_addr",
												"nameLocation": "246:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "238:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "238:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "target_decimals",
												"nameLocation": "263:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "257:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2124,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "257:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "offchain_data",
												"nameLocation": "295:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "280:28:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "280:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "237:72:13"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "327:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "327:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:6:13"
									},
									"scope": 2280,
									"src": "220:113:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1ff8d6dc",
									"id": 2145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readAbsoluteCollateralValue",
									"nameLocation": "353:27:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "base_addr",
												"nameLocation": "389:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "381:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "base_amount",
												"nameLocation": "405:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "400:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "400:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "base_decimals",
												"nameLocation": "424:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "418:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2137,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "418:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "offchain_data",
												"nameLocation": "454:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "439:28:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "439:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "380:88:13"
									},
									"returnParameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "491:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2142,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "491:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "490:6:13"
									},
									"scope": 2280,
									"src": "344:153:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a089215",
									"id": 2158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "useAbsoluteCollateralValue",
									"nameLocation": "517:26:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "base_addr",
												"nameLocation": "552:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "544:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "base_amount",
												"nameLocation": "568:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "563:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2148,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "563:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "base_decimals",
												"nameLocation": "587:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "581:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2150,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "581:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "offchain_data",
												"nameLocation": "617:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "602:28:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "602:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:88:13"
									},
									"returnParameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "649:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "649:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:6:13"
									},
									"scope": 2280,
									"src": "508:147:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b57a1b0b",
									"id": 2171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readQuoteAmountToCollateralAmount",
									"nameLocation": "674:33:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "base_addr",
												"nameLocation": "716:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "708:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "base_decimals",
												"nameLocation": "733:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "727:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2161,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "727:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "quote_amount",
												"nameLocation": "753:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "748:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "748:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "offchain_data",
												"nameLocation": "782:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "767:28:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "767:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:89:13"
									},
									"returnParameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "819:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "819:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:6:13"
									},
									"scope": 2280,
									"src": "665:160:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c5801aa3",
									"id": 2184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "useQuoteAmountToCollateralAmount",
									"nameLocation": "846:32:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "base_addr",
												"nameLocation": "887:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "879:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "base_decimals",
												"nameLocation": "904:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "898:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2174,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "898:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "quote_amount",
												"nameLocation": "924:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "919:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "919:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "offchain_data",
												"nameLocation": "953:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "938:28:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "938:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:89:13"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "985:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2181,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "985:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "984:6:13"
									},
									"scope": 2280,
									"src": "837:154:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4bbf415c",
									"id": 2201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readRelativeCollateralValue",
									"nameLocation": "1012:27:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "base_addr",
												"nameLocation": "1048:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "1040:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "result_decimals",
												"nameLocation": "1065:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "1059:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2187,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1059:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "base_amount",
												"nameLocation": "1087:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "1082:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1082:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "base_decimals",
												"nameLocation": "1106:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "1100:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2191,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1100:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "quote_amount",
												"nameLocation": "1126:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "1121:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2193,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1121:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "offchain_data",
												"nameLocation": "1155:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "1140:28:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1140:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:130:13"
									},
									"returnParameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "1192:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1192:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1191:6:13"
									},
									"scope": 2280,
									"src": "1003:195:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b4e37cf9",
									"id": 2218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "useRelativeCollateralValue",
									"nameLocation": "1218:26:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "base_addr",
												"nameLocation": "1253:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "1245:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "result_decimals",
												"nameLocation": "1270:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "1264:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2204,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1264:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "base_amount",
												"nameLocation": "1292:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "1287:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1287:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "base_decimals",
												"nameLocation": "1311:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "1305:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2208,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1305:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "quote_amount",
												"nameLocation": "1331:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "1326:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2210,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1326:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "offchain_data",
												"nameLocation": "1360:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "1345:28:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2212,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1345:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1244:130:13"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "1392:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1392:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:6:13"
									},
									"scope": 2280,
									"src": "1209:189:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3628815c",
									"id": 2237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readCollateralValues",
									"nameLocation": "1418:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "base_addr",
												"nameLocation": "1447:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "1439:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "result_decimals",
												"nameLocation": "1464:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "1458:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2221,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1458:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "base_amount",
												"nameLocation": "1486:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "1481:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1481:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "base_decimals",
												"nameLocation": "1505:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "1499:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2225,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1499:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "quote_amount",
												"nameLocation": "1525:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "1520:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1520:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "offchain_data",
												"nameLocation": "1554:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "1539:28:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2229,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1539:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1438:130:13"
									},
									"returnParameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "absolute_value",
												"nameLocation": "1596:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "1591:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1591:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "relative_value",
												"nameLocation": "1617:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "1612:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1612:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1590:42:13"
									},
									"scope": 2280,
									"src": "1409:224:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0649b8c2",
									"id": 2256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "useCollateralValues",
									"nameLocation": "1653:19:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "base_addr",
												"nameLocation": "1681:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "1673:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "result_decimals",
												"nameLocation": "1698:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "1692:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2240,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1692:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "base_amount",
												"nameLocation": "1720:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "1715:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1715:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "base_decimals",
												"nameLocation": "1739:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "1733:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2244,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1733:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "quote_amount",
												"nameLocation": "1759:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "1754:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1754:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "offchain_data",
												"nameLocation": "1788:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "1773:28:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2248,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1773:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:130:13"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "absolute_value",
												"nameLocation": "1825:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "1820:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1820:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "relative_value",
												"nameLocation": "1846:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "1841:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2253,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1841:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1819:42:13"
									},
									"scope": 2280,
									"src": "1644:218:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "927b0504",
									"id": 2267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOracles",
									"nameLocation": "1884:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "base_addr",
												"nameLocation": "1903:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "1895:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1895:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "mul",
												"nameLocation": "1933:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "1914:22:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2259,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1914:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2260,
													"nodeType": "ArrayTypeName",
													"src": "1914:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "div",
												"nameLocation": "1957:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "1938:22:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2262,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1938:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2263,
													"nodeType": "ArrayTypeName",
													"src": "1938:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1894:67:13"
									},
									"returnParameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1970:0:13"
									},
									"scope": 2280,
									"src": "1875:96:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "31cb6105",
									"id": 2274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSigner",
									"nameLocation": "1991:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "2009:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2001:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "2022:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2017:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2017:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:28:13"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2037:0:13"
									},
									"scope": 2280,
									"src": "1982:56:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "217a4b70",
									"id": 2279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteToken",
									"nameLocation": "2055:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2065:2:13"
									},
									"returnParameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "2090:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:9:13"
									},
									"scope": 2280,
									"src": "2046:53:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2281,
							"src": "61:2047:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:2077:13"
				},
				"id": 13
			},
			"contracts/oracle_utils/LPValue.sol": {
				"ast": {
					"absolutePath": "contracts/oracle_utils/LPValue.sol",
					"exportedSymbols": {
						"IERC20_Decimals": [
							2108
						],
						"IPriceData": [
							2280
						],
						"IUniswapV2Pair": [
							1132
						],
						"LPValue": [
							2412
						]
					},
					"id": 2413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:14"
						},
						{
							"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
							"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
							"id": 2283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2413,
							"sourceUnit": 1133,
							"src": "61:66:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IPriceData.sol",
							"file": "../interface/IPriceData.sol",
							"id": 2284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2413,
							"sourceUnit": 2281,
							"src": "129:37:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IERC20_Decimals.sol",
							"file": "../interface/IERC20_Decimals.sol",
							"id": 2285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2413,
							"sourceUnit": 2109,
							"src": "168:42:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "LPValue",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2412,
							"linearizedBaseContracts": [
								2412
							],
							"name": "LPValue",
							"nameLocation": "232:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2312,
										"nodeType": "Block",
										"src": "377:148:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2302,
															"name": "token_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2287,
															"src": "446:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2303,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2289,
															"src": "458:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 2305,
																			"name": "token_addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2287,
																			"src": "482:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2304,
																		"name": "IERC20_Decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2108,
																		"src": "466:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_Decimals_$2108_$",
																			"typeString": "type(contract IERC20_Decimals)"
																		}
																	},
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "466:27:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_Decimals_$2108",
																		"typeString": "contract IERC20_Decimals"
																	}
																},
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "494:8:14",
																"memberName": "decimals",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2107,
																"src": "466:36:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																	"typeString": "function () view external returns (uint8)"
																}
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "466:38:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2309,
															"name": "price_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2293,
															"src": "506:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2299,
																	"name": "oracle_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2291,
																	"src": "406:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2298,
																"name": "IPriceData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2280,
																"src": "395:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IPriceData_$2280_$",
																	"typeString": "type(contract IPriceData)"
																}
															},
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "395:23:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPriceData_$2280",
																"typeString": "contract IPriceData"
															}
														},
														"id": 2301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "419:26:14",
														"memberName": "useAbsoluteCollateralValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2158,
														"src": "395:50:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint8_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,uint8,bytes memory) external returns (uint256)"
														}
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "395:122:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2297,
												"id": 2311,
												"nodeType": "Return",
												"src": "388:129:14"
											}
										]
									},
									"id": 2313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token_value",
									"nameLocation": "257:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "token_addr",
												"nameLocation": "277:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "269:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "294:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "289:11:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "289:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "oracle_addr",
												"nameLocation": "310:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "302:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "price_data",
												"nameLocation": "338:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "323:25:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "323:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:81:14"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "366:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "366:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "365:6:14"
									},
									"scope": 2412,
									"src": "248:277:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2348,
										"nodeType": "Block",
										"src": "665:182:14",
										"statements": [
											{
												"assignments": [
													2329
												],
												"declarations": [
													{
														"constant": false,
														"id": 2329,
														"mutability": "mutable",
														"name": "token0_balance",
														"nameLocation": "681:14:14",
														"nodeType": "VariableDeclaration",
														"scope": 2348,
														"src": "676:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2328,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "676:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2335,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2330,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2319,
															"src": "698:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 2331,
															"name": "lp_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2315,
															"src": "707:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "698:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2333,
														"name": "lp_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2317,
														"src": "718:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "698:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "676:51:14"
											},
											{
												"assignments": [
													2337
												],
												"declarations": [
													{
														"constant": false,
														"id": 2337,
														"mutability": "mutable",
														"name": "token1_balance",
														"nameLocation": "743:14:14",
														"nodeType": "VariableDeclaration",
														"scope": 2348,
														"src": "738:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2336,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "738:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2343,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2338,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2321,
															"src": "760:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 2339,
															"name": "lp_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2315,
															"src": "769:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "760:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2341,
														"name": "lp_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2317,
														"src": "780:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "760:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "738:51:14"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2344,
															"name": "token0_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2329,
															"src": "808:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2345,
															"name": "token1_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "824:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2346,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "807:32:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2327,
												"id": 2347,
												"nodeType": "Return",
												"src": "800:39:14"
											}
										]
									},
									"id": 2349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token_balances",
									"nameLocation": "542:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "lp_balance",
												"nameLocation": "562:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "557:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "557:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "lp_supply",
												"nameLocation": "579:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "574:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2316,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "574:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "598:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "590:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2318,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "616:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "608:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2320,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:69:14"
									},
									"returnParameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "648:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "648:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "654:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "654:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:12:14"
									},
									"scope": 2412,
									"src": "533:314:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2410,
										"nodeType": "Block",
										"src": "1024:442:14",
										"statements": [
											{
												"assignments": [
													2366
												],
												"declarations": [
													{
														"constant": false,
														"id": 2366,
														"mutability": "mutable",
														"name": "pair",
														"nameLocation": "1050:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 2410,
														"src": "1035:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Pair_$1132",
															"typeString": "contract IUniswapV2Pair"
														},
														"typeName": {
															"id": 2365,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2364,
																"name": "IUniswapV2Pair",
																"nameLocations": [
																	"1035:14:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1132,
																"src": "1035:14:14"
															},
															"referencedDeclaration": 1132,
															"src": "1035:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1132",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2370,
												"initialValue": {
													"arguments": [
														{
															"id": 2368,
															"name": "lp_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2351,
															"src": "1072:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2367,
														"name": "IUniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "1057:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1132_$",
															"typeString": "type(contract IUniswapV2Pair)"
														}
													},
													"id": 2369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1057:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Pair_$1132",
														"typeString": "contract IUniswapV2Pair"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1035:45:14"
											},
											{
												"assignments": [
													2372,
													2374,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2372,
														"mutability": "mutable",
														"name": "reserve0",
														"nameLocation": "1100:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 2410,
														"src": "1092:16:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 2371,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "1092:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2374,
														"mutability": "mutable",
														"name": "reserve1",
														"nameLocation": "1118:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 2410,
														"src": "1110:16:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 2373,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "1110:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2378,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2375,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2366,
															"src": "1132:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1132",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 2376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1137:11:14",
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1074,
														"src": "1132:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 2377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1132:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1091:59:14"
											},
											{
												"assignments": [
													2380,
													2382
												],
												"declarations": [
													{
														"constant": false,
														"id": 2380,
														"mutability": "mutable",
														"name": "token0_balance",
														"nameLocation": "1167:14:14",
														"nodeType": "VariableDeclaration",
														"scope": 2410,
														"src": "1162:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2379,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1162:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2382,
														"mutability": "mutable",
														"name": "token1_balance",
														"nameLocation": "1188:14:14",
														"nodeType": "VariableDeclaration",
														"scope": 2410,
														"src": "1183:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2381,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1183:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2391,
												"initialValue": {
													"arguments": [
														{
															"id": 2384,
															"name": "lp_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "1221:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2385,
																	"name": "pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2366,
																	"src": "1232:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Pair_$1132",
																		"typeString": "contract IUniswapV2Pair"
																	}
																},
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1237:11:14",
																"memberName": "totalSupply",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 928,
																"src": "1232:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1232:18:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2388,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2372,
															"src": "1252:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"id": 2389,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "1262:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 2383,
														"name": "token_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2349,
														"src": "1206:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint112,uint112) pure returns (uint256,uint256)"
														}
													},
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1206:65:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1161:110:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2393,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2366,
																		"src": "1302:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Pair_$1132",
																			"typeString": "contract IUniswapV2Pair"
																		}
																	},
																	"id": 2394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1307:6:14",
																	"memberName": "token0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1060,
																	"src": "1302:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1302:13:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2396,
																"name": "token0_balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2380,
																"src": "1317:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2397,
																"name": "oracle_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2355,
																"src": "1333:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2398,
																"name": "token0_price_data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2357,
																"src": "1346:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"id": 2392,
															"name": "token_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2313,
															"src": "1290:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
																"typeString": "function (address,uint256,address,bytes calldata) returns (uint256)"
															}
														},
														"id": 2399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1290:74:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2401,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2366,
																		"src": "1396:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Pair_$1132",
																			"typeString": "contract IUniswapV2Pair"
																		}
																	},
																	"id": 2402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:6:14",
																	"memberName": "token1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1065,
																	"src": "1396:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1396:13:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2404,
																"name": "token1_balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "1411:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2405,
																"name": "oracle_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2355,
																"src": "1427:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2406,
																"name": "token1_price_data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2359,
																"src": "1440:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"id": 2400,
															"name": "token_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2313,
															"src": "1384:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
																"typeString": "function (address,uint256,address,bytes calldata) returns (uint256)"
															}
														},
														"id": 2407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1384:74:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1290:168:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2363,
												"id": 2409,
												"nodeType": "Return",
												"src": "1282:176:14"
											}
										]
									},
									"id": 2411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lp_value",
									"nameLocation": "864:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "lp_addr",
												"nameLocation": "881:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "873:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "lp_amount",
												"nameLocation": "895:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "890:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2352,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "890:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "oracle_addr",
												"nameLocation": "914:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "906:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "token0_price_data",
												"nameLocation": "942:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "927:32:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "927:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "token1_price_data",
												"nameLocation": "976:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "961:32:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "961:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "872:122:14"
									},
									"returnParameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "1013:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1013:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:6:14"
									},
									"scope": 2412,
									"src": "855:611:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2413,
							"src": "214:1257:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1440:14"
				},
				"id": 14
			}
		}
	}
}